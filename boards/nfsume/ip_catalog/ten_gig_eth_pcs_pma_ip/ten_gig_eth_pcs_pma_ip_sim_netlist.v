// Copyright 1986-2015 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2015.4 (lin64) Build 1412921 Wed Nov 18 09:44:32 MST 2015
// Date        : Fri Aug 12 13:33:02 2016
// Host        : jgn-tv4 running 64-bit unknown
// Command     : write_verilog -force -mode funcsim
//               /home/aom/project_3/project_3.srcs/sources_1/ip/ten_gig_eth_pcs_pma_ip/ten_gig_eth_pcs_pma_ip_sim_netlist.v
// Design      : ten_gig_eth_pcs_pma_ip
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7vx690tffg1761-3
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CORE_GENERATION_INFO = "ten_gig_eth_pcs_pma_ip,ten_gig_eth_pcs_pma_v6_0_3,{x_ipProduct=Vivado 2015.4,x_ipVendor=xilinx.com,x_ipLibrary=ip,x_ipName=ten_gig_eth_pcs_pma,x_ipVersion=6.0,x_ipCoreRevision=3,x_ipLanguage=VERILOG,x_ipSimLanguage=MIXED,x_ipLicense=ten_gig_eth_pcs_pma_basekr@2015.04(design_linking),c_family=virtex7,c_component_name=ten_gig_eth_pcs_pma_ip,c_has_mdio=true,c_has_fec=false,c_has_an=false,c_is_kr=false,c_is_32bit=false,c_no_ebuff=false,c_gttype=1,c_1588=0,c_gtif_width=32,c_speed10_25=10,c_sub_core_name=ten_gig_eth_pcs_pma_ip_gt,c_gt_loc=X0Y0,c_refclk=clk0,c_refclkrate=156,c_dclkrate=100.00}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "ten_gig_eth_pcs_pma_v6_0_3,Vivado 2015.4" *) 
(* NotValidForBitStream *)
module ten_gig_eth_pcs_pma_ip
   (dclk,
    rxrecclk_out,
    coreclk,
    txusrclk,
    txusrclk2,
    txoutclk,
    areset,
    areset_coreclk,
    gttxreset,
    gtrxreset,
    sim_speedup_control,
    txuserrdy,
    qplllock,
    qplloutclk,
    qplloutrefclk,
    reset_counter_done,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    core_status,
    tx_resetdone,
    rx_resetdone,
    signal_detect,
    tx_fault,
    drp_req,
    drp_gnt,
    drp_den_o,
    drp_dwe_o,
    drp_daddr_o,
    drp_di_o,
    drp_drdy_o,
    drp_drpdo_o,
    drp_den_i,
    drp_dwe_i,
    drp_daddr_i,
    drp_di_i,
    drp_drdy_i,
    drp_drpdo_i,
    pma_pmd_type,
    tx_disable);
  input dclk;
  output rxrecclk_out;
  input coreclk;
  input txusrclk;
  input txusrclk2;
  output txoutclk;
  input areset;
  input areset_coreclk;
  input gttxreset;
  input gtrxreset;
  input sim_speedup_control;
  input txuserrdy;
  input qplllock;
  input qplloutclk;
  input qplloutrefclk;
  input reset_counter_done;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  output [7:0]core_status;
  output tx_resetdone;
  output rx_resetdone;
  input signal_detect;
  input tx_fault;
  output drp_req;
  input drp_gnt;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_daddr_o;
  output [15:0]drp_di_o;
  output drp_drdy_o;
  output [15:0]drp_drpdo_o;
  input drp_den_i;
  input drp_dwe_i;
  input [15:0]drp_daddr_i;
  input [15:0]drp_di_i;
  input drp_drdy_i;
  input [15:0]drp_drpdo_i;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire areset;
  wire areset_coreclk;
  wire [7:0]core_status;
  wire coreclk;
  wire dclk;
  wire [15:0]drp_daddr_i;
  wire [15:0]drp_daddr_o;
  wire drp_den_i;
  wire drp_den_o;
  wire [15:0]drp_di_i;
  wire [15:0]drp_di_o;
  wire drp_drdy_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_i;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire drp_dwe_o;
  wire drp_gnt;
  wire drp_req;
  wire gtrxreset;
  wire gttxreset;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [2:0]pma_pmd_type;
  wire [4:0]prtad;
  wire qplllock;
  wire qplloutclk;
  wire qplloutrefclk;
  wire reset_counter_done;
  wire rx_resetdone;
  wire rxn;
  wire rxp;
  wire rxrecclk_out;
  wire signal_detect;
  wire sim_speedup_control;
  wire tx_disable;
  wire tx_fault;
  wire tx_resetdone;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MASTER_WATCHDOG_TIMER_RESET = "29'b00110111111000010010110100000" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_block inst
       (.areset(areset),
        .areset_coreclk(areset_coreclk),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .drp_daddr_i(drp_daddr_i),
        .drp_daddr_o(drp_daddr_o),
        .drp_den_i(drp_den_i),
        .drp_den_o(drp_den_o),
        .drp_di_i(drp_di_i),
        .drp_di_o(drp_di_o),
        .drp_drdy_i(drp_drdy_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_i(drp_drpdo_i),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .drp_dwe_o(drp_dwe_o),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gtrxreset(gtrxreset),
        .gttxreset(gttxreset),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .prtad(prtad),
        .qplllock(qplllock),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .reset_counter_done(reset_counter_done),
        .rx_resetdone(rx_resetdone),
        .rxn(rxn),
        .rxp(rxp),
        .rxrecclk_out(rxrecclk_out),
        .signal_detect(signal_detect),
        .sim_speedup_control(sim_speedup_control),
        .tx_disable(tx_disable),
        .tx_fault(tx_fault),
        .tx_resetdone(tx_resetdone),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* MASTER_WATCHDOG_TIMER_RESET = "29'b00110111111000010010110100000" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_block" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_block
   (dclk,
    coreclk,
    txusrclk,
    txusrclk2,
    rxrecclk_out,
    txoutclk,
    areset,
    areset_coreclk,
    txuserrdy,
    gttxreset,
    gtrxreset,
    sim_speedup_control,
    qplllock,
    qplloutclk,
    qplloutrefclk,
    reset_counter_done,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    txp,
    txn,
    rxp,
    rxn,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    core_status,
    tx_resetdone,
    rx_resetdone,
    signal_detect,
    tx_fault,
    drp_req,
    drp_gnt,
    drp_den_o,
    drp_dwe_o,
    drp_daddr_o,
    drp_di_o,
    drp_drdy_o,
    drp_drpdo_o,
    drp_den_i,
    drp_dwe_i,
    drp_daddr_i,
    drp_di_i,
    drp_drdy_i,
    drp_drpdo_i,
    pma_pmd_type,
    tx_disable);
  input dclk;
  input coreclk;
  input txusrclk;
  input txusrclk2;
  output rxrecclk_out;
  output txoutclk;
  input areset;
  input areset_coreclk;
  input txuserrdy;
  input gttxreset;
  input gtrxreset;
  input sim_speedup_control;
  input qplllock;
  input qplloutclk;
  input qplloutrefclk;
  input reset_counter_done;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output txp;
  output txn;
  input rxp;
  input rxn;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  output [7:0]core_status;
  output tx_resetdone;
  output rx_resetdone;
  input signal_detect;
  input tx_fault;
  output drp_req;
  input drp_gnt;
  output drp_den_o;
  output drp_dwe_o;
  output [15:0]drp_daddr_o;
  output [15:0]drp_di_o;
  output drp_drdy_o;
  output [15:0]drp_drpdo_o;
  input drp_den_i;
  input drp_dwe_i;
  input [15:0]drp_daddr_i;
  input [15:0]drp_di_i;
  input drp_drdy_i;
  input [15:0]drp_drpdo_i;
  input [2:0]pma_pmd_type;
  output tx_disable;

  wire areset;
  wire areset_coreclk;
  wire areset_rxusrclk2;
  wire cable_is_pulled;
  wire core_in_testmode;
  wire [7:0]core_status;
  wire coreclk;
  wire coreclk_reset_tx;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr_i;
  wire [15:0]drp_daddr_o;
  wire drp_den_i;
  wire drp_den_o;
  wire [15:0]drp_di_i;
  wire [15:0]drp_di_o;
  wire drp_drdy_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_i;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire drp_dwe_o;
  wire drp_gnt;
  wire drp_req;
  wire gt0_clear_rx_prbs_err_count_i;
  wire gt0_gtrxreset_i;
  wire gt0_gttxreset_i;
  wire [2:0]gt0_loopback_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire [31:0]gt0_rxdata_i;
  wire gt0_rxdatavalid_i;
  wire gt0_rxgearboxslip_i;
  wire [1:0]gt0_rxheader_i;
  wire gt0_rxheadervalid_i;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg;
  wire gt0_rxresetdone_reg1;
  (* DONT_TOUCH *) wire gt0_rxresetdone_reg_dup;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_reg;
  wire gt0_txresetdone_reg0;
  wire gt0_txresetdone_reg1;
  wire [3:0]gt_rxc_d1;
  wire [31:0]gt_rxd_d1;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire gtrxreset;
  wire gtrxreset_coreclk;
  wire gttxreset;
  wire master_watchdog0;
  wire \master_watchdog[0]_i_3_n_0 ;
  wire \master_watchdog[0]_i_4_n_0 ;
  wire \master_watchdog[0]_i_5_n_0 ;
  wire \master_watchdog[0]_i_6_n_0 ;
  wire \master_watchdog[12]_i_2_n_0 ;
  wire \master_watchdog[12]_i_3_n_0 ;
  wire \master_watchdog[12]_i_4_n_0 ;
  wire \master_watchdog[12]_i_5_n_0 ;
  wire \master_watchdog[16]_i_2_n_0 ;
  wire \master_watchdog[16]_i_3_n_0 ;
  wire \master_watchdog[16]_i_4_n_0 ;
  wire \master_watchdog[16]_i_5_n_0 ;
  wire \master_watchdog[20]_i_2_n_0 ;
  wire \master_watchdog[20]_i_3_n_0 ;
  wire \master_watchdog[20]_i_4_n_0 ;
  wire \master_watchdog[20]_i_5_n_0 ;
  wire \master_watchdog[24]_i_2_n_0 ;
  wire \master_watchdog[24]_i_3_n_0 ;
  wire \master_watchdog[24]_i_4_n_0 ;
  wire \master_watchdog[24]_i_5_n_0 ;
  wire \master_watchdog[28]_i_2_n_0 ;
  wire \master_watchdog[4]_i_2_n_0 ;
  wire \master_watchdog[4]_i_3_n_0 ;
  wire \master_watchdog[4]_i_4_n_0 ;
  wire \master_watchdog[4]_i_5_n_0 ;
  wire \master_watchdog[8]_i_2_n_0 ;
  wire \master_watchdog[8]_i_3_n_0 ;
  wire \master_watchdog[8]_i_4_n_0 ;
  wire \master_watchdog[8]_i_5_n_0 ;
  wire [28:0]master_watchdog_reg;
  wire \master_watchdog_reg[0]_i_2_n_0 ;
  wire \master_watchdog_reg[0]_i_2_n_1 ;
  wire \master_watchdog_reg[0]_i_2_n_2 ;
  wire \master_watchdog_reg[0]_i_2_n_3 ;
  wire \master_watchdog_reg[0]_i_2_n_4 ;
  wire \master_watchdog_reg[0]_i_2_n_5 ;
  wire \master_watchdog_reg[0]_i_2_n_6 ;
  wire \master_watchdog_reg[0]_i_2_n_7 ;
  wire \master_watchdog_reg[12]_i_1_n_0 ;
  wire \master_watchdog_reg[12]_i_1_n_1 ;
  wire \master_watchdog_reg[12]_i_1_n_2 ;
  wire \master_watchdog_reg[12]_i_1_n_3 ;
  wire \master_watchdog_reg[12]_i_1_n_4 ;
  wire \master_watchdog_reg[12]_i_1_n_5 ;
  wire \master_watchdog_reg[12]_i_1_n_6 ;
  wire \master_watchdog_reg[12]_i_1_n_7 ;
  wire \master_watchdog_reg[16]_i_1_n_0 ;
  wire \master_watchdog_reg[16]_i_1_n_1 ;
  wire \master_watchdog_reg[16]_i_1_n_2 ;
  wire \master_watchdog_reg[16]_i_1_n_3 ;
  wire \master_watchdog_reg[16]_i_1_n_4 ;
  wire \master_watchdog_reg[16]_i_1_n_5 ;
  wire \master_watchdog_reg[16]_i_1_n_6 ;
  wire \master_watchdog_reg[16]_i_1_n_7 ;
  wire \master_watchdog_reg[20]_i_1_n_0 ;
  wire \master_watchdog_reg[20]_i_1_n_1 ;
  wire \master_watchdog_reg[20]_i_1_n_2 ;
  wire \master_watchdog_reg[20]_i_1_n_3 ;
  wire \master_watchdog_reg[20]_i_1_n_4 ;
  wire \master_watchdog_reg[20]_i_1_n_5 ;
  wire \master_watchdog_reg[20]_i_1_n_6 ;
  wire \master_watchdog_reg[20]_i_1_n_7 ;
  wire \master_watchdog_reg[24]_i_1_n_0 ;
  wire \master_watchdog_reg[24]_i_1_n_1 ;
  wire \master_watchdog_reg[24]_i_1_n_2 ;
  wire \master_watchdog_reg[24]_i_1_n_3 ;
  wire \master_watchdog_reg[24]_i_1_n_4 ;
  wire \master_watchdog_reg[24]_i_1_n_5 ;
  wire \master_watchdog_reg[24]_i_1_n_6 ;
  wire \master_watchdog_reg[24]_i_1_n_7 ;
  wire \master_watchdog_reg[28]_i_1_n_7 ;
  wire \master_watchdog_reg[4]_i_1_n_0 ;
  wire \master_watchdog_reg[4]_i_1_n_1 ;
  wire \master_watchdog_reg[4]_i_1_n_2 ;
  wire \master_watchdog_reg[4]_i_1_n_3 ;
  wire \master_watchdog_reg[4]_i_1_n_4 ;
  wire \master_watchdog_reg[4]_i_1_n_5 ;
  wire \master_watchdog_reg[4]_i_1_n_6 ;
  wire \master_watchdog_reg[4]_i_1_n_7 ;
  wire \master_watchdog_reg[8]_i_1_n_0 ;
  wire \master_watchdog_reg[8]_i_1_n_1 ;
  wire \master_watchdog_reg[8]_i_1_n_2 ;
  wire \master_watchdog_reg[8]_i_1_n_3 ;
  wire \master_watchdog_reg[8]_i_1_n_4 ;
  wire \master_watchdog_reg[8]_i_1_n_5 ;
  wire \master_watchdog_reg[8]_i_1_n_6 ;
  wire \master_watchdog_reg[8]_i_1_n_7 ;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire pcs_resetout;
  wire pcs_resetout_reg;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire pma_resetout_reg;
  wire pma_resetout_rising_rxusrclk2;
  wire [4:0]prtad;
  wire qplllock;
  wire qplllock_coreclk_sync_i_n_1;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire reset_counter_done;
  wire resetdone;
  wire rst0;
  wire rx_prbs31_en;
  wire rx_resetdone;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire rxrecclk_out;
  wire rxreset_rxusrclk2;
  wire signal_detect;
  wire signal_detect_comb;
  wire signal_detect_coreclk;
  wire signal_detect_rxusrclk2_sync_i_n_0;
  wire sim_speedup_control;
  wire ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_10;
  wire ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_11;
  wire ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_7;
  wire ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_8;
  wire ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_9;
  wire tx_disable;
  wire tx_fault;
  wire tx_prbs31_en;
  wire tx_resetdone;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txreset_txusrclk2;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;
  wire [3:0]\NLW_master_watchdog_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_master_watchdog_reg[28]_i_1_O_UNCONNECTED ;
  wire NLW_ten_gig_eth_pcs_pma_ip_core_gt_progdiv_reset_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_ip_core_is_eval_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_ip_core_training_rdack_UNCONNECTED;
  wire NLW_ten_gig_eth_pcs_pma_ip_core_training_wrack_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_ip_core_coeff_minus_1_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_ip_core_coeff_plus_1_UNCONNECTED;
  wire [6:0]NLW_ten_gig_eth_pcs_pma_ip_core_coeff_zero_UNCONNECTED;
  wire [63:0]NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_correction_timer_UNCONNECTED;
  wire [35:0]NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_ns_field_UNCONNECTED;
  wire [47:0]NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_s_field_UNCONNECTED;
  wire [447:0]NLW_ten_gig_eth_pcs_pma_ip_core_status_vector_UNCONNECTED;
  wire [15:0]NLW_ten_gig_eth_pcs_pma_ip_core_training_rddata_UNCONNECTED;
  wire [4:0]NLW_ten_gig_eth_pcs_pma_ip_core_txdiffctrl_UNCONNECTED;
  wire [15:0]NLW_ten_gig_eth_pcs_pma_ip_core_txphy_async_gb_latency_UNCONNECTED;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_cable_pull_logic cable_pull_logic_i
       (.AS(gt0_gtrxreset_i),
        .CLK(rxrecclk_out),
        .D({gt0_rxdata_i[24],gt0_rxdata_i[25],gt0_rxdata_i[26],gt0_rxdata_i[27]}),
        .SS(gt0_rxgearboxslip_i),
        .areset_rxusrclk2(areset_rxusrclk2),
        .cable_is_pulled(cable_is_pulled),
        .coreclk(coreclk),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .gtrxreset_coreclk(gtrxreset_coreclk),
        .\master_watchdog_reg[13] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_8),
        .\master_watchdog_reg[19] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_11),
        .\master_watchdog_reg[25] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_10),
        .\master_watchdog_reg[2] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_9),
        .\master_watchdog_reg[7] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_7),
        .pma_resetout_reg_reg(qplllock_coreclk_sync_i_n_1),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .reset_counter_done(reset_counter_done),
        .signal_detect_coreclk(signal_detect_coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_multi_GT gt0_gtwizard_10gbaser_multi_gt_i
       (.AS(gt0_gtrxreset_i),
        .D({gt0_rxheadervalid_i,gt0_rxdatavalid_i,gt0_rxheader_i[0],gt0_rxheader_i[1]}),
        .RXPRBSSEL(rx_prbs31_en),
        .SS(gt0_rxgearboxslip_i),
        .TXPRBSSEL(tx_prbs31_en),
        .dclk(dclk),
        .drp_daddr_i(drp_daddr_i[8:0]),
        .drp_den_i(drp_den_i),
        .drp_di_i(drp_di_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .gt0_clear_rx_prbs_err_count_i(gt0_clear_rx_prbs_err_count_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_rxbufreset_i(gt0_rxbufreset_i),
        .gt0_rxbufreset_i0(gt0_rxbufreset_i0),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .gt0_rxresetdone_reg_reg0(gt0_rxresetdone_reg_reg0),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txresetdone_reg0(gt0_txresetdone_reg0),
        .\gt_rxd_d1_reg[31] ({gt0_rxdata_i[0],gt0_rxdata_i[1],gt0_rxdata_i[2],gt0_rxdata_i[3],gt0_rxdata_i[4],gt0_rxdata_i[5],gt0_rxdata_i[6],gt0_rxdata_i[7],gt0_rxdata_i[8],gt0_rxdata_i[9],gt0_rxdata_i[10],gt0_rxdata_i[11],gt0_rxdata_i[12],gt0_rxdata_i[13],gt0_rxdata_i[14],gt0_rxdata_i[15],gt0_rxdata_i[16],gt0_rxdata_i[17],gt0_rxdata_i[18],gt0_rxdata_i[19],gt0_rxdata_i[20],gt0_rxdata_i[21],gt0_rxdata_i[22],gt0_rxdata_i[23],gt0_rxdata_i[24],gt0_rxdata_i[25],gt0_rxdata_i[26],gt0_rxdata_i[27],gt0_rxdata_i[28],gt0_rxdata_i[29],gt0_rxdata_i[30],gt0_rxdata_i[31]}),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(gt0_loopback_i),
        .pcs_resetout(pcs_resetout),
        .pcs_resetout_reg(pcs_resetout_reg),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .tx_disable(tx_disable),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxbufreset_i_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxbufreset_i0),
        .Q(gt0_rxbufreset_i),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer gt0_rxresetdone_i_reg_rxusrclk2_sync_i
       (.D(gt0_rxresetdone_reg_dup),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_0 gt0_rxresetdone_i_sync_i
       (.D(gt0_rxresetdone_reg1),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status[0]),
        .coreclk(coreclk),
        .data_out_reg_0(tx_resetdone),
        .master_watchdog0(master_watchdog0),
        .rx_resetdone(rx_resetdone));
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg1_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg),
        .Q(gt0_rxresetdone_reg1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_dup_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg_dup),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    gt0_rxresetdone_reg_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxresetdone_reg_reg0),
        .Q(gt0_rxresetdone_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_1 gt0_txresetdone_i_sync_i
       (.D(rx_resetdone),
        .coreclk(coreclk),
        .gt0_txresetdone_reg1_reg(gt0_txresetdone_reg1),
        .resetdone(resetdone),
        .tx_resetdone(tx_resetdone));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt0_txresetdone_reg),
        .Q(gt0_txresetdone_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt0_txresetdone_reg_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt0_txresetdone_reg0),
        .Q(gt0_txresetdone_reg),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[0] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxheader_i[1]),
        .Q(gt_rxc_d1[0]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[1] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxheader_i[0]),
        .Q(gt_rxc_d1[1]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[2] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdatavalid_i),
        .Q(gt_rxc_d1[2]),
        .R(1'b0));
  FDRE \gt_rxc_d1_reg[3] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxheadervalid_i),
        .Q(gt_rxc_d1[3]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[0] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[31]),
        .Q(gt_rxd_d1[0]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[10] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[21]),
        .Q(gt_rxd_d1[10]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[11] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[20]),
        .Q(gt_rxd_d1[11]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[12] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[19]),
        .Q(gt_rxd_d1[12]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[13] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[18]),
        .Q(gt_rxd_d1[13]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[14] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[17]),
        .Q(gt_rxd_d1[14]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[15] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[16]),
        .Q(gt_rxd_d1[15]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[16] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[15]),
        .Q(gt_rxd_d1[16]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[17] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[14]),
        .Q(gt_rxd_d1[17]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[18] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[13]),
        .Q(gt_rxd_d1[18]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[19] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[12]),
        .Q(gt_rxd_d1[19]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[1] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[30]),
        .Q(gt_rxd_d1[1]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[20] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[11]),
        .Q(gt_rxd_d1[20]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[21] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[10]),
        .Q(gt_rxd_d1[21]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[22] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[9]),
        .Q(gt_rxd_d1[22]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[23] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[8]),
        .Q(gt_rxd_d1[23]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[24] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[7]),
        .Q(gt_rxd_d1[24]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[25] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[6]),
        .Q(gt_rxd_d1[25]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[26] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[5]),
        .Q(gt_rxd_d1[26]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[27] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[4]),
        .Q(gt_rxd_d1[27]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[28] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[3]),
        .Q(gt_rxd_d1[28]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[29] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[2]),
        .Q(gt_rxd_d1[29]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[2] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[29]),
        .Q(gt_rxd_d1[2]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[30] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[1]),
        .Q(gt_rxd_d1[30]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[31] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[0]),
        .Q(gt_rxd_d1[31]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[3] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[28]),
        .Q(gt_rxd_d1[3]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[4] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[27]),
        .Q(gt_rxd_d1[4]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[5] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[26]),
        .Q(gt_rxd_d1[5]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[6] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[25]),
        .Q(gt_rxd_d1[6]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[7] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[24]),
        .Q(gt_rxd_d1[7]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[8] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[23]),
        .Q(gt_rxd_d1[8]),
        .R(1'b0));
  FDRE \gt_rxd_d1_reg[9] 
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(gt0_rxdata_i[22]),
        .Q(gt_rxd_d1[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst gtrxreset_coreclk_sync_i
       (.coreclk(coreclk),
        .gtrxreset(gtrxreset),
        .gtrxreset_coreclk(gtrxreset_coreclk));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_3 
       (.I0(master_watchdog_reg[3]),
        .O(\master_watchdog[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_4 
       (.I0(master_watchdog_reg[2]),
        .O(\master_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_5 
       (.I0(master_watchdog_reg[1]),
        .O(\master_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[0]_i_6 
       (.I0(master_watchdog_reg[0]),
        .O(\master_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_2 
       (.I0(master_watchdog_reg[15]),
        .O(\master_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_3 
       (.I0(master_watchdog_reg[14]),
        .O(\master_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_4 
       (.I0(master_watchdog_reg[13]),
        .O(\master_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[12]_i_5 
       (.I0(master_watchdog_reg[12]),
        .O(\master_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_2 
       (.I0(master_watchdog_reg[19]),
        .O(\master_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_3 
       (.I0(master_watchdog_reg[18]),
        .O(\master_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_4 
       (.I0(master_watchdog_reg[17]),
        .O(\master_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[16]_i_5 
       (.I0(master_watchdog_reg[16]),
        .O(\master_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_2 
       (.I0(master_watchdog_reg[23]),
        .O(\master_watchdog[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_3 
       (.I0(master_watchdog_reg[22]),
        .O(\master_watchdog[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_4 
       (.I0(master_watchdog_reg[21]),
        .O(\master_watchdog[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[20]_i_5 
       (.I0(master_watchdog_reg[20]),
        .O(\master_watchdog[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_2 
       (.I0(master_watchdog_reg[27]),
        .O(\master_watchdog[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_3 
       (.I0(master_watchdog_reg[26]),
        .O(\master_watchdog[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_4 
       (.I0(master_watchdog_reg[25]),
        .O(\master_watchdog[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[24]_i_5 
       (.I0(master_watchdog_reg[24]),
        .O(\master_watchdog[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[28]_i_2 
       (.I0(master_watchdog_reg[28]),
        .O(\master_watchdog[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_2 
       (.I0(master_watchdog_reg[7]),
        .O(\master_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_3 
       (.I0(master_watchdog_reg[6]),
        .O(\master_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_4 
       (.I0(master_watchdog_reg[5]),
        .O(\master_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[4]_i_5 
       (.I0(master_watchdog_reg[4]),
        .O(\master_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_2 
       (.I0(master_watchdog_reg[11]),
        .O(\master_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_3 
       (.I0(master_watchdog_reg[10]),
        .O(\master_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_4 
       (.I0(master_watchdog_reg[9]),
        .O(\master_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \master_watchdog[8]_i_5 
       (.I0(master_watchdog_reg[8]),
        .O(\master_watchdog[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_7 ),
        .Q(master_watchdog_reg[0]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\master_watchdog_reg[0]_i_2_n_0 ,\master_watchdog_reg[0]_i_2_n_1 ,\master_watchdog_reg[0]_i_2_n_2 ,\master_watchdog_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[0]_i_2_n_4 ,\master_watchdog_reg[0]_i_2_n_5 ,\master_watchdog_reg[0]_i_2_n_6 ,\master_watchdog_reg[0]_i_2_n_7 }),
        .S({\master_watchdog[0]_i_3_n_0 ,\master_watchdog[0]_i_4_n_0 ,\master_watchdog[0]_i_5_n_0 ,\master_watchdog[0]_i_6_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_5 ),
        .Q(master_watchdog_reg[10]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_4 ),
        .Q(master_watchdog_reg[11]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_7 ),
        .Q(master_watchdog_reg[12]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[12]_i_1 
       (.CI(\master_watchdog_reg[8]_i_1_n_0 ),
        .CO({\master_watchdog_reg[12]_i_1_n_0 ,\master_watchdog_reg[12]_i_1_n_1 ,\master_watchdog_reg[12]_i_1_n_2 ,\master_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[12]_i_1_n_4 ,\master_watchdog_reg[12]_i_1_n_5 ,\master_watchdog_reg[12]_i_1_n_6 ,\master_watchdog_reg[12]_i_1_n_7 }),
        .S({\master_watchdog[12]_i_2_n_0 ,\master_watchdog[12]_i_3_n_0 ,\master_watchdog[12]_i_4_n_0 ,\master_watchdog[12]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_6 ),
        .Q(master_watchdog_reg[13]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_5 ),
        .Q(master_watchdog_reg[14]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[12]_i_1_n_4 ),
        .Q(master_watchdog_reg[15]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_7 ),
        .Q(master_watchdog_reg[16]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[16]_i_1 
       (.CI(\master_watchdog_reg[12]_i_1_n_0 ),
        .CO({\master_watchdog_reg[16]_i_1_n_0 ,\master_watchdog_reg[16]_i_1_n_1 ,\master_watchdog_reg[16]_i_1_n_2 ,\master_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[16]_i_1_n_4 ,\master_watchdog_reg[16]_i_1_n_5 ,\master_watchdog_reg[16]_i_1_n_6 ,\master_watchdog_reg[16]_i_1_n_7 }),
        .S({\master_watchdog[16]_i_2_n_0 ,\master_watchdog[16]_i_3_n_0 ,\master_watchdog[16]_i_4_n_0 ,\master_watchdog[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_6 ),
        .Q(master_watchdog_reg[17]),
        .R(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_5 ),
        .Q(master_watchdog_reg[18]),
        .S(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[16]_i_1_n_4 ),
        .Q(master_watchdog_reg[19]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_6 ),
        .Q(master_watchdog_reg[1]),
        .R(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_7 ),
        .Q(master_watchdog_reg[20]),
        .S(master_watchdog0));
  CARRY4 \master_watchdog_reg[20]_i_1 
       (.CI(\master_watchdog_reg[16]_i_1_n_0 ),
        .CO({\master_watchdog_reg[20]_i_1_n_0 ,\master_watchdog_reg[20]_i_1_n_1 ,\master_watchdog_reg[20]_i_1_n_2 ,\master_watchdog_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[20]_i_1_n_4 ,\master_watchdog_reg[20]_i_1_n_5 ,\master_watchdog_reg[20]_i_1_n_6 ,\master_watchdog_reg[20]_i_1_n_7 }),
        .S({\master_watchdog[20]_i_2_n_0 ,\master_watchdog[20]_i_3_n_0 ,\master_watchdog[20]_i_4_n_0 ,\master_watchdog[20]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_6 ),
        .Q(master_watchdog_reg[21]),
        .S(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_5 ),
        .Q(master_watchdog_reg[22]),
        .S(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[20]_i_1_n_4 ),
        .Q(master_watchdog_reg[23]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_7 ),
        .Q(master_watchdog_reg[24]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[24]_i_1 
       (.CI(\master_watchdog_reg[20]_i_1_n_0 ),
        .CO({\master_watchdog_reg[24]_i_1_n_0 ,\master_watchdog_reg[24]_i_1_n_1 ,\master_watchdog_reg[24]_i_1_n_2 ,\master_watchdog_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[24]_i_1_n_4 ,\master_watchdog_reg[24]_i_1_n_5 ,\master_watchdog_reg[24]_i_1_n_6 ,\master_watchdog_reg[24]_i_1_n_7 }),
        .S({\master_watchdog[24]_i_2_n_0 ,\master_watchdog[24]_i_3_n_0 ,\master_watchdog[24]_i_4_n_0 ,\master_watchdog[24]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_6 ),
        .Q(master_watchdog_reg[25]),
        .S(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_5 ),
        .Q(master_watchdog_reg[26]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[24]_i_1_n_4 ),
        .Q(master_watchdog_reg[27]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[28]_i_1_n_7 ),
        .Q(master_watchdog_reg[28]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[28]_i_1 
       (.CI(\master_watchdog_reg[24]_i_1_n_0 ),
        .CO(\NLW_master_watchdog_reg[28]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_master_watchdog_reg[28]_i_1_O_UNCONNECTED [3:1],\master_watchdog_reg[28]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\master_watchdog[28]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_5 ),
        .Q(master_watchdog_reg[2]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[0]_i_2_n_4 ),
        .Q(master_watchdog_reg[3]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_7 ),
        .Q(master_watchdog_reg[4]),
        .R(master_watchdog0));
  CARRY4 \master_watchdog_reg[4]_i_1 
       (.CI(\master_watchdog_reg[0]_i_2_n_0 ),
        .CO({\master_watchdog_reg[4]_i_1_n_0 ,\master_watchdog_reg[4]_i_1_n_1 ,\master_watchdog_reg[4]_i_1_n_2 ,\master_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[4]_i_1_n_4 ,\master_watchdog_reg[4]_i_1_n_5 ,\master_watchdog_reg[4]_i_1_n_6 ,\master_watchdog_reg[4]_i_1_n_7 }),
        .S({\master_watchdog[4]_i_2_n_0 ,\master_watchdog[4]_i_3_n_0 ,\master_watchdog[4]_i_4_n_0 ,\master_watchdog[4]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_6 ),
        .Q(master_watchdog_reg[5]),
        .S(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_5 ),
        .Q(master_watchdog_reg[6]),
        .R(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[4]_i_1_n_4 ),
        .Q(master_watchdog_reg[7]),
        .S(master_watchdog0));
  FDSE #(
    .INIT(1'b1)) 
    \master_watchdog_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_7 ),
        .Q(master_watchdog_reg[8]),
        .S(master_watchdog0));
  CARRY4 \master_watchdog_reg[8]_i_1 
       (.CI(\master_watchdog_reg[4]_i_1_n_0 ),
        .CO({\master_watchdog_reg[8]_i_1_n_0 ,\master_watchdog_reg[8]_i_1_n_1 ,\master_watchdog_reg[8]_i_1_n_2 ,\master_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\master_watchdog_reg[8]_i_1_n_4 ,\master_watchdog_reg[8]_i_1_n_5 ,\master_watchdog_reg[8]_i_1_n_6 ,\master_watchdog_reg[8]_i_1_n_7 }),
        .S({\master_watchdog[8]_i_2_n_0 ,\master_watchdog[8]_i_3_n_0 ,\master_watchdog[8]_i_4_n_0 ,\master_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \master_watchdog_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\master_watchdog_reg[8]_i_1_n_6 ),
        .Q(master_watchdog_reg[9]),
        .R(master_watchdog0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_resetout_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_resetout),
        .Q(pcs_resetout_reg),
        .R(areset_coreclk));
  FDRE #(
    .INIT(1'b0)) 
    pma_resetout_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pma_resetout),
        .Q(pma_resetout_reg),
        .R(areset_coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized1 qplllock_coreclk_sync_i
       (.AR(rst0),
        .coreclk(coreclk),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gttxreset(gttxreset),
        .pma_resetout(pma_resetout),
        .pma_resetout_reg(pma_resetout_reg),
        .reset_counter_done(reset_counter_done),
        .\sync1_r_reg[0]_0 (qplllock_coreclk_sync_i_n_1));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized3 qplllock_rxusrclk2_sync_i
       (.AR(rst0),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .qplllock(qplllock),
        .qplllock_rxusrclk2(qplllock_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized2 qplllock_txusrclk2_sync_i
       (.AR(rst0),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b1)) 
    signal_detect_comb_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(signal_detect_rxusrclk2_sync_i_n_0),
        .Q(signal_detect_comb),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_2 signal_detect_coreclk_sync_i
       (.coreclk(coreclk),
        .signal_detect(signal_detect),
        .signal_detect_coreclk(signal_detect_coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_3 signal_detect_rxusrclk2_sync_i
       (.cable_is_pulled(cable_is_pulled),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .signal_detect(signal_detect),
        .signal_detect_comb_reg(signal_detect_rxusrclk2_sync_i_n_0));
  (* C_1588 = "0" *) 
  (* C_DP_WIDTH = "64" *) 
  (* C_GTIF_WIDTH = "32" *) 
  (* C_GTTYPE = "1" *) 
  (* C_HAS_AN = "1'b0" *) 
  (* C_HAS_FEC = "1'b0" *) 
  (* C_HAS_MDIO = "1'b1" *) 
  (* C_IS_32BIT = "1'b0" *) 
  (* C_IS_KR = "1'b0" *) 
  (* C_NO_EBUFF = "1'b0" *) 
  (* C_REFCLKRATE = "156" *) 
  (* C_SPEED10_25 = "10" *) 
  (* DONT_TOUCH *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3 ten_gig_eth_pcs_pma_ip_core
       (.an_enable(1'b0),
        .areset_coreclk(areset_coreclk),
        .areset_rxusrclk2(areset_rxusrclk2),
        .clear_rx_prbs_err_count(gt0_clear_rx_prbs_err_count_i),
        .coeff_minus_1(NLW_ten_gig_eth_pcs_pma_ip_core_coeff_minus_1_UNCONNECTED[4:0]),
        .coeff_plus_1(NLW_ten_gig_eth_pcs_pma_ip_core_coeff_plus_1_UNCONNECTED[4:0]),
        .coeff_zero(NLW_ten_gig_eth_pcs_pma_ip_core_coeff_zero_UNCONNECTED[6:0]),
        .configuration_vector({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .correction_timer({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr_o),
        .drp_den(drp_den_o),
        .drp_di(drp_di_o),
        .drp_drdy(drp_drdy_i),
        .drp_drpdo(drp_drpdo_i),
        .drp_dwe(drp_dwe_o),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .fr_clk(coreclk),
        .gt_latclk(1'b0),
        .gt_progdiv_reset(NLW_ten_gig_eth_pcs_pma_ip_core_gt_progdiv_reset_UNCONNECTED),
        .gt_rxc({1'b0,1'b0,1'b0,1'b0,gt_rxc_d1}),
        .gt_rxd(gt_rxd_d1),
        .gt_rxstartofseq(1'b0),
        .gt_slip(gt0_rxgearboxslip_i),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .is_eval(NLW_ten_gig_eth_pcs_pma_ip_core_is_eval_UNCONNECTED),
        .lfreset(1'b0),
        .loopback_ctrl(gt0_loopback_i),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pcs_resetout(pcs_resetout),
        .pma_pmd_type(pma_pmd_type),
        .pma_resetout(pma_resetout),
        .prtad(prtad),
        .reset(coreclk_reset_tx),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxphy_correction_timer(NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_correction_timer_UNCONNECTED[63:0]),
        .rxphy_ns_field(NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_ns_field_UNCONNECTED[35:0]),
        .rxphy_s_field(NLW_ten_gig_eth_pcs_pma_ip_core_rxphy_s_field_UNCONNECTED[47:0]),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxrecclk_out),
        .signal_detect(signal_detect_comb),
        .sim_speedup_control(sim_speedup_control),
        .status_vector(NLW_ten_gig_eth_pcs_pma_ip_core_status_vector_UNCONNECTED[447:0]),
        .systemtimer_ns_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .systemtimer_s_field({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_addr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .training_drp_cs(1'b0),
        .training_enable(1'b0),
        .training_ipif_cs(1'b0),
        .training_rdack(NLW_ten_gig_eth_pcs_pma_ip_core_training_rdack_UNCONNECTED),
        .training_rddata(NLW_ten_gig_eth_pcs_pma_ip_core_training_rddata_UNCONNECTED[15:0]),
        .training_rnw(1'b0),
        .training_wrack(NLW_ten_gig_eth_pcs_pma_ip_core_training_wrack_UNCONNECTED),
        .training_wrdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx_disable(tx_disable),
        .tx_fault(tx_fault),
        .tx_prbs31_en(tx_prbs31_en),
        .txdiffctrl(NLW_ten_gig_eth_pcs_pma_ip_core_txdiffctrl_UNCONNECTED[4:0]),
        .txphy_async_gb_latency(NLW_ten_gig_eth_pcs_pma_ip_core_txphy_async_gb_latency_UNCONNECTED[15:0]),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_local_clock_and_reset ten_gig_eth_pcs_pma_ip_local_clock_reset_block
       (.AS(coreclk_reset_tx),
        .D(rx_resetdone),
        .areset(areset),
        .areset_rxusrclk2(areset_rxusrclk2),
        .coreclk(coreclk),
        .data_out_reg(gt0_gtrxreset_i),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .out(master_watchdog_reg),
        .pma_resetout(pma_resetout),
        .pma_resetout_reg(pma_resetout_reg),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .reset_counter_done(reset_counter_done),
        .rxoutclk(rxoutclk),
        .rxrecclk_out(rxrecclk_out),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .signal_detect(signal_detect),
        .sim_speedup_control(sim_speedup_control),
        .\sync1_r_reg[0] (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_7),
        .\sync1_r_reg[0]_0 (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_8),
        .\sync1_r_reg[0]_1 (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_9),
        .\sync1_r_reg[0]_2 (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_10),
        .\sync1_r_reg[0]_3 (ten_gig_eth_pcs_pma_ip_local_clock_reset_block_n_11),
        .tx_resetdone(tx_resetdone),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_cable_pull_logic" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_cable_pull_logic
   (cable_is_pulled,
    AS,
    CLK,
    coreclk,
    gt0_rxresetdone_i_reg_rxusrclk2,
    \master_watchdog_reg[13] ,
    \master_watchdog_reg[7] ,
    \master_watchdog_reg[25] ,
    \master_watchdog_reg[19] ,
    \master_watchdog_reg[2] ,
    signal_detect_coreclk,
    pma_resetout_reg_reg,
    reset_counter_done,
    gtrxreset_coreclk,
    pma_resetout_rising_rxusrclk2,
    areset_rxusrclk2,
    SS,
    D);
  output cable_is_pulled;
  output [0:0]AS;
  input CLK;
  input coreclk;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input \master_watchdog_reg[13] ;
  input \master_watchdog_reg[7] ;
  input \master_watchdog_reg[25] ;
  input \master_watchdog_reg[19] ;
  input \master_watchdog_reg[2] ;
  input signal_detect_coreclk;
  input pma_resetout_reg_reg;
  input reset_counter_done;
  input gtrxreset_coreclk;
  input pma_resetout_rising_rxusrclk2;
  input areset_rxusrclk2;
  input [0:0]SS;
  input [3:0]D;

  wire [0:0]AS;
  wire CLK;
  wire [3:0]D;
  wire [0:0]SS;
  wire areset_rxusrclk2;
  wire cable_is_pulled;
  wire cable_pull_reset;
  wire cable_pull_reset_i_2_n_0;
  wire cable_pull_reset_i_3_n_0;
  wire cable_pull_reset_i_4_n_0;
  wire cable_pull_reset_i_5_n_0;
  wire cable_pull_reset_reg__0;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising;
  wire cable_pull_reset_rising_reg__0;
  wire cable_pull_reset_rising_rxusrclk2;
  wire cable_pull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_pull_reset_rising_rxusrclk2_sync_i_n_2;
  wire cable_pull_reset_sync_i_n_1;
  wire \cable_pull_watchdog[0]_i_4_n_0 ;
  wire \cable_pull_watchdog[0]_i_5_n_0 ;
  wire \cable_pull_watchdog[0]_i_6_n_0 ;
  wire \cable_pull_watchdog[0]_i_7_n_0 ;
  wire \cable_pull_watchdog[12]_i_2_n_0 ;
  wire \cable_pull_watchdog[12]_i_3_n_0 ;
  wire \cable_pull_watchdog[12]_i_4_n_0 ;
  wire \cable_pull_watchdog[12]_i_5_n_0 ;
  wire \cable_pull_watchdog[16]_i_2_n_0 ;
  wire \cable_pull_watchdog[16]_i_3_n_0 ;
  wire \cable_pull_watchdog[16]_i_4_n_0 ;
  wire \cable_pull_watchdog[16]_i_5_n_0 ;
  wire \cable_pull_watchdog[4]_i_2_n_0 ;
  wire \cable_pull_watchdog[4]_i_3_n_0 ;
  wire \cable_pull_watchdog[4]_i_4_n_0 ;
  wire \cable_pull_watchdog[4]_i_5_n_0 ;
  wire \cable_pull_watchdog[8]_i_2_n_0 ;
  wire \cable_pull_watchdog[8]_i_3_n_0 ;
  wire \cable_pull_watchdog[8]_i_4_n_0 ;
  wire \cable_pull_watchdog[8]_i_5_n_0 ;
  wire [1:0]cable_pull_watchdog_event;
  wire cable_pull_watchdog_event0;
  wire cable_pull_watchdog_event1;
  wire \cable_pull_watchdog_event[0]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_1_n_0 ;
  wire \cable_pull_watchdog_event[1]_i_3_n_0 ;
  wire [19:0]cable_pull_watchdog_reg;
  wire \cable_pull_watchdog_reg[0]_i_3_n_0 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_1 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_2 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_3 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_4 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_5 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_6 ;
  wire \cable_pull_watchdog_reg[0]_i_3_n_7 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[12]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[4]_i_1_n_7 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_4 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_pull_watchdog_reg[8]_i_1_n_7 ;
  wire cable_unpull_enable_i_1_n_0;
  wire cable_unpull_reset1;
  wire cable_unpull_reset_i_1_n_0;
  wire cable_unpull_reset_reg__0;
  wire cable_unpull_reset_reg_n_0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising;
  wire cable_unpull_reset_rising_reg__0;
  wire cable_unpull_reset_rising_rxusrclk2;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_1;
  wire cable_unpull_reset_rising_rxusrclk2_sync_i_n_2;
  wire cable_unpull_reset_sync_i_n_1;
  wire \cable_unpull_watchdog[0]_i_10_n_0 ;
  wire \cable_unpull_watchdog[0]_i_11_n_0 ;
  wire \cable_unpull_watchdog[0]_i_12_n_0 ;
  wire \cable_unpull_watchdog[0]_i_4_n_0 ;
  wire \cable_unpull_watchdog[0]_i_5_n_0 ;
  wire \cable_unpull_watchdog[0]_i_6_n_0 ;
  wire \cable_unpull_watchdog[0]_i_7_n_0 ;
  wire \cable_unpull_watchdog[0]_i_8_n_0 ;
  wire \cable_unpull_watchdog[0]_i_9_n_0 ;
  wire \cable_unpull_watchdog[12]_i_2_n_0 ;
  wire \cable_unpull_watchdog[12]_i_3_n_0 ;
  wire \cable_unpull_watchdog[12]_i_4_n_0 ;
  wire \cable_unpull_watchdog[12]_i_5_n_0 ;
  wire \cable_unpull_watchdog[16]_i_2_n_0 ;
  wire \cable_unpull_watchdog[16]_i_3_n_0 ;
  wire \cable_unpull_watchdog[16]_i_4_n_0 ;
  wire \cable_unpull_watchdog[16]_i_5_n_0 ;
  wire \cable_unpull_watchdog[4]_i_2_n_0 ;
  wire \cable_unpull_watchdog[4]_i_3_n_0 ;
  wire \cable_unpull_watchdog[4]_i_4_n_0 ;
  wire \cable_unpull_watchdog[4]_i_5_n_0 ;
  wire \cable_unpull_watchdog[8]_i_2_n_0 ;
  wire \cable_unpull_watchdog[8]_i_3_n_0 ;
  wire \cable_unpull_watchdog[8]_i_4_n_0 ;
  wire \cable_unpull_watchdog[8]_i_5_n_0 ;
  wire cable_unpull_watchdog_event;
  wire \cable_unpull_watchdog_event[10]_i_4_n_0 ;
  wire \cable_unpull_watchdog_event_reg_n_0_[0] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[1] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[2] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[3] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[4] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[5] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[6] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[7] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[8] ;
  wire \cable_unpull_watchdog_event_reg_n_0_[9] ;
  wire [19:0]cable_unpull_watchdog_reg;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_0 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_1 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_2 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_3 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_4 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_5 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_6 ;
  wire \cable_unpull_watchdog_reg[0]_i_3_n_7 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[12]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[16]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[4]_i_1_n_7 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_0 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_1 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_2 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_3 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_4 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_5 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_6 ;
  wire \cable_unpull_watchdog_reg[8]_i_1_n_7 ;
  wire coreclk;
  wire gearboxslipignore;
  wire gearboxslipignore_i_1_n_0;
  wire [0:0]gearboxslipignorecount0;
  wire \gearboxslipignorecount[1]_i_1_n_0 ;
  wire \gearboxslipignorecount[2]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_1_n_0 ;
  wire \gearboxslipignorecount[3]_i_2_n_0 ;
  wire [3:0]gearboxslipignorecount_reg__0;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire gthe2_i_i_4_n_0;
  wire gtrxreset_coreclk;
  wire \master_watchdog_reg[13] ;
  wire \master_watchdog_reg[19] ;
  wire \master_watchdog_reg[25] ;
  wire \master_watchdog_reg[2] ;
  wire \master_watchdog_reg[7] ;
  wire [10:0]p_0_in;
  wire p_1_in;
  wire pma_resetout_reg_reg;
  wire pma_resetout_rising_rxusrclk2;
  wire reset_counter_done;
  wire [3:0]rx_sample;
  wire \rx_sample[3]_i_1_n_0 ;
  wire [3:0]rx_sample_prev;
  wire signal_detect_coreclk;
  wire [3:3]\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    cable_pull_reset_i_2
       (.I0(cable_pull_watchdog_reg[2]),
        .I1(cable_pull_watchdog_reg[1]),
        .I2(cable_pull_watchdog_reg[0]),
        .I3(cable_pull_watchdog_reg[3]),
        .I4(cable_pull_watchdog_reg[4]),
        .I5(cable_pull_reset_i_4_n_0),
        .O(cable_pull_reset_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    cable_pull_reset_i_3
       (.I0(cable_pull_watchdog_reg[17]),
        .I1(cable_pull_watchdog_reg[16]),
        .I2(cable_pull_watchdog_reg[15]),
        .I3(cable_pull_watchdog_reg[19]),
        .I4(cable_pull_watchdog_reg[18]),
        .I5(cable_pull_reset_i_5_n_0),
        .O(cable_pull_reset_i_3_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    cable_pull_reset_i_4
       (.I0(cable_pull_watchdog_reg[9]),
        .I1(cable_pull_watchdog_reg[8]),
        .I2(cable_pull_watchdog_reg[5]),
        .I3(cable_pull_watchdog_reg[6]),
        .I4(cable_pull_watchdog_reg[7]),
        .O(cable_pull_reset_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    cable_pull_reset_i_5
       (.I0(cable_pull_watchdog_reg[12]),
        .I1(cable_pull_watchdog_reg[10]),
        .I2(cable_pull_watchdog_reg[11]),
        .I3(cable_pull_watchdog_reg[14]),
        .I4(cable_pull_watchdog_reg[13]),
        .O(cable_pull_reset_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_pull_reset_rising_rxusrclk2_sync_i_n_2),
        .Q(cable_pull_reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_reg_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_reg__0),
        .Q(cable_pull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_sync_i_n_1),
        .Q(cable_pull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_pull_reset_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset_rising),
        .Q(cable_pull_reset_rising_reg__0),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_16 cable_pull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_pull_reset_rising),
        .CLK(CLK),
        .cable_pull_reset(cable_pull_reset),
        .cable_pull_reset_reg(cable_pull_reset_rising_rxusrclk2_sync_i_n_2),
        .cable_pull_reset_rising_rxusrclk2(cable_pull_reset_rising_rxusrclk2),
        .cable_pull_watchdog_event(cable_pull_watchdog_event),
        .\cable_pull_watchdog_reg[0] (cable_pull_reset_rising_rxusrclk2_sync_i_n_1),
        .\cable_pull_watchdog_reg[17] (cable_pull_reset_i_3_n_0),
        .\cable_pull_watchdog_reg[2] (cable_pull_reset_i_2_n_0),
        .cable_unpull_enable_reg(cable_is_pulled),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_17 cable_pull_reset_sync_i
       (.cable_pull_reset(cable_pull_reset),
        .cable_pull_reset_reg(cable_pull_reset_reg__0),
        .cable_pull_reset_reg_reg(cable_pull_reset_reg_reg),
        .cable_pull_reset_rising_reg(cable_pull_reset_sync_i_n_1),
        .coreclk(coreclk));
  LUT3 #(
    .INIT(8'h02)) 
    \cable_pull_watchdog[0]_i_2 
       (.I0(gt0_rxresetdone_i_reg_rxusrclk2),
        .I1(cable_is_pulled),
        .I2(cable_pull_reset),
        .O(cable_pull_watchdog_event0));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_4 
       (.I0(cable_pull_watchdog_reg[3]),
        .O(\cable_pull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_5 
       (.I0(cable_pull_watchdog_reg[2]),
        .O(\cable_pull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_6 
       (.I0(cable_pull_watchdog_reg[1]),
        .O(\cable_pull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[0]_i_7 
       (.I0(cable_pull_watchdog_reg[0]),
        .O(\cable_pull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_2 
       (.I0(cable_pull_watchdog_reg[15]),
        .O(\cable_pull_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_3 
       (.I0(cable_pull_watchdog_reg[14]),
        .O(\cable_pull_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_4 
       (.I0(cable_pull_watchdog_reg[13]),
        .O(\cable_pull_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[12]_i_5 
       (.I0(cable_pull_watchdog_reg[12]),
        .O(\cable_pull_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_2 
       (.I0(cable_pull_watchdog_reg[19]),
        .O(\cable_pull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_3 
       (.I0(cable_pull_watchdog_reg[18]),
        .O(\cable_pull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_4 
       (.I0(cable_pull_watchdog_reg[17]),
        .O(\cable_pull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[16]_i_5 
       (.I0(cable_pull_watchdog_reg[16]),
        .O(\cable_pull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_2 
       (.I0(cable_pull_watchdog_reg[7]),
        .O(\cable_pull_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_3 
       (.I0(cable_pull_watchdog_reg[6]),
        .O(\cable_pull_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_4 
       (.I0(cable_pull_watchdog_reg[5]),
        .O(\cable_pull_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[4]_i_5 
       (.I0(cable_pull_watchdog_reg[4]),
        .O(\cable_pull_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_2 
       (.I0(cable_pull_watchdog_reg[11]),
        .O(\cable_pull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_3 
       (.I0(cable_pull_watchdog_reg[10]),
        .O(\cable_pull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_4 
       (.I0(cable_pull_watchdog_reg[9]),
        .O(\cable_pull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_pull_watchdog[8]_i_5 
       (.I0(cable_pull_watchdog_reg[8]),
        .O(\cable_pull_watchdog[8]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT5 #(
    .INIT(32'h00002262)) 
    \cable_pull_watchdog_event[0]_i_1 
       (.I0(cable_pull_watchdog_event[0]),
        .I1(cable_pull_watchdog_event0),
        .I2(cable_pull_watchdog_event1),
        .I3(cable_pull_watchdog_event[1]),
        .I4(cable_pull_reset_rising_rxusrclk2),
        .O(\cable_pull_watchdog_event[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT5 #(
    .INIT(32'h00006222)) 
    \cable_pull_watchdog_event[1]_i_1 
       (.I0(cable_pull_watchdog_event[1]),
        .I1(cable_pull_watchdog_event0),
        .I2(cable_pull_watchdog_event1),
        .I3(cable_pull_watchdog_event[0]),
        .I4(cable_pull_reset_rising_rxusrclk2),
        .O(\cable_pull_watchdog_event[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F06E0F0EFF6EFF6)) 
    \cable_pull_watchdog_event[1]_i_2 
       (.I0(rx_sample[0]),
        .I1(rx_sample[2]),
        .I2(rx_sample[3]),
        .I3(rx_sample[1]),
        .I4(rx_sample_prev[3]),
        .I5(\cable_pull_watchdog_event[1]_i_3_n_0 ),
        .O(cable_pull_watchdog_event1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \cable_pull_watchdog_event[1]_i_3 
       (.I0(rx_sample[0]),
        .I1(rx_sample_prev[0]),
        .I2(rx_sample_prev[2]),
        .I3(rx_sample[2]),
        .I4(rx_sample_prev[1]),
        .I5(rx_sample[1]),
        .O(\cable_pull_watchdog_event[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cable_pull_watchdog_event[0]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cable_pull_watchdog_event[1]_i_1_n_0 ),
        .Q(cable_pull_watchdog_event[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_7 ),
        .Q(cable_pull_watchdog_reg[0]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\cable_pull_watchdog_reg[0]_i_3_n_0 ,\cable_pull_watchdog_reg[0]_i_3_n_1 ,\cable_pull_watchdog_reg[0]_i_3_n_2 ,\cable_pull_watchdog_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[0]_i_3_n_4 ,\cable_pull_watchdog_reg[0]_i_3_n_5 ,\cable_pull_watchdog_reg[0]_i_3_n_6 ,\cable_pull_watchdog_reg[0]_i_3_n_7 }),
        .S({\cable_pull_watchdog[0]_i_4_n_0 ,\cable_pull_watchdog[0]_i_5_n_0 ,\cable_pull_watchdog[0]_i_6_n_0 ,\cable_pull_watchdog[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[10]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[11]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[12]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[12]_i_1 
       (.CI(\cable_pull_watchdog_reg[8]_i_1_n_0 ),
        .CO({\cable_pull_watchdog_reg[12]_i_1_n_0 ,\cable_pull_watchdog_reg[12]_i_1_n_1 ,\cable_pull_watchdog_reg[12]_i_1_n_2 ,\cable_pull_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[12]_i_1_n_4 ,\cable_pull_watchdog_reg[12]_i_1_n_5 ,\cable_pull_watchdog_reg[12]_i_1_n_6 ,\cable_pull_watchdog_reg[12]_i_1_n_7 }),
        .S({\cable_pull_watchdog[12]_i_2_n_0 ,\cable_pull_watchdog[12]_i_3_n_0 ,\cable_pull_watchdog[12]_i_4_n_0 ,\cable_pull_watchdog[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[13]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[14]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[12]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[15]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[16]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[16]_i_1 
       (.CI(\cable_pull_watchdog_reg[12]_i_1_n_0 ),
        .CO({\NLW_cable_pull_watchdog_reg[16]_i_1_CO_UNCONNECTED [3],\cable_pull_watchdog_reg[16]_i_1_n_1 ,\cable_pull_watchdog_reg[16]_i_1_n_2 ,\cable_pull_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[16]_i_1_n_4 ,\cable_pull_watchdog_reg[16]_i_1_n_5 ,\cable_pull_watchdog_reg[16]_i_1_n_6 ,\cable_pull_watchdog_reg[16]_i_1_n_7 }),
        .S({\cable_pull_watchdog[16]_i_2_n_0 ,\cable_pull_watchdog[16]_i_3_n_0 ,\cable_pull_watchdog[16]_i_4_n_0 ,\cable_pull_watchdog[16]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \cable_pull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[17]),
        .S(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[18]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[16]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[19]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_6 ),
        .Q(cable_pull_watchdog_reg[1]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_5 ),
        .Q(cable_pull_watchdog_reg[2]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[0]_i_3_n_4 ),
        .Q(cable_pull_watchdog_reg[3]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[4]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[4]_i_1 
       (.CI(\cable_pull_watchdog_reg[0]_i_3_n_0 ),
        .CO({\cable_pull_watchdog_reg[4]_i_1_n_0 ,\cable_pull_watchdog_reg[4]_i_1_n_1 ,\cable_pull_watchdog_reg[4]_i_1_n_2 ,\cable_pull_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[4]_i_1_n_4 ,\cable_pull_watchdog_reg[4]_i_1_n_5 ,\cable_pull_watchdog_reg[4]_i_1_n_6 ,\cable_pull_watchdog_reg[4]_i_1_n_7 }),
        .S({\cable_pull_watchdog[4]_i_2_n_0 ,\cable_pull_watchdog[4]_i_3_n_0 ,\cable_pull_watchdog[4]_i_4_n_0 ,\cable_pull_watchdog[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[5]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_5 ),
        .Q(cable_pull_watchdog_reg[6]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[4]_i_1_n_4 ),
        .Q(cable_pull_watchdog_reg[7]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_7 ),
        .Q(cable_pull_watchdog_reg[8]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_pull_watchdog_reg[8]_i_1 
       (.CI(\cable_pull_watchdog_reg[4]_i_1_n_0 ),
        .CO({\cable_pull_watchdog_reg[8]_i_1_n_0 ,\cable_pull_watchdog_reg[8]_i_1_n_1 ,\cable_pull_watchdog_reg[8]_i_1_n_2 ,\cable_pull_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_pull_watchdog_reg[8]_i_1_n_4 ,\cable_pull_watchdog_reg[8]_i_1_n_5 ,\cable_pull_watchdog_reg[8]_i_1_n_6 ,\cable_pull_watchdog_reg[8]_i_1_n_7 }),
        .S({\cable_pull_watchdog[8]_i_2_n_0 ,\cable_pull_watchdog[8]_i_3_n_0 ,\cable_pull_watchdog[8]_i_4_n_0 ,\cable_pull_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_pull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_pull_watchdog_event0),
        .D(\cable_pull_watchdog_reg[8]_i_1_n_6 ),
        .Q(cable_pull_watchdog_reg[9]),
        .R(cable_pull_reset_rising_rxusrclk2_sync_i_n_1));
  LUT5 #(
    .INIT(32'h000000F2)) 
    cable_unpull_enable_i_1
       (.I0(cable_is_pulled),
        .I1(cable_unpull_reset_reg_n_0),
        .I2(cable_pull_reset),
        .I3(pma_resetout_rising_rxusrclk2),
        .I4(areset_rxusrclk2),
        .O(cable_unpull_enable_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_enable_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_enable_i_1_n_0),
        .Q(cable_is_pulled),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000ECCC)) 
    cable_unpull_reset_i_1
       (.I0(p_1_in),
        .I1(cable_unpull_reset_reg_n_0),
        .I2(cable_is_pulled),
        .I3(gt0_rxresetdone_i_reg_rxusrclk2),
        .I4(cable_unpull_reset_rising_rxusrclk2),
        .O(cable_unpull_reset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg
       (.C(CLK),
        .CE(1'b1),
        .D(cable_unpull_reset_i_1_n_0),
        .Q(cable_unpull_reset_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_reg_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_reg__0),
        .Q(cable_unpull_reset_reg_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_sync_i_n_1),
        .Q(cable_unpull_reset_rising),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cable_unpull_reset_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_rising),
        .Q(cable_unpull_reset_rising_reg__0),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_18 cable_unpull_reset_rising_rxusrclk2_sync_i
       (.AS(cable_unpull_reset_rising),
        .CLK(CLK),
        .Q(p_1_in),
        .SR(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2),
        .cable_unpull_enable_reg(cable_is_pulled),
        .cable_unpull_reset_reg(cable_unpull_reset_reg_n_0),
        .cable_unpull_reset_rising_rxusrclk2(cable_unpull_reset_rising_rxusrclk2),
        .\cable_unpull_watchdog_reg[0] (cable_unpull_reset_rising_rxusrclk2_sync_i_n_1),
        .\cable_unpull_watchdog_reg[12] (\cable_unpull_watchdog[0]_i_4_n_0 ),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_19 cable_unpull_reset_sync_i
       (.cable_unpull_reset_reg(cable_unpull_reset_reg__0),
        .cable_unpull_reset_reg_0(cable_unpull_reset_reg_n_0),
        .cable_unpull_reset_reg_reg(cable_unpull_reset_reg_reg),
        .cable_unpull_reset_rising_reg(cable_unpull_reset_sync_i_n_1),
        .coreclk(coreclk));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_10 
       (.I0(cable_unpull_watchdog_reg[18]),
        .I1(cable_unpull_watchdog_reg[19]),
        .I2(cable_unpull_watchdog_reg[15]),
        .I3(cable_unpull_watchdog_reg[16]),
        .I4(cable_unpull_watchdog_reg[17]),
        .O(\cable_unpull_watchdog[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_11 
       (.I0(cable_unpull_watchdog_reg[9]),
        .I1(cable_unpull_watchdog_reg[8]),
        .I2(cable_unpull_watchdog_reg[5]),
        .I3(cable_unpull_watchdog_reg[6]),
        .I4(cable_unpull_watchdog_reg[7]),
        .O(\cable_unpull_watchdog[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \cable_unpull_watchdog[0]_i_12 
       (.I0(cable_unpull_watchdog_reg[4]),
        .I1(cable_unpull_watchdog_reg[3]),
        .I2(cable_unpull_watchdog_reg[0]),
        .I3(cable_unpull_watchdog_reg[1]),
        .I4(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \cable_unpull_watchdog[0]_i_2 
       (.I0(cable_unpull_reset_reg_n_0),
        .I1(cable_is_pulled),
        .I2(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(cable_unpull_reset1));
  LUT4 #(
    .INIT(16'h4000)) 
    \cable_unpull_watchdog[0]_i_4 
       (.I0(\cable_unpull_watchdog[0]_i_9_n_0 ),
        .I1(\cable_unpull_watchdog[0]_i_10_n_0 ),
        .I2(\cable_unpull_watchdog[0]_i_11_n_0 ),
        .I3(\cable_unpull_watchdog[0]_i_12_n_0 ),
        .O(\cable_unpull_watchdog[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_5 
       (.I0(cable_unpull_watchdog_reg[3]),
        .O(\cable_unpull_watchdog[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_6 
       (.I0(cable_unpull_watchdog_reg[2]),
        .O(\cable_unpull_watchdog[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_7 
       (.I0(cable_unpull_watchdog_reg[1]),
        .O(\cable_unpull_watchdog[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[0]_i_8 
       (.I0(cable_unpull_watchdog_reg[0]),
        .O(\cable_unpull_watchdog[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \cable_unpull_watchdog[0]_i_9 
       (.I0(cable_unpull_watchdog_reg[12]),
        .I1(cable_unpull_watchdog_reg[10]),
        .I2(cable_unpull_watchdog_reg[11]),
        .I3(cable_unpull_watchdog_reg[14]),
        .I4(cable_unpull_watchdog_reg[13]),
        .O(\cable_unpull_watchdog[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_2 
       (.I0(cable_unpull_watchdog_reg[15]),
        .O(\cable_unpull_watchdog[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_3 
       (.I0(cable_unpull_watchdog_reg[14]),
        .O(\cable_unpull_watchdog[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_4 
       (.I0(cable_unpull_watchdog_reg[13]),
        .O(\cable_unpull_watchdog[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[12]_i_5 
       (.I0(cable_unpull_watchdog_reg[12]),
        .O(\cable_unpull_watchdog[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_2 
       (.I0(cable_unpull_watchdog_reg[19]),
        .O(\cable_unpull_watchdog[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_3 
       (.I0(cable_unpull_watchdog_reg[18]),
        .O(\cable_unpull_watchdog[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_4 
       (.I0(cable_unpull_watchdog_reg[17]),
        .O(\cable_unpull_watchdog[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[16]_i_5 
       (.I0(cable_unpull_watchdog_reg[16]),
        .O(\cable_unpull_watchdog[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_2 
       (.I0(cable_unpull_watchdog_reg[7]),
        .O(\cable_unpull_watchdog[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_3 
       (.I0(cable_unpull_watchdog_reg[6]),
        .O(\cable_unpull_watchdog[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_4 
       (.I0(cable_unpull_watchdog_reg[5]),
        .O(\cable_unpull_watchdog[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[4]_i_5 
       (.I0(cable_unpull_watchdog_reg[4]),
        .O(\cable_unpull_watchdog[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_2 
       (.I0(cable_unpull_watchdog_reg[11]),
        .O(\cable_unpull_watchdog[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_3 
       (.I0(cable_unpull_watchdog_reg[10]),
        .O(\cable_unpull_watchdog[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_4 
       (.I0(cable_unpull_watchdog_reg[9]),
        .O(\cable_unpull_watchdog[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog[8]_i_5 
       (.I0(cable_unpull_watchdog_reg[8]),
        .O(\cable_unpull_watchdog[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cable_unpull_watchdog_event[0]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .O(p_0_in[0]));
  LUT4 #(
    .INIT(16'h0800)) 
    \cable_unpull_watchdog_event[10]_i_2 
       (.I0(gt0_rxresetdone_i_reg_rxusrclk2),
        .I1(cable_is_pulled),
        .I2(cable_unpull_reset_reg_n_0),
        .I3(cable_pull_watchdog_event1),
        .O(cable_unpull_watchdog_event));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[10]_i_3 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .I5(p_1_in),
        .O(p_0_in[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cable_unpull_watchdog_event[10]_i_4 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(\cable_unpull_watchdog_event[10]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[1]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .O(p_0_in[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[2]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[3]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[4]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cable_unpull_watchdog_event[5]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .I5(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .O(p_0_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \cable_unpull_watchdog_event[6]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .O(p_0_in[6]));
  LUT3 #(
    .INIT(8'h78)) 
    \cable_unpull_watchdog_event[7]_i_1 
       (.I0(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I1(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cable_unpull_watchdog_event[8]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cable_unpull_watchdog_event[9]_i_1 
       (.I0(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .I1(\cable_unpull_watchdog_event[10]_i_4_n_0 ),
        .I2(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .I3(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .I4(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[0]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[0] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[10]),
        .Q(p_1_in),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[1]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[1] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[2]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[2] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[3]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[3] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[4]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[4] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[5]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[5] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[6]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[6] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[7]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[7] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[8]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[8] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_event_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_watchdog_event),
        .D(p_0_in[9]),
        .Q(\cable_unpull_watchdog_event_reg_n_0_[9] ),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[0] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_7 ),
        .Q(cable_unpull_watchdog_reg[0]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_unpull_watchdog_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\cable_unpull_watchdog_reg[0]_i_3_n_0 ,\cable_unpull_watchdog_reg[0]_i_3_n_1 ,\cable_unpull_watchdog_reg[0]_i_3_n_2 ,\cable_unpull_watchdog_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[0]_i_3_n_4 ,\cable_unpull_watchdog_reg[0]_i_3_n_5 ,\cable_unpull_watchdog_reg[0]_i_3_n_6 ,\cable_unpull_watchdog_reg[0]_i_3_n_7 }),
        .S({\cable_unpull_watchdog[0]_i_5_n_0 ,\cable_unpull_watchdog[0]_i_6_n_0 ,\cable_unpull_watchdog[0]_i_7_n_0 ,\cable_unpull_watchdog[0]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[10] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[10]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[11] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[11]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[12] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[12]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_unpull_watchdog_reg[12]_i_1 
       (.CI(\cable_unpull_watchdog_reg[8]_i_1_n_0 ),
        .CO({\cable_unpull_watchdog_reg[12]_i_1_n_0 ,\cable_unpull_watchdog_reg[12]_i_1_n_1 ,\cable_unpull_watchdog_reg[12]_i_1_n_2 ,\cable_unpull_watchdog_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[12]_i_1_n_4 ,\cable_unpull_watchdog_reg[12]_i_1_n_5 ,\cable_unpull_watchdog_reg[12]_i_1_n_6 ,\cable_unpull_watchdog_reg[12]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[12]_i_2_n_0 ,\cable_unpull_watchdog[12]_i_3_n_0 ,\cable_unpull_watchdog[12]_i_4_n_0 ,\cable_unpull_watchdog[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[13] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[13]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[14] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[14]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[15] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[12]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[15]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[16] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[16]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_unpull_watchdog_reg[16]_i_1 
       (.CI(\cable_unpull_watchdog_reg[12]_i_1_n_0 ),
        .CO({\NLW_cable_unpull_watchdog_reg[16]_i_1_CO_UNCONNECTED [3],\cable_unpull_watchdog_reg[16]_i_1_n_1 ,\cable_unpull_watchdog_reg[16]_i_1_n_2 ,\cable_unpull_watchdog_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[16]_i_1_n_4 ,\cable_unpull_watchdog_reg[16]_i_1_n_5 ,\cable_unpull_watchdog_reg[16]_i_1_n_6 ,\cable_unpull_watchdog_reg[16]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[16]_i_2_n_0 ,\cable_unpull_watchdog[16]_i_3_n_0 ,\cable_unpull_watchdog[16]_i_4_n_0 ,\cable_unpull_watchdog[16]_i_5_n_0 }));
  FDSE #(
    .INIT(1'b1)) 
    \cable_unpull_watchdog_reg[17] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[17]),
        .S(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[18] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[18]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[19] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[16]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[19]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[1] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_6 ),
        .Q(cable_unpull_watchdog_reg[1]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[2] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_5 ),
        .Q(cable_unpull_watchdog_reg[2]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[3] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[0]_i_3_n_4 ),
        .Q(cable_unpull_watchdog_reg[3]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[4] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[4]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_unpull_watchdog_reg[4]_i_1 
       (.CI(\cable_unpull_watchdog_reg[0]_i_3_n_0 ),
        .CO({\cable_unpull_watchdog_reg[4]_i_1_n_0 ,\cable_unpull_watchdog_reg[4]_i_1_n_1 ,\cable_unpull_watchdog_reg[4]_i_1_n_2 ,\cable_unpull_watchdog_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[4]_i_1_n_4 ,\cable_unpull_watchdog_reg[4]_i_1_n_5 ,\cable_unpull_watchdog_reg[4]_i_1_n_6 ,\cable_unpull_watchdog_reg[4]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[4]_i_2_n_0 ,\cable_unpull_watchdog[4]_i_3_n_0 ,\cable_unpull_watchdog[4]_i_4_n_0 ,\cable_unpull_watchdog[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[5] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[5]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[6] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_5 ),
        .Q(cable_unpull_watchdog_reg[6]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[7] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[4]_i_1_n_4 ),
        .Q(cable_unpull_watchdog_reg[7]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[8] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_7 ),
        .Q(cable_unpull_watchdog_reg[8]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  CARRY4 \cable_unpull_watchdog_reg[8]_i_1 
       (.CI(\cable_unpull_watchdog_reg[4]_i_1_n_0 ),
        .CO({\cable_unpull_watchdog_reg[8]_i_1_n_0 ,\cable_unpull_watchdog_reg[8]_i_1_n_1 ,\cable_unpull_watchdog_reg[8]_i_1_n_2 ,\cable_unpull_watchdog_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O({\cable_unpull_watchdog_reg[8]_i_1_n_4 ,\cable_unpull_watchdog_reg[8]_i_1_n_5 ,\cable_unpull_watchdog_reg[8]_i_1_n_6 ,\cable_unpull_watchdog_reg[8]_i_1_n_7 }),
        .S({\cable_unpull_watchdog[8]_i_2_n_0 ,\cable_unpull_watchdog[8]_i_3_n_0 ,\cable_unpull_watchdog[8]_i_4_n_0 ,\cable_unpull_watchdog[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cable_unpull_watchdog_reg[9] 
       (.C(CLK),
        .CE(cable_unpull_reset1),
        .D(\cable_unpull_watchdog_reg[8]_i_1_n_6 ),
        .Q(cable_unpull_watchdog_reg[9]),
        .R(cable_unpull_reset_rising_rxusrclk2_sync_i_n_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    gearboxslipignore_i_1
       (.I0(gearboxslipignorecount_reg__0[3]),
        .I1(gearboxslipignorecount_reg__0[2]),
        .I2(gearboxslipignorecount_reg__0[0]),
        .I3(gearboxslipignorecount_reg__0[1]),
        .I4(gearboxslipignore),
        .I5(SS),
        .O(gearboxslipignore_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gearboxslipignore_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gearboxslipignore_i_1_n_0),
        .Q(gearboxslipignore),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \gearboxslipignorecount[0]_i_1 
       (.I0(gearboxslipignorecount_reg__0[0]),
        .O(gearboxslipignorecount0));
  LUT2 #(
    .INIT(4'h9)) 
    \gearboxslipignorecount[1]_i_1 
       (.I0(gearboxslipignorecount_reg__0[0]),
        .I1(gearboxslipignorecount_reg__0[1]),
        .O(\gearboxslipignorecount[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \gearboxslipignorecount[2]_i_1 
       (.I0(gearboxslipignorecount_reg__0[1]),
        .I1(gearboxslipignorecount_reg__0[0]),
        .I2(gearboxslipignorecount_reg__0[2]),
        .O(\gearboxslipignorecount[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gearboxslipignorecount[3]_i_1 
       (.I0(gearboxslipignorecount_reg__0[3]),
        .I1(gearboxslipignorecount_reg__0[2]),
        .I2(gearboxslipignorecount_reg__0[0]),
        .I3(gearboxslipignorecount_reg__0[1]),
        .O(\gearboxslipignorecount[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFE01)) 
    \gearboxslipignorecount[3]_i_2 
       (.I0(gearboxslipignorecount_reg__0[2]),
        .I1(gearboxslipignorecount_reg__0[0]),
        .I2(gearboxslipignorecount_reg__0[1]),
        .I3(gearboxslipignorecount_reg__0[3]),
        .O(\gearboxslipignorecount[3]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[0] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(gearboxslipignorecount0),
        .Q(gearboxslipignorecount_reg__0[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[1] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[1]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg__0[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[2] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[2]_i_1_n_0 ),
        .Q(gearboxslipignorecount_reg__0[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \gearboxslipignorecount_reg[3] 
       (.C(CLK),
        .CE(\gearboxslipignorecount[3]_i_1_n_0 ),
        .D(\gearboxslipignorecount[3]_i_2_n_0 ),
        .Q(gearboxslipignorecount_reg__0[3]),
        .S(SS));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    gthe2_i_i_1
       (.I0(gthe2_i_i_4_n_0),
        .I1(\master_watchdog_reg[13] ),
        .I2(\master_watchdog_reg[7] ),
        .I3(\master_watchdog_reg[25] ),
        .I4(\master_watchdog_reg[19] ),
        .I5(\master_watchdog_reg[2] ),
        .O(AS));
  LUT6 #(
    .INIT(64'hFFFF0000FFFD0000)) 
    gthe2_i_i_4
       (.I0(signal_detect_coreclk),
        .I1(cable_pull_reset_rising_reg__0),
        .I2(cable_unpull_reset_rising_reg__0),
        .I3(pma_resetout_reg_reg),
        .I4(reset_counter_done),
        .I5(gtrxreset_coreclk),
        .O(gthe2_i_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \rx_sample[3]_i_1 
       (.I0(gearboxslipignore),
        .O(\rx_sample[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[0]),
        .Q(rx_sample_prev[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[1]),
        .Q(rx_sample_prev[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[2]),
        .Q(rx_sample_prev[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_prev_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(rx_sample[3]),
        .Q(rx_sample_prev[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[0] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[0]),
        .Q(rx_sample[0]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[1] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[1]),
        .Q(rx_sample[1]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[2] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[2]),
        .Q(rx_sample[2]),
        .R(cable_pull_reset_rising_rxusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    \rx_sample_reg[3] 
       (.C(CLK),
        .CE(\rx_sample[3]_i_1_n_0 ),
        .D(D[3]),
        .Q(rx_sample[3]),
        .R(cable_pull_reset_rising_rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer
   (gt0_rxresetdone_i_reg_rxusrclk2,
    gt0_rxbufreset_i_reg,
    D);
  output gt0_rxresetdone_i_reg_rxusrclk2;
  input gt0_rxbufreset_i_reg;
  input [0:0]D;

  wire [0:0]D;
  wire gt0_rxbufreset_i_reg;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gt0_rxresetdone_i_reg_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_0
   (rx_resetdone,
    master_watchdog0,
    coreclk,
    core_status,
    core_in_testmode,
    data_out_reg_0,
    D);
  output rx_resetdone;
  output master_watchdog0;
  input coreclk;
  input [0:0]core_status;
  input core_in_testmode;
  input data_out_reg_0;
  input [0:0]D;

  wire [0:0]D;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg_0;
  wire master_watchdog0;
  wire rx_resetdone;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rx_resetdone),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \master_watchdog[0]_i_1 
       (.I0(core_status),
        .I1(core_in_testmode),
        .I2(rx_resetdone),
        .I3(data_out_reg_0),
        .O(master_watchdog0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_1
   (tx_resetdone,
    resetdone,
    coreclk,
    D,
    gt0_txresetdone_reg1_reg);
  output tx_resetdone;
  output resetdone;
  input coreclk;
  input [0:0]D;
  input [0:0]gt0_txresetdone_reg1_reg;

  wire [0:0]D;
  wire coreclk;
  wire [0:0]gt0_txresetdone_reg1_reg;
  wire resetdone;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire tx_resetdone;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(tx_resetdone),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(gt0_txresetdone_reg1_reg),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    ten_gig_eth_pcs_pma_ip_core_i_1
       (.I0(tx_resetdone),
        .I1(D),
        .O(resetdone));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_13
   (rx_resetdone_dclk,
    dclk,
    D);
  output rx_resetdone_dclk;
  input dclk;
  input [0:0]D;

  wire [0:0]D;
  wire dclk;
  wire rx_resetdone_dclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rx_resetdone_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(D),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_14
   (signal_detect_coreclk,
    coreclk,
    signal_detect);
  output signal_detect_coreclk;
  input coreclk;
  input signal_detect;

  wire coreclk;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_15
   (signal_detect_dclk,
    dclk,
    signal_detect);
  output signal_detect_dclk;
  input dclk;
  input signal_detect;

  wire dclk;
  wire signal_detect;
  wire signal_detect_dclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_dclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_17
   (cable_pull_reset_reg,
    cable_pull_reset_rising_reg,
    coreclk,
    cable_pull_reset_reg_reg,
    cable_pull_reset);
  output cable_pull_reset_reg;
  output cable_pull_reset_rising_reg;
  input coreclk;
  input cable_pull_reset_reg_reg;
  input cable_pull_reset;

  wire cable_pull_reset;
  wire cable_pull_reset_reg;
  wire cable_pull_reset_reg_reg;
  wire cable_pull_reset_rising_reg;
  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h2)) 
    cable_pull_reset_rising_i_1
       (.I0(cable_pull_reset_reg),
        .I1(cable_pull_reset_reg_reg),
        .O(cable_pull_reset_rising_reg));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_reset_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_pull_reset),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_19
   (cable_unpull_reset_reg,
    cable_unpull_reset_rising_reg,
    coreclk,
    cable_unpull_reset_reg_reg,
    cable_unpull_reset_reg_0);
  output cable_unpull_reset_reg;
  output cable_unpull_reset_rising_reg;
  input coreclk;
  input cable_unpull_reset_reg_reg;
  input cable_unpull_reset_reg_0;

  wire cable_unpull_reset_reg;
  wire cable_unpull_reset_reg_0;
  wire cable_unpull_reset_reg_reg;
  wire cable_unpull_reset_rising_reg;
  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT2 #(
    .INIT(4'h2)) 
    cable_unpull_reset_rising_i_1
       (.I0(cable_unpull_reset_reg),
        .I1(cable_unpull_reset_reg_reg),
        .O(cable_unpull_reset_rising_reg));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_reg),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(cable_unpull_reset_reg_0),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_2
   (signal_detect_coreclk,
    coreclk,
    signal_detect);
  output signal_detect_coreclk;
  input coreclk;
  input signal_detect;

  wire coreclk;
  wire signal_detect;
  wire signal_detect_coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_3
   (signal_detect_comb_reg,
    gt0_rxbufreset_i_reg,
    cable_is_pulled,
    signal_detect);
  output signal_detect_comb_reg;
  input gt0_rxbufreset_i_reg;
  input cable_is_pulled;
  input signal_detect;

  wire cable_is_pulled;
  wire gt0_rxbufreset_i_reg;
  wire signal_detect;
  wire signal_detect_comb_reg;
  wire signal_detect_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(signal_detect_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    signal_detect_comb_i_1
       (.I0(signal_detect_rxusrclk2),
        .I1(cable_is_pulled),
        .O(signal_detect_comb_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .Q(sync1_r[4]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst
   (gtrxreset_coreclk,
    coreclk,
    gtrxreset);
  output gtrxreset_coreclk;
  input coreclk;
  input gtrxreset;

  wire coreclk;
  wire gtrxreset;
  wire gtrxreset_coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gtrxreset_coreclk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtrxreset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(gtrxreset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(gtrxreset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(gtrxreset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(gtrxreset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_10
   (gtrxreset_rxusrclk2,
    \sync1_r_reg[0]_0 ,
    \sync1_r_reg[0]_1 ,
    \sync1_r_reg[0]_2 ,
    \sync1_r_reg[0]_3 ,
    \sync1_r_reg[0]_4 ,
    clear,
    gt0_rxbufreset_i_reg,
    out,
    reset_counter_done,
    qplllock_rxusrclk2,
    data_out_reg_0);
  output gtrxreset_rxusrclk2;
  output \sync1_r_reg[0]_0 ;
  output \sync1_r_reg[0]_1 ;
  output \sync1_r_reg[0]_2 ;
  output \sync1_r_reg[0]_3 ;
  output \sync1_r_reg[0]_4 ;
  output clear;
  input gt0_rxbufreset_i_reg;
  input [28:0]out;
  input reset_counter_done;
  input qplllock_rxusrclk2;
  input [0:0]data_out_reg_0;

  wire clear;
  wire [0:0]data_out_reg_0;
  wire gt0_rxbufreset_i_reg;
  wire gtrxreset_rxusrclk2;
  wire [28:0]out;
  wire qplllock_rxusrclk2;
  wire reset_counter_done;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire \sync1_r_reg[0]_0 ;
  wire \sync1_r_reg[0]_1 ;
  wire \sync1_r_reg[0]_2 ;
  wire \sync1_r_reg[0]_3 ;
  wire \sync1_r_reg[0]_4 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(gtrxreset_rxusrclk2),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    gthe2_i_i_5
       (.I0(out[13]),
        .I1(out[14]),
        .I2(out[11]),
        .I3(out[12]),
        .I4(out[16]),
        .I5(out[15]),
        .O(\sync1_r_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    gthe2_i_i_6
       (.I0(out[7]),
        .I1(out[8]),
        .I2(out[5]),
        .I3(out[6]),
        .I4(out[10]),
        .I5(out[9]),
        .O(\sync1_r_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    gthe2_i_i_7
       (.I0(out[25]),
        .I1(out[26]),
        .I2(out[23]),
        .I3(out[24]),
        .I4(out[28]),
        .I5(out[27]),
        .O(\sync1_r_reg[0]_3 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    gthe2_i_i_8
       (.I0(out[19]),
        .I1(out[20]),
        .I2(out[17]),
        .I3(out[18]),
        .I4(out[22]),
        .I5(out[21]),
        .O(\sync1_r_reg[0]_4 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    gthe2_i_i_9
       (.I0(out[2]),
        .I1(out[3]),
        .I2(out[0]),
        .I3(out[1]),
        .I4(out[4]),
        .I5(reset_counter_done),
        .O(\sync1_r_reg[0]_2 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rxuserrdy_counter[0]_i_1 
       (.I0(gtrxreset_rxusrclk2),
        .I1(qplllock_rxusrclk2),
        .O(clear));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_11
   (pma_resetout_rising_rxusrclk2,
    gt0_rxbufreset_i_reg,
    pma_resetout,
    pma_resetout_reg);
  output pma_resetout_rising_rxusrclk2;
  input gt0_rxbufreset_i_reg;
  input pma_resetout;
  input pma_resetout_reg;

  wire gt0_rxbufreset_i_reg;
  wire pma_resetout;
  wire pma_resetout_reg;
  wire pma_resetout_rising;
  wire pma_resetout_rising_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(pma_resetout_rising_rxusrclk2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \sync1_r[4]_i_1__1 
       (.I0(pma_resetout),
        .I1(pma_resetout_reg),
        .O(pma_resetout_rising));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(pma_resetout_rising),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(pma_resetout_rising),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(pma_resetout_rising),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(pma_resetout_rising),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(pma_resetout_rising),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_12
   (rxreset_rxusrclk2,
    gt0_rxbufreset_i_reg,
    AS);
  output rxreset_rxusrclk2;
  input gt0_rxbufreset_i_reg;
  input [0:0]AS;

  wire [0:0]AS;
  wire gt0_rxbufreset_i_reg;
  wire rxreset_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(rxreset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_16
   (cable_pull_reset_rising_rxusrclk2,
    \cable_pull_watchdog_reg[0] ,
    cable_pull_reset_reg,
    CLK,
    cable_pull_watchdog_event,
    gt0_rxresetdone_i_reg_rxusrclk2,
    cable_unpull_enable_reg,
    cable_pull_reset,
    \cable_pull_watchdog_reg[2] ,
    \cable_pull_watchdog_reg[17] ,
    AS);
  output cable_pull_reset_rising_rxusrclk2;
  output \cable_pull_watchdog_reg[0] ;
  output cable_pull_reset_reg;
  input CLK;
  input [1:0]cable_pull_watchdog_event;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input cable_unpull_enable_reg;
  input cable_pull_reset;
  input \cable_pull_watchdog_reg[2] ;
  input \cable_pull_watchdog_reg[17] ;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire cable_pull_reset;
  wire cable_pull_reset_reg;
  wire cable_pull_reset_rising_rxusrclk2;
  wire [1:0]cable_pull_watchdog_event;
  wire \cable_pull_watchdog_reg[0] ;
  wire \cable_pull_watchdog_reg[17] ;
  wire \cable_pull_watchdog_reg[2] ;
  wire cable_unpull_enable_reg;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  LUT6 #(
    .INIT(64'h00000000AABAAAAA)) 
    cable_pull_reset_i_1
       (.I0(cable_pull_reset),
        .I1(cable_unpull_enable_reg),
        .I2(gt0_rxresetdone_i_reg_rxusrclk2),
        .I3(\cable_pull_watchdog_reg[2] ),
        .I4(\cable_pull_watchdog_reg[17] ),
        .I5(cable_pull_reset_rising_rxusrclk2),
        .O(cable_pull_reset_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \cable_pull_watchdog[0]_i_1 
       (.I0(cable_pull_reset_rising_rxusrclk2),
        .I1(cable_pull_watchdog_event[1]),
        .I2(cable_pull_watchdog_event[0]),
        .I3(gt0_rxresetdone_i_reg_rxusrclk2),
        .I4(cable_unpull_enable_reg),
        .I5(cable_pull_reset),
        .O(\cable_pull_watchdog_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_pull_reset_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_18
   (cable_unpull_reset_rising_rxusrclk2,
    \cable_unpull_watchdog_reg[0] ,
    SR,
    CLK,
    \cable_unpull_watchdog_reg[12] ,
    Q,
    cable_unpull_reset_reg,
    cable_unpull_enable_reg,
    gt0_rxresetdone_i_reg_rxusrclk2,
    AS);
  output cable_unpull_reset_rising_rxusrclk2;
  output \cable_unpull_watchdog_reg[0] ;
  output [0:0]SR;
  input CLK;
  input \cable_unpull_watchdog_reg[12] ;
  input [0:0]Q;
  input cable_unpull_reset_reg;
  input cable_unpull_enable_reg;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input [0:0]AS;

  wire [0:0]AS;
  wire CLK;
  wire [0:0]Q;
  wire [0:0]SR;
  wire cable_unpull_enable_reg;
  wire cable_unpull_reset_reg;
  wire cable_unpull_reset_rising_rxusrclk2;
  wire \cable_unpull_watchdog_reg[0] ;
  wire \cable_unpull_watchdog_reg[12] ;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAAAAAA)) 
    \cable_unpull_watchdog[0]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[12] ),
        .I2(Q),
        .I3(cable_unpull_reset_reg),
        .I4(cable_unpull_enable_reg),
        .I5(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(\cable_unpull_watchdog_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    \cable_unpull_watchdog_event[10]_i_1 
       (.I0(cable_unpull_reset_rising_rxusrclk2),
        .I1(\cable_unpull_watchdog_reg[12] ),
        .I2(cable_unpull_reset_reg),
        .I3(cable_unpull_enable_reg),
        .I4(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(cable_unpull_reset_rising_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_4
   (areset_rxusrclk2,
    gt0_rxbufreset_i_reg,
    areset);
  output areset_rxusrclk2;
  input gt0_rxbufreset_i_reg;
  input areset;

  wire areset;
  wire areset_rxusrclk2;
  wire gt0_rxbufreset_i_reg;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(areset_rxusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_5
   (AS,
    \sync1_r_reg[0]_0 ,
    coreclk,
    D,
    signal_detect_coreclk,
    tx_resetdone,
    areset);
  output [0:0]AS;
  output [0:0]\sync1_r_reg[0]_0 ;
  input coreclk;
  input [0:0]D;
  input signal_detect_coreclk;
  input tx_resetdone;
  input areset;

  wire [0:0]AS;
  wire [0:0]D;
  wire areset;
  wire coreclk;
  wire coreclk_areset;
  wire signal_detect_coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;
  wire tx_resetdone;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(coreclk_areset),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \sync1_r[4]_i_1__0 
       (.I0(D),
        .I1(coreclk_areset),
        .I2(signal_detect_coreclk),
        .O(AS));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \sync1_r[4]_i_1__3 
       (.I0(coreclk_areset),
        .I1(tx_resetdone),
        .O(\sync1_r_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_6
   (AS,
    coreclk,
    data_out_reg_0);
  output [0:0]AS;
  input coreclk;
  input [0:0]data_out_reg_0;

  wire [0:0]AS;
  wire coreclk;
  wire [0:0]data_out_reg_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_7
   (AS,
    coreclk,
    data_out_reg_0);
  output [0:0]AS;
  input coreclk;
  input [0:0]data_out_reg_0;

  wire [0:0]AS;
  wire coreclk;
  wire [0:0]data_out_reg_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(AS),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(data_out_reg_0),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(data_out_reg_0),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_8
   (AS,
    dclk,
    rx_resetdone_dclk,
    signal_detect_dclk,
    areset);
  output [0:0]AS;
  input dclk;
  input rx_resetdone_dclk;
  input signal_detect_dclk;
  input areset;

  wire [0:0]AS;
  wire areset;
  wire dclk;
  wire dclk_areset;
  wire rx_resetdone_dclk;
  wire signal_detect_dclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_areset),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hBF)) 
    \sync1_r[4]_i_1 
       (.I0(dclk_areset),
        .I1(rx_resetdone_dclk),
        .I2(signal_detect_dclk),
        .O(AS));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(areset),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(areset),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(areset),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(areset),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(areset),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_9
   (dclk_reset,
    dclk,
    AS);
  output dclk_reset;
  input dclk;
  input [0:0]AS;

  wire [0:0]AS;
  wire dclk;
  wire dclk_reset;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(dclk_reset),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized0
   (txreset_txusrclk2,
    txusrclk2,
    AS);
  output txreset_txusrclk2;
  input txusrclk2;
  input [0:0]AS;

  wire [0:0]AS;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [6:0]sync1_r;
  wire txreset_txusrclk2;
  wire txusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[6]),
        .Q(txreset_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[0]),
        .PRE(AS),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[1]),
        .PRE(AS),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[2]),
        .PRE(AS),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[3]),
        .PRE(AS),
        .Q(sync1_r[4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[4]),
        .PRE(AS),
        .Q(sync1_r[5]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \sync1_r_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[5]),
        .PRE(AS),
        .Q(sync1_r[6]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized1
   (gt0_gttxreset_i,
    \sync1_r_reg[0]_0 ,
    coreclk,
    gttxreset,
    reset_counter_done,
    pma_resetout_reg,
    pma_resetout,
    AR);
  output gt0_gttxreset_i;
  output \sync1_r_reg[0]_0 ;
  input coreclk;
  input gttxreset;
  input reset_counter_done;
  input pma_resetout_reg;
  input pma_resetout;
  input [0:0]AR;

  wire [0:0]AR;
  wire coreclk;
  wire gt0_gttxreset_i;
  wire gttxreset;
  wire pma_resetout;
  wire pma_resetout_reg;
  wire qplllock_coreclk;
  wire reset_counter_done;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire \sync1_r_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_coreclk),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    gthe2_i_i_10
       (.I0(pma_resetout_reg),
        .I1(pma_resetout),
        .I2(qplllock_coreclk),
        .O(\sync1_r_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT5 #(
    .INIT(32'h8C88CCCC)) 
    gthe2_i_i_2
       (.I0(gttxreset),
        .I1(reset_counter_done),
        .I2(pma_resetout_reg),
        .I3(pma_resetout),
        .I4(qplllock_coreclk),
        .O(gt0_gttxreset_i));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized2
   (qplllock_txusrclk2,
    txusrclk2,
    AR);
  output qplllock_txusrclk2;
  input txusrclk2;
  input [0:0]AR;

  wire [0:0]AR;
  wire qplllock_txusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;
  wire txusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_txusrclk2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized3
   (qplllock_rxusrclk2,
    AR,
    gt0_rxbufreset_i_reg,
    qplllock);
  output qplllock_rxusrclk2;
  output [0:0]AR;
  input gt0_rxbufreset_i_reg;
  input qplllock;

  wire [0:0]AR;
  wire gt0_rxbufreset_i_reg;
  wire qplllock;
  wire qplllock_rxusrclk2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]sync1_r;

  FDRE #(
    .INIT(1'b0)) 
    data_out_reg
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .D(sync1_r[4]),
        .Q(qplllock_rxusrclk2),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \sync1_r[4]_i_1__2 
       (.I0(qplllock),
        .O(AR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(1'b1),
        .Q(sync1_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[0]),
        .Q(sync1_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[1]),
        .Q(sync1_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[3] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[2]),
        .Q(sync1_r[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync1_r_reg[4] 
       (.C(gt0_rxbufreset_i_reg),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_r[3]),
        .Q(sync1_r[4]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_GT" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_GT
   (drp_drdy_o,
    txn,
    txp,
    rxoutclk,
    txoutclk,
    drp_drpdo_o,
    D,
    \gt_rxd_d1_reg[31] ,
    gt0_rxbufreset_i0,
    gt0_rxresetdone_reg_reg0,
    gt0_txresetdone_reg0,
    dclk,
    drp_den_i,
    drp_dwe_i,
    rxn,
    rxp,
    AS,
    gt0_gttxreset_i,
    qplloutclk,
    qplloutrefclk,
    gt0_rxbufreset_i,
    SS,
    gt0_clear_rx_prbs_err_count_i,
    gt0_rxuserrdy_i,
    gt0_rxbufreset_i_reg,
    tx_disable,
    txuserrdy,
    txusrclk,
    txusrclk2,
    drp_di_i,
    loopback_ctrl,
    RXPRBSSEL,
    gt_txc,
    TXPRBSSEL,
    gt_txd,
    drp_daddr_i,
    gt0_rxresetdone_i_reg_rxusrclk2,
    qplllock_rxusrclk2,
    qplllock_txusrclk2,
    pcs_resetout,
    pcs_resetout_reg);
  output drp_drdy_o;
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output [15:0]drp_drpdo_o;
  output [3:0]D;
  output [31:0]\gt_rxd_d1_reg[31] ;
  output gt0_rxbufreset_i0;
  output gt0_rxresetdone_reg_reg0;
  output gt0_txresetdone_reg0;
  input dclk;
  input drp_den_i;
  input drp_dwe_i;
  input rxn;
  input rxp;
  input [0:0]AS;
  input gt0_gttxreset_i;
  input qplloutclk;
  input qplloutrefclk;
  input gt0_rxbufreset_i;
  input [0:0]SS;
  input gt0_clear_rx_prbs_err_count_i;
  input gt0_rxuserrdy_i;
  input gt0_rxbufreset_i_reg;
  input tx_disable;
  input txuserrdy;
  input txusrclk;
  input txusrclk2;
  input [15:0]drp_di_i;
  input [2:0]loopback_ctrl;
  input [0:0]RXPRBSSEL;
  input [7:0]gt_txc;
  input [0:0]TXPRBSSEL;
  input [31:0]gt_txd;
  input [8:0]drp_daddr_i;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input qplllock_rxusrclk2;
  input qplllock_txusrclk2;
  input pcs_resetout;
  input pcs_resetout_reg;

  wire [0:0]AS;
  wire [3:0]D;
  wire [0:0]RXPRBSSEL;
  wire [0:0]SS;
  wire [0:0]TXPRBSSEL;
  wire dclk;
  wire [8:0]drp_daddr_i;
  wire drp_den_i;
  wire [15:0]drp_di_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire gt0_clear_rx_prbs_err_count_i;
  wire gt0_gttxreset_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire gt0_rxbufreset_i_reg;
  wire [2:2]gt0_rxbufstatus_i;
  wire gt0_rxresetdone_i;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_i;
  wire gt0_txresetdone_reg0;
  wire [31:0]\gt_rxd_d1_reg[31] ;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire gthe2_i_i_3_n_0;
  wire gthe2_i_n_112;
  wire gthe2_i_n_113;
  wire gthe2_i_n_115;
  wire gthe2_i_n_116;
  wire gthe2_i_n_33;
  wire gthe2_i_n_34;
  wire gthe2_i_n_4;
  wire gthe2_i_n_46;
  wire gthe2_i_n_47;
  wire gthe2_i_n_57;
  wire gthe2_i_n_58;
  wire gthe2_i_n_59;
  wire gthe2_i_n_60;
  wire gthe2_i_n_61;
  wire gthe2_i_n_62;
  wire gthe2_i_n_63;
  wire gthe2_i_n_64;
  wire gthe2_i_n_65;
  wire gthe2_i_n_66;
  wire gthe2_i_n_67;
  wire gthe2_i_n_68;
  wire gthe2_i_n_69;
  wire gthe2_i_n_70;
  wire gthe2_i_n_71;
  wire [2:0]loopback_ctrl;
  wire pcs_resetout;
  wire pcs_resetout_reg;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire tx_disable;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;
  wire NLW_gthe2_i_CPLLFBCLKLOST_UNCONNECTED;
  wire NLW_gthe2_i_CPLLLOCK_UNCONNECTED;
  wire NLW_gthe2_i_CPLLREFCLKLOST_UNCONNECTED;
  wire NLW_gthe2_i_GTREFCLKMONITOR_UNCONNECTED;
  wire NLW_gthe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gthe2_i_RSOSINTDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXBYTEISALIGNED_UNCONNECTED;
  wire NLW_gthe2_i_RXBYTEREALIGN_UNCONNECTED;
  wire NLW_gthe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gthe2_i_RXCHANBONDSEQ_UNCONNECTED;
  wire NLW_gthe2_i_RXCHANISALIGNED_UNCONNECTED;
  wire NLW_gthe2_i_RXCHANREALIGN_UNCONNECTED;
  wire NLW_gthe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gthe2_i_RXCOMMADET_UNCONNECTED;
  wire NLW_gthe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gthe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gthe2_i_RXDFESLIDETAPSTARTED_UNCONNECTED;
  wire NLW_gthe2_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED;
  wire NLW_gthe2_i_RXDFESTADAPTDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gthe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gthe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gthe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gthe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gthe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXQPISENN_UNCONNECTED;
  wire NLW_gthe2_i_RXQPISENP_UNCONNECTED;
  wire NLW_gthe2_i_RXRATEDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gthe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gthe2_i_RXVALID_UNCONNECTED;
  wire NLW_gthe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gthe2_i_TXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gthe2_i_TXPHALIGNDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXPHINITDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXPMARESETDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXQPISENN_UNCONNECTED;
  wire NLW_gthe2_i_TXQPISENP_UNCONNECTED;
  wire NLW_gthe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gthe2_i_TXSYNCOUT_UNCONNECTED;
  wire [15:0]NLW_gthe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [7:0]NLW_gthe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [7:0]NLW_gthe2_i_RXCHARISK_UNCONNECTED;
  wire [4:0]NLW_gthe2_i_RXCHBONDO_UNCONNECTED;
  wire [1:0]NLW_gthe2_i_RXCLKCORCNT_UNCONNECTED;
  wire [63:32]NLW_gthe2_i_RXDATA_UNCONNECTED;
  wire [1:1]NLW_gthe2_i_RXDATAVALID_UNCONNECTED;
  wire [7:0]NLW_gthe2_i_RXDISPERR_UNCONNECTED;
  wire [5:2]NLW_gthe2_i_RXHEADER_UNCONNECTED;
  wire [1:1]NLW_gthe2_i_RXHEADERVALID_UNCONNECTED;
  wire [6:0]NLW_gthe2_i_RXMONITOROUT_UNCONNECTED;
  wire [7:0]NLW_gthe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gthe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gthe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gthe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gthe2_i_RXSTATUS_UNCONNECTED;

  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxbufreset_i_i_1
       (.I0(gt0_rxbufstatus_i),
        .I1(gt0_rxresetdone_i_reg_rxusrclk2),
        .O(gt0_rxbufreset_i0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_rxresetdone_reg_i_1
       (.I0(gt0_rxresetdone_i),
        .I1(qplllock_rxusrclk2),
        .O(gt0_rxresetdone_reg_reg0));
  LUT2 #(
    .INIT(4'h8)) 
    gt0_txresetdone_reg_i_1
       (.I0(gt0_txresetdone_i),
        .I1(qplllock_txusrclk2),
        .O(gt0_txresetdone_reg0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTHE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'h00C10),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(42'h24800040E80),
    .CFOK_CFG2(6'b100000),
    .CFOK_CFG3(6'b100000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(15),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG(29'h00BC07DC),
    .CPLL_FBDIV(4),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG(24'h00001E),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("TRUE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b001),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_CPLLLOCKDETCLK_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_RSV(32'b00000000000000000000000010000000),
    .PMA_RSV2(32'b00011100000000000000000000001010),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(15'b000000000001000),
    .PMA_RSV5(4'b0000),
    .RESET_POWERSAVE_DISABLE(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0002007FE2000C208001A),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_HF_CFG(14'b00001000000000),
    .RXLPM_LF_CFG(18'b001001000000000000),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(2'b00),
    .RXPI_CFG1(2'b11),
    .RXPI_CFG2(2'b11),
    .RXPI_CFG3(2'b11),
    .RXPI_CFG4(1'b0),
    .RXPI_CFG5(1'b0),
    .RXPI_CFG6(3'b100),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(24'b000011000000000000010000),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_PD(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(32),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DFELPM_CFG0(4'b0110),
    .RX_DFELPM_CFG1(1'b0),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG0(2'b00),
    .RX_DFE_AGC_CFG1(3'b100),
    .RX_DFE_AGC_CFG2(4'b0000),
    .RX_DFE_AGC_OVRDEN(1'b1),
    .RX_DFE_GAIN_CFG(23'h0020C0),
    .RX_DFE_H2_CFG(12'b000000000000),
    .RX_DFE_H3_CFG(12'b000001000000),
    .RX_DFE_H4_CFG(11'b00011100000),
    .RX_DFE_H5_CFG(11'b00011100000),
    .RX_DFE_H6_CFG(11'b00000100000),
    .RX_DFE_H7_CFG(11'b00000100000),
    .RX_DFE_KL_CFG(33'b001000001000000000000001100010000),
    .RX_DFE_KL_LPM_KH_CFG0(2'b01),
    .RX_DFE_KL_LPM_KH_CFG1(3'b010),
    .RX_DFE_KL_LPM_KH_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KH_OVRDEN(1'b1),
    .RX_DFE_KL_LPM_KL_CFG0(2'b10),
    .RX_DFE_KL_LPM_KL_CFG1(3'b010),
    .RX_DFE_KL_LPM_KL_CFG2(4'b0010),
    .RX_DFE_KL_LPM_KL_OVRDEN(1'b1),
    .RX_DFE_LPM_CFG(16'h0080),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DFE_ST_CFG(54'h00E100000C003F),
    .RX_DFE_UT_CFG(17'b00011100000000000),
    .RX_DFE_VP_CFG(17'b00011101010100011),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_INT_DATAWIDTH(1),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_CPLLREFCLK_SEL(3'b001),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("TRUE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b100),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_PD(1'b1),
    .TX_DATA_WIDTH(32),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_INT_DATAWIDTH(1),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_QPI_STATUS_EN(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_PRECHARGE_TIME(17'h155CC),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXOUT"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gthe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(NLW_gthe2_i_CPLLFBCLKLOST_UNCONNECTED),
        .CPLLLOCK(NLW_gthe2_i_CPLLLOCK_UNCONNECTED),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b1),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(NLW_gthe2_i_CPLLREFCLKLOST_UNCONNECTED),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({gthe2_i_n_57,gthe2_i_n_58,gthe2_i_n_59,gthe2_i_n_60,gthe2_i_n_61,gthe2_i_n_62,gthe2_i_n_63,gthe2_i_n_64,gthe2_i_n_65,gthe2_i_n_66,gthe2_i_n_67,gthe2_i_n_68,gthe2_i_n_69,gthe2_i_n_70,gthe2_i_n_71}),
        .DRPADDR(drp_daddr_i),
        .DRPCLK(dclk),
        .DRPDI(drp_di_i),
        .DRPDO(drp_drpdo_o),
        .DRPEN(drp_den_i),
        .DRPRDY(drp_drdy_o),
        .DRPWE(drp_dwe_i),
        .EYESCANDATAERROR(gthe2_i_n_4),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .GTGREFCLK(1'b0),
        .GTHRXN(rxn),
        .GTHRXP(rxp),
        .GTHTXN(txn),
        .GTHTXP(txp),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTREFCLK0(1'b0),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(NLW_gthe2_i_GTREFCLKMONITOR_UNCONNECTED),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(AS),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(gt0_gttxreset_i),
        .LOOPBACK(loopback_ctrl),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDIN2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gthe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gthe2_i_PHYSTATUS_UNCONNECTED),
        .PMARSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLCLK(qplloutclk),
        .QPLLREFCLK(qplloutrefclk),
        .RESETOVRD(1'b0),
        .RSOSINTDONE(NLW_gthe2_i_RSOSINTDONE_UNCONNECTED),
        .RX8B10BEN(1'b0),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(gt0_rxbufreset_i),
        .RXBUFSTATUS({gt0_rxbufstatus_i,gthe2_i_n_115,gthe2_i_n_116}),
        .RXBYTEISALIGNED(NLW_gthe2_i_RXBYTEISALIGNED_UNCONNECTED),
        .RXBYTEREALIGN(NLW_gthe2_i_RXBYTEREALIGN_UNCONNECTED),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(NLW_gthe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(NLW_gthe2_i_RXCHANBONDSEQ_UNCONNECTED),
        .RXCHANISALIGNED(NLW_gthe2_i_RXCHANISALIGNED_UNCONNECTED),
        .RXCHANREALIGN(NLW_gthe2_i_RXCHANREALIGN_UNCONNECTED),
        .RXCHARISCOMMA(NLW_gthe2_i_RXCHARISCOMMA_UNCONNECTED[7:0]),
        .RXCHARISK(NLW_gthe2_i_RXCHARISK_UNCONNECTED[7:0]),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(NLW_gthe2_i_RXCHBONDO_UNCONNECTED[4:0]),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(NLW_gthe2_i_RXCLKCORCNT_UNCONNECTED[1:0]),
        .RXCOMINITDET(NLW_gthe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(NLW_gthe2_i_RXCOMMADET_UNCONNECTED),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(NLW_gthe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gthe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gthe2_i_RXDATA_UNCONNECTED[63:32],\gt_rxd_d1_reg[31] [0],\gt_rxd_d1_reg[31] [1],\gt_rxd_d1_reg[31] [2],\gt_rxd_d1_reg[31] [3],\gt_rxd_d1_reg[31] [4],\gt_rxd_d1_reg[31] [5],\gt_rxd_d1_reg[31] [6],\gt_rxd_d1_reg[31] [7],\gt_rxd_d1_reg[31] [8],\gt_rxd_d1_reg[31] [9],\gt_rxd_d1_reg[31] [10],\gt_rxd_d1_reg[31] [11],\gt_rxd_d1_reg[31] [12],\gt_rxd_d1_reg[31] [13],\gt_rxd_d1_reg[31] [14],\gt_rxd_d1_reg[31] [15],\gt_rxd_d1_reg[31] [16],\gt_rxd_d1_reg[31] [17],\gt_rxd_d1_reg[31] [18],\gt_rxd_d1_reg[31] [19],\gt_rxd_d1_reg[31] [20],\gt_rxd_d1_reg[31] [21],\gt_rxd_d1_reg[31] [22],\gt_rxd_d1_reg[31] [23],\gt_rxd_d1_reg[31] [24],\gt_rxd_d1_reg[31] [25],\gt_rxd_d1_reg[31] [26],\gt_rxd_d1_reg[31] [27],\gt_rxd_d1_reg[31] [28],\gt_rxd_d1_reg[31] [29],\gt_rxd_d1_reg[31] [30],\gt_rxd_d1_reg[31] [31]}),
        .RXDATAVALID({NLW_gthe2_i_RXDATAVALID_UNCONNECTED[1],D[2]}),
        .RXDDIEN(1'b0),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFEAGCTRL({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .RXDFECM1EN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFESLIDETAP({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPADAPTEN(1'b0),
        .RXDFESLIDETAPHOLD(1'b0),
        .RXDFESLIDETAPID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXDFESLIDETAPINITOVRDEN(1'b0),
        .RXDFESLIDETAPONLYADAPTEN(1'b0),
        .RXDFESLIDETAPOVRDEN(1'b0),
        .RXDFESLIDETAPSTARTED(NLW_gthe2_i_RXDFESLIDETAPSTARTED_UNCONNECTED),
        .RXDFESLIDETAPSTROBE(1'b0),
        .RXDFESLIDETAPSTROBEDONE(NLW_gthe2_i_RXDFESLIDETAPSTROBEDONE_UNCONNECTED),
        .RXDFESLIDETAPSTROBESTARTED(NLW_gthe2_i_RXDFESLIDETAPSTROBESTARTED_UNCONNECTED),
        .RXDFESTADAPTDONE(NLW_gthe2_i_RXDFESTADAPTDONE_UNCONNECTED),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEVSEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDISPERR(NLW_gthe2_i_RXDISPERR_UNCONNECTED[7:0]),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gthe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gthe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(SS),
        .RXHEADER({NLW_gthe2_i_RXHEADER_UNCONNECTED[5:2],D[0],D[1]}),
        .RXHEADERVALID({NLW_gthe2_i_RXHEADERVALID_UNCONNECTED[1],D[3]}),
        .RXLPMEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT(NLW_gthe2_i_RXMONITOROUT_UNCONNECTED[6:0]),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXNOTINTABLE(NLW_gthe2_i_RXNOTINTABLE_UNCONNECTED[7:0]),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b1,1'b1,1'b0}),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTSTARTED(NLW_gthe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gthe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gthe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk),
        .RXOUTCLKFABRIC(NLW_gthe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gthe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(gthe2_i_i_3_n_0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gthe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gthe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gthe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(gthe2_i_n_33),
        .RXPOLARITY(1'b0),
        .RXPRBSCNTRESET(gt0_clear_rx_prbs_err_count_i),
        .RXPRBSERR(gthe2_i_n_34),
        .RXPRBSSEL({RXPRBSSEL,1'b0,1'b0}),
        .RXQPIEN(1'b0),
        .RXQPISENN(NLW_gthe2_i_RXQPISENN_UNCONNECTED),
        .RXQPISENP(NLW_gthe2_i_RXQPISENP_UNCONNECTED),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(NLW_gthe2_i_RXRATEDONE_UNCONNECTED),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt0_rxresetdone_i),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gthe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gthe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gthe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gthe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b1,1'b1}),
        .RXUSERRDY(gt0_rxuserrdy_i),
        .RXUSRCLK(gt0_rxbufreset_i_reg),
        .RXUSRCLK2(gt0_rxbufreset_i_reg),
        .RXVALID(NLW_gthe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS({gthe2_i_n_112,gthe2_i_n_113}),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCOMFINISH(NLW_gthe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gt_txd[0],gt_txd[1],gt_txd[2],gt_txd[3],gt_txd[4],gt_txd[5],gt_txd[6],gt_txd[7],gt_txd[8],gt_txd[9],gt_txd[10],gt_txd[11],gt_txd[12],gt_txd[13],gt_txd[14],gt_txd[15],gt_txd[16],gt_txd[17],gt_txd[18],gt_txd[19],gt_txd[20],gt_txd[21],gt_txd[22],gt_txd[23],gt_txd[24],gt_txd[25],gt_txd[26],gt_txd[27],gt_txd[28],gt_txd[29],gt_txd[30],gt_txd[31]}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b1,1'b1,1'b1,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(NLW_gthe2_i_TXDLYSRESETDONE_UNCONNECTED),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXGEARBOXREADY(NLW_gthe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,gt_txc[0],gt_txc[1]}),
        .TXINHIBIT(tx_disable),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(txoutclk),
        .TXOUTCLKFABRIC(gthe2_i_n_46),
        .TXOUTCLKPCS(gthe2_i_n_47),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(gthe2_i_i_3_n_0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(NLW_gthe2_i_TXPHALIGNDONE_UNCONNECTED),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(NLW_gthe2_i_TXPHINITDONE_UNCONNECTED),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(NLW_gthe2_i_TXPMARESETDONE_UNCONNECTED),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({TXPRBSSEL,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSORINV(1'b0),
        .TXQPIBIASEN(1'b0),
        .TXQPISENN(NLW_gthe2_i_TXQPISENN_UNCONNECTED),
        .TXQPISENP(NLW_gthe2_i_TXQPISENP_UNCONNECTED),
        .TXQPISTRONGPDOWN(1'b0),
        .TXQPIWEAKPUP(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gthe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(gt0_txresetdone_i),
        .TXSEQUENCE({1'b0,gt_txc[7:2]}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gthe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gthe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b1,1'b1}),
        .TXUSERRDY(txuserrdy),
        .TXUSRCLK(txusrclk),
        .TXUSRCLK2(txusrclk2));
  LUT2 #(
    .INIT(4'h2)) 
    gthe2_i_i_3
       (.I0(pcs_resetout),
        .I1(pcs_resetout_reg),
        .O(gthe2_i_i_3_n_0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_multi_GT" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_multi_GT
   (drp_drdy_o,
    txn,
    txp,
    rxoutclk,
    txoutclk,
    drp_drpdo_o,
    D,
    \gt_rxd_d1_reg[31] ,
    gt0_rxbufreset_i0,
    gt0_rxresetdone_reg_reg0,
    gt0_txresetdone_reg0,
    dclk,
    drp_den_i,
    drp_dwe_i,
    rxn,
    rxp,
    AS,
    gt0_gttxreset_i,
    qplloutclk,
    qplloutrefclk,
    gt0_rxbufreset_i,
    SS,
    gt0_clear_rx_prbs_err_count_i,
    gt0_rxuserrdy_i,
    gt0_rxbufreset_i_reg,
    tx_disable,
    txuserrdy,
    txusrclk,
    txusrclk2,
    drp_di_i,
    loopback_ctrl,
    RXPRBSSEL,
    gt_txc,
    TXPRBSSEL,
    gt_txd,
    drp_daddr_i,
    gt0_rxresetdone_i_reg_rxusrclk2,
    qplllock_rxusrclk2,
    qplllock_txusrclk2,
    pcs_resetout,
    pcs_resetout_reg);
  output drp_drdy_o;
  output txn;
  output txp;
  output rxoutclk;
  output txoutclk;
  output [15:0]drp_drpdo_o;
  output [3:0]D;
  output [31:0]\gt_rxd_d1_reg[31] ;
  output gt0_rxbufreset_i0;
  output gt0_rxresetdone_reg_reg0;
  output gt0_txresetdone_reg0;
  input dclk;
  input drp_den_i;
  input drp_dwe_i;
  input rxn;
  input rxp;
  input [0:0]AS;
  input gt0_gttxreset_i;
  input qplloutclk;
  input qplloutrefclk;
  input gt0_rxbufreset_i;
  input [0:0]SS;
  input gt0_clear_rx_prbs_err_count_i;
  input gt0_rxuserrdy_i;
  input gt0_rxbufreset_i_reg;
  input tx_disable;
  input txuserrdy;
  input txusrclk;
  input txusrclk2;
  input [15:0]drp_di_i;
  input [2:0]loopback_ctrl;
  input [0:0]RXPRBSSEL;
  input [7:0]gt_txc;
  input [0:0]TXPRBSSEL;
  input [31:0]gt_txd;
  input [8:0]drp_daddr_i;
  input gt0_rxresetdone_i_reg_rxusrclk2;
  input qplllock_rxusrclk2;
  input qplllock_txusrclk2;
  input pcs_resetout;
  input pcs_resetout_reg;

  wire [0:0]AS;
  wire [3:0]D;
  wire [0:0]RXPRBSSEL;
  wire [0:0]SS;
  wire [0:0]TXPRBSSEL;
  wire dclk;
  wire [8:0]drp_daddr_i;
  wire drp_den_i;
  wire [15:0]drp_di_i;
  wire drp_drdy_o;
  wire [15:0]drp_drpdo_o;
  wire drp_dwe_i;
  wire gt0_clear_rx_prbs_err_count_i;
  wire gt0_gttxreset_i;
  wire gt0_rxbufreset_i;
  wire gt0_rxbufreset_i0;
  wire gt0_rxbufreset_i_reg;
  wire gt0_rxresetdone_i_reg_rxusrclk2;
  wire gt0_rxresetdone_reg_reg0;
  wire gt0_rxuserrdy_i;
  wire gt0_txresetdone_reg0;
  wire [31:0]\gt_rxd_d1_reg[31] ;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [2:0]loopback_ctrl;
  wire pcs_resetout;
  wire pcs_resetout_reg;
  wire qplllock_rxusrclk2;
  wire qplllock_txusrclk2;
  wire qplloutclk;
  wire qplloutrefclk;
  wire rxn;
  wire rxoutclk;
  wire rxp;
  wire tx_disable;
  wire txn;
  wire txoutclk;
  wire txp;
  wire txuserrdy;
  wire txusrclk;
  wire txusrclk2;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_gtwizard_gth_10gbaser_GT gt0_gtwizard_gth_10gbaser_i
       (.AS(AS),
        .D(D),
        .RXPRBSSEL(RXPRBSSEL),
        .SS(SS),
        .TXPRBSSEL(TXPRBSSEL),
        .dclk(dclk),
        .drp_daddr_i(drp_daddr_i),
        .drp_den_i(drp_den_i),
        .drp_di_i(drp_di_i),
        .drp_drdy_o(drp_drdy_o),
        .drp_drpdo_o(drp_drpdo_o),
        .drp_dwe_i(drp_dwe_i),
        .gt0_clear_rx_prbs_err_count_i(gt0_clear_rx_prbs_err_count_i),
        .gt0_gttxreset_i(gt0_gttxreset_i),
        .gt0_rxbufreset_i(gt0_rxbufreset_i),
        .gt0_rxbufreset_i0(gt0_rxbufreset_i0),
        .gt0_rxbufreset_i_reg(gt0_rxbufreset_i_reg),
        .gt0_rxresetdone_i_reg_rxusrclk2(gt0_rxresetdone_i_reg_rxusrclk2),
        .gt0_rxresetdone_reg_reg0(gt0_rxresetdone_reg_reg0),
        .gt0_rxuserrdy_i(gt0_rxuserrdy_i),
        .gt0_txresetdone_reg0(gt0_txresetdone_reg0),
        .\gt_rxd_d1_reg[31] (\gt_rxd_d1_reg[31] ),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(loopback_ctrl),
        .pcs_resetout(pcs_resetout),
        .pcs_resetout_reg(pcs_resetout_reg),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .qplllock_txusrclk2(qplllock_txusrclk2),
        .qplloutclk(qplloutclk),
        .qplloutrefclk(qplloutrefclk),
        .rxn(rxn),
        .rxoutclk(rxoutclk),
        .rxp(rxp),
        .tx_disable(tx_disable),
        .txn(txn),
        .txoutclk(txoutclk),
        .txp(txp),
        .txuserrdy(txuserrdy),
        .txusrclk(txusrclk),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_local_clock_and_reset" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_local_clock_and_reset
   (rxrecclk_out,
    AS,
    txreset_txusrclk2,
    dclk_reset,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    pma_resetout_rising_rxusrclk2,
    \sync1_r_reg[0] ,
    \sync1_r_reg[0]_0 ,
    \sync1_r_reg[0]_1 ,
    \sync1_r_reg[0]_2 ,
    \sync1_r_reg[0]_3 ,
    gt0_rxuserrdy_i,
    rxoutclk,
    sim_speedup_control,
    coreclk,
    dclk,
    txusrclk2,
    D,
    pma_resetout,
    pma_resetout_reg,
    out,
    reset_counter_done,
    qplllock_rxusrclk2,
    tx_resetdone,
    areset,
    signal_detect,
    data_out_reg);
  output rxrecclk_out;
  output [0:0]AS;
  output txreset_txusrclk2;
  output dclk_reset;
  output rxreset_rxusrclk2;
  output areset_rxusrclk2;
  output pma_resetout_rising_rxusrclk2;
  output \sync1_r_reg[0] ;
  output \sync1_r_reg[0]_0 ;
  output \sync1_r_reg[0]_1 ;
  output \sync1_r_reg[0]_2 ;
  output \sync1_r_reg[0]_3 ;
  output gt0_rxuserrdy_i;
  input rxoutclk;
  input sim_speedup_control;
  input coreclk;
  input dclk;
  input txusrclk2;
  input [0:0]D;
  input pma_resetout;
  input pma_resetout_reg;
  input [28:0]out;
  input reset_counter_done;
  input qplllock_rxusrclk2;
  input tx_resetdone;
  input areset;
  input signal_detect;
  input [0:0]data_out_reg;

  wire [0:0]AS;
  wire [0:0]D;
  wire areset;
  wire areset_rxusrclk2;
  wire coreclk;
  wire coreclk_areset_sync_i_n_1;
  wire coreclk_reset_rx_sync_i_n_0;
  wire coreclk_reset_rx_tmp;
  wire [0:0]data_out_reg;
  wire dclk;
  wire dclk_reset;
  wire dclk_reset_rx_tmp;
  wire gt0_rxuserrdy_i;
  wire gtrxreset_rxusrclk2;
  wire gtrxreset_rxusrclk2_sync_i_n_6;
  wire [28:0]out;
  wire pma_resetout;
  wire pma_resetout_reg;
  wire pma_resetout_rising_rxusrclk2;
  wire qplllock_rxusrclk2;
  wire reset_counter_done;
  wire rx_resetdone_dclk;
  wire rxoutclk;
  wire rxrecclk_out;
  wire rxreset_rxusrclk2;
  wire \rxuserrdy_counter[0]_i_4_n_0 ;
  wire \rxuserrdy_counter[0]_i_5_n_0 ;
  wire \rxuserrdy_counter[0]_i_6_n_0 ;
  wire \rxuserrdy_counter[0]_i_7_n_0 ;
  wire \rxuserrdy_counter[12]_i_2_n_0 ;
  wire \rxuserrdy_counter[12]_i_3_n_0 ;
  wire \rxuserrdy_counter[12]_i_4_n_0 ;
  wire \rxuserrdy_counter[12]_i_5_n_0 ;
  wire \rxuserrdy_counter[16]_i_2_n_0 ;
  wire \rxuserrdy_counter[16]_i_3_n_0 ;
  wire \rxuserrdy_counter[16]_i_4_n_0 ;
  wire \rxuserrdy_counter[16]_i_5_n_0 ;
  wire \rxuserrdy_counter[20]_i_2_n_0 ;
  wire \rxuserrdy_counter[20]_i_3_n_0 ;
  wire \rxuserrdy_counter[20]_i_4_n_0 ;
  wire \rxuserrdy_counter[20]_i_5_n_0 ;
  wire \rxuserrdy_counter[4]_i_2_n_0 ;
  wire \rxuserrdy_counter[4]_i_3_n_0 ;
  wire \rxuserrdy_counter[4]_i_4_n_0 ;
  wire \rxuserrdy_counter[4]_i_5_n_0 ;
  wire \rxuserrdy_counter[8]_i_2_n_0 ;
  wire \rxuserrdy_counter[8]_i_3_n_0 ;
  wire \rxuserrdy_counter[8]_i_4_n_0 ;
  wire \rxuserrdy_counter[8]_i_5_n_0 ;
  wire [23:0]rxuserrdy_counter_reg;
  wire \rxuserrdy_counter_reg[0]_i_3_n_0 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_1 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_2 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_3 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_4 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_5 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_6 ;
  wire \rxuserrdy_counter_reg[0]_i_3_n_7 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[12]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[16]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[20]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[4]_i_1_n_7 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_0 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_1 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_2 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_3 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_4 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_5 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_6 ;
  wire \rxuserrdy_counter_reg[8]_i_1_n_7 ;
  wire rxuserrdy_i_1_n_0;
  wire rxuserrdy_i_4_n_0;
  wire sel;
  wire signal_detect;
  wire signal_detect_coreclk;
  wire signal_detect_dclk;
  wire sim_speedup_control;
  wire sim_speedup_controller_inst_n_0;
  wire \sync1_r_reg[0] ;
  wire \sync1_r_reg[0]_0 ;
  wire \sync1_r_reg[0]_1 ;
  wire \sync1_r_reg[0]_2 ;
  wire \sync1_r_reg[0]_3 ;
  wire tx_resetdone;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [3:3]\NLW_rxuserrdy_counter_reg[20]_i_1_CO_UNCONNECTED ;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_4 areset_rxusrclk2_sync_i
       (.areset(areset),
        .areset_rxusrclk2(areset_rxusrclk2),
        .gt0_rxbufreset_i_reg(rxrecclk_out));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_5 coreclk_areset_sync_i
       (.AS(coreclk_reset_rx_tmp),
        .D(D),
        .areset(areset),
        .coreclk(coreclk),
        .signal_detect_coreclk(signal_detect_coreclk),
        .\sync1_r_reg[0]_0 (coreclk_areset_sync_i_n_1),
        .tx_resetdone(tx_resetdone));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_6 coreclk_reset_rx_sync_i
       (.AS(coreclk_reset_rx_sync_i_n_0),
        .coreclk(coreclk),
        .data_out_reg_0(coreclk_reset_rx_tmp));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_7 coreclk_reset_tx_sync_i
       (.AS(AS),
        .coreclk(coreclk),
        .data_out_reg_0(coreclk_areset_sync_i_n_1));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_8 dclk_areset_sync_i
       (.AS(dclk_reset_rx_tmp),
        .areset(areset),
        .dclk(dclk),
        .rx_resetdone_dclk(rx_resetdone_dclk),
        .signal_detect_dclk(signal_detect_dclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_9 dclk_reset_rx_sync_i
       (.AS(dclk_reset_rx_tmp),
        .dclk(dclk),
        .dclk_reset(dclk_reset));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_10 gtrxreset_rxusrclk2_sync_i
       (.clear(gtrxreset_rxusrclk2_sync_i_n_6),
        .data_out_reg_0(data_out_reg),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .gtrxreset_rxusrclk2(gtrxreset_rxusrclk2),
        .out(out),
        .qplllock_rxusrclk2(qplllock_rxusrclk2),
        .reset_counter_done(reset_counter_done),
        .\sync1_r_reg[0]_0 (\sync1_r_reg[0] ),
        .\sync1_r_reg[0]_1 (\sync1_r_reg[0]_0 ),
        .\sync1_r_reg[0]_2 (\sync1_r_reg[0]_1 ),
        .\sync1_r_reg[0]_3 (\sync1_r_reg[0]_2 ),
        .\sync1_r_reg[0]_4 (\sync1_r_reg[0]_3 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_11 pma_resetout_rising_rxusrclk2_sync_i
       (.gt0_rxbufreset_i_reg(rxrecclk_out),
        .pma_resetout(pma_resetout),
        .pma_resetout_reg(pma_resetout_reg),
        .pma_resetout_rising_rxusrclk2(pma_resetout_rising_rxusrclk2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFH rxoutclk_bufh_i
       (.I(rxoutclk),
        .O(rxrecclk_out));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst_12 rxreset_rxusrclk2_sync_i
       (.AS(coreclk_reset_rx_sync_i_n_0),
        .gt0_rxbufreset_i_reg(rxrecclk_out),
        .rxreset_rxusrclk2(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_13 rxresetdone_dclk_sync_i
       (.D(D),
        .dclk(dclk),
        .rx_resetdone_dclk(rx_resetdone_dclk));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[0]_i_4 
       (.I0(rxuserrdy_counter_reg[3]),
        .O(\rxuserrdy_counter[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[0]_i_5 
       (.I0(rxuserrdy_counter_reg[2]),
        .O(\rxuserrdy_counter[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[0]_i_6 
       (.I0(rxuserrdy_counter_reg[1]),
        .O(\rxuserrdy_counter[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rxuserrdy_counter[0]_i_7 
       (.I0(rxuserrdy_counter_reg[0]),
        .O(\rxuserrdy_counter[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[12]_i_2 
       (.I0(rxuserrdy_counter_reg[15]),
        .O(\rxuserrdy_counter[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[12]_i_3 
       (.I0(rxuserrdy_counter_reg[14]),
        .O(\rxuserrdy_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[12]_i_4 
       (.I0(rxuserrdy_counter_reg[13]),
        .O(\rxuserrdy_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[12]_i_5 
       (.I0(rxuserrdy_counter_reg[12]),
        .O(\rxuserrdy_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[16]_i_2 
       (.I0(rxuserrdy_counter_reg[19]),
        .O(\rxuserrdy_counter[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[16]_i_3 
       (.I0(rxuserrdy_counter_reg[18]),
        .O(\rxuserrdy_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[16]_i_4 
       (.I0(rxuserrdy_counter_reg[17]),
        .O(\rxuserrdy_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[16]_i_5 
       (.I0(rxuserrdy_counter_reg[16]),
        .O(\rxuserrdy_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[20]_i_2 
       (.I0(rxuserrdy_counter_reg[23]),
        .O(\rxuserrdy_counter[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[20]_i_3 
       (.I0(rxuserrdy_counter_reg[22]),
        .O(\rxuserrdy_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[20]_i_4 
       (.I0(rxuserrdy_counter_reg[21]),
        .O(\rxuserrdy_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[20]_i_5 
       (.I0(rxuserrdy_counter_reg[20]),
        .O(\rxuserrdy_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[4]_i_2 
       (.I0(rxuserrdy_counter_reg[7]),
        .O(\rxuserrdy_counter[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[4]_i_3 
       (.I0(rxuserrdy_counter_reg[6]),
        .O(\rxuserrdy_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[4]_i_4 
       (.I0(rxuserrdy_counter_reg[5]),
        .O(\rxuserrdy_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[4]_i_5 
       (.I0(rxuserrdy_counter_reg[4]),
        .O(\rxuserrdy_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[8]_i_2 
       (.I0(rxuserrdy_counter_reg[11]),
        .O(\rxuserrdy_counter[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[8]_i_3 
       (.I0(rxuserrdy_counter_reg[10]),
        .O(\rxuserrdy_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[8]_i_4 
       (.I0(rxuserrdy_counter_reg[9]),
        .O(\rxuserrdy_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \rxuserrdy_counter[8]_i_5 
       (.I0(rxuserrdy_counter_reg[8]),
        .O(\rxuserrdy_counter[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[0] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_3_n_7 ),
        .Q(rxuserrdy_counter_reg[0]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\rxuserrdy_counter_reg[0]_i_3_n_0 ,\rxuserrdy_counter_reg[0]_i_3_n_1 ,\rxuserrdy_counter_reg[0]_i_3_n_2 ,\rxuserrdy_counter_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\rxuserrdy_counter_reg[0]_i_3_n_4 ,\rxuserrdy_counter_reg[0]_i_3_n_5 ,\rxuserrdy_counter_reg[0]_i_3_n_6 ,\rxuserrdy_counter_reg[0]_i_3_n_7 }),
        .S({\rxuserrdy_counter[0]_i_4_n_0 ,\rxuserrdy_counter[0]_i_5_n_0 ,\rxuserrdy_counter[0]_i_6_n_0 ,\rxuserrdy_counter[0]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[10] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[10]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[11] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[11]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[12] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[12]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[12]_i_1 
       (.CI(\rxuserrdy_counter_reg[8]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[12]_i_1_n_0 ,\rxuserrdy_counter_reg[12]_i_1_n_1 ,\rxuserrdy_counter_reg[12]_i_1_n_2 ,\rxuserrdy_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[12]_i_1_n_4 ,\rxuserrdy_counter_reg[12]_i_1_n_5 ,\rxuserrdy_counter_reg[12]_i_1_n_6 ,\rxuserrdy_counter_reg[12]_i_1_n_7 }),
        .S({\rxuserrdy_counter[12]_i_2_n_0 ,\rxuserrdy_counter[12]_i_3_n_0 ,\rxuserrdy_counter[12]_i_4_n_0 ,\rxuserrdy_counter[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[13] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[13]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[14] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[14]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[15] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[12]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[15]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[16] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[16]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[16]_i_1 
       (.CI(\rxuserrdy_counter_reg[12]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[16]_i_1_n_0 ,\rxuserrdy_counter_reg[16]_i_1_n_1 ,\rxuserrdy_counter_reg[16]_i_1_n_2 ,\rxuserrdy_counter_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[16]_i_1_n_4 ,\rxuserrdy_counter_reg[16]_i_1_n_5 ,\rxuserrdy_counter_reg[16]_i_1_n_6 ,\rxuserrdy_counter_reg[16]_i_1_n_7 }),
        .S({\rxuserrdy_counter[16]_i_2_n_0 ,\rxuserrdy_counter[16]_i_3_n_0 ,\rxuserrdy_counter[16]_i_4_n_0 ,\rxuserrdy_counter[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[17] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[17]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[18] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[18]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[19] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[16]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[19]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[1] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_3_n_6 ),
        .Q(rxuserrdy_counter_reg[1]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[20] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[20]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[20]_i_1 
       (.CI(\rxuserrdy_counter_reg[16]_i_1_n_0 ),
        .CO({\NLW_rxuserrdy_counter_reg[20]_i_1_CO_UNCONNECTED [3],\rxuserrdy_counter_reg[20]_i_1_n_1 ,\rxuserrdy_counter_reg[20]_i_1_n_2 ,\rxuserrdy_counter_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[20]_i_1_n_4 ,\rxuserrdy_counter_reg[20]_i_1_n_5 ,\rxuserrdy_counter_reg[20]_i_1_n_6 ,\rxuserrdy_counter_reg[20]_i_1_n_7 }),
        .S({\rxuserrdy_counter[20]_i_2_n_0 ,\rxuserrdy_counter[20]_i_3_n_0 ,\rxuserrdy_counter[20]_i_4_n_0 ,\rxuserrdy_counter[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[21] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[21]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[22] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[22]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[23] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[20]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[23]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[2] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_3_n_5 ),
        .Q(rxuserrdy_counter_reg[2]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[3] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[0]_i_3_n_4 ),
        .Q(rxuserrdy_counter_reg[3]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[4] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[4]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[4]_i_1 
       (.CI(\rxuserrdy_counter_reg[0]_i_3_n_0 ),
        .CO({\rxuserrdy_counter_reg[4]_i_1_n_0 ,\rxuserrdy_counter_reg[4]_i_1_n_1 ,\rxuserrdy_counter_reg[4]_i_1_n_2 ,\rxuserrdy_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[4]_i_1_n_4 ,\rxuserrdy_counter_reg[4]_i_1_n_5 ,\rxuserrdy_counter_reg[4]_i_1_n_6 ,\rxuserrdy_counter_reg[4]_i_1_n_7 }),
        .S({\rxuserrdy_counter[4]_i_2_n_0 ,\rxuserrdy_counter[4]_i_3_n_0 ,\rxuserrdy_counter[4]_i_4_n_0 ,\rxuserrdy_counter[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[5] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[5]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[6] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_5 ),
        .Q(rxuserrdy_counter_reg[6]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[7] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[4]_i_1_n_4 ),
        .Q(rxuserrdy_counter_reg[7]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[8] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_7 ),
        .Q(rxuserrdy_counter_reg[8]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  CARRY4 \rxuserrdy_counter_reg[8]_i_1 
       (.CI(\rxuserrdy_counter_reg[4]_i_1_n_0 ),
        .CO({\rxuserrdy_counter_reg[8]_i_1_n_0 ,\rxuserrdy_counter_reg[8]_i_1_n_1 ,\rxuserrdy_counter_reg[8]_i_1_n_2 ,\rxuserrdy_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\rxuserrdy_counter_reg[8]_i_1_n_4 ,\rxuserrdy_counter_reg[8]_i_1_n_5 ,\rxuserrdy_counter_reg[8]_i_1_n_6 ,\rxuserrdy_counter_reg[8]_i_1_n_7 }),
        .S({\rxuserrdy_counter[8]_i_2_n_0 ,\rxuserrdy_counter[8]_i_3_n_0 ,\rxuserrdy_counter[8]_i_4_n_0 ,\rxuserrdy_counter[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \rxuserrdy_counter_reg[9] 
       (.C(rxrecclk_out),
        .CE(sel),
        .D(\rxuserrdy_counter_reg[8]_i_1_n_6 ),
        .Q(rxuserrdy_counter_reg[9]),
        .R(gtrxreset_rxusrclk2_sync_i_n_6));
  LUT3 #(
    .INIT(8'h0E)) 
    rxuserrdy_i_1
       (.I0(gt0_rxuserrdy_i),
        .I1(sim_speedup_controller_inst_n_0),
        .I2(gtrxreset_rxusrclk2),
        .O(rxuserrdy_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    rxuserrdy_i_4
       (.I0(rxuserrdy_counter_reg[23]),
        .I1(rxuserrdy_counter_reg[22]),
        .I2(rxuserrdy_counter_reg[21]),
        .O(rxuserrdy_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_reg
       (.C(rxrecclk_out),
        .CE(1'b1),
        .D(rxuserrdy_i_1_n_0),
        .Q(gt0_rxuserrdy_i),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_14 signal_detect_coreclk_sync_i
       (.coreclk(coreclk),
        .signal_detect(signal_detect),
        .signal_detect_coreclk(signal_detect_coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_15 signal_detect_dclk_sync_i
       (.dclk(dclk),
        .signal_detect(signal_detect),
        .signal_detect_dclk(signal_detect_dclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_sim_speedup_controller sim_speedup_controller_inst
       (.CO(sim_speedup_controller_inst_n_0),
        .S(rxuserrdy_i_4_n_0),
        .coreclk(coreclk),
        .out(rxuserrdy_counter_reg[20:0]),
        .sel(sel),
        .sim_speedup_control(sim_speedup_control));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_ff_synchronizer_rst__parameterized0 txreset_txusrclk2_sync_i
       (.AS(AS),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_ip_sim_speedup_controller" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_ip_sim_speedup_controller
   (CO,
    sel,
    sim_speedup_control,
    coreclk,
    S,
    out);
  output [0:0]CO;
  output sel;
  input sim_speedup_control;
  input coreclk;
  input [0:0]S;
  input [20:0]out;

  wire [0:0]CO;
  wire [0:0]S;
  wire control_reg;
  wire control_reg1;
  wire control_rising;
  wire control_rising_i_1_n_0;
  wire coreclk;
  wire load_sim_speedup_value;
  wire load_sim_value_control;
  wire load_sim_value_control_del;
  wire [20:0]out;
  wire rxuserrdy_i_10_n_0;
  wire rxuserrdy_i_11_n_0;
  wire rxuserrdy_i_5_n_0;
  wire rxuserrdy_i_6_n_0;
  wire rxuserrdy_i_7_n_0;
  wire rxuserrdy_i_8_n_0;
  wire rxuserrdy_i_9_n_0;
  wire rxuserrdy_reg_i_2_n_1;
  wire rxuserrdy_reg_i_2_n_2;
  wire rxuserrdy_reg_i_2_n_3;
  wire rxuserrdy_reg_i_3_n_0;
  wire rxuserrdy_reg_i_3_n_1;
  wire rxuserrdy_reg_i_3_n_2;
  wire rxuserrdy_reg_i_3_n_3;
  wire sel;
  wire sim_speedup_control;
  wire [3:0]NLW_rxuserrdy_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_rxuserrdy_reg_i_3_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b1)) 
    control_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(control_reg),
        .Q(control_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    control_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(sim_speedup_control),
        .Q(control_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    control_rising_i_1
       (.I0(control_reg),
        .I1(control_reg1),
        .O(control_rising_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    control_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(control_rising_i_1_n_0),
        .Q(control_rising),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  LDCE #(
    .INIT(1'b0),
    .IS_CLR_INVERTED(1'b0),
    .IS_G_INVERTED(1'b0)) 
    load_sim_speedup_value_reg
       (.CLR(1'b0),
        .D(load_sim_value_control_del),
        .G(load_sim_value_control),
        .GE(1'b1),
        .Q(load_sim_speedup_value));
  LUT1 #(
    .INIT(2'h1)) 
    \rxuserrdy_counter[0]_i_2 
       (.I0(CO),
        .O(sel));
  LUT4 #(
    .INIT(16'h0810)) 
    rxuserrdy_i_10
       (.I0(out[3]),
        .I1(load_sim_speedup_value),
        .I2(out[5]),
        .I3(out[4]),
        .O(rxuserrdy_i_10_n_0));
  LUT4 #(
    .INIT(16'h1800)) 
    rxuserrdy_i_11
       (.I0(out[0]),
        .I1(load_sim_speedup_value),
        .I2(out[2]),
        .I3(out[1]),
        .O(rxuserrdy_i_11_n_0));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_i_5
       (.I0(out[19]),
        .I1(load_sim_speedup_value),
        .I2(out[20]),
        .I3(out[18]),
        .O(rxuserrdy_i_5_n_0));
  LUT4 #(
    .INIT(16'h0210)) 
    rxuserrdy_i_6
       (.I0(out[15]),
        .I1(out[17]),
        .I2(load_sim_speedup_value),
        .I3(out[16]),
        .O(rxuserrdy_i_6_n_0));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_i_7
       (.I0(out[14]),
        .I1(load_sim_speedup_value),
        .I2(out[13]),
        .I3(out[12]),
        .O(rxuserrdy_i_7_n_0));
  LUT4 #(
    .INIT(16'h0900)) 
    rxuserrdy_i_8
       (.I0(out[9]),
        .I1(load_sim_speedup_value),
        .I2(out[11]),
        .I3(out[10]),
        .O(rxuserrdy_i_8_n_0));
  LUT4 #(
    .INIT(16'h0014)) 
    rxuserrdy_i_9
       (.I0(out[8]),
        .I1(load_sim_speedup_value),
        .I2(out[7]),
        .I3(out[6]),
        .O(rxuserrdy_i_9_n_0));
  CARRY4 rxuserrdy_reg_i_2
       (.CI(rxuserrdy_reg_i_3_n_0),
        .CO({CO,rxuserrdy_reg_i_2_n_1,rxuserrdy_reg_i_2_n_2,rxuserrdy_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rxuserrdy_reg_i_2_O_UNCONNECTED[3:0]),
        .S({S,rxuserrdy_i_5_n_0,rxuserrdy_i_6_n_0,rxuserrdy_i_7_n_0}));
  CARRY4 rxuserrdy_reg_i_3
       (.CI(1'b0),
        .CO({rxuserrdy_reg_i_3_n_0,rxuserrdy_reg_i_3_n_1,rxuserrdy_reg_i_3_n_2,rxuserrdy_reg_i_3_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_rxuserrdy_reg_i_3_O_UNCONNECTED[3:0]),
        .S({rxuserrdy_i_8_n_0,rxuserrdy_i_9_n_0,rxuserrdy_i_10_n_0,rxuserrdy_i_11_n_0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT1 #(
    .INIT(2'h2)) 
    simple_delay_inst
       (.I0(load_sim_value_control),
        .O(load_sim_value_control_del));
  LUT2 #(
    .INIT(4'h8)) 
    simple_delay_inst_i_1
       (.I0(control_rising),
        .I1(sim_speedup_control),
        .O(load_sim_value_control));
endmodule

(* C_1588 = "0" *) (* C_DP_WIDTH = "64" *) (* C_GTIF_WIDTH = "32" *) 
(* C_GTTYPE = "1" *) (* C_HAS_AN = "1'b0" *) (* C_HAS_FEC = "1'b0" *) 
(* C_HAS_MDIO = "1'b1" *) (* C_IS_32BIT = "1'b0" *) (* C_IS_KR = "1'b0" *) 
(* C_NO_EBUFF = "1'b0" *) (* C_REFCLKRATE = "156" *) (* C_SPEED10_25 = "10" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3
   (reset,
    areset_coreclk,
    txreset_txusrclk2,
    rxreset_rxusrclk2,
    areset_rxusrclk2,
    dclk_reset,
    lfreset,
    pma_resetout,
    pcs_resetout,
    coreclk,
    txusrclk2,
    rxusrclk2,
    dclk,
    fr_clk,
    sim_speedup_control,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    prtad,
    pma_pmd_type,
    configuration_vector,
    status_vector,
    core_status,
    resetdone,
    gt_txd,
    gt_txc,
    gt_rxd,
    gt_rxc,
    gt_slip,
    drp_req,
    drp_gnt,
    drp_den,
    drp_dwe,
    drp_daddr,
    drp_di,
    drp_drdy,
    drp_drpdo,
    signal_detect,
    tx_fault,
    tx_disable,
    is_eval,
    gt_progdiv_reset,
    tx_prbs31_en,
    rx_prbs31_en,
    core_in_testmode,
    clear_rx_prbs_err_count,
    loopback_ctrl,
    an_enable,
    coeff_minus_1,
    coeff_plus_1,
    coeff_zero,
    txdiffctrl,
    training_enable,
    training_addr,
    training_rnw,
    training_wrdata,
    training_ipif_cs,
    training_drp_cs,
    training_rddata,
    training_rdack,
    training_wrack,
    systemtimer_s_field,
    systemtimer_ns_field,
    correction_timer,
    rxphy_s_field,
    rxphy_ns_field,
    rxphy_correction_timer,
    txphy_async_gb_latency,
    gt_rxstartofseq,
    gt_latclk);
  input reset;
  input areset_coreclk;
  input txreset_txusrclk2;
  input rxreset_rxusrclk2;
  input areset_rxusrclk2;
  input dclk_reset;
  input lfreset;
  output pma_resetout;
  output pcs_resetout;
  input coreclk;
  input txusrclk2;
  input rxusrclk2;
  input dclk;
  input fr_clk;
  input sim_speedup_control;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [4:0]prtad;
  input [2:0]pma_pmd_type;
  input [535:0]configuration_vector;
  output [447:0]status_vector;
  output [7:0]core_status;
  input resetdone;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  input [31:0]gt_rxd;
  input [7:0]gt_rxc;
  output gt_slip;
  output drp_req;
  input drp_gnt;
  output drp_den;
  output drp_dwe;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  input drp_drdy;
  input [15:0]drp_drpdo;
  input signal_detect;
  input tx_fault;
  output tx_disable;
  output is_eval;
  output gt_progdiv_reset;
  output tx_prbs31_en;
  output rx_prbs31_en;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [2:0]loopback_ctrl;
  input an_enable;
  output [4:0]coeff_minus_1;
  output [4:0]coeff_plus_1;
  output [6:0]coeff_zero;
  output [4:0]txdiffctrl;
  input training_enable;
  input [20:0]training_addr;
  input training_rnw;
  input [15:0]training_wrdata;
  input training_ipif_cs;
  input training_drp_cs;
  output [15:0]training_rddata;
  output training_rdack;
  output training_wrack;
  input [47:0]systemtimer_s_field;
  input [31:0]systemtimer_ns_field;
  input [63:0]correction_timer;
  output [47:0]rxphy_s_field;
  output [35:0]rxphy_ns_field;
  output [63:0]rxphy_correction_timer;
  output [15:0]txphy_async_gb_latency;
  input gt_rxstartofseq;
  input gt_latclk;

  wire \<const0> ;
  wire areset_coreclk;
  wire areset_rxusrclk2;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]\^core_status ;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire fr_clk;
  wire gt_latclk;
  wire [7:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [1:1]\^loopback_ctrl ;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire pcs_resetout;
  wire [2:0]pma_pmd_type;
  wire pma_resetout;
  wire [4:0]prtad;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire sim_speedup_control;
  wire tx_disable;
  wire tx_fault;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign coeff_minus_1[4] = \<const0> ;
  assign coeff_minus_1[3] = \<const0> ;
  assign coeff_minus_1[2] = \<const0> ;
  assign coeff_minus_1[1] = \<const0> ;
  assign coeff_minus_1[0] = \<const0> ;
  assign coeff_plus_1[4] = \<const0> ;
  assign coeff_plus_1[3] = \<const0> ;
  assign coeff_plus_1[2] = \<const0> ;
  assign coeff_plus_1[1] = \<const0> ;
  assign coeff_plus_1[0] = \<const0> ;
  assign coeff_zero[6] = \<const0> ;
  assign coeff_zero[5] = \<const0> ;
  assign coeff_zero[4] = \<const0> ;
  assign coeff_zero[3] = \<const0> ;
  assign coeff_zero[2] = \<const0> ;
  assign coeff_zero[1] = \<const0> ;
  assign coeff_zero[0] = \<const0> ;
  assign core_status[7] = \<const0> ;
  assign core_status[6] = \<const0> ;
  assign core_status[5] = \<const0> ;
  assign core_status[4] = \<const0> ;
  assign core_status[3] = \<const0> ;
  assign core_status[2] = \<const0> ;
  assign core_status[1] = \<const0> ;
  assign core_status[0] = \^core_status [0];
  assign gt_progdiv_reset = \<const0> ;
  assign is_eval = \<const0> ;
  assign loopback_ctrl[2] = \<const0> ;
  assign loopback_ctrl[1] = \^loopback_ctrl [1];
  assign loopback_ctrl[0] = \<const0> ;
  assign rxphy_correction_timer[63] = \<const0> ;
  assign rxphy_correction_timer[62] = \<const0> ;
  assign rxphy_correction_timer[61] = \<const0> ;
  assign rxphy_correction_timer[60] = \<const0> ;
  assign rxphy_correction_timer[59] = \<const0> ;
  assign rxphy_correction_timer[58] = \<const0> ;
  assign rxphy_correction_timer[57] = \<const0> ;
  assign rxphy_correction_timer[56] = \<const0> ;
  assign rxphy_correction_timer[55] = \<const0> ;
  assign rxphy_correction_timer[54] = \<const0> ;
  assign rxphy_correction_timer[53] = \<const0> ;
  assign rxphy_correction_timer[52] = \<const0> ;
  assign rxphy_correction_timer[51] = \<const0> ;
  assign rxphy_correction_timer[50] = \<const0> ;
  assign rxphy_correction_timer[49] = \<const0> ;
  assign rxphy_correction_timer[48] = \<const0> ;
  assign rxphy_correction_timer[47] = \<const0> ;
  assign rxphy_correction_timer[46] = \<const0> ;
  assign rxphy_correction_timer[45] = \<const0> ;
  assign rxphy_correction_timer[44] = \<const0> ;
  assign rxphy_correction_timer[43] = \<const0> ;
  assign rxphy_correction_timer[42] = \<const0> ;
  assign rxphy_correction_timer[41] = \<const0> ;
  assign rxphy_correction_timer[40] = \<const0> ;
  assign rxphy_correction_timer[39] = \<const0> ;
  assign rxphy_correction_timer[38] = \<const0> ;
  assign rxphy_correction_timer[37] = \<const0> ;
  assign rxphy_correction_timer[36] = \<const0> ;
  assign rxphy_correction_timer[35] = \<const0> ;
  assign rxphy_correction_timer[34] = \<const0> ;
  assign rxphy_correction_timer[33] = \<const0> ;
  assign rxphy_correction_timer[32] = \<const0> ;
  assign rxphy_correction_timer[31] = \<const0> ;
  assign rxphy_correction_timer[30] = \<const0> ;
  assign rxphy_correction_timer[29] = \<const0> ;
  assign rxphy_correction_timer[28] = \<const0> ;
  assign rxphy_correction_timer[27] = \<const0> ;
  assign rxphy_correction_timer[26] = \<const0> ;
  assign rxphy_correction_timer[25] = \<const0> ;
  assign rxphy_correction_timer[24] = \<const0> ;
  assign rxphy_correction_timer[23] = \<const0> ;
  assign rxphy_correction_timer[22] = \<const0> ;
  assign rxphy_correction_timer[21] = \<const0> ;
  assign rxphy_correction_timer[20] = \<const0> ;
  assign rxphy_correction_timer[19] = \<const0> ;
  assign rxphy_correction_timer[18] = \<const0> ;
  assign rxphy_correction_timer[17] = \<const0> ;
  assign rxphy_correction_timer[16] = \<const0> ;
  assign rxphy_correction_timer[15] = \<const0> ;
  assign rxphy_correction_timer[14] = \<const0> ;
  assign rxphy_correction_timer[13] = \<const0> ;
  assign rxphy_correction_timer[12] = \<const0> ;
  assign rxphy_correction_timer[11] = \<const0> ;
  assign rxphy_correction_timer[10] = \<const0> ;
  assign rxphy_correction_timer[9] = \<const0> ;
  assign rxphy_correction_timer[8] = \<const0> ;
  assign rxphy_correction_timer[7] = \<const0> ;
  assign rxphy_correction_timer[6] = \<const0> ;
  assign rxphy_correction_timer[5] = \<const0> ;
  assign rxphy_correction_timer[4] = \<const0> ;
  assign rxphy_correction_timer[3] = \<const0> ;
  assign rxphy_correction_timer[2] = \<const0> ;
  assign rxphy_correction_timer[1] = \<const0> ;
  assign rxphy_correction_timer[0] = \<const0> ;
  assign rxphy_ns_field[35] = \<const0> ;
  assign rxphy_ns_field[34] = \<const0> ;
  assign rxphy_ns_field[33] = \<const0> ;
  assign rxphy_ns_field[32] = \<const0> ;
  assign rxphy_ns_field[31] = \<const0> ;
  assign rxphy_ns_field[30] = \<const0> ;
  assign rxphy_ns_field[29] = \<const0> ;
  assign rxphy_ns_field[28] = \<const0> ;
  assign rxphy_ns_field[27] = \<const0> ;
  assign rxphy_ns_field[26] = \<const0> ;
  assign rxphy_ns_field[25] = \<const0> ;
  assign rxphy_ns_field[24] = \<const0> ;
  assign rxphy_ns_field[23] = \<const0> ;
  assign rxphy_ns_field[22] = \<const0> ;
  assign rxphy_ns_field[21] = \<const0> ;
  assign rxphy_ns_field[20] = \<const0> ;
  assign rxphy_ns_field[19] = \<const0> ;
  assign rxphy_ns_field[18] = \<const0> ;
  assign rxphy_ns_field[17] = \<const0> ;
  assign rxphy_ns_field[16] = \<const0> ;
  assign rxphy_ns_field[15] = \<const0> ;
  assign rxphy_ns_field[14] = \<const0> ;
  assign rxphy_ns_field[13] = \<const0> ;
  assign rxphy_ns_field[12] = \<const0> ;
  assign rxphy_ns_field[11] = \<const0> ;
  assign rxphy_ns_field[10] = \<const0> ;
  assign rxphy_ns_field[9] = \<const0> ;
  assign rxphy_ns_field[8] = \<const0> ;
  assign rxphy_ns_field[7] = \<const0> ;
  assign rxphy_ns_field[6] = \<const0> ;
  assign rxphy_ns_field[5] = \<const0> ;
  assign rxphy_ns_field[4] = \<const0> ;
  assign rxphy_ns_field[3] = \<const0> ;
  assign rxphy_ns_field[2] = \<const0> ;
  assign rxphy_ns_field[1] = \<const0> ;
  assign rxphy_ns_field[0] = \<const0> ;
  assign rxphy_s_field[47] = \<const0> ;
  assign rxphy_s_field[46] = \<const0> ;
  assign rxphy_s_field[45] = \<const0> ;
  assign rxphy_s_field[44] = \<const0> ;
  assign rxphy_s_field[43] = \<const0> ;
  assign rxphy_s_field[42] = \<const0> ;
  assign rxphy_s_field[41] = \<const0> ;
  assign rxphy_s_field[40] = \<const0> ;
  assign rxphy_s_field[39] = \<const0> ;
  assign rxphy_s_field[38] = \<const0> ;
  assign rxphy_s_field[37] = \<const0> ;
  assign rxphy_s_field[36] = \<const0> ;
  assign rxphy_s_field[35] = \<const0> ;
  assign rxphy_s_field[34] = \<const0> ;
  assign rxphy_s_field[33] = \<const0> ;
  assign rxphy_s_field[32] = \<const0> ;
  assign rxphy_s_field[31] = \<const0> ;
  assign rxphy_s_field[30] = \<const0> ;
  assign rxphy_s_field[29] = \<const0> ;
  assign rxphy_s_field[28] = \<const0> ;
  assign rxphy_s_field[27] = \<const0> ;
  assign rxphy_s_field[26] = \<const0> ;
  assign rxphy_s_field[25] = \<const0> ;
  assign rxphy_s_field[24] = \<const0> ;
  assign rxphy_s_field[23] = \<const0> ;
  assign rxphy_s_field[22] = \<const0> ;
  assign rxphy_s_field[21] = \<const0> ;
  assign rxphy_s_field[20] = \<const0> ;
  assign rxphy_s_field[19] = \<const0> ;
  assign rxphy_s_field[18] = \<const0> ;
  assign rxphy_s_field[17] = \<const0> ;
  assign rxphy_s_field[16] = \<const0> ;
  assign rxphy_s_field[15] = \<const0> ;
  assign rxphy_s_field[14] = \<const0> ;
  assign rxphy_s_field[13] = \<const0> ;
  assign rxphy_s_field[12] = \<const0> ;
  assign rxphy_s_field[11] = \<const0> ;
  assign rxphy_s_field[10] = \<const0> ;
  assign rxphy_s_field[9] = \<const0> ;
  assign rxphy_s_field[8] = \<const0> ;
  assign rxphy_s_field[7] = \<const0> ;
  assign rxphy_s_field[6] = \<const0> ;
  assign rxphy_s_field[5] = \<const0> ;
  assign rxphy_s_field[4] = \<const0> ;
  assign rxphy_s_field[3] = \<const0> ;
  assign rxphy_s_field[2] = \<const0> ;
  assign rxphy_s_field[1] = \<const0> ;
  assign rxphy_s_field[0] = \<const0> ;
  assign status_vector[447] = \<const0> ;
  assign status_vector[446] = \<const0> ;
  assign status_vector[445] = \<const0> ;
  assign status_vector[444] = \<const0> ;
  assign status_vector[443] = \<const0> ;
  assign status_vector[442] = \<const0> ;
  assign status_vector[441] = \<const0> ;
  assign status_vector[440] = \<const0> ;
  assign status_vector[439] = \<const0> ;
  assign status_vector[438] = \<const0> ;
  assign status_vector[437] = \<const0> ;
  assign status_vector[436] = \<const0> ;
  assign status_vector[435] = \<const0> ;
  assign status_vector[434] = \<const0> ;
  assign status_vector[433] = \<const0> ;
  assign status_vector[432] = \<const0> ;
  assign status_vector[431] = \<const0> ;
  assign status_vector[430] = \<const0> ;
  assign status_vector[429] = \<const0> ;
  assign status_vector[428] = \<const0> ;
  assign status_vector[427] = \<const0> ;
  assign status_vector[426] = \<const0> ;
  assign status_vector[425] = \<const0> ;
  assign status_vector[424] = \<const0> ;
  assign status_vector[423] = \<const0> ;
  assign status_vector[422] = \<const0> ;
  assign status_vector[421] = \<const0> ;
  assign status_vector[420] = \<const0> ;
  assign status_vector[419] = \<const0> ;
  assign status_vector[418] = \<const0> ;
  assign status_vector[417] = \<const0> ;
  assign status_vector[416] = \<const0> ;
  assign status_vector[415] = \<const0> ;
  assign status_vector[414] = \<const0> ;
  assign status_vector[413] = \<const0> ;
  assign status_vector[412] = \<const0> ;
  assign status_vector[411] = \<const0> ;
  assign status_vector[410] = \<const0> ;
  assign status_vector[409] = \<const0> ;
  assign status_vector[408] = \<const0> ;
  assign status_vector[407] = \<const0> ;
  assign status_vector[406] = \<const0> ;
  assign status_vector[405] = \<const0> ;
  assign status_vector[404] = \<const0> ;
  assign status_vector[403] = \<const0> ;
  assign status_vector[402] = \<const0> ;
  assign status_vector[401] = \<const0> ;
  assign status_vector[400] = \<const0> ;
  assign status_vector[399] = \<const0> ;
  assign status_vector[398] = \<const0> ;
  assign status_vector[397] = \<const0> ;
  assign status_vector[396] = \<const0> ;
  assign status_vector[395] = \<const0> ;
  assign status_vector[394] = \<const0> ;
  assign status_vector[393] = \<const0> ;
  assign status_vector[392] = \<const0> ;
  assign status_vector[391] = \<const0> ;
  assign status_vector[390] = \<const0> ;
  assign status_vector[389] = \<const0> ;
  assign status_vector[388] = \<const0> ;
  assign status_vector[387] = \<const0> ;
  assign status_vector[386] = \<const0> ;
  assign status_vector[385] = \<const0> ;
  assign status_vector[384] = \<const0> ;
  assign status_vector[383] = \<const0> ;
  assign status_vector[382] = \<const0> ;
  assign status_vector[381] = \<const0> ;
  assign status_vector[380] = \<const0> ;
  assign status_vector[379] = \<const0> ;
  assign status_vector[378] = \<const0> ;
  assign status_vector[377] = \<const0> ;
  assign status_vector[376] = \<const0> ;
  assign status_vector[375] = \<const0> ;
  assign status_vector[374] = \<const0> ;
  assign status_vector[373] = \<const0> ;
  assign status_vector[372] = \<const0> ;
  assign status_vector[371] = \<const0> ;
  assign status_vector[370] = \<const0> ;
  assign status_vector[369] = \<const0> ;
  assign status_vector[368] = \<const0> ;
  assign status_vector[367] = \<const0> ;
  assign status_vector[366] = \<const0> ;
  assign status_vector[365] = \<const0> ;
  assign status_vector[364] = \<const0> ;
  assign status_vector[363] = \<const0> ;
  assign status_vector[362] = \<const0> ;
  assign status_vector[361] = \<const0> ;
  assign status_vector[360] = \<const0> ;
  assign status_vector[359] = \<const0> ;
  assign status_vector[358] = \<const0> ;
  assign status_vector[357] = \<const0> ;
  assign status_vector[356] = \<const0> ;
  assign status_vector[355] = \<const0> ;
  assign status_vector[354] = \<const0> ;
  assign status_vector[353] = \<const0> ;
  assign status_vector[352] = \<const0> ;
  assign status_vector[351] = \<const0> ;
  assign status_vector[350] = \<const0> ;
  assign status_vector[349] = \<const0> ;
  assign status_vector[348] = \<const0> ;
  assign status_vector[347] = \<const0> ;
  assign status_vector[346] = \<const0> ;
  assign status_vector[345] = \<const0> ;
  assign status_vector[344] = \<const0> ;
  assign status_vector[343] = \<const0> ;
  assign status_vector[342] = \<const0> ;
  assign status_vector[341] = \<const0> ;
  assign status_vector[340] = \<const0> ;
  assign status_vector[339] = \<const0> ;
  assign status_vector[338] = \<const0> ;
  assign status_vector[337] = \<const0> ;
  assign status_vector[336] = \<const0> ;
  assign status_vector[335] = \<const0> ;
  assign status_vector[334] = \<const0> ;
  assign status_vector[333] = \<const0> ;
  assign status_vector[332] = \<const0> ;
  assign status_vector[331] = \<const0> ;
  assign status_vector[330] = \<const0> ;
  assign status_vector[329] = \<const0> ;
  assign status_vector[328] = \<const0> ;
  assign status_vector[327] = \<const0> ;
  assign status_vector[326] = \<const0> ;
  assign status_vector[325] = \<const0> ;
  assign status_vector[324] = \<const0> ;
  assign status_vector[323] = \<const0> ;
  assign status_vector[322] = \<const0> ;
  assign status_vector[321] = \<const0> ;
  assign status_vector[320] = \<const0> ;
  assign status_vector[319] = \<const0> ;
  assign status_vector[318] = \<const0> ;
  assign status_vector[317] = \<const0> ;
  assign status_vector[316] = \<const0> ;
  assign status_vector[315] = \<const0> ;
  assign status_vector[314] = \<const0> ;
  assign status_vector[313] = \<const0> ;
  assign status_vector[312] = \<const0> ;
  assign status_vector[311] = \<const0> ;
  assign status_vector[310] = \<const0> ;
  assign status_vector[309] = \<const0> ;
  assign status_vector[308] = \<const0> ;
  assign status_vector[307] = \<const0> ;
  assign status_vector[306] = \<const0> ;
  assign status_vector[305] = \<const0> ;
  assign status_vector[304] = \<const0> ;
  assign status_vector[303] = \<const0> ;
  assign status_vector[302] = \<const0> ;
  assign status_vector[301] = \<const0> ;
  assign status_vector[300] = \<const0> ;
  assign status_vector[299] = \<const0> ;
  assign status_vector[298] = \<const0> ;
  assign status_vector[297] = \<const0> ;
  assign status_vector[296] = \<const0> ;
  assign status_vector[295] = \<const0> ;
  assign status_vector[294] = \<const0> ;
  assign status_vector[293] = \<const0> ;
  assign status_vector[292] = \<const0> ;
  assign status_vector[291] = \<const0> ;
  assign status_vector[290] = \<const0> ;
  assign status_vector[289] = \<const0> ;
  assign status_vector[288] = \<const0> ;
  assign status_vector[287] = \<const0> ;
  assign status_vector[286] = \<const0> ;
  assign status_vector[285] = \<const0> ;
  assign status_vector[284] = \<const0> ;
  assign status_vector[283] = \<const0> ;
  assign status_vector[282] = \<const0> ;
  assign status_vector[281] = \<const0> ;
  assign status_vector[280] = \<const0> ;
  assign status_vector[279] = \<const0> ;
  assign status_vector[278] = \<const0> ;
  assign status_vector[277] = \<const0> ;
  assign status_vector[276] = \<const0> ;
  assign status_vector[275] = \<const0> ;
  assign status_vector[274] = \<const0> ;
  assign status_vector[273] = \<const0> ;
  assign status_vector[272] = \<const0> ;
  assign status_vector[271] = \<const0> ;
  assign status_vector[270] = \<const0> ;
  assign status_vector[269] = \<const0> ;
  assign status_vector[268] = \<const0> ;
  assign status_vector[267] = \<const0> ;
  assign status_vector[266] = \<const0> ;
  assign status_vector[265] = \<const0> ;
  assign status_vector[264] = \<const0> ;
  assign status_vector[263] = \<const0> ;
  assign status_vector[262] = \<const0> ;
  assign status_vector[261] = \<const0> ;
  assign status_vector[260] = \<const0> ;
  assign status_vector[259] = \<const0> ;
  assign status_vector[258] = \<const0> ;
  assign status_vector[257] = \<const0> ;
  assign status_vector[256] = \<const0> ;
  assign status_vector[255] = \<const0> ;
  assign status_vector[254] = \<const0> ;
  assign status_vector[253] = \<const0> ;
  assign status_vector[252] = \<const0> ;
  assign status_vector[251] = \<const0> ;
  assign status_vector[250] = \<const0> ;
  assign status_vector[249] = \<const0> ;
  assign status_vector[248] = \<const0> ;
  assign status_vector[247] = \<const0> ;
  assign status_vector[246] = \<const0> ;
  assign status_vector[245] = \<const0> ;
  assign status_vector[244] = \<const0> ;
  assign status_vector[243] = \<const0> ;
  assign status_vector[242] = \<const0> ;
  assign status_vector[241] = \<const0> ;
  assign status_vector[240] = \<const0> ;
  assign status_vector[239] = \<const0> ;
  assign status_vector[238] = \<const0> ;
  assign status_vector[237] = \<const0> ;
  assign status_vector[236] = \<const0> ;
  assign status_vector[235] = \<const0> ;
  assign status_vector[234] = \<const0> ;
  assign status_vector[233] = \<const0> ;
  assign status_vector[232] = \<const0> ;
  assign status_vector[231] = \<const0> ;
  assign status_vector[230] = \<const0> ;
  assign status_vector[229] = \<const0> ;
  assign status_vector[228] = \<const0> ;
  assign status_vector[227] = \<const0> ;
  assign status_vector[226] = \<const0> ;
  assign status_vector[225] = \<const0> ;
  assign status_vector[224] = \<const0> ;
  assign status_vector[223] = \<const0> ;
  assign status_vector[222] = \<const0> ;
  assign status_vector[221] = \<const0> ;
  assign status_vector[220] = \<const0> ;
  assign status_vector[219] = \<const0> ;
  assign status_vector[218] = \<const0> ;
  assign status_vector[217] = \<const0> ;
  assign status_vector[216] = \<const0> ;
  assign status_vector[215] = \<const0> ;
  assign status_vector[214] = \<const0> ;
  assign status_vector[213] = \<const0> ;
  assign status_vector[212] = \<const0> ;
  assign status_vector[211] = \<const0> ;
  assign status_vector[210] = \<const0> ;
  assign status_vector[209] = \<const0> ;
  assign status_vector[208] = \<const0> ;
  assign status_vector[207] = \<const0> ;
  assign status_vector[206] = \<const0> ;
  assign status_vector[205] = \<const0> ;
  assign status_vector[204] = \<const0> ;
  assign status_vector[203] = \<const0> ;
  assign status_vector[202] = \<const0> ;
  assign status_vector[201] = \<const0> ;
  assign status_vector[200] = \<const0> ;
  assign status_vector[199] = \<const0> ;
  assign status_vector[198] = \<const0> ;
  assign status_vector[197] = \<const0> ;
  assign status_vector[196] = \<const0> ;
  assign status_vector[195] = \<const0> ;
  assign status_vector[194] = \<const0> ;
  assign status_vector[193] = \<const0> ;
  assign status_vector[192] = \<const0> ;
  assign status_vector[191] = \<const0> ;
  assign status_vector[190] = \<const0> ;
  assign status_vector[189] = \<const0> ;
  assign status_vector[188] = \<const0> ;
  assign status_vector[187] = \<const0> ;
  assign status_vector[186] = \<const0> ;
  assign status_vector[185] = \<const0> ;
  assign status_vector[184] = \<const0> ;
  assign status_vector[183] = \<const0> ;
  assign status_vector[182] = \<const0> ;
  assign status_vector[181] = \<const0> ;
  assign status_vector[180] = \<const0> ;
  assign status_vector[179] = \<const0> ;
  assign status_vector[178] = \<const0> ;
  assign status_vector[177] = \<const0> ;
  assign status_vector[176] = \<const0> ;
  assign status_vector[175] = \<const0> ;
  assign status_vector[174] = \<const0> ;
  assign status_vector[173] = \<const0> ;
  assign status_vector[172] = \<const0> ;
  assign status_vector[171] = \<const0> ;
  assign status_vector[170] = \<const0> ;
  assign status_vector[169] = \<const0> ;
  assign status_vector[168] = \<const0> ;
  assign status_vector[167] = \<const0> ;
  assign status_vector[166] = \<const0> ;
  assign status_vector[165] = \<const0> ;
  assign status_vector[164] = \<const0> ;
  assign status_vector[163] = \<const0> ;
  assign status_vector[162] = \<const0> ;
  assign status_vector[161] = \<const0> ;
  assign status_vector[160] = \<const0> ;
  assign status_vector[159] = \<const0> ;
  assign status_vector[158] = \<const0> ;
  assign status_vector[157] = \<const0> ;
  assign status_vector[156] = \<const0> ;
  assign status_vector[155] = \<const0> ;
  assign status_vector[154] = \<const0> ;
  assign status_vector[153] = \<const0> ;
  assign status_vector[152] = \<const0> ;
  assign status_vector[151] = \<const0> ;
  assign status_vector[150] = \<const0> ;
  assign status_vector[149] = \<const0> ;
  assign status_vector[148] = \<const0> ;
  assign status_vector[147] = \<const0> ;
  assign status_vector[146] = \<const0> ;
  assign status_vector[145] = \<const0> ;
  assign status_vector[144] = \<const0> ;
  assign status_vector[143] = \<const0> ;
  assign status_vector[142] = \<const0> ;
  assign status_vector[141] = \<const0> ;
  assign status_vector[140] = \<const0> ;
  assign status_vector[139] = \<const0> ;
  assign status_vector[138] = \<const0> ;
  assign status_vector[137] = \<const0> ;
  assign status_vector[136] = \<const0> ;
  assign status_vector[135] = \<const0> ;
  assign status_vector[134] = \<const0> ;
  assign status_vector[133] = \<const0> ;
  assign status_vector[132] = \<const0> ;
  assign status_vector[131] = \<const0> ;
  assign status_vector[130] = \<const0> ;
  assign status_vector[129] = \<const0> ;
  assign status_vector[128] = \<const0> ;
  assign status_vector[127] = \<const0> ;
  assign status_vector[126] = \<const0> ;
  assign status_vector[125] = \<const0> ;
  assign status_vector[124] = \<const0> ;
  assign status_vector[123] = \<const0> ;
  assign status_vector[122] = \<const0> ;
  assign status_vector[121] = \<const0> ;
  assign status_vector[120] = \<const0> ;
  assign status_vector[119] = \<const0> ;
  assign status_vector[118] = \<const0> ;
  assign status_vector[117] = \<const0> ;
  assign status_vector[116] = \<const0> ;
  assign status_vector[115] = \<const0> ;
  assign status_vector[114] = \<const0> ;
  assign status_vector[113] = \<const0> ;
  assign status_vector[112] = \<const0> ;
  assign status_vector[111] = \<const0> ;
  assign status_vector[110] = \<const0> ;
  assign status_vector[109] = \<const0> ;
  assign status_vector[108] = \<const0> ;
  assign status_vector[107] = \<const0> ;
  assign status_vector[106] = \<const0> ;
  assign status_vector[105] = \<const0> ;
  assign status_vector[104] = \<const0> ;
  assign status_vector[103] = \<const0> ;
  assign status_vector[102] = \<const0> ;
  assign status_vector[101] = \<const0> ;
  assign status_vector[100] = \<const0> ;
  assign status_vector[99] = \<const0> ;
  assign status_vector[98] = \<const0> ;
  assign status_vector[97] = \<const0> ;
  assign status_vector[96] = \<const0> ;
  assign status_vector[95] = \<const0> ;
  assign status_vector[94] = \<const0> ;
  assign status_vector[93] = \<const0> ;
  assign status_vector[92] = \<const0> ;
  assign status_vector[91] = \<const0> ;
  assign status_vector[90] = \<const0> ;
  assign status_vector[89] = \<const0> ;
  assign status_vector[88] = \<const0> ;
  assign status_vector[87] = \<const0> ;
  assign status_vector[86] = \<const0> ;
  assign status_vector[85] = \<const0> ;
  assign status_vector[84] = \<const0> ;
  assign status_vector[83] = \<const0> ;
  assign status_vector[82] = \<const0> ;
  assign status_vector[81] = \<const0> ;
  assign status_vector[80] = \<const0> ;
  assign status_vector[79] = \<const0> ;
  assign status_vector[78] = \<const0> ;
  assign status_vector[77] = \<const0> ;
  assign status_vector[76] = \<const0> ;
  assign status_vector[75] = \<const0> ;
  assign status_vector[74] = \<const0> ;
  assign status_vector[73] = \<const0> ;
  assign status_vector[72] = \<const0> ;
  assign status_vector[71] = \<const0> ;
  assign status_vector[70] = \<const0> ;
  assign status_vector[69] = \<const0> ;
  assign status_vector[68] = \<const0> ;
  assign status_vector[67] = \<const0> ;
  assign status_vector[66] = \<const0> ;
  assign status_vector[65] = \<const0> ;
  assign status_vector[64] = \<const0> ;
  assign status_vector[63] = \<const0> ;
  assign status_vector[62] = \<const0> ;
  assign status_vector[61] = \<const0> ;
  assign status_vector[60] = \<const0> ;
  assign status_vector[59] = \<const0> ;
  assign status_vector[58] = \<const0> ;
  assign status_vector[57] = \<const0> ;
  assign status_vector[56] = \<const0> ;
  assign status_vector[55] = \<const0> ;
  assign status_vector[54] = \<const0> ;
  assign status_vector[53] = \<const0> ;
  assign status_vector[52] = \<const0> ;
  assign status_vector[51] = \<const0> ;
  assign status_vector[50] = \<const0> ;
  assign status_vector[49] = \<const0> ;
  assign status_vector[48] = \<const0> ;
  assign status_vector[47] = \<const0> ;
  assign status_vector[46] = \<const0> ;
  assign status_vector[45] = \<const0> ;
  assign status_vector[44] = \<const0> ;
  assign status_vector[43] = \<const0> ;
  assign status_vector[42] = \<const0> ;
  assign status_vector[41] = \<const0> ;
  assign status_vector[40] = \<const0> ;
  assign status_vector[39] = \<const0> ;
  assign status_vector[38] = \<const0> ;
  assign status_vector[37] = \<const0> ;
  assign status_vector[36] = \<const0> ;
  assign status_vector[35] = \<const0> ;
  assign status_vector[34] = \<const0> ;
  assign status_vector[33] = \<const0> ;
  assign status_vector[32] = \<const0> ;
  assign status_vector[31] = \<const0> ;
  assign status_vector[30] = \<const0> ;
  assign status_vector[29] = \<const0> ;
  assign status_vector[28] = \<const0> ;
  assign status_vector[27] = \<const0> ;
  assign status_vector[26] = \<const0> ;
  assign status_vector[25] = \<const0> ;
  assign status_vector[24] = \<const0> ;
  assign status_vector[23] = \<const0> ;
  assign status_vector[22] = \<const0> ;
  assign status_vector[21] = \<const0> ;
  assign status_vector[20] = \<const0> ;
  assign status_vector[19] = \<const0> ;
  assign status_vector[18] = \<const0> ;
  assign status_vector[17] = \<const0> ;
  assign status_vector[16] = \<const0> ;
  assign status_vector[15] = \<const0> ;
  assign status_vector[14] = \<const0> ;
  assign status_vector[13] = \<const0> ;
  assign status_vector[12] = \<const0> ;
  assign status_vector[11] = \<const0> ;
  assign status_vector[10] = \<const0> ;
  assign status_vector[9] = \<const0> ;
  assign status_vector[8] = \<const0> ;
  assign status_vector[7] = \<const0> ;
  assign status_vector[6] = \<const0> ;
  assign status_vector[5] = \<const0> ;
  assign status_vector[4] = \<const0> ;
  assign status_vector[3] = \<const0> ;
  assign status_vector[2] = \<const0> ;
  assign status_vector[1] = \<const0> ;
  assign status_vector[0] = \<const0> ;
  assign training_rdack = \<const0> ;
  assign training_rddata[15] = \<const0> ;
  assign training_rddata[14] = \<const0> ;
  assign training_rddata[13] = \<const0> ;
  assign training_rddata[12] = \<const0> ;
  assign training_rddata[11] = \<const0> ;
  assign training_rddata[10] = \<const0> ;
  assign training_rddata[9] = \<const0> ;
  assign training_rddata[8] = \<const0> ;
  assign training_rddata[7] = \<const0> ;
  assign training_rddata[6] = \<const0> ;
  assign training_rddata[5] = \<const0> ;
  assign training_rddata[4] = \<const0> ;
  assign training_rddata[3] = \<const0> ;
  assign training_rddata[2] = \<const0> ;
  assign training_rddata[1] = \<const0> ;
  assign training_rddata[0] = \<const0> ;
  assign training_wrack = \<const0> ;
  assign txdiffctrl[4] = \<const0> ;
  assign txdiffctrl[3] = \<const0> ;
  assign txdiffctrl[2] = \<const0> ;
  assign txdiffctrl[1] = \<const0> ;
  assign txdiffctrl[0] = \<const0> ;
  assign txphy_async_gb_latency[15] = \<const0> ;
  assign txphy_async_gb_latency[14] = \<const0> ;
  assign txphy_async_gb_latency[13] = \<const0> ;
  assign txphy_async_gb_latency[12] = \<const0> ;
  assign txphy_async_gb_latency[11] = \<const0> ;
  assign txphy_async_gb_latency[10] = \<const0> ;
  assign txphy_async_gb_latency[9] = \<const0> ;
  assign txphy_async_gb_latency[8] = \<const0> ;
  assign txphy_async_gb_latency[7] = \<const0> ;
  assign txphy_async_gb_latency[6] = \<const0> ;
  assign txphy_async_gb_latency[5] = \<const0> ;
  assign txphy_async_gb_latency[4] = \<const0> ;
  assign txphy_async_gb_latency[3] = \<const0> ;
  assign txphy_async_gb_latency[2] = \<const0> ;
  assign txphy_async_gb_latency[1] = \<const0> ;
  assign txphy_async_gb_latency[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_wrapper ten_gig_eth_pcs_pma_inst
       (.areset_coreclk(areset_coreclk),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(\^core_status ),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc[3:0]),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(\^loopback_ctrl ),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .prtad(prtad),
        .\q_reg[0] (pma_resetout),
        .\q_reg[2] (pcs_resetout),
        .reset(reset),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo" *) 
(* WIDTH = "66" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo
   (wr_clk,
    wr_clk_en,
    wr_reset,
    wr_en,
    wr_data,
    rd_clk,
    rd_clk_en,
    rd_reset,
    rd_en,
    full,
    empty,
    rd_data,
    fifo_wr_addr,
    fifo_rd_addr,
    status);
  input wr_clk;
  input wr_clk_en;
  input wr_reset;
  input wr_en;
  input [65:0]wr_data;
  input rd_clk;
  input rd_clk_en;
  input rd_reset;
  input rd_en;
  output full;
  output empty;
  output [65:0]rd_data;
  output [4:0]fifo_wr_addr;
  output [4:0]fifo_rd_addr;
  output [4:0]status;

  wire ecomp_0;
  wire ecomp_1;
  wire ecomp_2;
  wire ecomp_3;
  wire ecomp_4;
  wire empty;
  wire empty_allow0;
  wire empty_int_i_1_n_0;
  wire emptyg;
  wire emuxcyo_3;
  wire fcomp_0;
  wire fcomp_01;
  wire fcomp_1;
  wire fcomp_2;
  wire fcomp_3;
  wire fcomp_4;
  wire [4:0]fifo_rd_addr;
  wire [4:0]fifo_wr_addr;
  wire fmuxcyo_3;
  wire full;
  wire full_int_i_1_n_0;
  wire fullg;
  wire p_0_in23_in;
  wire p_0_in27_in;
  wire p_0_in31_in;
  wire p_0_in35_in;
  wire p_0_in42_in;
  wire p_0_in46_in;
  wire p_0_in50_in;
  wire p_0_in54_in;
  wire [4:0]p_0_in__0;
  wire [4:0]p_0_in__1;
  wire p_3_in44_in;
  wire p_3_in48_in;
  wire p_3_in52_in;
  wire p_3_in56_in;
  wire [3:0]p_4_out;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync2;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [65:0]rd_data;
  wire rd_en;
  wire \rd_gray_reg_n_0_[0] ;
  wire [4:0]rd_lastgray;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk2;
  wire rd_nextgray0;
  wire rd_nextgray018_out;
  wire rd_nextgray020_out;
  wire rd_nextgray022_out;
  wire \rd_nextgray_reg_n_0_[0] ;
  wire rd_reset;
  wire [4:0]rd_truegray;
  wire [4:0]status;
  wire [4:1]status0;
  wire \status[0]_i_1_n_0 ;
  wire \status[2]_i_2_n_0 ;
  wire \status[4]_i_3_n_0 ;
  wire [4:0]wr_addr_pipe;
  wire [4:0]wr_addr_pipe0;
  wire [4:0]wr_addr_pipe1;
  wire wr_clk;
  wire wr_clk_en;
  wire [65:0]wr_data;
  wire wr_en;
  wire [4:0]wr_gray;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk2;
  wire \wr_nextgray_reg_n_0_[0] ;
  wire wr_reset;
  wire [2:0]NLW_emuxcy0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_emuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_emuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_S_UNCONNECTED;
  wire [2:0]NLW_fmuxcy0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_fmuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_fmuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_S_UNCONNECTED;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_dp_ram dp_ram_i
       (.E(ram_wr_en),
        .Q(fifo_rd_addr),
        .empty_int_reg(empty),
        .full_int_reg(full),
        .rd_clk(rd_clk),
        .rd_clk_en(rd_clk_en),
        .rd_data(rd_data),
        .rd_en(rd_en),
        .\wr_addr_reg[4] (fifo_wr_addr),
        .wr_clk(wr_clk),
        .wr_clk_en(wr_clk_en),
        .wr_data(wr_data),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hA8CC)) 
    empty_int_i_1
       (.I0(emptyg),
        .I1(empty),
        .I2(rd_en),
        .I3(rd_clk_en),
        .O(empty_int_i_1_n_0));
  FDSE empty_int_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_int_i_1_n_0),
        .Q(empty),
        .S(rd_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy0_CARRY4
       (.CI(1'b0),
        .CO({emuxcyo_3,NLW_emuxcy0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_emuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({ecomp_3,ecomp_2,ecomp_1,ecomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy0_i_1
       (.I0(wr_gray_rdclk[0]),
        .I1(\rd_gray_reg_n_0_[0] ),
        .I2(empty),
        .I3(\rd_nextgray_reg_n_0_[0] ),
        .O(ecomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy1_i_1
       (.I0(wr_gray_rdclk[1]),
        .I1(p_3_in56_in),
        .I2(empty),
        .I3(p_0_in54_in),
        .O(ecomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy2_i_1
       (.I0(wr_gray_rdclk[2]),
        .I1(p_3_in52_in),
        .I2(empty),
        .I3(p_0_in50_in),
        .O(ecomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy3_i_1
       (.I0(wr_gray_rdclk[3]),
        .I1(p_3_in48_in),
        .I2(empty),
        .I3(p_0_in46_in),
        .O(ecomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy4_CARRY4
       (.CI(emuxcyo_3),
        .CO({NLW_emuxcy4_CARRY4_CO_UNCONNECTED[3:1],emptyg}),
        .CYINIT(1'b0),
        .DI({NLW_emuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_emuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_emuxcy4_CARRY4_S_UNCONNECTED[3:1],ecomp_4}));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy4_i_1
       (.I0(wr_gray_rdclk[4]),
        .I1(p_3_in44_in),
        .I2(empty),
        .I3(p_0_in42_in),
        .O(ecomp_4));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy0_CARRY4
       (.CI(1'b0),
        .CO({fmuxcyo_3,NLW_fmuxcy0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_fmuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({fcomp_3,fcomp_2,fcomp_1,fcomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy0_i_1
       (.I0(rd_lastgray_wrclk[0]),
        .I1(wr_gray[0]),
        .I2(full),
        .I3(\wr_nextgray_reg_n_0_[0] ),
        .O(fcomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy1_i_1
       (.I0(rd_lastgray_wrclk[1]),
        .I1(wr_gray[1]),
        .I2(full),
        .I3(p_0_in35_in),
        .O(fcomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy2_i_1
       (.I0(rd_lastgray_wrclk[2]),
        .I1(wr_gray[2]),
        .I2(full),
        .I3(p_0_in31_in),
        .O(fcomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy3_i_1
       (.I0(rd_lastgray_wrclk[3]),
        .I1(wr_gray[3]),
        .I2(full),
        .I3(p_0_in27_in),
        .O(fcomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy4_CARRY4
       (.CI(fmuxcyo_3),
        .CO({NLW_fmuxcy4_CARRY4_CO_UNCONNECTED[3:1],fullg}),
        .CYINIT(1'b0),
        .DI({NLW_fmuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_fmuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_fmuxcy4_CARRY4_S_UNCONNECTED[3:1],fcomp_4}));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy4_i_1
       (.I0(rd_lastgray_wrclk[4]),
        .I1(wr_gray[4]),
        .I2(full),
        .I3(p_0_in23_in),
        .O(fcomp_4));
  LUT4 #(
    .INIT(16'hA8A0)) 
    full_int_i_1
       (.I0(fullg),
        .I1(wr_en),
        .I2(full),
        .I3(wr_clk_en),
        .O(full_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(full_int_i_1_n_0),
        .Q(full),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[0]),
        .Q(rag_writesync0[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[1]),
        .Q(rag_writesync0[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[2]),
        .Q(rag_writesync0[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[3]),
        .Q(rag_writesync0[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[4]),
        .Q(rag_writesync0[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[0]),
        .Q(rag_writesync1[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[1]),
        .Q(rag_writesync1[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[2]),
        .Q(rag_writesync1[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[3]),
        .Q(rag_writesync1[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[4]),
        .Q(rag_writesync1[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[0]),
        .Q(rag_writesync2[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[1]),
        .Q(rag_writesync2[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[2]),
        .Q(rag_writesync2[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[3]),
        .Q(rag_writesync2[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[4]),
        .Q(rag_writesync2[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[0]),
        .Q(rag_writesync[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[1]),
        .Q(rag_writesync[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[2]),
        .Q(rag_writesync[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[3]),
        .Q(rag_writesync[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[4]),
        .Q(rag_writesync[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1 
       (.I0(fifo_rd_addr[0]),
        .O(p_0_in__1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .O(p_0_in__1[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr[2]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .I2(fifo_rd_addr[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr[3]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[2]),
        .I3(fifo_rd_addr[3]),
        .O(p_0_in__1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rd_addr[4]_i_1 
       (.I0(empty),
        .I1(rd_en),
        .I2(rd_clk_en),
        .O(empty_allow0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr[4]_i_2 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[1]),
        .I3(fifo_rd_addr[3]),
        .I4(fifo_rd_addr[4]),
        .O(p_0_in__1[4]));
  FDRE \rd_addr_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[0]),
        .Q(fifo_rd_addr[0]),
        .R(rd_reset));
  FDRE \rd_addr_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[1]),
        .Q(fifo_rd_addr[1]),
        .R(rd_reset));
  FDRE \rd_addr_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[2]),
        .Q(fifo_rd_addr[2]),
        .R(rd_reset));
  FDRE \rd_addr_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[3]),
        .Q(fifo_rd_addr[3]),
        .R(rd_reset));
  FDRE \rd_addr_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[4]),
        .Q(fifo_rd_addr[4]),
        .R(rd_reset));
  FDSE \rd_gray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_nextgray_reg_n_0_[0] ),
        .Q(\rd_gray_reg_n_0_[0] ),
        .S(rd_reset));
  FDRE \rd_gray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in54_in),
        .Q(p_3_in56_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in50_in),
        .Q(p_3_in52_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in46_in),
        .Q(p_3_in48_in),
        .R(rd_reset));
  FDSE \rd_gray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in42_in),
        .Q(p_3_in44_in),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_gray_reg_n_0_[0] ),
        .Q(rd_lastgray[0]),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in56_in),
        .Q(rd_lastgray[1]),
        .S(rd_reset));
  FDRE \rd_lastgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in52_in),
        .Q(rd_lastgray[2]),
        .R(rd_reset));
  FDRE \rd_lastgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in48_in),
        .Q(rd_lastgray[3]),
        .R(rd_reset));
  FDSE \rd_lastgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in44_in),
        .Q(rd_lastgray[4]),
        .S(rd_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[0]),
        .Q(rd_lastgray_wrclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[1]),
        .Q(rd_lastgray_wrclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[2]),
        .Q(rd_lastgray_wrclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[3]),
        .Q(rd_lastgray_wrclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[4]),
        .Q(rd_lastgray_wrclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[0]),
        .Q(rd_lastgray_wrclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[1]),
        .Q(rd_lastgray_wrclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[2]),
        .Q(rd_lastgray_wrclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[3]),
        .Q(rd_lastgray_wrclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[4]),
        .Q(rd_lastgray_wrclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[0]),
        .Q(rd_lastgray_wrclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[1]),
        .Q(rd_lastgray_wrclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[2]),
        .Q(rd_lastgray_wrclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[3]),
        .Q(rd_lastgray_wrclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[4]),
        .Q(rd_lastgray_wrclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[0]),
        .Q(rd_lastgray_wrclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[1]),
        .Q(rd_lastgray_wrclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[2]),
        .Q(rd_lastgray_wrclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[3]),
        .Q(rd_lastgray_wrclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[4]),
        .Q(rd_lastgray_wrclk[4]),
        .R(1'b0));
  FDRE \rd_nextgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray0),
        .Q(\rd_nextgray_reg_n_0_[0] ),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray018_out),
        .Q(p_0_in54_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray020_out),
        .Q(p_0_in50_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray022_out),
        .Q(p_0_in46_in),
        .R(rd_reset));
  FDSE \rd_nextgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[4]),
        .Q(p_0_in42_in),
        .S(rd_reset));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[0]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .O(rd_nextgray0));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[1]_i_1 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[1]),
        .O(rd_nextgray018_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[2]_i_1 
       (.I0(fifo_rd_addr[3]),
        .I1(fifo_rd_addr[2]),
        .O(rd_nextgray020_out));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[3]_i_1 
       (.I0(fifo_rd_addr[4]),
        .I1(fifo_rd_addr[3]),
        .O(rd_nextgray022_out));
  FDRE \rd_truegray_reg[0] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray0),
        .Q(rd_truegray[0]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[1] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray018_out),
        .Q(rd_truegray[1]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[2] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray020_out),
        .Q(rd_truegray[2]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[3] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray022_out),
        .Q(rd_truegray[3]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[4] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(fifo_rd_addr[4]),
        .Q(rd_truegray[4]),
        .R(rd_reset));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \status[0]_i_1 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[2]),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(rag_writesync[0]),
        .I5(rag_writesync[1]),
        .O(\status[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h1DD1E22E)) 
    \status[1]_i_1 
       (.I0(rag_writesync[0]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[1]),
        .I3(\status[2]_i_2_n_0 ),
        .I4(wr_addr_pipe[1]),
        .O(status0[1]));
  LUT6 #(
    .INIT(64'hA8EF10575710EFA8)) 
    \status[2]_i_1 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[0]),
        .I3(rag_writesync[1]),
        .I4(\status[2]_i_2_n_0 ),
        .I5(wr_addr_pipe[2]),
        .O(status0[2]));
  LUT3 #(
    .INIT(8'h69)) 
    \status[2]_i_2 
       (.I0(rag_writesync[2]),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .O(\status[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \status[3]_i_1 
       (.I0(\status[4]_i_3_n_0 ),
        .I1(rag_writesync[4]),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[3]),
        .O(status0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \status[4]_i_1 
       (.I0(full),
        .O(fcomp_01));
  LUT5 #(
    .INIT(32'h4DB22BD4)) 
    \status[4]_i_2 
       (.I0(wr_addr_pipe[3]),
        .I1(\status[4]_i_3_n_0 ),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[4]),
        .I4(rag_writesync[4]),
        .O(status0[4]));
  LUT6 #(
    .INIT(64'h010005075F7F1F0F)) 
    \status[4]_i_3 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(\status[2]_i_2_n_0 ),
        .I3(rag_writesync[0]),
        .I4(rag_writesync[1]),
        .I5(wr_addr_pipe[2]),
        .O(\status[4]_i_3_n_0 ));
  FDRE \status_reg[0] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(\status[0]_i_1_n_0 ),
        .Q(status[0]),
        .R(wr_reset));
  FDRE \status_reg[1] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[1]),
        .Q(status[1]),
        .R(wr_reset));
  FDRE \status_reg[2] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[2]),
        .Q(status[2]),
        .R(wr_reset));
  FDRE \status_reg[3] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[3]),
        .Q(status[3]),
        .R(wr_reset));
  FDRE \status_reg[4] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[4]),
        .Q(status[4]),
        .R(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1 
       (.I0(fifo_wr_addr[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr[2]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .I2(fifo_wr_addr[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr[3]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[2]),
        .I3(fifo_wr_addr[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr[4]_i_2 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[1]),
        .I3(fifo_wr_addr[3]),
        .I4(fifo_wr_addr[4]),
        .O(p_0_in__0[4]));
  FDRE \wr_addr_pipe0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[0]),
        .Q(wr_addr_pipe0[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[1]),
        .Q(wr_addr_pipe0[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[2]),
        .Q(wr_addr_pipe0[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[3]),
        .Q(wr_addr_pipe0[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[4]),
        .Q(wr_addr_pipe0[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[0]),
        .Q(wr_addr_pipe1[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[1]),
        .Q(wr_addr_pipe1[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[2]),
        .Q(wr_addr_pipe1[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[3]),
        .Q(wr_addr_pipe1[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[4]),
        .Q(wr_addr_pipe1[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[0]),
        .Q(wr_addr_pipe[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[1]),
        .Q(wr_addr_pipe[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[2]),
        .Q(wr_addr_pipe[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[3]),
        .Q(wr_addr_pipe[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[4]),
        .Q(wr_addr_pipe[4]),
        .R(wr_reset));
  FDRE \wr_addr_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[0]),
        .Q(fifo_wr_addr[0]),
        .R(wr_reset));
  FDRE \wr_addr_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[1]),
        .Q(fifo_wr_addr[1]),
        .R(wr_reset));
  FDRE \wr_addr_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[2]),
        .Q(fifo_wr_addr[2]),
        .R(wr_reset));
  FDRE \wr_addr_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[3]),
        .Q(fifo_wr_addr[3]),
        .R(wr_reset));
  FDRE \wr_addr_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[4]),
        .Q(fifo_wr_addr[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[0]),
        .Q(wr_gray_rdclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[1]),
        .Q(wr_gray_rdclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[2]),
        .Q(wr_gray_rdclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[3]),
        .Q(wr_gray_rdclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[4]),
        .Q(wr_gray_rdclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[0]),
        .Q(wr_gray_rdclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[1]),
        .Q(wr_gray_rdclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[2]),
        .Q(wr_gray_rdclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[3]),
        .Q(wr_gray_rdclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[4]),
        .Q(wr_gray_rdclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[0]),
        .Q(wr_gray_rdclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[1]),
        .Q(wr_gray_rdclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[2]),
        .Q(wr_gray_rdclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[3]),
        .Q(wr_gray_rdclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[4]),
        .Q(wr_gray_rdclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[0]),
        .Q(wr_gray_rdclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[1]),
        .Q(wr_gray_rdclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[2]),
        .Q(wr_gray_rdclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[3]),
        .Q(wr_gray_rdclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[4]),
        .Q(wr_gray_rdclk[4]),
        .R(1'b0));
  FDSE \wr_gray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(\wr_nextgray_reg_n_0_[0] ),
        .Q(wr_gray[0]),
        .S(wr_reset));
  FDRE \wr_gray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in35_in),
        .Q(wr_gray[1]),
        .R(wr_reset));
  FDRE \wr_gray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in31_in),
        .Q(wr_gray[2]),
        .R(wr_reset));
  FDRE \wr_gray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in27_in),
        .Q(wr_gray[3]),
        .R(wr_reset));
  FDSE \wr_gray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in23_in),
        .Q(wr_gray[4]),
        .S(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[0]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .O(p_4_out[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[1]_i_1 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[1]),
        .O(p_4_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[2]_i_1 
       (.I0(fifo_wr_addr[3]),
        .I1(fifo_wr_addr[2]),
        .O(p_4_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[3]_i_1 
       (.I0(fifo_wr_addr[4]),
        .I1(fifo_wr_addr[3]),
        .O(p_4_out[3]));
  FDRE \wr_nextgray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[0]),
        .Q(\wr_nextgray_reg_n_0_[0] ),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[1]),
        .Q(p_0_in35_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[2]),
        .Q(p_0_in31_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[3]),
        .Q(p_0_in27_in),
        .R(wr_reset));
  FDSE \wr_nextgray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[4]),
        .Q(p_0_in23_in),
        .S(wr_reset));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo" *) 
(* WIDTH = "74" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo__parameterized0
   (wr_clk,
    wr_clk_en,
    wr_reset,
    wr_en,
    wr_data,
    rd_clk,
    rd_clk_en,
    rd_reset,
    rd_en,
    full,
    empty,
    rd_data,
    fifo_wr_addr,
    fifo_rd_addr,
    status);
  input wr_clk;
  input wr_clk_en;
  input wr_reset;
  input wr_en;
  input [73:0]wr_data;
  input rd_clk;
  input rd_clk_en;
  input rd_reset;
  input rd_en;
  output full;
  output empty;
  output [73:0]rd_data;
  output [4:0]fifo_wr_addr;
  output [4:0]fifo_rd_addr;
  output [4:0]status;

  wire ecomp_0;
  wire ecomp_1;
  wire ecomp_2;
  wire ecomp_3;
  wire ecomp_4;
  wire empty;
  wire empty_allow0;
  wire empty_int_i_1_n_0;
  wire emptyg;
  wire emuxcyo_3;
  wire fcomp_0;
  wire fcomp_01;
  wire fcomp_1;
  wire fcomp_2;
  wire fcomp_3;
  wire fcomp_4;
  wire [4:0]fifo_rd_addr;
  wire [4:0]fifo_wr_addr;
  wire fmuxcyo_3;
  wire full;
  wire full_int_i_1_n_0;
  wire fullg;
  wire p_0_in23_in;
  wire p_0_in27_in;
  wire p_0_in31_in;
  wire p_0_in35_in;
  wire p_0_in42_in;
  wire p_0_in46_in;
  wire p_0_in50_in;
  wire p_0_in54_in;
  wire [4:0]p_0_in__0;
  wire [4:0]p_0_in__1;
  wire p_3_in44_in;
  wire p_3_in48_in;
  wire p_3_in52_in;
  wire p_3_in56_in;
  wire [3:0]p_4_out;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rag_writesync2;
  wire ram_wr_en;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire rd_en;
  wire \rd_gray_reg_n_0_[0] ;
  wire [4:0]rd_lastgray;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]rd_lastgray_wrclk2;
  wire rd_nextgray0;
  wire rd_nextgray018_out;
  wire rd_nextgray020_out;
  wire rd_nextgray022_out;
  wire \rd_nextgray_reg_n_0_[0] ;
  wire rd_reset;
  wire [4:0]rd_truegray;
  wire [4:0]status;
  wire [4:1]status0;
  wire \status[0]_i_1_n_0 ;
  wire \status[2]_i_2_n_0 ;
  wire \status[4]_i_3_n_0 ;
  wire [4:0]wr_addr_pipe;
  wire [4:0]wr_addr_pipe0;
  wire [4:0]wr_addr_pipe1;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [4:0]wr_gray;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire [4:0]wr_gray_rdclk2;
  wire \wr_nextgray_reg_n_0_[0] ;
  wire wr_reset;
  wire [2:0]NLW_emuxcy0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_emuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_emuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_emuxcy4_CARRY4_S_UNCONNECTED;
  wire [2:0]NLW_fmuxcy0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_fmuxcy0_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_fmuxcy4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_fmuxcy4_CARRY4_S_UNCONNECTED;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_dp_ram__parameterized0 dp_ram_i
       (.E(ram_wr_en),
        .Q(fifo_rd_addr),
        .empty_int_reg(empty),
        .full_int_reg(full),
        .rd_clk(rd_clk),
        .rd_clk_en(rd_clk_en),
        .rd_data(rd_data),
        .rd_en(rd_en),
        .\wr_addr_reg[4] (fifo_wr_addr),
        .wr_clk(wr_clk),
        .wr_clk_en(wr_clk_en),
        .wr_data(wr_data),
        .wr_en(wr_en));
  LUT4 #(
    .INIT(16'hA8CC)) 
    empty_int_i_1
       (.I0(emptyg),
        .I1(empty),
        .I2(rd_en),
        .I3(rd_clk_en),
        .O(empty_int_i_1_n_0));
  FDSE empty_int_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_int_i_1_n_0),
        .Q(empty),
        .S(rd_reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy0_CARRY4
       (.CI(1'b0),
        .CO({emuxcyo_3,NLW_emuxcy0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_emuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({ecomp_3,ecomp_2,ecomp_1,ecomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy0_i_1
       (.I0(wr_gray_rdclk[0]),
        .I1(\rd_gray_reg_n_0_[0] ),
        .I2(empty),
        .I3(\rd_nextgray_reg_n_0_[0] ),
        .O(ecomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy1_i_1
       (.I0(wr_gray_rdclk[1]),
        .I1(p_3_in56_in),
        .I2(empty),
        .I3(p_0_in54_in),
        .O(ecomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy2_i_1
       (.I0(wr_gray_rdclk[2]),
        .I1(p_3_in52_in),
        .I2(empty),
        .I3(p_0_in50_in),
        .O(ecomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy3_i_1
       (.I0(wr_gray_rdclk[3]),
        .I1(p_3_in48_in),
        .I2(empty),
        .I3(p_0_in46_in),
        .O(ecomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 emuxcy4_CARRY4
       (.CI(emuxcyo_3),
        .CO({NLW_emuxcy4_CARRY4_CO_UNCONNECTED[3:1],emptyg}),
        .CYINIT(1'b0),
        .DI({NLW_emuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_emuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_emuxcy4_CARRY4_S_UNCONNECTED[3:1],ecomp_4}));
  LUT4 #(
    .INIT(16'h9A95)) 
    emuxcy4_i_1
       (.I0(wr_gray_rdclk[4]),
        .I1(p_3_in44_in),
        .I2(empty),
        .I3(p_0_in42_in),
        .O(ecomp_4));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy0_CARRY4
       (.CI(1'b0),
        .CO({fmuxcyo_3,NLW_fmuxcy0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_fmuxcy0_CARRY4_O_UNCONNECTED[3:0]),
        .S({fcomp_3,fcomp_2,fcomp_1,fcomp_0}));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy0_i_1
       (.I0(rd_lastgray_wrclk[0]),
        .I1(wr_gray[0]),
        .I2(full),
        .I3(\wr_nextgray_reg_n_0_[0] ),
        .O(fcomp_0));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy1_i_1
       (.I0(rd_lastgray_wrclk[1]),
        .I1(wr_gray[1]),
        .I2(full),
        .I3(p_0_in35_in),
        .O(fcomp_1));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy2_i_1
       (.I0(rd_lastgray_wrclk[2]),
        .I1(wr_gray[2]),
        .I2(full),
        .I3(p_0_in31_in),
        .O(fcomp_2));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy3_i_1
       (.I0(rd_lastgray_wrclk[3]),
        .I1(wr_gray[3]),
        .I2(full),
        .I3(p_0_in27_in),
        .O(fcomp_3));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 fmuxcy4_CARRY4
       (.CI(fmuxcyo_3),
        .CO({NLW_fmuxcy4_CARRY4_CO_UNCONNECTED[3:1],fullg}),
        .CYINIT(1'b0),
        .DI({NLW_fmuxcy4_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_fmuxcy4_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_fmuxcy4_CARRY4_S_UNCONNECTED[3:1],fcomp_4}));
  LUT4 #(
    .INIT(16'h9A95)) 
    fmuxcy4_i_1
       (.I0(rd_lastgray_wrclk[4]),
        .I1(wr_gray[4]),
        .I2(full),
        .I3(p_0_in23_in),
        .O(fcomp_4));
  LUT4 #(
    .INIT(16'hA8A0)) 
    full_int_i_1
       (.I0(fullg),
        .I1(wr_en),
        .I2(full),
        .I3(wr_clk_en),
        .O(full_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    full_int_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(full_int_i_1_n_0),
        .Q(full),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[0]),
        .Q(rag_writesync0[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[1]),
        .Q(rag_writesync0[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[2]),
        .Q(rag_writesync0[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[3]),
        .Q(rag_writesync0[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_truegray[4]),
        .Q(rag_writesync0[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[0]),
        .Q(rag_writesync1[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[1]),
        .Q(rag_writesync1[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[2]),
        .Q(rag_writesync1[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[3]),
        .Q(rag_writesync1[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync0[4]),
        .Q(rag_writesync1[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[0]),
        .Q(rag_writesync2[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[1]),
        .Q(rag_writesync2[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[2]),
        .Q(rag_writesync2[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[3]),
        .Q(rag_writesync2[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync1[4]),
        .Q(rag_writesync2[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[0]),
        .Q(rag_writesync[0]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[1]),
        .Q(rag_writesync[1]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[2]),
        .Q(rag_writesync[2]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[3]),
        .Q(rag_writesync[3]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rag_writesync_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rag_writesync2[4]),
        .Q(rag_writesync[4]),
        .R(wr_reset));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rd_addr[0]_i_1 
       (.I0(fifo_rd_addr[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_addr[1]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rd_addr[2]_i_1 
       (.I0(fifo_rd_addr[0]),
        .I1(fifo_rd_addr[1]),
        .I2(fifo_rd_addr[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rd_addr[3]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[2]),
        .I3(fifo_rd_addr[3]),
        .O(p_0_in__1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rd_addr[4]_i_1 
       (.I0(empty),
        .I1(rd_en),
        .I2(rd_clk_en),
        .O(empty_allow0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rd_addr[4]_i_2 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[0]),
        .I2(fifo_rd_addr[1]),
        .I3(fifo_rd_addr[3]),
        .I4(fifo_rd_addr[4]),
        .O(p_0_in__1[4]));
  FDRE \rd_addr_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[0]),
        .Q(fifo_rd_addr[0]),
        .R(rd_reset));
  FDRE \rd_addr_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[1]),
        .Q(fifo_rd_addr[1]),
        .R(rd_reset));
  FDRE \rd_addr_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[2]),
        .Q(fifo_rd_addr[2]),
        .R(rd_reset));
  FDRE \rd_addr_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[3]),
        .Q(fifo_rd_addr[3]),
        .R(rd_reset));
  FDRE \rd_addr_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in__1[4]),
        .Q(fifo_rd_addr[4]),
        .R(rd_reset));
  FDSE \rd_gray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_nextgray_reg_n_0_[0] ),
        .Q(\rd_gray_reg_n_0_[0] ),
        .S(rd_reset));
  FDRE \rd_gray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in54_in),
        .Q(p_3_in56_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in50_in),
        .Q(p_3_in52_in),
        .R(rd_reset));
  FDRE \rd_gray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in46_in),
        .Q(p_3_in48_in),
        .R(rd_reset));
  FDSE \rd_gray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_0_in42_in),
        .Q(p_3_in44_in),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(\rd_gray_reg_n_0_[0] ),
        .Q(rd_lastgray[0]),
        .S(rd_reset));
  FDSE \rd_lastgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in56_in),
        .Q(rd_lastgray[1]),
        .S(rd_reset));
  FDRE \rd_lastgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in52_in),
        .Q(rd_lastgray[2]),
        .R(rd_reset));
  FDRE \rd_lastgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in48_in),
        .Q(rd_lastgray[3]),
        .R(rd_reset));
  FDSE \rd_lastgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(p_3_in44_in),
        .Q(rd_lastgray[4]),
        .S(rd_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[0]),
        .Q(rd_lastgray_wrclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[1]),
        .Q(rd_lastgray_wrclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[2]),
        .Q(rd_lastgray_wrclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[3]),
        .Q(rd_lastgray_wrclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray[4]),
        .Q(rd_lastgray_wrclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[0]),
        .Q(rd_lastgray_wrclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[1]),
        .Q(rd_lastgray_wrclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[2]),
        .Q(rd_lastgray_wrclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[3]),
        .Q(rd_lastgray_wrclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk0[4]),
        .Q(rd_lastgray_wrclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[0]),
        .Q(rd_lastgray_wrclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[1]),
        .Q(rd_lastgray_wrclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[2]),
        .Q(rd_lastgray_wrclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[3]),
        .Q(rd_lastgray_wrclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk2_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk1[4]),
        .Q(rd_lastgray_wrclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[0]),
        .Q(rd_lastgray_wrclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[1]),
        .Q(rd_lastgray_wrclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[2]),
        .Q(rd_lastgray_wrclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[3]),
        .Q(rd_lastgray_wrclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \rd_lastgray_wrclk_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rd_lastgray_wrclk2[4]),
        .Q(rd_lastgray_wrclk[4]),
        .R(1'b0));
  FDRE \rd_nextgray_reg[0] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray0),
        .Q(\rd_nextgray_reg_n_0_[0] ),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[1] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray018_out),
        .Q(p_0_in54_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[2] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray020_out),
        .Q(p_0_in50_in),
        .R(rd_reset));
  FDRE \rd_nextgray_reg[3] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(rd_nextgray022_out),
        .Q(p_0_in46_in),
        .R(rd_reset));
  FDSE \rd_nextgray_reg[4] 
       (.C(rd_clk),
        .CE(empty_allow0),
        .D(fifo_rd_addr[4]),
        .Q(p_0_in42_in),
        .S(rd_reset));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[0]_i_1 
       (.I0(fifo_rd_addr[1]),
        .I1(fifo_rd_addr[0]),
        .O(rd_nextgray0));
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[1]_i_1 
       (.I0(fifo_rd_addr[2]),
        .I1(fifo_rd_addr[1]),
        .O(rd_nextgray018_out));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[2]_i_1 
       (.I0(fifo_rd_addr[3]),
        .I1(fifo_rd_addr[2]),
        .O(rd_nextgray020_out));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rd_truegray[3]_i_1 
       (.I0(fifo_rd_addr[4]),
        .I1(fifo_rd_addr[3]),
        .O(rd_nextgray022_out));
  FDRE \rd_truegray_reg[0] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray0),
        .Q(rd_truegray[0]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[1] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray018_out),
        .Q(rd_truegray[1]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[2] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray020_out),
        .Q(rd_truegray[2]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[3] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(rd_nextgray022_out),
        .Q(rd_truegray[3]),
        .R(rd_reset));
  FDRE \rd_truegray_reg[4] 
       (.C(rd_clk),
        .CE(rd_clk_en),
        .D(fifo_rd_addr[4]),
        .Q(rd_truegray[4]),
        .R(rd_reset));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \status[0]_i_1 
       (.I0(wr_addr_pipe[0]),
        .I1(rag_writesync[2]),
        .I2(rag_writesync[3]),
        .I3(rag_writesync[4]),
        .I4(rag_writesync[0]),
        .I5(rag_writesync[1]),
        .O(\status[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h1DD1E22E)) 
    \status[1]_i_1 
       (.I0(rag_writesync[0]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[1]),
        .I3(\status[2]_i_2_n_0 ),
        .I4(wr_addr_pipe[1]),
        .O(status0[1]));
  LUT6 #(
    .INIT(64'hA8EF10575710EFA8)) 
    \status[2]_i_1 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(rag_writesync[0]),
        .I3(rag_writesync[1]),
        .I4(\status[2]_i_2_n_0 ),
        .I5(wr_addr_pipe[2]),
        .O(status0[2]));
  LUT3 #(
    .INIT(8'h69)) 
    \status[2]_i_2 
       (.I0(rag_writesync[2]),
        .I1(rag_writesync[3]),
        .I2(rag_writesync[4]),
        .O(\status[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \status[3]_i_1 
       (.I0(\status[4]_i_3_n_0 ),
        .I1(rag_writesync[4]),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[3]),
        .O(status0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \status[4]_i_1 
       (.I0(full),
        .O(fcomp_01));
  LUT5 #(
    .INIT(32'h4DB22BD4)) 
    \status[4]_i_2 
       (.I0(wr_addr_pipe[3]),
        .I1(\status[4]_i_3_n_0 ),
        .I2(rag_writesync[3]),
        .I3(wr_addr_pipe[4]),
        .I4(rag_writesync[4]),
        .O(status0[4]));
  LUT6 #(
    .INIT(64'h010005075F7F1F0F)) 
    \status[4]_i_3 
       (.I0(wr_addr_pipe[1]),
        .I1(wr_addr_pipe[0]),
        .I2(\status[2]_i_2_n_0 ),
        .I3(rag_writesync[0]),
        .I4(rag_writesync[1]),
        .I5(wr_addr_pipe[2]),
        .O(\status[4]_i_3_n_0 ));
  FDRE \status_reg[0] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(\status[0]_i_1_n_0 ),
        .Q(status[0]),
        .R(wr_reset));
  FDRE \status_reg[1] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[1]),
        .Q(status[1]),
        .R(wr_reset));
  FDRE \status_reg[2] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[2]),
        .Q(status[2]),
        .R(wr_reset));
  FDRE \status_reg[3] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[3]),
        .Q(status[3]),
        .R(wr_reset));
  FDRE \status_reg[4] 
       (.C(wr_clk),
        .CE(fcomp_01),
        .D(status0[4]),
        .Q(status[4]),
        .R(wr_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \wr_addr[0]_i_1 
       (.I0(fifo_wr_addr[0]),
        .O(p_0_in__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_addr[1]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .O(p_0_in__0[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \wr_addr[2]_i_1 
       (.I0(fifo_wr_addr[0]),
        .I1(fifo_wr_addr[1]),
        .I2(fifo_wr_addr[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_addr[3]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[2]),
        .I3(fifo_wr_addr[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wr_addr[4]_i_2 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[0]),
        .I2(fifo_wr_addr[1]),
        .I3(fifo_wr_addr[3]),
        .I4(fifo_wr_addr[4]),
        .O(p_0_in__0[4]));
  FDRE \wr_addr_pipe0_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[0]),
        .Q(wr_addr_pipe0[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[1]),
        .Q(wr_addr_pipe0[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[2]),
        .Q(wr_addr_pipe0[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[3]),
        .Q(wr_addr_pipe0[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe0_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(fifo_wr_addr[4]),
        .Q(wr_addr_pipe0[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[0]),
        .Q(wr_addr_pipe1[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[1]),
        .Q(wr_addr_pipe1[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[2]),
        .Q(wr_addr_pipe1[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[3]),
        .Q(wr_addr_pipe1[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe1_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe0[4]),
        .Q(wr_addr_pipe1[4]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[0]),
        .Q(wr_addr_pipe[0]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[1]),
        .Q(wr_addr_pipe[1]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[2]),
        .Q(wr_addr_pipe[2]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[3]),
        .Q(wr_addr_pipe[3]),
        .R(wr_reset));
  FDRE \wr_addr_pipe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(wr_addr_pipe1[4]),
        .Q(wr_addr_pipe[4]),
        .R(wr_reset));
  FDRE \wr_addr_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[0]),
        .Q(fifo_wr_addr[0]),
        .R(wr_reset));
  FDRE \wr_addr_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[1]),
        .Q(fifo_wr_addr[1]),
        .R(wr_reset));
  FDRE \wr_addr_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[2]),
        .Q(fifo_wr_addr[2]),
        .R(wr_reset));
  FDRE \wr_addr_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[3]),
        .Q(fifo_wr_addr[3]),
        .R(wr_reset));
  FDRE \wr_addr_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in__0[4]),
        .Q(fifo_wr_addr[4]),
        .R(wr_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[0]),
        .Q(wr_gray_rdclk0[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[1]),
        .Q(wr_gray_rdclk0[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[2]),
        .Q(wr_gray_rdclk0[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[3]),
        .Q(wr_gray_rdclk0[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk0_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray[4]),
        .Q(wr_gray_rdclk0[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[0]),
        .Q(wr_gray_rdclk1[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[1]),
        .Q(wr_gray_rdclk1[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[2]),
        .Q(wr_gray_rdclk1[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[3]),
        .Q(wr_gray_rdclk1[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk1_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk0[4]),
        .Q(wr_gray_rdclk1[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[0]),
        .Q(wr_gray_rdclk2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[1]),
        .Q(wr_gray_rdclk2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[2]),
        .Q(wr_gray_rdclk2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[3]),
        .Q(wr_gray_rdclk2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk2_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk1[4]),
        .Q(wr_gray_rdclk2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[0]),
        .Q(wr_gray_rdclk[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[1]),
        .Q(wr_gray_rdclk[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[2]),
        .Q(wr_gray_rdclk[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[3]),
        .Q(wr_gray_rdclk[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \wr_gray_rdclk_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(wr_gray_rdclk2[4]),
        .Q(wr_gray_rdclk[4]),
        .R(1'b0));
  FDSE \wr_gray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(\wr_nextgray_reg_n_0_[0] ),
        .Q(wr_gray[0]),
        .S(wr_reset));
  FDRE \wr_gray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in35_in),
        .Q(wr_gray[1]),
        .R(wr_reset));
  FDRE \wr_gray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in31_in),
        .Q(wr_gray[2]),
        .R(wr_reset));
  FDRE \wr_gray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in27_in),
        .Q(wr_gray[3]),
        .R(wr_reset));
  FDSE \wr_gray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_0_in23_in),
        .Q(wr_gray[4]),
        .S(wr_reset));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[0]_i_1 
       (.I0(fifo_wr_addr[1]),
        .I1(fifo_wr_addr[0]),
        .O(p_4_out[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[1]_i_1 
       (.I0(fifo_wr_addr[2]),
        .I1(fifo_wr_addr[1]),
        .O(p_4_out[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[2]_i_1 
       (.I0(fifo_wr_addr[3]),
        .I1(fifo_wr_addr[2]),
        .O(p_4_out[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \wr_nextgray[3]_i_1 
       (.I0(fifo_wr_addr[4]),
        .I1(fifo_wr_addr[3]),
        .O(p_4_out[3]));
  FDRE \wr_nextgray_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[0]),
        .Q(\wr_nextgray_reg_n_0_[0] ),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[1]),
        .Q(p_0_in35_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[2]),
        .Q(p_0_in31_in),
        .R(wr_reset));
  FDRE \wr_nextgray_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(p_4_out[3]),
        .Q(p_0_in27_in),
        .R(wr_reset));
  FDSE \wr_nextgray_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en),
        .D(fifo_wr_addr[4]),
        .Q(p_0_in23_in),
        .S(wr_reset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_baser_gen" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_baser_gen
   (drp_den,
    drp_daddr,
    drp_di,
    SR,
    core_status,
    \q_reg[0] ,
    mdio_out,
    mdio_tri,
    loopback_ctrl,
    drp_req,
    drp_dwe,
    rx_prbs31_en,
    tx_disable,
    tx_prbs31_en,
    gt_txd,
    gt_txc,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    xgmii_rxd,
    xgmii_rxc,
    txreset_txusrclk2,
    pma_pmd_type,
    areset_coreclk,
    coreclk,
    reset,
    txusrclk2,
    rxusrclk2,
    rxreset_rxusrclk2,
    signal_detect,
    drp_drpdo,
    dclk,
    mdc,
    mdio_in,
    drp_drdy,
    drp_gnt,
    dclk_reset,
    prtad,
    resetdone,
    xgmii_txd,
    xgmii_txc,
    gt_rxc,
    gt_rxd);
  output drp_den;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  output [0:0]SR;
  output [0:0]core_status;
  output \q_reg[0] ;
  output mdio_out;
  output mdio_tri;
  output [0:0]loopback_ctrl;
  output drp_req;
  output drp_dwe;
  output rx_prbs31_en;
  output tx_disable;
  output tx_prbs31_en;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input txreset_txusrclk2;
  input [2:0]pma_pmd_type;
  input areset_coreclk;
  input coreclk;
  input reset;
  input txusrclk2;
  input rxusrclk2;
  input rxreset_rxusrclk2;
  input signal_detect;
  input [15:0]drp_drpdo;
  input dclk;
  input mdc;
  input mdio_in;
  input drp_drdy;
  input drp_gnt;
  input dclk_reset;
  input [4:0]prtad;
  input resetdone;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [3:0]gt_rxc;
  input [31:0]gt_rxd;

  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i/rx_66_out_reg0 ;
  wire [0:0]SR;
  wire areset_coreclk;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [3:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [0:0]loopback_ctrl;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [2:0]pma_pmd_type;
  wire [4:0]prtad;
  wire \q_reg[0] ;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxdatavalid;
  wire rxheadervalid;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_baser_top \BASER.ten_gig_eth_pcs_pma_inst 
       (.E(\G_7SERIES_RXRATECOUNTER.rxratecounter_i/rx_66_out_reg0 ),
        .areset_coreclk(areset_coreclk),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(loopback_ctrl),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .out(rx_prbs31_en),
        .pma_pmd_type(pma_pmd_type),
        .prtad(prtad),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[2] (SR),
        .reset(reset),
        .resetdone(resetdone),
        .rxdatavalid(rxdatavalid),
        .rxheadervalid(rxheadervalid),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  LUT2 #(
    .INIT(4'h8)) 
    \rx_66_out[33]_i_1 
       (.I0(rxdatavalid),
        .I1(rxheadervalid),
        .O(\G_7SERIES_RXRATECOUNTER.rxratecounter_i/rx_66_out_reg0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_baser_top" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_baser_top
   (out,
    tx_disable,
    core_status,
    tx_prbs31_en,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    rxdatavalid,
    rxheadervalid,
    \q_reg[2] ,
    drp_den,
    drp_daddr,
    drp_di,
    gt_txd,
    gt_txc,
    xgmii_rxd,
    xgmii_rxc,
    \q_reg[0] ,
    mdio_out,
    mdio_tri,
    loopback_ctrl,
    drp_req,
    drp_dwe,
    signal_detect,
    rxusrclk2,
    txusrclk2,
    coreclk,
    resetdone,
    gt_rxc,
    txreset_txusrclk2,
    pma_pmd_type,
    areset_coreclk,
    xgmii_txd,
    xgmii_txc,
    gt_rxd,
    E,
    rxreset_rxusrclk2,
    reset,
    drp_drpdo,
    dclk,
    mdc,
    mdio_in,
    drp_drdy,
    drp_gnt,
    dclk_reset,
    prtad);
  output [0:0]out;
  output tx_disable;
  output [0:0]core_status;
  output tx_prbs31_en;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output rxdatavalid;
  output rxheadervalid;
  output \q_reg[2] ;
  output drp_den;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output \q_reg[0] ;
  output mdio_out;
  output mdio_tri;
  output [0:0]loopback_ctrl;
  output drp_req;
  output drp_dwe;
  input signal_detect;
  input rxusrclk2;
  input txusrclk2;
  input coreclk;
  input resetdone;
  input [3:0]gt_rxc;
  input txreset_txusrclk2;
  input [2:0]pma_pmd_type;
  input areset_coreclk;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [31:0]gt_rxd;
  input [0:0]E;
  input rxreset_rxusrclk2;
  input reset;
  input [15:0]drp_drpdo;
  input dclk;
  input mdc;
  input mdio_in;
  input drp_drdy;
  input drp_gnt;
  input dclk_reset;
  input [4:0]prtad;

  wire [0:0]E;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_14 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_16 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 ;
  wire \G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_10 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_11 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_12 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_13 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_14 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_15 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_16 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_17 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_18 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_19 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_20 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_21 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_22 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_23 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_24 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_25 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_26 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_27 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_28 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_29 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_30 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_31 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_32 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_33 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_34 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_35 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_36 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_37 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_38 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_7 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_8 ;
  wire \G_7SERIES_TXFIFO.txratefifo_i_n_9 ;
  wire areset_coreclk;
  wire b_lock;
  wire ber_count_inc;
  wire clear_rx_prbs_err_count;
  wire clear_rx_prbs_err_count0;
  wire clear_test_pattern_err_count;
  wire clear_test_pattern_err_count_reg;
  wire clear_test_pattern_error_count;
  wire core_in_testmode;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire coreclk_rxusrclk2_resyncs_i_n_3;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  (* RTL_KEEP = "true" *) wire eq_rxusrclk2_en156;
  wire err_block_count_inc;
  wire [3:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire gt_slip_i_1_n_0;
  wire gt_slip_int;
  wire gt_slip_reg__0;
  wire [7:0]gt_txc;
  wire [6:0]gt_txc_mux;
  wire [31:0]gt_txd;
  wire hiber;
  wire [0:0]loopback_ctrl;
  wire management_inst_n_172;
  wire management_inst_n_173;
  wire mcp1_gt_slip_int_reg;
  wire [65:2]mcp1_rx_66_raw;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [0:0]out;
  wire pcs_ber_count_control_core_int;
  wire pcs_error_block_count_control_core_int;
  wire pcs_hi_ber_core_int;
  wire pcs_loopback_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_reset_core_reg;
  wire pcs_rx_link_up_core_reg;
  wire pcs_rx_link_up_core_sync_int;
  wire pcs_rxreset;
  wire pcs_rxreset_int;
  wire pcs_test_pattern_error_count_control_core_int;
  wire pcs_top_i_n_1;
  wire pcs_top_i_n_10;
  wire pcs_top_i_n_154;
  wire pcs_top_i_n_159;
  wire pcs_top_i_n_7;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire prbs31_rx_enable_core_int;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_rega;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire prbs31_rx_enable_core_regb;
  wire prbs31_tx_enable_core_int;
  wire prbs31_tx_enable_core_reg;
  wire [4:0]prtad;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \q_reg[2] ;
  wire reset;
  wire resetdone;
  wire [65:0]rx_66_raw_int;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_2 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_3 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_4 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_5 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_6 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_7 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_2 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_3 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_4 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_5 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_6 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_7 ;
  wire \rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ;
  wire \rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ;
  wire [33:0]rx_gt;
  wire [1:0]\rx_pcs_i/rx_66_enc ;
  wire \rx_pcs_i/rx_block_lock_fsm_i/mcp1_state ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord0 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord1 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord2 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord3 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord5 ;
  wire [2:2]\rx_pcs_i/rx_decoder_i/DecodeWord6 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ;
  wire \rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ;
  wire rx_test_mode_int;
  wire rx_test_mode_int_reg;
  wire rx_test_patt_sel_int;
  wire rx_test_pattern_enable_core_int;
  wire [7:0]rx_xgmii_ctrl_int;
  wire [63:0]rx_xgmii_data_int;
  wire rxdatavalid;
  wire rxheadervalid;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire rxusrclk2_en156;
  wire [6:6]sel0;
  wire signal_detect;
  wire signal_detect_sync;
  wire test_data_patt_sel_int;
  wire test_patt_sel_int;
  wire [15:0]timer_125us_cycles_core_int;
  wire [65:0]tx_66_scr_int;
  wire tx_disable;
  wire tx_disable_int;
  wire \tx_pcs_i/pcs_scramble_i/new_tx_test_seed ;
  wire [0:0]\tx_pcs_i/tx_66_enc_fsm ;
  wire [0:0]\tx_pcs_i/tx_test_patt_seed_sel ;
  wire tx_prbs31_en;
  wire tx_test_pattern_enable_core_int;
  wire txreset_txusrclk2;
  wire [5:0]txsequence;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]xgmii_txc_reg2;
  wire [63:0]xgmii_txd;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]xgmii_txd_reg2;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxratecounter \G_7SERIES_RXRATECOUNTER.rxratecounter_i 
       (.D(rx_66_raw_int),
        .DecodeWord0(\rx_pcs_i/rx_decoder_i/DecodeWord0 ),
        .DecodeWord1(\rx_pcs_i/rx_decoder_i/DecodeWord1 ),
        .DecodeWord2(\rx_pcs_i/rx_decoder_i/DecodeWord2 ),
        .DecodeWord3(\rx_pcs_i/rx_decoder_i/DecodeWord3 ),
        .DecodeWord5(\rx_pcs_i/rx_decoder_i/DecodeWord5 ),
        .DecodeWord6(\rx_pcs_i/rx_decoder_i/DecodeWord6 ),
        .E({rxusrclk2_en156,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 }),
        .Q(rx_gt),
        .SR(\rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ),
        .eq_rxusrclk2_en156(eq_rxusrclk2_en156),
        .\mcp1_dec_c0_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ),
        .\mcp1_dec_c2_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ),
        .\mcp1_dec_c3_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ),
        .\mcp1_dec_c4_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ),
        .\mcp1_dec_c5_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ),
        .\mcp1_dec_c6_reg[7] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ),
        .\mcp1_dec_c6_reg[7]_0 (\rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ),
        .\mcp1_dec_c7_reg[7] (\rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ),
        .mcp1_err_block_count_inc_out_reg(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_14 ),
        .\mcp1_r_type_next_reg_reg[2] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_16 ),
        .\mcp1_rx_64_data_out_reg[63] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 }),
        .\mcp1_rx_66_enc_reg_reg[18] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 }),
        .\mcp1_rx_66_enc_reg_reg[65] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ),
        .\mcp1_rx_66_raw_reg[46] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .\mcp1_rx_ebuff_ctrl_reg[1] ({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 }),
        .\mcp1_rx_ebuff_data_reg[0] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .mcp1_state(\rx_pcs_i/rx_block_lock_fsm_i/mcp1_state ),
        .\mcp1_state_reg[0] (pcs_top_i_n_154),
        .\rx_66_enc_reg_reg[10] (pcs_top_i_n_159),
        .\rx_66_enc_reg_reg[45] (pcs_top_i_n_7),
        .\rx_66_enc_reg_reg[46] (\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ),
        .rxdatavalid(rxdatavalid),
        .rxdatavalid_reg(E),
        .rxheadervalid(rxheadervalid),
        .rxreset_5_reg(pcs_top_i_n_1),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_txratefifo \G_7SERIES_TXFIFO.txratefifo_i 
       (.D({\G_7SERIES_TXFIFO.txratefifo_i_n_7 ,\G_7SERIES_TXFIFO.txratefifo_i_n_8 ,\G_7SERIES_TXFIFO.txratefifo_i_n_9 ,\G_7SERIES_TXFIFO.txratefifo_i_n_10 ,\G_7SERIES_TXFIFO.txratefifo_i_n_11 ,\G_7SERIES_TXFIFO.txratefifo_i_n_12 ,\G_7SERIES_TXFIFO.txratefifo_i_n_13 ,\G_7SERIES_TXFIFO.txratefifo_i_n_14 ,\G_7SERIES_TXFIFO.txratefifo_i_n_15 ,\G_7SERIES_TXFIFO.txratefifo_i_n_16 ,\G_7SERIES_TXFIFO.txratefifo_i_n_17 ,\G_7SERIES_TXFIFO.txratefifo_i_n_18 ,\G_7SERIES_TXFIFO.txratefifo_i_n_19 ,\G_7SERIES_TXFIFO.txratefifo_i_n_20 ,\G_7SERIES_TXFIFO.txratefifo_i_n_21 ,\G_7SERIES_TXFIFO.txratefifo_i_n_22 ,\G_7SERIES_TXFIFO.txratefifo_i_n_23 ,\G_7SERIES_TXFIFO.txratefifo_i_n_24 ,\G_7SERIES_TXFIFO.txratefifo_i_n_25 ,\G_7SERIES_TXFIFO.txratefifo_i_n_26 ,\G_7SERIES_TXFIFO.txratefifo_i_n_27 ,\G_7SERIES_TXFIFO.txratefifo_i_n_28 ,\G_7SERIES_TXFIFO.txratefifo_i_n_29 ,\G_7SERIES_TXFIFO.txratefifo_i_n_30 ,\G_7SERIES_TXFIFO.txratefifo_i_n_31 ,\G_7SERIES_TXFIFO.txratefifo_i_n_32 ,\G_7SERIES_TXFIFO.txratefifo_i_n_33 ,\G_7SERIES_TXFIFO.txratefifo_i_n_34 ,\G_7SERIES_TXFIFO.txratefifo_i_n_35 ,\G_7SERIES_TXFIFO.txratefifo_i_n_36 ,\G_7SERIES_TXFIFO.txratefifo_i_n_37 ,\G_7SERIES_TXFIFO.txratefifo_i_n_38 }),
        .Q({txsequence[5],gt_txc_mux[6:5],txsequence[2:0]}),
        .coreclk(coreclk),
        .fifo_full(pma_pmd_status_tx_fault_core_int),
        .\gt_txc_reg[1] (gt_txc_mux[1:0]),
        .reset(reset),
        .sel0(sel0),
        .tx_66_fifo(tx_66_scr_int),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2));
  FDRE #(
    .INIT(1'b0)) 
    clear_rx_prbs_err_count_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(clear_rx_prbs_err_count0),
        .Q(clear_rx_prbs_err_count),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    clear_test_pattern_err_count_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(clear_test_pattern_err_count),
        .Q(clear_test_pattern_err_count_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    core_in_testmode_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(core_in_testmode_wire),
        .Q(core_in_testmode),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer coreclk_rxusrclk2_resets_resyncs_i
       (.pcs_reset_core_reg(pcs_reset_core_reg),
        .pcs_rxreset_int(pcs_rxreset_int),
        .rxreset(pcs_rxreset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs_en coreclk_rxusrclk2_resyncs2_i
       (.E(rxusrclk2_en156),
        .clear_test_pattern_err_count_reg(clear_test_pattern_err_count_reg),
        .clear_test_pattern_error_count(clear_test_pattern_error_count),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en__parameterized0 coreclk_rxusrclk2_resyncs_i
       (.E(rxusrclk2_en156),
        .clear_rx_prbs_err_count0(clear_rx_prbs_err_count0),
        .clear_test_pattern_error_count(clear_test_pattern_error_count),
        .data_pattern_select_core(test_data_patt_sel_int),
        .out({out,rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .pcs_rxreset_int(pcs_rxreset_int),
        .prbs31_rx_enable_core_rega_reg(prbs31_rx_enable_core_rega),
        .rx_test_pattern_enable_core(rx_test_pattern_enable_core_int),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__8(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .test_pattern_select_core(test_patt_sel_int));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs__parameterized0 coreclk_txusrclk2_resyncs_i
       (.pcs_loopback_core_int(pcs_loopback_core_int),
        .prbs31_tx_enable_core_reg(prbs31_tx_enable_core_reg),
        .sel0(sel0),
        .tx_prbs31_en(tx_prbs31_en),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer_wrapper \ebuff_gen.rx_elastic_buffer_i 
       (.Q(rx_xgmii_data_int),
        .comp_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ),
        .comp_0_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ),
        .comp_0_12(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ),
        .comp_0_9(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ),
        .comp_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ),
        .comp_1_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ),
        .comp_1_10(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ),
        .comp_1_13(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ),
        .comp_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_2 ),
        .comp_2_11(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ),
        .comp_2_14(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ),
        .comp_2_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_2 ),
        .comp_3(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_3 ),
        .comp_3_3(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_3 ),
        .comp_4(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_4 ),
        .comp_4_4(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_4 ),
        .comp_5(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_5 ),
        .comp_5_5(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_5 ),
        .comp_6(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_6 ),
        .comp_6_6(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_6 ),
        .comp_7(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_7 ),
        .comp_7_7(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_7 ),
        .comp_8(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ),
        .comp_8_8(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ),
        .coreclk(coreclk),
        .eq_rxusrclk2_en156_reg(eq_rxusrclk2_en156),
        .\mcp1_rx_ebuff_ctrl_reg[7] (rx_xgmii_ctrl_int),
        .out(xgmii_txd_reg2),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (xgmii_txc_reg2));
  LUT2 #(
    .INIT(4'h2)) 
    gt_slip_i_1
       (.I0(mcp1_gt_slip_int_reg),
        .I1(gt_slip_reg__0),
        .O(gt_slip_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_slip_i_1_n_0),
        .Q(gt_slip),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    gt_slip_reg_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_gt_slip_int_reg),
        .Q(gt_slip_reg__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[0]),
        .Q(gt_txc[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[1]),
        .Q(gt_txc[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[0]),
        .Q(gt_txc[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[1]),
        .Q(gt_txc[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[2]),
        .Q(gt_txc[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[5]),
        .Q(gt_txc[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(gt_txc_mux[6]),
        .Q(gt_txc[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txc_reg[7] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence[5]),
        .Q(gt_txc[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_38 ),
        .Q(gt_txd[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[10] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_28 ),
        .Q(gt_txd[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[11] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_27 ),
        .Q(gt_txd[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[12] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_26 ),
        .Q(gt_txd[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[13] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_25 ),
        .Q(gt_txd[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[14] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_24 ),
        .Q(gt_txd[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[15] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_23 ),
        .Q(gt_txd[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[16] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_22 ),
        .Q(gt_txd[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[17] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_21 ),
        .Q(gt_txd[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[18] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_20 ),
        .Q(gt_txd[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[19] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_19 ),
        .Q(gt_txd[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_37 ),
        .Q(gt_txd[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[20] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_18 ),
        .Q(gt_txd[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[21] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_17 ),
        .Q(gt_txd[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[22] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_16 ),
        .Q(gt_txd[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[23] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_15 ),
        .Q(gt_txd[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[24] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_14 ),
        .Q(gt_txd[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[25] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_13 ),
        .Q(gt_txd[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[26] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_12 ),
        .Q(gt_txd[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[27] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_11 ),
        .Q(gt_txd[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[28] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_10 ),
        .Q(gt_txd[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[29] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_9 ),
        .Q(gt_txd[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_36 ),
        .Q(gt_txd[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[30] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_8 ),
        .Q(gt_txd[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[31] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_7 ),
        .Q(gt_txd[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_35 ),
        .Q(gt_txd[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_34 ),
        .Q(gt_txd[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_33 ),
        .Q(gt_txd[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_32 ),
        .Q(gt_txd[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[7] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_31 ),
        .Q(gt_txd[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[8] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_30 ),
        .Q(gt_txd[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gt_txd_reg[9] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(\G_7SERIES_TXFIFO.txratefifo_i_n_29 ),
        .Q(gt_txd[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_management_top management_inst
       (.Q(timer_125us_cycles_core_int),
        .SR(\q_reg[2] ),
        .areset_coreclk(areset_coreclk),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .counter_out(pcs_error_block_count_control_core_int),
        .counter_out_reg(pcs_ber_count_control_core_int),
        .counter_out_reg_0(pcs_test_pattern_error_count_control_core_int),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .global_pmd_rx_signal_detect_core_i(signal_detect_sync),
        .loopback_ctrl(loopback_ctrl),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .new_tx_test_seed(\tx_pcs_i/pcs_scramble_i/new_tx_test_seed ),
        .pcs_hi_ber_core_i(pcs_hi_ber_core_int),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .pma_pmd_status_tx_fault_core_int(pma_pmd_status_tx_fault_core_int),
        .pma_pmd_type(pma_pmd_type),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_rx_enable_core_regb_reg(prbs31_rx_enable_core_regb),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .prbs31_tx_enable_core_reg_reg({tx_test_pattern_enable_core_int,rx_test_pattern_enable_core_int,test_patt_sel_int,test_data_patt_sel_int}),
        .prtad(prtad),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (\q_reg[0] ),
        .\rd_data_reg[7] (management_inst_n_173),
        .reset(reset),
        .resetdone(resetdone),
        .\scr_reg_reg[57] (management_inst_n_172),
        .\tx_66_enc_out_reg[0] (\tx_pcs_i/tx_66_enc_fsm ),
        .tx_66_fifo(tx_66_scr_int[0]),
        .tx_disable_int(tx_disable_int),
        .\tx_test_patt_seed_sel_reg[0] (\tx_pcs_i/tx_test_patt_seed_sel ));
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    mcp1_gt_slip_int_reg_reg
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ),
        .D(gt_slip_int),
        .Q(mcp1_gt_slip_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[0] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[0]),
        .Q(\rx_pcs_i/rx_66_enc [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[10] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[10]),
        .Q(mcp1_rx_66_raw[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[11] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[11]),
        .Q(mcp1_rx_66_raw[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[12] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[12]),
        .Q(mcp1_rx_66_raw[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[13] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[13]),
        .Q(mcp1_rx_66_raw[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[14] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[14]),
        .Q(mcp1_rx_66_raw[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[15] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[15]),
        .Q(mcp1_rx_66_raw[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[16] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[16]),
        .Q(mcp1_rx_66_raw[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[17] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[17]),
        .Q(mcp1_rx_66_raw[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[18] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[18]),
        .Q(mcp1_rx_66_raw[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[19] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[19]),
        .Q(mcp1_rx_66_raw[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[1] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[1]),
        .Q(\rx_pcs_i/rx_66_enc [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[20] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[20]),
        .Q(mcp1_rx_66_raw[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[21] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[21]),
        .Q(mcp1_rx_66_raw[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[22] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[22]),
        .Q(mcp1_rx_66_raw[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[23] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[23]),
        .Q(mcp1_rx_66_raw[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[24] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[24]),
        .Q(mcp1_rx_66_raw[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[25] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[25]),
        .Q(mcp1_rx_66_raw[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[26] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[26]),
        .Q(mcp1_rx_66_raw[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[27] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[27]),
        .Q(mcp1_rx_66_raw[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[28] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[28]),
        .Q(mcp1_rx_66_raw[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[29] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[29]),
        .Q(mcp1_rx_66_raw[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[2] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[2]),
        .Q(mcp1_rx_66_raw[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[30] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[30]),
        .Q(mcp1_rx_66_raw[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[31] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[31]),
        .Q(mcp1_rx_66_raw[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[32] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[32]),
        .Q(mcp1_rx_66_raw[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[33] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[33]),
        .Q(mcp1_rx_66_raw[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[34] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[34]),
        .Q(mcp1_rx_66_raw[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[35] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[35]),
        .Q(mcp1_rx_66_raw[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[36] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[36]),
        .Q(mcp1_rx_66_raw[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[37] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[37]),
        .Q(mcp1_rx_66_raw[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[38] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[38]),
        .Q(mcp1_rx_66_raw[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[39] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[39]),
        .Q(mcp1_rx_66_raw[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[3] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[3]),
        .Q(mcp1_rx_66_raw[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[40] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[40]),
        .Q(mcp1_rx_66_raw[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[41] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[41]),
        .Q(mcp1_rx_66_raw[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[42] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[42]),
        .Q(mcp1_rx_66_raw[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[43] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[43]),
        .Q(mcp1_rx_66_raw[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[44] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[44]),
        .Q(mcp1_rx_66_raw[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[45] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[45]),
        .Q(mcp1_rx_66_raw[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[46] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[46]),
        .Q(mcp1_rx_66_raw[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[47] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[47]),
        .Q(mcp1_rx_66_raw[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[48] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[48]),
        .Q(mcp1_rx_66_raw[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[49] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[49]),
        .Q(mcp1_rx_66_raw[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[4] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[4]),
        .Q(mcp1_rx_66_raw[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[50] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[50]),
        .Q(mcp1_rx_66_raw[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[51] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[51]),
        .Q(mcp1_rx_66_raw[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[52] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[52]),
        .Q(mcp1_rx_66_raw[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[53] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[53]),
        .Q(mcp1_rx_66_raw[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[54] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[54]),
        .Q(mcp1_rx_66_raw[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[55] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[55]),
        .Q(mcp1_rx_66_raw[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[56] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[56]),
        .Q(mcp1_rx_66_raw[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[57] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[57]),
        .Q(mcp1_rx_66_raw[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[58] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[58]),
        .Q(mcp1_rx_66_raw[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[59] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[59]),
        .Q(mcp1_rx_66_raw[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[5] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[5]),
        .Q(mcp1_rx_66_raw[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[60] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[60]),
        .Q(mcp1_rx_66_raw[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[61] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[61]),
        .Q(mcp1_rx_66_raw[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[62] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[62]),
        .Q(mcp1_rx_66_raw[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[63] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[63]),
        .Q(mcp1_rx_66_raw[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[64] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[64]),
        .Q(mcp1_rx_66_raw[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[65] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 ),
        .D(rx_66_raw_int[65]),
        .Q(mcp1_rx_66_raw[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[6] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[6]),
        .Q(mcp1_rx_66_raw[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[7] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[7]),
        .Q(mcp1_rx_66_raw[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[8] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[8]),
        .Q(mcp1_rx_66_raw[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_66_raw_reg[9] 
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_12 ),
        .D(rx_66_raw_int[9]),
        .Q(mcp1_rx_66_raw[9]),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync norm_err_block_counter_i
       (.coreclk(coreclk),
        .counter_out(pcs_error_block_count_control_core_int),
        .err_block_count_inc(err_block_count_inc),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__10(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync_20 pcs_ber_counter_i
       (.ber_count_inc(ber_count_inc),
        .coreclk(coreclk),
        .counter_out(pcs_ber_count_control_core_int),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__10(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ));
  FDRE #(
    .INIT(1'b0)) 
    pcs_reset_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(\q_reg[2] ),
        .Q(pcs_reset_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pcs_rx_link_up_core_reg_reg
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ),
        .D(pcs_top_i_n_10),
        .Q(pcs_rx_link_up_core_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_top pcs_top_i
       (.D(xgmii_txc_reg),
        .E({rxusrclk2_en156,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_2 }),
        .Q(timer_125us_cycles_core_int),
        .SR(\rx_pcs_i/rx_decoder_i/mcp1_dec_c0 ),
        .b_lock(b_lock),
        .ber_count_inc(ber_count_inc),
        .comp_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_0 ),
        .comp_0_13(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_0 ),
        .comp_0_14(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_0 ),
        .comp_0_8(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_0 ),
        .comp_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_1 ),
        .comp_1_11(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_1 ),
        .comp_1_12(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_1 ),
        .comp_1_7(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_1 ),
        .comp_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_2 ),
        .comp_2_10(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i1/comp_2 ),
        .comp_2_5(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_2 ),
        .comp_2_6(\rx_elastic_buffer_i/idle_delete_i/seq_detect_i0/comp_2 ),
        .comp_3(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_3 ),
        .comp_3_4(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_3 ),
        .comp_4(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_4 ),
        .comp_4_3(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_4 ),
        .comp_5(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_5 ),
        .comp_5_2(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_5 ),
        .comp_6(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_6 ),
        .comp_6_1(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_6 ),
        .comp_7(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_7 ),
        .comp_7_0(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_7 ),
        .comp_8(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i0/comp_8 ),
        .comp_8_9(\rx_elastic_buffer_i/idle_delete_i/idle_detect_i1/comp_8 ),
        .coreclk(coreclk),
        .data_out_reg(\q_reg[2] ),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .hiber(hiber),
        .\mcp1_ctrl_pipe_reg[7] (rx_xgmii_ctrl_int),
        .\mcp1_data_pipe_reg[63] (rx_xgmii_data_int),
        .\mcp1_dec_c0_reg[2] (pcs_top_i_n_159),
        .\mcp1_dec_c1_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord0 ),
        .\mcp1_dec_c2_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord1 ),
        .\mcp1_dec_c3_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord2 ),
        .\mcp1_dec_c4_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord3 ),
        .\mcp1_dec_c5_reg[2] (pcs_top_i_n_7),
        .\mcp1_dec_c6_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord5 ),
        .\mcp1_dec_c7_reg[2] (\rx_pcs_i/rx_decoder_i/DecodeWord6 ),
        .\mcp1_rx_64_ctrl_out_reg[4] (pcs_top_i_n_1),
        .\mcp1_rx_66_raw_reg[65] ({mcp1_rx_66_raw,\rx_pcs_i/rx_66_enc }),
        .mcp1_state(\rx_pcs_i/rx_block_lock_fsm_i/mcp1_state ),
        .\mcp1_state_reg[1] (pcs_top_i_n_154),
        .new_tx_test_seed(\tx_pcs_i/pcs_scramble_i/new_tx_test_seed ),
        .out({rx_test_mode_int,rx_test_patt_sel_int,coreclk_rxusrclk2_resyncs_i_n_3}),
        .pcs_rx_link_up_core_reg_reg(pcs_top_i_n_10),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[1] (management_inst_n_173),
        .\q_reg[3] ({tx_test_pattern_enable_core_int,test_patt_sel_int}),
        .\q_reg[3]_0 (management_inst_n_172),
        .\rd_data_reg[1] (\tx_pcs_i/tx_66_enc_fsm ),
        .reset(reset),
        .rxreset(pcs_rxreset),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__1(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_5 ),
        .rxusrclk2_en156_reg_rep__10(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ),
        .rxusrclk2_en156_reg_rep__10_0(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_16 ),
        .rxusrclk2_en156_reg_rep__10_1(\rx_pcs_i/rx_decoder_i/mcp1_dec_c1 ),
        .rxusrclk2_en156_reg_rep__10_2(\rx_pcs_i/rx_decoder_i/mcp1_dec_c2 ),
        .rxusrclk2_en156_reg_rep__10_3(\rx_pcs_i/rx_decoder_i/mcp1_dec_c3 ),
        .rxusrclk2_en156_reg_rep__10_4(\rx_pcs_i/rx_decoder_i/mcp1_dec_c4 ),
        .rxusrclk2_en156_reg_rep__10_5(\rx_pcs_i/rx_decoder_i/mcp1_dec_c5 ),
        .rxusrclk2_en156_reg_rep__10_6(\rx_pcs_i/rx_decoder_i/mcp1_dec_c6 ),
        .rxusrclk2_en156_reg_rep__10_7(\rx_pcs_i/rx_decoder_i/mcp1_dec_c7 ),
        .rxusrclk2_en156_reg_rep__11(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_14 ),
        .rxusrclk2_en156_reg_rep__2({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_3 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_4 }),
        .rxusrclk2_en156_reg_rep__3(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_6 ),
        .rxusrclk2_en156_reg_rep__5(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_9 ),
        .rxusrclk2_en156_reg_rep__6({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_8 }),
        .rxusrclk2_en156_reg_rep__7({\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_10 ,\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_11 }),
        .signal_detect(signal_detect),
        .tx_66_fifo(tx_66_scr_int[65:1]),
        .\tx_test_patt_seed_sel_reg[1] (\tx_pcs_i/tx_test_patt_seed_sel ),
        .\xgmii_txd_reg_reg[63] (xgmii_txd_reg));
  FDRE #(
    .INIT(1'b0)) 
    pma_pmd_reset_clear_core_intr_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(resetdone),
        .Q(pcs_reset_clear_core_intr),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_rega_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_rega),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    prbs31_rx_enable_core_regb_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_rx_enable_core_int),
        .Q(prbs31_rx_enable_core_regb),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    prbs31_tx_enable_core_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(prbs31_tx_enable_core_int),
        .Q(prbs31_tx_enable_core_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[0]),
        .Q(rx_gt[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[10] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[8]),
        .Q(rx_gt[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[11] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[9]),
        .Q(rx_gt[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[12] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[10]),
        .Q(rx_gt[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[13] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[11]),
        .Q(rx_gt[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[14] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[12]),
        .Q(rx_gt[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[15] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[13]),
        .Q(rx_gt[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[16] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[14]),
        .Q(rx_gt[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[17] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[15]),
        .Q(rx_gt[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[18] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[16]),
        .Q(rx_gt[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[19] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[17]),
        .Q(rx_gt[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[1]),
        .Q(rx_gt[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[20] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[18]),
        .Q(rx_gt[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[21] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[19]),
        .Q(rx_gt[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[22] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[20]),
        .Q(rx_gt[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[23] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[21]),
        .Q(rx_gt[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[24] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[22]),
        .Q(rx_gt[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[25] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[23]),
        .Q(rx_gt[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[26] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[24]),
        .Q(rx_gt[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[27] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[25]),
        .Q(rx_gt[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[28] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[26]),
        .Q(rx_gt[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[29] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[27]),
        .Q(rx_gt[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[0]),
        .Q(rx_gt[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[30] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[28]),
        .Q(rx_gt[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[31] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[29]),
        .Q(rx_gt[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[32] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[30]),
        .Q(rx_gt[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[33] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[31]),
        .Q(rx_gt[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[3] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[1]),
        .Q(rx_gt[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[2]),
        .Q(rx_gt[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[5] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[3]),
        .Q(rx_gt[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[6] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[4]),
        .Q(rx_gt[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[7] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[5]),
        .Q(rx_gt[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[8] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[6]),
        .Q(rx_gt[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_gt_reg[9] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxd[7]),
        .Q(rx_gt[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rx_test_mode_int_reg_reg
       (.C(rxusrclk2),
        .CE(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_7 ),
        .D(rx_test_mode_int),
        .Q(rx_test_mode_int_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxdatavalid_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[2]),
        .Q(rxdatavalid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxheadervalid_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(gt_rxc[3]),
        .Q(rxheadervalid),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs rxusrclk2_coreclk_resyncs_i
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk),
        .hiber(hiber),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int),
        .pcs_rx_link_up_core_reg(pcs_rx_link_up_core_reg),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_21 synch_4
       (.tx_disable(tx_disable),
        .tx_disable_int(tx_disable_int),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_22 synch_5
       (.coreclk(coreclk),
        .signal_detect(signal_detect),
        .signal_detect_sync(signal_detect_sync));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync_23 test_err_block_counter_i
       (.coreclk(coreclk),
        .counter_out(pcs_test_pattern_error_count_control_core_int),
        .err_block_count_inc(err_block_count_inc),
        .out(out),
        .rx_test_mode_int_reg(rx_test_mode_int_reg),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__10(\G_7SERIES_RXRATECOUNTER.rxratecounter_i_n_13 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(xgmii_txc_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(xgmii_txc_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(xgmii_txc_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(xgmii_txc_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(xgmii_txc_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(xgmii_txc_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(xgmii_txc_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txc_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(xgmii_txc_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg2[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(xgmii_txd_reg[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(xgmii_txd_reg[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(xgmii_txd_reg[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(xgmii_txd_reg[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(xgmii_txd_reg[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(xgmii_txd_reg[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(xgmii_txd_reg[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(xgmii_txd_reg[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(xgmii_txd_reg[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(xgmii_txd_reg[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(xgmii_txd_reg[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(xgmii_txd_reg[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(xgmii_txd_reg[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(xgmii_txd_reg[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(xgmii_txd_reg[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(xgmii_txd_reg[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(xgmii_txd_reg[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(xgmii_txd_reg[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(xgmii_txd_reg[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(xgmii_txd_reg[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(xgmii_txd_reg[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(xgmii_txd_reg[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(xgmii_txd_reg[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(xgmii_txd_reg[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(xgmii_txd_reg[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(xgmii_txd_reg[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(xgmii_txd_reg[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(xgmii_txd_reg[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(xgmii_txd_reg[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(xgmii_txd_reg[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(xgmii_txd_reg[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(xgmii_txd_reg[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(xgmii_txd_reg[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(xgmii_txd_reg[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(xgmii_txd_reg[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(xgmii_txd_reg[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(xgmii_txd_reg[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(xgmii_txd_reg[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(xgmii_txd_reg[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(xgmii_txd_reg[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(xgmii_txd_reg[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(xgmii_txd_reg[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(xgmii_txd_reg[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(xgmii_txd_reg[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(xgmii_txd_reg[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(xgmii_txd_reg[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(xgmii_txd_reg[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(xgmii_txd_reg[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(xgmii_txd_reg[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(xgmii_txd_reg[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(xgmii_txd_reg[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(xgmii_txd_reg[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(xgmii_txd_reg[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(xgmii_txd_reg[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(xgmii_txd_reg[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(xgmii_txd_reg[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(xgmii_txd_reg[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(xgmii_txd_reg[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(xgmii_txd_reg[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(xgmii_txd_reg[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(xgmii_txd_reg[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(xgmii_txd_reg[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(xgmii_txd_reg[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \xgmii_txd_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(xgmii_txd_reg[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en
   (out,
    rxusrclk2,
    Q,
    E,
    rxusrclk2_en156_reg_rep__4,
    rxusrclk2_en156_reg_rep__2);
  output [15:0]out;
  input rxusrclk2;
  input [15:0]Q;
  input [0:0]E;
  input [0:0]rxusrclk2_en156_reg_rep__4;
  input [0:0]rxusrclk2_en156_reg_rep__2;

  wire [0:0]E;
  wire [15:0]Q;
  wire [1:1]comp_res;
  wire \comp_res[0]_i_3_n_0 ;
  wire \comp_res[0]_i_4_n_0 ;
  wire \comp_res[0]_i_5_n_0 ;
  wire \comp_res[0]_i_6_n_0 ;
  wire \comp_res[0]_i_7_n_0 ;
  wire \comp_res[0]_i_8_n_0 ;
  wire \comp_res_reg[0]_i_1_n_3 ;
  wire \comp_res_reg[0]_i_2_n_0 ;
  wire \comp_res_reg[0]_i_2_n_1 ;
  wire \comp_res_reg[0]_i_2_n_2 ;
  wire \comp_res_reg[0]_i_2_n_3 ;
  (* RTL_KEEP = "true" *) wire [15:0]d4;
  (* RTL_KEEP = "true" *) wire [15:0]d5;
  (* RTL_KEEP = "true" *) wire [15:0]outreg;
  wire [15:0]outreg_in;
  wire [1:0]p_0_in__0;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg_rep__2;
  wire [0:0]rxusrclk2_en156_reg_rep__4;
  wire [3:2]\NLW_comp_res_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_comp_res_reg[0]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_comp_res_reg[0]_i_2_O_UNCONNECTED ;

  assign out[15:0] = outreg;
  LUT2 #(
    .INIT(4'h9)) 
    \comp_res[0]_i_3 
       (.I0(d5[15]),
        .I1(d4[15]),
        .O(\comp_res[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_4 
       (.I0(d5[14]),
        .I1(d4[14]),
        .I2(d5[13]),
        .I3(d4[13]),
        .I4(d4[12]),
        .I5(d5[12]),
        .O(\comp_res[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_5 
       (.I0(d5[11]),
        .I1(d4[11]),
        .I2(d5[9]),
        .I3(d4[9]),
        .I4(d4[10]),
        .I5(d5[10]),
        .O(\comp_res[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_6 
       (.I0(d5[8]),
        .I1(d4[8]),
        .I2(d5[7]),
        .I3(d4[7]),
        .I4(d4[6]),
        .I5(d5[6]),
        .O(\comp_res[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_7 
       (.I0(d5[5]),
        .I1(d4[5]),
        .I2(d5[4]),
        .I3(d4[4]),
        .I4(d4[3]),
        .I5(d5[3]),
        .O(\comp_res[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \comp_res[0]_i_8 
       (.I0(d5[2]),
        .I1(d4[2]),
        .I2(d5[1]),
        .I3(d4[1]),
        .I4(d4[0]),
        .I5(d5[0]),
        .O(\comp_res[0]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2),
        .D(p_0_in__0[0]),
        .Q(p_0_in__0[1]),
        .R(1'b0));
  CARRY4 \comp_res_reg[0]_i_1 
       (.CI(\comp_res_reg[0]_i_2_n_0 ),
        .CO({\NLW_comp_res_reg[0]_i_1_CO_UNCONNECTED [3:2],p_0_in__0[0],\comp_res_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_comp_res_reg[0]_i_1_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\comp_res[0]_i_3_n_0 ,\comp_res[0]_i_4_n_0 }));
  CARRY4 \comp_res_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\comp_res_reg[0]_i_2_n_0 ,\comp_res_reg[0]_i_2_n_1 ,\comp_res_reg[0]_i_2_n_2 ,\comp_res_reg[0]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_comp_res_reg[0]_i_2_O_UNCONNECTED [3:0]),
        .S({\comp_res[0]_i_5_n_0 ,\comp_res[0]_i_6_n_0 ,\comp_res[0]_i_7_n_0 ,\comp_res[0]_i_8_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2),
        .D(p_0_in__0[1]),
        .Q(comp_res),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[10]),
        .Q(d5[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[11]),
        .Q(d5[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[12]),
        .Q(d5[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[13]),
        .Q(d5[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[14]),
        .Q(d5[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[15]),
        .Q(d5[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[4]),
        .Q(d5[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[5]),
        .Q(d5[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[6]),
        .Q(d5[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[7]),
        .Q(d5[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[8]),
        .Q(d5[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(d4[9]),
        .Q(d5[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[0]_i_1 
       (.I0(d5[0]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[0]),
        .O(outreg_in[0]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[10]_i_1 
       (.I0(d5[10]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[10]),
        .O(outreg_in[10]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[11]_i_1 
       (.I0(d5[11]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[11]),
        .O(outreg_in[11]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[12]_i_1 
       (.I0(d5[12]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[12]),
        .O(outreg_in[12]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[13]_i_1 
       (.I0(d5[13]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[13]),
        .O(outreg_in[13]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[14]_i_1 
       (.I0(d5[14]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[14]),
        .O(outreg_in[14]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[15]_i_1 
       (.I0(d5[15]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[15]),
        .O(outreg_in[15]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[1]_i_1 
       (.I0(d5[1]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[1]),
        .O(outreg_in[1]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[2]_i_1 
       (.I0(d5[2]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[2]),
        .O(outreg_in[2]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[3]_i_1 
       (.I0(d5[3]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[3]),
        .O(outreg_in[3]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[4]_i_1 
       (.I0(d5[4]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[4]),
        .O(outreg_in[4]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[5]_i_1 
       (.I0(d5[5]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[5]),
        .O(outreg_in[5]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[6]_i_1 
       (.I0(d5[6]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[6]),
        .O(outreg_in[6]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[7]_i_1 
       (.I0(d5[7]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[7]),
        .O(outreg_in[7]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[8]_i_1 
       (.I0(d5[8]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[8]),
        .O(outreg_in[8]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \outreg[9]_i_1 
       (.I0(d5[9]),
        .I1(comp_res),
        .I2(p_0_in__0[1]),
        .I3(outreg[9]),
        .O(outreg_in[9]));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[10]),
        .Q(outreg[10]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[11]),
        .Q(outreg[11]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[12]),
        .Q(outreg[12]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[13]),
        .Q(outreg[13]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[14]),
        .Q(outreg[14]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[15]),
        .Q(outreg[15]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[3]),
        .Q(outreg[3]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[4]),
        .Q(outreg[4]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[5]),
        .Q(outreg[5]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[6]),
        .Q(outreg[6]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[7]),
        .Q(outreg[7]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[8]),
        .Q(outreg[8]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(outreg_in[9]),
        .Q(outreg[9]),
        .R(1'b0));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__21 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[0]),
        .en(E),
        .q(d4[0]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__31 \resynch[10].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[10]),
        .en(E),
        .q(d4[10]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__32 \resynch[11].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[11]),
        .en(E),
        .q(d4[11]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__33 \resynch[12].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[12]),
        .en(E),
        .q(d4[12]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__34 \resynch[13].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[13]),
        .en(E),
        .q(d4[13]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__35 \resynch[14].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[14]),
        .en(E),
        .q(d4[14]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__36 \resynch[15].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[15]),
        .en(E),
        .q(d4[15]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__22 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[1]),
        .en(E),
        .q(d4[1]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__23 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[2]),
        .en(E),
        .q(d4[2]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__24 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[3]),
        .en(E),
        .q(d4[3]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__25 \resynch[4].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[4]),
        .en(E),
        .q(d4[4]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__26 \resynch[5].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[5]),
        .en(E),
        .q(d4[5]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__27 \resynch[6].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[6]),
        .en(E),
        .q(d4[6]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__28 \resynch[7].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[7]),
        .en(E),
        .q(d4[7]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__29 \resynch[8].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[8]),
        .en(E),
        .q(d4[8]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__30 \resynch[9].synchc_inst 
       (.clk(rxusrclk2),
        .d(Q[9]),
        .en(E),
        .q(d4[9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en__parameterized0
   (out,
    clear_rx_prbs_err_count0,
    rxusrclk2,
    data_pattern_select_core,
    E,
    test_pattern_select_core,
    rx_test_pattern_enable_core,
    prbs31_rx_enable_core_rega_reg,
    clear_test_pattern_error_count,
    pcs_rxreset_int,
    rxreset_rxusrclk2,
    rxusrclk2_en156_reg_rep__8);
  output [3:0]out;
  output clear_rx_prbs_err_count0;
  input rxusrclk2;
  input data_pattern_select_core;
  input [0:0]E;
  input test_pattern_select_core;
  input rx_test_pattern_enable_core;
  input prbs31_rx_enable_core_rega_reg;
  input clear_test_pattern_error_count;
  input pcs_rxreset_int;
  input rxreset_rxusrclk2;
  input [0:0]rxusrclk2_en156_reg_rep__8;

  wire [0:0]E;
  wire clear_rx_prbs_err_count0;
  wire clear_test_pattern_error_count;
  wire [1:0]comp_res;
  wire \comp_res[0]_i_2_n_0 ;
  (* RTL_KEEP = "true" *) wire [3:0]d4;
  (* RTL_KEEP = "true" *) wire [3:0]d5;
  wire data_pattern_select_core;
  (* RTL_KEEP = "true" *) wire [3:0]outreg;
  wire [3:0]outreg_in;
  wire pcs_rxreset_int;
  wire prbs31_rx_enable_core_rega_reg;
  wire rx_test_pattern_enable_core;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg_rep__8;
  wire stable;
  wire test_pattern_select_core;

  assign out[3:0] = outreg;
  LUT5 #(
    .INIT(32'h00000040)) 
    clear_rx_prbs_err_count_i_1
       (.I0(outreg[2]),
        .I1(clear_test_pattern_error_count),
        .I2(outreg[3]),
        .I3(pcs_rxreset_int),
        .I4(rxreset_rxusrclk2),
        .O(clear_rx_prbs_err_count0));
  LUT5 #(
    .INIT(32'h00009009)) 
    \comp_res[0]_i_1 
       (.I0(d5[1]),
        .I1(d4[1]),
        .I2(d5[0]),
        .I3(d4[0]),
        .I4(\comp_res[0]_i_2_n_0 ),
        .O(stable));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \comp_res[0]_i_2 
       (.I0(d4[3]),
        .I1(d5[3]),
        .I2(d4[2]),
        .I3(d5[2]),
        .O(\comp_res[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(stable),
        .Q(comp_res[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \comp_res_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(comp_res[0]),
        .Q(comp_res[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(d4[0]),
        .Q(d5[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(d4[1]),
        .Q(d5[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(d4[2]),
        .Q(d5[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \d5_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(d4[3]),
        .Q(d5[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \outreg[0]_i_1__0 
       (.I0(outreg[0]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(d5[0]),
        .O(outreg_in[0]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \outreg[1]_i_1__0 
       (.I0(outreg[1]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(d5[1]),
        .O(outreg_in[1]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \outreg[2]_i_1__0 
       (.I0(outreg[2]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(d5[2]),
        .O(outreg_in[2]));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \outreg[3]_i_1__0 
       (.I0(outreg[3]),
        .I1(comp_res[1]),
        .I2(comp_res[0]),
        .I3(d5[3]),
        .O(outreg_in[3]));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(outreg_in[0]),
        .Q(outreg[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(outreg_in[1]),
        .Q(outreg[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(outreg_in[2]),
        .Q(outreg[2]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \outreg_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__8),
        .D(outreg_in[3]),
        .Q(outreg[3]),
        .R(1'b0));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__37 \resynch[0].synchc_inst 
       (.clk(rxusrclk2),
        .d(data_pattern_select_core),
        .en(E),
        .q(d4[0]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__38 \resynch[1].synchc_inst 
       (.clk(rxusrclk2),
        .d(test_pattern_select_core),
        .en(E),
        .q(d4[1]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__39 \resynch[2].synchc_inst 
       (.clk(rxusrclk2),
        .d(rx_test_pattern_enable_core),
        .en(E),
        .q(d4[2]));
  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__40 \resynch[3].synchc_inst 
       (.clk(rxusrclk2),
        .d(prbs31_rx_enable_core_rega_reg),
        .en(E),
        .q(d4[3]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_common_ieee_registers" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_common_ieee_registers
   (SR,
    \q_reg[0] ,
    regs_rdack,
    regs_wrack,
    d1_reg,
    loopback_ctrl,
    tx_disable_int,
    E,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \q_reg[0]_4 ,
    \q_reg[0]_5 ,
    \q_reg[0]_6 ,
    d1_reg_0,
    pseudo_rand_seeds_int,
    core_in_testmode_wire,
    \prbs_err_count_reg[0] ,
    \scr_reg_reg[57] ,
    \rd_data_reg[7] ,
    tx_66_fifo,
    \q_reg[0]_7 ,
    \q_reg[0]_8 ,
    \q_reg[0]_9 ,
    \q_reg[0]_10 ,
    \q_reg[0]_11 ,
    \pcs_test_pattern_error_count_reg[15] ,
    clear_test_pattern_err_count,
    \pcs_ber_count_reg[5] ,
    \pcs_error_block_count_reg[7] ,
    reg_1_9_we,
    \q_reg[0]_12 ,
    \rddata_out_reg[0]_0 ,
    D,
    prbs31_rx_enable_core_int,
    indirect_read_reg,
    prbs31_tx_enable_core_int,
    rddata_out,
    core_status,
    coreclk,
    pcs_hi_ber_core_i,
    pcs_rx_link_up_core_sync_int,
    global_pmd_rx_signal_detect_core_i,
    reg_3_1_re,
    rdack0,
    mgmt_rnw,
    \shift_reg_reg[0] ,
    Q,
    \addr_reg_reg[20] ,
    pma_pmd_type,
    \state_reg[2] ,
    \state_reg[1] ,
    prbs31_rx_enable_core_regb_reg,
    new_tx_test_seed,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[0] ,
    \state_reg[2]_0 ,
    \addr_reg_reg[5] ,
    \state_reg[2]_1 ,
    read_reg_reg,
    \addr_reg_reg[16] ,
    \state_reg[1]_0 ,
    \state_reg[1]_1 ,
    \addr_reg_reg[0] ,
    read_reg_reg_0,
    \state_reg[2]_2 ,
    reset,
    out,
    \prbs31_err_count_reg[15] ,
    pcs_reset_clear_core_intr,
    resetdone,
    pma_pmd_status_tx_fault_core_int,
    \pcs_error_block_count_reg[7]_0 ,
    \pcs_ber_count_reg[5]_0 ,
    \shift_reg_reg[15] ,
    \shift_reg_reg[15]_0 ,
    \shift_reg_reg[15]_1 ,
    \shift_reg_reg[9] ,
    \shift_reg_reg[15]_2 ,
    \shift_reg_reg[15]_3 ,
    \shift_reg_reg[15]_4 ,
    \shift_reg_reg[9]_0 ,
    \state_reg[2]_3 ,
    \prbs_err_count_reg[15] ,
    \shift_reg_reg[15]_5 ,
    read_reg,
    \state_reg[0] );
  output [0:0]SR;
  output \q_reg[0] ;
  output regs_rdack;
  output regs_wrack;
  output d1_reg;
  output [0:0]loopback_ctrl;
  output tx_disable_int;
  output [0:0]E;
  output [0:0]\q_reg[0]_0 ;
  output [0:0]\q_reg[0]_1 ;
  output [0:0]\q_reg[0]_2 ;
  output [0:0]\q_reg[0]_3 ;
  output [0:0]\q_reg[0]_4 ;
  output [0:0]\q_reg[0]_5 ;
  output [0:0]\q_reg[0]_6 ;
  output [15:0]d1_reg_0;
  output [115:0]pseudo_rand_seeds_int;
  output core_in_testmode_wire;
  output [4:0]\prbs_err_count_reg[0] ;
  output \scr_reg_reg[57] ;
  output \rd_data_reg[7] ;
  output [0:0]tx_66_fifo;
  output \q_reg[0]_7 ;
  output [0:0]\q_reg[0]_8 ;
  output \q_reg[0]_9 ;
  output \q_reg[0]_10 ;
  output \q_reg[0]_11 ;
  output \pcs_test_pattern_error_count_reg[15] ;
  output clear_test_pattern_err_count;
  output [0:0]\pcs_ber_count_reg[5] ;
  output [0:0]\pcs_error_block_count_reg[7] ;
  output reg_1_9_we;
  output \q_reg[0]_12 ;
  output \rddata_out_reg[0]_0 ;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output indirect_read_reg;
  output prbs31_tx_enable_core_int;
  output [15:0]rddata_out;
  input [0:0]core_status;
  input coreclk;
  input pcs_hi_ber_core_i;
  input pcs_rx_link_up_core_sync_int;
  input global_pmd_rx_signal_detect_core_i;
  input reg_3_1_re;
  input rdack0;
  input mgmt_rnw;
  input \shift_reg_reg[0] ;
  input [3:0]Q;
  input [20:0]\addr_reg_reg[20] ;
  input [2:0]pma_pmd_type;
  input \state_reg[2] ;
  input \state_reg[1] ;
  input prbs31_rx_enable_core_regb_reg;
  input new_tx_test_seed;
  input [0:0]\tx_test_patt_seed_sel_reg[0] ;
  input [0:0]\tx_66_enc_out_reg[0] ;
  input \state_reg[2]_0 ;
  input \addr_reg_reg[5] ;
  input \state_reg[2]_1 ;
  input read_reg_reg;
  input \addr_reg_reg[16] ;
  input \state_reg[1]_0 ;
  input \state_reg[1]_1 ;
  input \addr_reg_reg[0] ;
  input read_reg_reg_0;
  input \state_reg[2]_2 ;
  input reset;
  input [15:0]out;
  input [15:0]\prbs31_err_count_reg[15] ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input pma_pmd_status_tx_fault_core_int;
  input [7:0]\pcs_error_block_count_reg[7]_0 ;
  input [5:0]\pcs_ber_count_reg[5]_0 ;
  input [14:0]\shift_reg_reg[15] ;
  input [14:0]\shift_reg_reg[15]_0 ;
  input [14:0]\shift_reg_reg[15]_1 ;
  input [8:0]\shift_reg_reg[9] ;
  input [14:0]\shift_reg_reg[15]_2 ;
  input [15:0]\shift_reg_reg[15]_3 ;
  input [14:0]\shift_reg_reg[15]_4 ;
  input [8:0]\shift_reg_reg[9]_0 ;
  input [5:0]\state_reg[2]_3 ;
  input [15:0]\prbs_err_count_reg[15] ;
  input [14:0]\shift_reg_reg[15]_5 ;
  input read_reg;
  input [0:0]\state_reg[0] ;

  wire [15:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[16] ;
  wire [20:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[5] ;
  wire clear_test_pattern_err_count;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire d1_reg;
  wire [15:0]d1_reg_0;
  wire global_pmd_rx_signal_detect_core_i;
  wire indirect_read_reg;
  wire [0:0]loopback_ctrl;
  wire mgmt_rnw;
  wire new_tx_test_seed;
  wire [15:0]out;
  wire p_0_in;
  wire [0:0]\pcs_ber_count_reg[5] ;
  wire [5:0]\pcs_ber_count_reg[5]_0 ;
  wire [0:0]\pcs_error_block_count_reg[7] ;
  wire [7:0]\pcs_error_block_count_reg[7]_0 ;
  wire pcs_hi_ber_core_i;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire \pcs_test_pattern_error_count_reg[15] ;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire prbs31_rx_enable_core_int;
  wire prbs31_rx_enable_core_regb_reg;
  wire prbs31_tx_enable_core_int;
  wire [4:0]\prbs_err_count_reg[0] ;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire [0:0]\q_reg[0]_0 ;
  wire [0:0]\q_reg[0]_1 ;
  wire \q_reg[0]_10 ;
  wire \q_reg[0]_11 ;
  wire \q_reg[0]_12 ;
  wire [0:0]\q_reg[0]_2 ;
  wire [0:0]\q_reg[0]_3 ;
  wire [0:0]\q_reg[0]_4 ;
  wire [0:0]\q_reg[0]_5 ;
  wire [0:0]\q_reg[0]_6 ;
  wire \q_reg[0]_7 ;
  wire [0:0]\q_reg[0]_8 ;
  wire \q_reg[0]_9 ;
  wire \rd_data_reg[7] ;
  wire rdack0;
  wire [15:4]rddata;
  wire [15:0]rddata_out;
  wire \rddata_out[10]_i_10_n_0 ;
  wire \rddata_out[10]_i_5_n_0 ;
  wire \rddata_out[11]_i_8_n_0 ;
  wire \rddata_out[12]_i_10_n_0 ;
  wire \rddata_out[12]_i_8_n_0 ;
  wire \rddata_out[13]_i_11_n_0 ;
  wire \rddata_out[13]_i_12_n_0 ;
  wire \rddata_out[13]_i_6_n_0 ;
  wire \rddata_out[14]_i_10_n_0 ;
  wire \rddata_out[14]_i_13_n_0 ;
  wire \rddata_out[14]_i_1_n_0 ;
  wire \rddata_out[14]_i_8_n_0 ;
  wire \rddata_out[14]_i_9_n_0 ;
  wire \rddata_out[15]_i_11_n_0 ;
  wire \rddata_out[15]_i_12_n_0 ;
  wire \rddata_out[15]_i_16_n_0 ;
  wire \rddata_out[15]_i_3_n_0 ;
  wire \rddata_out[1]_i_3_n_0 ;
  wire \rddata_out[1]_i_5_n_0 ;
  wire \rddata_out[2]_i_8_n_0 ;
  wire \rddata_out[2]_i_9_n_0 ;
  wire \rddata_out[3]_i_12_n_0 ;
  wire \rddata_out[3]_i_14_n_0 ;
  wire \rddata_out[3]_i_16_n_0 ;
  wire \rddata_out[3]_i_9_n_0 ;
  wire \rddata_out[4]_i_12_n_0 ;
  wire \rddata_out[4]_i_7_n_0 ;
  wire \rddata_out[4]_i_8_n_0 ;
  wire \rddata_out[5]_i_7_n_0 ;
  wire \rddata_out[6]_i_10_n_0 ;
  wire \rddata_out[6]_i_3_n_0 ;
  wire \rddata_out[7]_i_11_n_0 ;
  wire \rddata_out[7]_i_2_n_0 ;
  wire \rddata_out[7]_i_8_n_0 ;
  wire \rddata_out_reg[0]_0 ;
  wire re_prev;
  wire read_reg;
  wire read_reg_reg;
  wire read_reg_reg_0;
  wire reg_1_0_0_n_1;
  wire reg_1_0_11_n_0;
  wire reg_1_0_15_n_1;
  wire reg_1_0_15_n_10;
  wire reg_1_0_15_n_11;
  wire reg_1_0_15_n_12;
  wire reg_1_0_15_n_13;
  wire reg_1_0_15_n_14;
  wire reg_1_0_15_n_2;
  wire reg_1_0_15_n_3;
  wire reg_1_0_15_n_4;
  wire reg_1_0_15_n_5;
  wire reg_1_0_15_n_8;
  wire reg_1_0_15_n_9;
  wire reg_1_10_0_n_0;
  wire reg_1_1_2_n_1;
  wire reg_1_8_11__0;
  wire reg_1_8_11_n_1;
  wire reg_1_9_0_n_1;
  wire reg_1_9_0_n_2;
  wire reg_1_9_we;
  wire reg_3_0_11_n_0;
  wire reg_3_0_11_n_2;
  wire reg_3_0_11_n_3;
  wire reg_3_0_11_n_4;
  wire reg_3_0_15__0;
  wire reg_3_0_15_n_1;
  wire reg_3_0_15_n_10;
  wire reg_3_0_15_n_11;
  wire reg_3_0_15_n_13;
  wire reg_3_0_15_n_14;
  wire reg_3_0_15_n_23;
  wire reg_3_0_15_n_24;
  wire reg_3_0_15_n_25;
  wire reg_3_0_15_n_26;
  wire reg_3_0_15_n_27;
  wire reg_3_0_15_n_28;
  wire reg_3_0_15_n_29;
  wire reg_3_0_15_n_3;
  wire reg_3_0_15_n_30;
  wire reg_3_0_15_n_31;
  wire reg_3_0_15_n_5;
  wire reg_3_0_15_n_7;
  wire reg_3_0_15_n_9;
  wire reg_3_0_15_we;
  wire reg_3_1_2_n_1;
  wire reg_3_1_re;
  wire reg_3_32_0__0;
  wire reg_3_32_12__0;
  wire reg_3_32_12_n_1;
  wire reg_3_32_1__0;
  wire reg_3_32_1_n_1;
  wire [14:14]reg_3_33;
  wire reg_3_33_13_8_n_0;
  wire reg_3_33_13_8_n_1;
  wire reg_3_33_13_8_n_2;
  wire reg_3_33_13_8_n_3;
  wire reg_3_33_13_8_n_4;
  wire reg_3_33_13_8_n_5;
  wire reg_3_33_14_n_1;
  wire reg_3_33_15_n_1;
  wire reg_3_33_15_n_2;
  wire reg_3_33_15_n_3;
  wire reg_3_33_15_n_4;
  wire reg_3_33_15_n_5;
  wire reg_3_33_7_0_n_0;
  wire reg_3_33_7_0_n_1;
  wire reg_3_33_7_0_n_2;
  wire reg_3_33_7_0_n_3;
  wire reg_3_33_7_0_n_4;
  wire reg_3_33_7_0_n_5;
  wire reg_3_33_7_0_n_6;
  wire reg_3_33_7_0_n_7;
  wire reg_3_33_re;
  wire reg_3_34_all_n_1;
  wire reg_3_34_all_n_2;
  wire reg_3_34_all_n_20;
  wire reg_3_34_all_n_21;
  wire reg_3_34_all_n_22;
  wire reg_3_34_all_n_23;
  wire reg_3_34_all_n_24;
  wire reg_3_34_all_n_25;
  wire reg_3_34_all_n_26;
  wire reg_3_35_all_n_0;
  wire reg_3_35_all_n_1;
  wire reg_3_35_all_n_18;
  wire reg_3_36_all_n_1;
  wire reg_3_36_all_n_2;
  wire reg_3_36_all_n_20;
  wire reg_3_36_all_n_21;
  wire reg_3_36_all_n_22;
  wire reg_3_36_all_n_3;
  wire reg_3_37_9_0_n_0;
  wire reg_3_37_9_0_n_1;
  wire reg_3_37_9_0_n_2;
  wire reg_3_37_9_0_n_3;
  wire reg_3_38_all_n_0;
  wire reg_3_38_all_n_17;
  wire reg_3_38_all_n_18;
  wire reg_3_38_all_n_19;
  wire reg_3_38_all_n_20;
  wire reg_3_38_all_n_21;
  wire reg_3_38_all_n_22;
  wire reg_3_38_all_n_23;
  wire reg_3_38_all_n_24;
  wire reg_3_39_all_n_0;
  wire reg_3_39_all_n_1;
  wire reg_3_39_all_n_2;
  wire reg_3_39_all_n_20;
  wire reg_3_39_all_n_21;
  wire reg_3_39_all_n_22;
  wire reg_3_39_all_n_23;
  wire reg_3_39_all_n_24;
  wire reg_3_39_all_n_3;
  wire reg_3_39_we;
  wire reg_3_40_all_n_1;
  wire reg_3_40_all_n_18;
  wire reg_3_40_all_n_19;
  wire reg_3_40_all_n_20;
  wire reg_3_40_all_n_21;
  wire reg_3_40_all_n_22;
  wire reg_3_40_all_n_23;
  wire reg_3_40_all_n_24;
  wire reg_3_40_all_n_25;
  wire reg_3_40_all_n_26;
  wire reg_3_41_9_0_n_0;
  wire reg_3_41_9_0_n_1;
  wire reg_3_41_9_0_n_13;
  wire reg_3_41_9_0_n_14;
  wire reg_3_41_9_0_n_2;
  wire [4:4]reg_3_42;
  wire reg_3_42_5_0_n_9;
  wire reg_3_43_all_n_10;
  wire reg_3_43_all_n_11;
  wire reg_3_43_all_n_12;
  wire reg_3_43_all_n_13;
  wire reg_3_43_all_n_14;
  wire reg_3_43_all_n_15;
  wire reg_3_43_all_n_16;
  wire reg_3_43_all_n_17;
  wire reg_3_43_all_n_18;
  wire reg_3_43_all_n_19;
  wire reg_3_43_all_n_2;
  wire reg_3_43_all_n_20;
  wire reg_3_43_all_n_3;
  wire reg_3_43_all_n_4;
  wire reg_3_43_all_n_6;
  wire reg_3_43_all_n_7;
  wire reg_3_43_all_n_8;
  wire reg_3_43_all_n_9;
  wire reg_3_43_re;
  wire reg_3_65535_all_n_1;
  wire reg_3_65535_all_n_19;
  wire reg_3_65535_all_n_20;
  wire reg_3_65535_all_n_21;
  wire [10:10]reg_3_8;
  wire reg_3_8_10_n_1;
  wire reg_3_8_10_n_2;
  wire reg_3_8_11_n_0;
  wire reg_3_8_11_n_2;
  wire reg_3_8_11_n_4;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire \scr_reg_reg[57] ;
  wire \shift_reg_reg[0] ;
  wire [14:0]\shift_reg_reg[15] ;
  wire [14:0]\shift_reg_reg[15]_0 ;
  wire [14:0]\shift_reg_reg[15]_1 ;
  wire [14:0]\shift_reg_reg[15]_2 ;
  wire [15:0]\shift_reg_reg[15]_3 ;
  wire [14:0]\shift_reg_reg[15]_4 ;
  wire [14:0]\shift_reg_reg[15]_5 ;
  wire [8:0]\shift_reg_reg[9] ;
  wire [8:0]\shift_reg_reg[9]_0 ;
  wire [0:0]\state_reg[0] ;
  wire \state_reg[1] ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire [5:0]\state_reg[2]_3 ;
  wire [0:0]\tx_66_enc_out_reg[0] ;
  wire [0:0]tx_66_fifo;
  wire tx_disable_int;
  wire [0:0]\tx_test_patt_seed_sel_reg[0] ;
  wire wrack_i_1_n_0;

  FDRE #(
    .INIT(1'b0)) 
    rdack_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(rdack0),
        .Q(regs_rdack),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFE)) 
    \rddata_out[10]_i_10 
       (.I0(\addr_reg_reg[20] [11]),
        .I1(\addr_reg_reg[20] [10]),
        .I2(\addr_reg_reg[20] [9]),
        .I3(\addr_reg_reg[20] [8]),
        .I4(\addr_reg_reg[20] [7]),
        .O(\rddata_out[10]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \rddata_out[10]_i_5 
       (.I0(\addr_reg_reg[20] [15]),
        .I1(\addr_reg_reg[20] [14]),
        .I2(\addr_reg_reg[20] [13]),
        .O(\rddata_out[10]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \rddata_out[11]_i_8 
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [4]),
        .O(\rddata_out[11]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[12]_i_10 
       (.I0(\addr_reg_reg[20] [15]),
        .I1(\addr_reg_reg[20] [14]),
        .I2(\addr_reg_reg[20] [13]),
        .I3(\addr_reg_reg[20] [12]),
        .O(\rddata_out[12]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[12]_i_8 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\rddata_out[12]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[13]_i_11 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [0]),
        .O(\rddata_out[13]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \rddata_out[13]_i_12 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\rddata_out[13]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFEFFFFFFFE)) 
    \rddata_out[13]_i_6 
       (.I0(\addr_reg_reg[20] [0]),
        .I1(\addr_reg_reg[20] [1]),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\addr_reg_reg[20] [5]),
        .I4(\addr_reg_reg[20] [4]),
        .I5(\addr_reg_reg[20] [3]),
        .O(\rddata_out[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBFBFFF)) 
    \rddata_out[14]_i_1 
       (.I0(\q_reg[0]_11 ),
        .I1(\addr_reg_reg[20] [16]),
        .I2(read_reg),
        .I3(\state_reg[1] ),
        .I4(\state_reg[0] ),
        .I5(\state_reg[2] ),
        .O(\rddata_out[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \rddata_out[14]_i_10 
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\addr_reg_reg[20] [2]),
        .O(\rddata_out[14]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \rddata_out[14]_i_13 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [1]),
        .O(\rddata_out[14]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[14]_i_8 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\addr_reg_reg[20] [0]),
        .O(\rddata_out[14]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[14]_i_9 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[20] [1]),
        .O(\rddata_out[14]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rddata_out[15]_i_11 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [2]),
        .O(\rddata_out[15]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \rddata_out[15]_i_12 
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\addr_reg_reg[20] [5]),
        .O(\rddata_out[15]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \rddata_out[15]_i_16 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [1]),
        .I2(\addr_reg_reg[20] [2]),
        .O(\rddata_out[15]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[15]_i_3 
       (.I0(\rddata_out_reg[0]_0 ),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\addr_reg_reg[20] [0]),
        .O(\rddata_out[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h4001)) 
    \rddata_out[1]_i_3 
       (.I0(\rddata_out[3]_i_12_n_0 ),
        .I1(\addr_reg_reg[20] [9]),
        .I2(\addr_reg_reg[20] [8]),
        .I3(\addr_reg_reg[20] [10]),
        .O(\rddata_out[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFEAFFEAFFEAFFEA)) 
    \rddata_out[1]_i_5 
       (.I0(\rddata_out[2]_i_9_n_0 ),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[20] [4]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\addr_reg_reg[20] [5]),
        .O(\rddata_out[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \rddata_out[2]_i_8 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [1]),
        .O(\rddata_out[2]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h7E)) 
    \rddata_out[2]_i_9 
       (.I0(\addr_reg_reg[20] [14]),
        .I1(\addr_reg_reg[20] [15]),
        .I2(\addr_reg_reg[20] [13]),
        .O(\rddata_out[2]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'hBFFE)) 
    \rddata_out[3]_i_12 
       (.I0(\rddata_out[4]_i_12_n_0 ),
        .I1(\addr_reg_reg[20] [13]),
        .I2(\addr_reg_reg[20] [12]),
        .I3(\addr_reg_reg[20] [14]),
        .O(\rddata_out[3]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \rddata_out[3]_i_14 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\rddata_out[3]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rddata_out[3]_i_16 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\rddata_out[3]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[3]_i_9 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\rddata_out[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h7EFFFFFFFFFFFF7E)) 
    \rddata_out[4]_i_12 
       (.I0(\addr_reg_reg[20] [11]),
        .I1(\addr_reg_reg[20] [10]),
        .I2(\addr_reg_reg[20] [12]),
        .I3(\addr_reg_reg[20] [7]),
        .I4(\addr_reg_reg[20] [6]),
        .I5(\addr_reg_reg[20] [8]),
        .O(\rddata_out[4]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h7E)) 
    \rddata_out[4]_i_7 
       (.I0(\addr_reg_reg[20] [10]),
        .I1(\addr_reg_reg[20] [8]),
        .I2(\addr_reg_reg[20] [9]),
        .O(\rddata_out[4]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h7E)) 
    \rddata_out[4]_i_8 
       (.I0(\addr_reg_reg[20] [14]),
        .I1(\addr_reg_reg[20] [12]),
        .I2(\addr_reg_reg[20] [13]),
        .O(\rddata_out[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \rddata_out[5]_i_7 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [2]),
        .O(\rddata_out[5]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h7FEFEFEE)) 
    \rddata_out[6]_i_10 
       (.I0(\addr_reg_reg[20] [6]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [5]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [3]),
        .O(\rddata_out[6]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rddata_out[6]_i_3 
       (.I0(pma_pmd_type[2]),
        .I1(pma_pmd_type[1]),
        .O(\rddata_out[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rddata_out[7]_i_11 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\addr_reg_reg[20] [2]),
        .O(\rddata_out[7]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \rddata_out[7]_i_2 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\addr_reg_reg[20] [5]),
        .O(\rddata_out[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFF7E)) 
    \rddata_out[7]_i_8 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [7]),
        .I2(\addr_reg_reg[20] [6]),
        .I3(\rddata_out[10]_i_10_n_0 ),
        .O(\rddata_out[7]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_9_0_n_1),
        .Q(rddata_out[0]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_33_13_8_n_0),
        .Q(rddata_out[10]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_39_all_n_0),
        .Q(rddata_out[11]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_34_all_n_2),
        .Q(rddata_out[12]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[13]),
        .Q(rddata_out[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_0_15_n_9),
        .Q(rddata_out[14]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[15]),
        .Q(rddata_out[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_0_15_n_1),
        .Q(rddata_out[1]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_0_15_n_4),
        .Q(rddata_out[2]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_0_15_n_2),
        .Q(rddata_out[3]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rddata[4]),
        .Q(rddata_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_36_all_n_1),
        .Q(rddata_out[5]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_34_all_n_1),
        .Q(rddata_out[6]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_8_10_n_1),
        .Q(rddata_out[7]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_37_9_0_n_0),
        .Q(rddata_out[8]),
        .R(\rddata_out[14]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rddata_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_39_all_n_1),
        .Q(rddata_out[9]),
        .R(\rddata_out[14]_i_1_n_0 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register reg_1_0_0
       (.\addr_reg_reg[3] (\addr_reg_reg[20] [3:0]),
        .coreclk(coreclk),
        .data_out_reg(\q_reg[0] ),
        .loopback_ctrl(loopback_ctrl),
        .\q_reg[0]_0 (reg_1_10_0_n_0),
        .\rddata_out_reg[0] (reg_1_0_0_n_1),
        .\shift_reg_reg[0] (reg_1_0_15_n_13));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_36 reg_1_0_11
       (.coreclk(coreclk),
        .data_out_reg(\q_reg[0] ),
        .\rddata_out_reg[11] (reg_1_0_11_n_0),
        .\shift_reg_reg[11] (reg_1_0_15_n_14));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized0 reg_1_0_15
       (.Q({Q[3],Q[1:0]}),
        .\addr_reg_reg[0] (reg_3_0_15_n_27),
        .\addr_reg_reg[0]_0 (reg_3_40_all_n_22),
        .\addr_reg_reg[0]_1 (reg_3_37_9_0_n_2),
        .\addr_reg_reg[0]_2 (\rddata_out[13]_i_6_n_0 ),
        .\addr_reg_reg[0]_3 (reg_3_43_all_n_8),
        .\addr_reg_reg[0]_4 (reg_3_34_all_n_22),
        .\addr_reg_reg[0]_5 (\addr_reg_reg[0] ),
        .\addr_reg_reg[11] (\rddata_out[10]_i_10_n_0 ),
        .\addr_reg_reg[12] (\rddata_out_reg[0]_0 ),
        .\addr_reg_reg[13] (reg_3_43_all_n_2),
        .\addr_reg_reg[15] (\rddata_out[12]_i_10_n_0 ),
        .\addr_reg_reg[16] (\addr_reg_reg[16] ),
        .\addr_reg_reg[18] (reg_1_9_0_n_2),
        .\addr_reg_reg[19] (reg_3_0_11_n_2),
        .\addr_reg_reg[1] (reg_3_34_all_n_26),
        .\addr_reg_reg[1]_0 (reg_3_33_7_0_n_4),
        .\addr_reg_reg[1]_1 (\rddata_out[15]_i_11_n_0 ),
        .\addr_reg_reg[1]_2 (\rddata_out[3]_i_9_n_0 ),
        .\addr_reg_reg[20] ({\addr_reg_reg[20] [20:12],\addr_reg_reg[20] [7:0]}),
        .\addr_reg_reg[2] (\rddata_out[1]_i_5_n_0 ),
        .\addr_reg_reg[2]_0 (\rddata_out[15]_i_3_n_0 ),
        .\addr_reg_reg[5] (reg_3_33_7_0_n_0),
        .\addr_reg_reg[5]_0 (reg_1_1_2_n_1),
        .\addr_reg_reg[5]_1 (\rddata_out[7]_i_11_n_0 ),
        .\addr_reg_reg[6] (\q_reg[0]_9 ),
        .\addr_reg_reg[8] (reg_3_8_11_n_2),
        .\addr_reg_reg[9] (\rddata_out[1]_i_3_n_0 ),
        .coreclk(coreclk),
        .loopback_ctrl(loopback_ctrl),
        .p_0_in(p_0_in),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pma_pmd_type(pma_pmd_type[2:1]),
        .\q_reg[0]_0 (reg_1_0_15_n_5),
        .\q_reg[0]_1 (\q_reg[0] ),
        .\q_reg[0]_2 (reg_1_0_15_n_13),
        .\q_reg[0]_3 (reg_1_0_15_n_14),
        .\q_reg[0]_4 (reg_1_8_11_n_1),
        .\q_reg[0]_5 (reg_1_0_11_n_0),
        .\q_reg[2] (reg_3_0_15_n_29),
        .\q_reg[3] (reg_3_40_all_n_23),
        .\rddata_out_reg[11] (reg_1_0_15_n_9),
        .\rddata_out_reg[13] (reg_1_0_15_n_3),
        .\rddata_out_reg[15] (reg_1_0_15_n_11),
        .\rddata_out_reg[1] (reg_1_0_15_n_1),
        .\rddata_out_reg[2] (reg_1_0_15_n_4),
        .\rddata_out_reg[3] (reg_1_0_15_n_2),
        .\rddata_out_reg[5] (reg_1_0_15_n_10),
        .\rddata_out_reg[7] (reg_1_0_15_n_12),
        .\rddata_out_reg[9] (reg_1_0_15_n_8),
        .reg_1_9_we(reg_1_9_we),
        .reset(reset),
        .resetdone(resetdone),
        .\state_reg[2] (\state_reg[2]_1 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized23 reg_1_10_0
       (.coreclk(coreclk),
        .data_out_reg(\q_reg[0] ),
        .global_pmd_rx_signal_detect_core_i(global_pmd_rx_signal_detect_core_i),
        .\rddata_out_reg[0] (reg_1_10_0_n_0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized1 reg_1_1_2
       (.\addr_reg_reg[20] ({\addr_reg_reg[20] [20:16],\addr_reg_reg[20] [5:0]}),
        .coreclk(coreclk),
        .global_pmd_rx_signal_detect_core_i(global_pmd_rx_signal_detect_core_i),
        .p_0_in(p_0_in),
        .pma_pmd_type(pma_pmd_type[2]),
        .\q_reg[0]_0 (\q_reg[0]_11 ),
        .\rddata_out_reg[2] (reg_1_1_2_n_1),
        .read_reg_reg(read_reg_reg_0),
        .reset(reset),
        .\state_reg[2] (\state_reg[2]_1 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized2 reg_1_8_11
       (.\addr_reg_reg[20] ({\addr_reg_reg[20] [20:16],\addr_reg_reg[20] [3:0]}),
        .coreclk(coreclk),
        .p_0_in(p_0_in),
        .pma_pmd_status_tx_fault_core_int(pma_pmd_status_tx_fault_core_int),
        .pma_pmd_type(pma_pmd_type),
        .\rddata_out_reg[7] (reg_1_8_11_n_1),
        .read_reg_reg(read_reg_reg_0),
        .reg_1_8_11(reg_1_8_11__0),
        .reset(reset),
        .\state_reg[2] (\state_reg[2]_1 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_37 reg_1_9_0
       (.\addr_reg_reg[12] (\rddata_out_reg[0]_0 ),
        .\addr_reg_reg[18] ({\addr_reg_reg[20] [18:17],\addr_reg_reg[20] [3:0]}),
        .\addr_reg_reg[1] (reg_3_65535_all_n_20),
        .\addr_reg_reg[1]_0 (reg_1_0_0_n_1),
        .\addr_reg_reg[2] (\rddata_out[1]_i_5_n_0 ),
        .\addr_reg_reg[3] (reg_3_41_9_0_n_2),
        .coreclk(coreclk),
        .data_out_reg(\q_reg[0] ),
        .p_0_in(p_0_in),
        .pma_pmd_type(pma_pmd_type[0]),
        .\q_reg[0]_0 (reg_1_9_0_n_2),
        .\q_reg[0]_1 (reg_3_0_15_n_28),
        .\rddata_out_reg[0] (reg_1_9_0_n_1),
        .\shift_reg_reg[0] (\shift_reg_reg[0] ),
        .tx_disable_int(tx_disable_int));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_38 reg_3_0_11
       (.\addr_reg_reg[14] (\q_reg[0]_7 ),
        .\addr_reg_reg[20] ({\addr_reg_reg[20] [20:15],\addr_reg_reg[20] [6:0]}),
        .\addr_reg_reg[2] (reg_1_0_15_n_5),
        .\addr_reg_reg[4] (\rddata_out[13]_i_11_n_0 ),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[101]),
        .\q_reg[0]_0 (reg_3_0_11_n_0),
        .\q_reg[0]_1 (reg_3_0_11_n_2),
        .\rddata_out_reg[11] (reg_3_0_11_n_4),
        .re_prev_reg(reg_3_0_11_n_3),
        .reg_3_0_15_we(reg_3_0_15_we),
        .\state_reg[2] (reg_3_0_15_n_14),
        .\state_reg[2]_0 (\state_reg[2]_0 ),
        .\state_reg[2]_1 (\state_reg[2]_1 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_39 reg_3_0_14
       (.Q(\prbs_err_count_reg[0] [2]),
        .core_in_testmode_wire(core_in_testmode_wire),
        .coreclk(coreclk),
        .d1_reg(d1_reg),
        .data_out_reg(SR),
        .prbs31_rx_enable_core_regb_reg(prbs31_rx_enable_core_regb_reg),
        .\state_reg[2] (reg_3_0_15_n_13));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized4 reg_3_0_15
       (.D(reg_3_0_15_n_1),
        .E(\q_reg[0]_0 ),
        .Q(Q),
        .SR(reg_3_0_15_n_11),
        .\addr_reg_reg[0] (reg_3_42_5_0_n_9),
        .\addr_reg_reg[0]_0 (\q_reg[0]_10 ),
        .\addr_reg_reg[0]_1 (\addr_reg_reg[0] ),
        .\addr_reg_reg[10] (\rddata_out[4]_i_7_n_0 ),
        .\addr_reg_reg[11] (\rddata_out[10]_i_10_n_0 ),
        .\addr_reg_reg[13] (reg_3_39_all_n_21),
        .\addr_reg_reg[14] (\q_reg[0]_7 ),
        .\addr_reg_reg[14]_0 (\rddata_out[2]_i_9_n_0 ),
        .\addr_reg_reg[15] (\rddata_out[10]_i_5_n_0 ),
        .\addr_reg_reg[15]_0 (reg_3_43_all_n_3),
        .\addr_reg_reg[15]_1 (reg_3_0_11_n_3),
        .\addr_reg_reg[17] (reg_1_0_15_n_3),
        .\addr_reg_reg[19] (reg_3_39_all_n_2),
        .\addr_reg_reg[1] (reg_3_41_9_0_n_14),
        .\addr_reg_reg[1]_0 (reg_3_1_2_n_1),
        .\addr_reg_reg[20] ({\addr_reg_reg[20] [20],\addr_reg_reg[20] [17:11],\addr_reg_reg[20] [7:0]}),
        .\addr_reg_reg[20]_0 (\q_reg[0]_11 ),
        .\addr_reg_reg[2] (reg_3_38_all_n_22),
        .\addr_reg_reg[2]_0 (\rddata_out[12]_i_8_n_0 ),
        .\addr_reg_reg[2]_1 (reg_1_0_15_n_5),
        .\addr_reg_reg[3] (reg_3_38_all_n_19),
        .\addr_reg_reg[3]_0 (reg_3_36_all_n_3),
        .\addr_reg_reg[3]_1 (reg_3_38_all_n_21),
        .\addr_reg_reg[3]_2 (reg_3_36_all_n_20),
        .\addr_reg_reg[4] (reg_3_37_9_0_n_1),
        .\addr_reg_reg[4]_0 (\rddata_out[7]_i_8_n_0 ),
        .\addr_reg_reg[5] (reg_3_35_all_n_0),
        .\addr_reg_reg[5]_0 (\addr_reg_reg[5] ),
        .\addr_reg_reg[5]_1 (\rddata_out[2]_i_8_n_0 ),
        .\addr_reg_reg[6] (\q_reg[0]_9 ),
        .\addr_reg_reg[8] (reg_3_39_all_n_20),
        .\addr_reg_reg[9] (reg_3_65535_all_n_1),
        .\addr_reg_reg[9]_0 (\rddata_out[1]_i_3_n_0 ),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .coreclk(coreclk),
        .\pcs_ber_count_reg[5] (\pcs_ber_count_reg[5] ),
        .\pcs_error_block_count_reg[7] (\pcs_error_block_count_reg[7] ),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .\pcs_test_pattern_error_count_reg[15] (\pcs_test_pattern_error_count_reg[15] ),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[105]),
        .\q_reg[0]_0 (reg_3_0_15_n_3),
        .\q_reg[0]_1 (\q_reg[0]_1 ),
        .\q_reg[0]_10 (\q_reg[0]_12 ),
        .\q_reg[0]_11 (reg_3_33_14_n_1),
        .\q_reg[0]_12 (reg_1_0_15_n_9),
        .\q_reg[0]_13 (d1_reg),
        .\q_reg[0]_14 (reg_3_0_11_n_0),
        .\q_reg[0]_2 (reg_3_0_15_n_5),
        .\q_reg[0]_3 (\q_reg[0]_2 ),
        .\q_reg[0]_4 (reg_3_0_15_n_7),
        .\q_reg[0]_5 (\q_reg[0]_4 ),
        .\q_reg[0]_6 (reg_3_0_15_n_13),
        .\q_reg[0]_7 (reg_3_0_15_n_14),
        .\q_reg[0]_8 (\q_reg[0]_8 ),
        .\q_reg[0]_9 (reg_3_39_we),
        .\q_reg[14] ({d1_reg_0[14:13],d1_reg_0[3:2]}),
        .\q_reg[2] (SR),
        .\rddata_out_reg[10] (reg_3_0_15_n_26),
        .\rddata_out_reg[13] (reg_3_0_15_n_10),
        .\rddata_out_reg[13]_0 (rddata[13]),
        .\rddata_out_reg[14] (reg_3_0_15_n_9),
        .\rddata_out_reg[15] (reg_3_0_15_n_30),
        .\rddata_out_reg[1] (reg_3_0_15_n_27),
        .\rddata_out_reg[2] (reg_3_0_15_n_29),
        .\rddata_out_reg[3] (reg_3_0_15_n_23),
        .\rddata_out_reg[4] (reg_3_0_15_n_31),
        .\rddata_out_reg[7] (reg_3_0_15_n_28),
        .\rddata_out_reg[9] (reg_3_0_15_n_24),
        .\rddata_out_reg[9]_0 (reg_3_0_15_n_25),
        .re_prev(re_prev),
        .read_reg_reg(read_reg_reg),
        .reg_3_0_15(reg_3_0_15__0),
        .reg_3_0_15_we(reg_3_0_15_we),
        .reg_3_33_re(reg_3_33_re),
        .reg_3_43_re(reg_3_43_re),
        .reset(reset),
        .resetdone(resetdone),
        .\state_reg[1] (\state_reg[1] ),
        .\state_reg[2] (\state_reg[2] ),
        .\state_reg[2]_0 (\state_reg[2]_0 ),
        .\state_reg[2]_1 (\state_reg[2]_1 ),
        .\state_reg[2]_2 (\state_reg[2]_2 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized5 reg_3_1_2
       (.\addr_reg_reg[19] ({\addr_reg_reg[20] [19:17],\addr_reg_reg[20] [5:0]}),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .\q_reg[0]_0 (\q_reg[0]_10 ),
        .\rddata_out_reg[2] (reg_3_1_2_n_1),
        .reg_3_1_re(reg_3_1_re),
        .reg_3_32_12(reg_3_32_12__0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized26 reg_3_32_0
       (.core_status(core_status),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .reg_3_32_0(reg_3_32_0__0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized25 reg_3_32_1
       (.\addr_reg_reg[5] ({\addr_reg_reg[20] [5],\addr_reg_reg[20] [3:2]}),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pcs_hi_ber_core_i(pcs_hi_ber_core_i),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[33]),
        .\rddata_out_reg[1] (reg_3_32_1_n_1),
        .reg_3_32_1(reg_3_32_1__0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized24 reg_3_32_12
       (.\addr_reg_reg[3] (\addr_reg_reg[20] [3:0]),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\rddata_out_reg[12] (reg_3_32_12_n_1),
        .reg_3_32_12(reg_3_32_12__0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized10 reg_3_33_13_8
       (.Q({reg_3_43_all_n_15,reg_3_43_all_n_16,reg_3_43_all_n_17}),
        .SR(reg_3_33_15_n_1),
        .\addr_reg_reg[13] (reg_3_39_all_n_21),
        .\addr_reg_reg[15] (\rddata_out[10]_i_5_n_0 ),
        .\addr_reg_reg[2] (\rddata_out[14]_i_9_n_0 ),
        .\addr_reg_reg[3] (reg_3_38_all_n_0),
        .\addr_reg_reg[4] (\rddata_out[15]_i_16_n_0 ),
        .\addr_reg_reg[5] (\addr_reg_reg[20] [5:0]),
        .coreclk(coreclk),
        .\pcs_ber_count_reg[5] (\pcs_ber_count_reg[5]_0 ),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[87:86],pseudo_rand_seeds_int[27]}),
        .\q_reg[0]_0 (reg_3_0_15_n_26),
        .\q_reg[0]_1 (reg_3_8_10_n_2),
        .\q_reg[10] (d1_reg_0[10]),
        .\q_reg[10]_0 (reg_3_40_all_n_19),
        .\q_reg[10]_1 (reg_3_43_all_n_6),
        .\rddata_out_reg[10] (reg_3_33_13_8_n_0),
        .\rddata_out_reg[11] (reg_3_33_13_8_n_1),
        .\rddata_out_reg[12] (reg_3_33_13_8_n_3),
        .\rddata_out_reg[13] (reg_3_33_13_8_n_2),
        .\rddata_out_reg[8] (reg_3_33_13_8_n_4),
        .\rddata_out_reg[9] (reg_3_33_13_8_n_5));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized9 reg_3_33_14
       (.\addr_reg_reg[2] (\rddata_out[14]_i_9_n_0 ),
        .\addr_reg_reg[2]_0 (reg_3_43_all_n_4),
        .\addr_reg_reg[3] (\rddata_out[14]_i_10_n_0 ),
        .\addr_reg_reg[5] (\rddata_out[14]_i_8_n_0 ),
        .coreclk(coreclk),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[88]),
        .\rddata_out_reg[14] (reg_3_33_14_n_1),
        .re_prev_reg(reg_3_33_15_n_3),
        .reg_3_33(reg_3_33));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized8 reg_3_33_15
       (.Q(reg_3_43_all_n_12),
        .SR(reg_3_33_15_n_1),
        .\addr_reg_reg[14] (\q_reg[0]_7 ),
        .\addr_reg_reg[15] (reg_3_0_11_n_3),
        .\addr_reg_reg[17] ({\addr_reg_reg[20] [17],\addr_reg_reg[20] [6],\addr_reg_reg[20] [4:2],\addr_reg_reg[20] [0]}),
        .\addr_reg_reg[19] (reg_3_39_all_n_2),
        .\addr_reg_reg[2] (\rddata_out[14]_i_9_n_0 ),
        .\addr_reg_reg[4] (\rddata_out[15]_i_16_n_0 ),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[31]),
        .\q_reg[0]_0 (reg_3_33_15_n_3),
        .\q_reg[7] (reg_3_33_15_n_2),
        .\rddata_out_reg[15] (reg_3_33_15_n_5),
        .re_prev_reg_0(reg_3_33_15_n_4),
        .reg_3_32_0(reg_3_32_0__0),
        .reg_3_32_1(reg_3_32_1__0),
        .reg_3_33(reg_3_33),
        .reg_3_33_re(reg_3_33_re),
        .\state_reg[1] (\state_reg[1]_1 ),
        .\state_reg[2] (\state_reg[2]_0 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized11 reg_3_33_7_0
       (.Q(reg_3_43_all_n_18),
        .SR(reg_3_33_15_n_2),
        .\addr_reg_reg[11] (\rddata_out[4]_i_12_n_0 ),
        .\addr_reg_reg[15] ({\addr_reg_reg[20] [15:14],\addr_reg_reg[20] [5],\addr_reg_reg[20] [3:1]}),
        .\addr_reg_reg[1] (\rddata_out[5]_i_7_n_0 ),
        .\addr_reg_reg[4] (reg_3_0_15_n_23),
        .\addr_reg_reg[6] (reg_3_0_15_n_31),
        .\addr_reg_reg[6]_0 (\rddata_out[6]_i_10_n_0 ),
        .coreclk(coreclk),
        .\pcs_error_block_count_reg[7] (\pcs_error_block_count_reg[7]_0 ),
        .\q_reg[0]_0 (reg_3_0_15_n_24),
        .\q_reg[2]_0 (reg_3_41_9_0_n_13),
        .\q_reg[6]_0 (d1_reg_0[6:5]),
        .\rddata_out_reg[2] (reg_3_33_7_0_n_4),
        .\rddata_out_reg[3] (reg_3_33_7_0_n_0),
        .\rddata_out_reg[4] (reg_3_33_7_0_n_1),
        .\rddata_out_reg[5] (reg_3_33_7_0_n_2),
        .\rddata_out_reg[6] (reg_3_33_7_0_n_3),
        .\rddata_out_reg[7] ({reg_3_33_7_0_n_5,reg_3_33_7_0_n_6,reg_3_33_7_0_n_7}));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized12 reg_3_34_all
       (.D(rddata[15]),
        .E(\q_reg[0]_3 ),
        .Q(Q[0]),
        .\addr_reg_reg[0] (reg_3_35_all_n_18),
        .\addr_reg_reg[14] (reg_3_33_7_0_n_3),
        .\addr_reg_reg[17] ({\addr_reg_reg[20] [17],\addr_reg_reg[20] [15:13],\addr_reg_reg[20] [5],\addr_reg_reg[20] [3:0]}),
        .\addr_reg_reg[18] (reg_3_36_all_n_2),
        .\addr_reg_reg[2] (\rddata_out[15]_i_3_n_0 ),
        .\addr_reg_reg[2]_0 (reg_3_32_12_n_1),
        .\addr_reg_reg[3] (reg_1_0_15_n_8),
        .\addr_reg_reg[3]_0 (reg_3_39_all_n_3),
        .\addr_reg_reg[3]_1 (\rddata_out[15]_i_12_n_0 ),
        .\addr_reg_reg[3]_2 (reg_3_35_all_n_1),
        .\addr_reg_reg[3]_3 (\rddata_out[11]_i_8_n_0 ),
        .\addr_reg_reg[4] (reg_3_33_15_n_4),
        .\addr_reg_reg[5] (reg_3_0_15_n_25),
        .\addr_reg_reg[5]_0 (reg_3_39_all_n_24),
        .\addr_reg_reg[5]_1 (reg_3_0_15_n_30),
        .\addr_reg_reg[9] (\rddata_out[1]_i_3_n_0 ),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pma_pmd_type(pma_pmd_type[0]),
        .\pma_pmd_type[1] (\rddata_out[6]_i_3_n_0 ),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[15:0]),
        .\q_reg[0]_0 (reg_1_0_15_n_9),
        .\q_reg[0]_1 (reg_1_0_15_n_11),
        .\q_reg[0]_2 (reg_3_0_15_n_10),
        .\q_reg[12]_0 ({d1_reg_0[12],d1_reg_0[7]}),
        .\q_reg[12]_1 (reg_3_36_all_n_21),
        .\q_reg[15]_0 (reg_3_65535_all_n_19),
        .\q_reg[15]_1 ({pseudo_rand_seeds_int[73],pseudo_rand_seeds_int[70:69],pseudo_rand_seeds_int[65:61],pseudo_rand_seeds_int[43]}),
        .\q_reg[5]_0 ({\prbs_err_count_reg[0] [4],reg_3_42,\prbs_err_count_reg[0] [3]}),
        .\q_reg[6]_0 (reg_3_40_all_n_25),
        .\q_reg[7]_0 (reg_3_40_all_n_24),
        .\rddata_out_reg[11] (reg_3_34_all_n_21),
        .\rddata_out_reg[12] (reg_3_34_all_n_2),
        .\rddata_out_reg[1] (reg_3_34_all_n_23),
        .\rddata_out_reg[2] (reg_3_34_all_n_22),
        .\rddata_out_reg[3] (reg_3_34_all_n_26),
        .\rddata_out_reg[4] (reg_3_34_all_n_25),
        .\rddata_out_reg[5] (reg_3_34_all_n_24),
        .\rddata_out_reg[6] (reg_3_34_all_n_1),
        .\rddata_out_reg[7] (reg_3_34_all_n_20),
        .read_reg_reg(read_reg_reg),
        .reg_3_0_15(reg_3_0_15__0),
        .\shift_reg_reg[15] (\shift_reg_reg[15] ),
        .\state_reg[1] (\state_reg[1]_0 ),
        .\state_reg[2] (\state_reg[2]_2 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized13 reg_3_35_all
       (.D({\shift_reg_reg[15]_0 ,reg_3_0_15_n_5}),
        .E(\q_reg[0]_2 ),
        .Q(reg_3_43_all_n_13),
        .\addr_reg_reg[5] (\addr_reg_reg[20] [5:0]),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[31:16]),
        .\q_reg[13]_0 (reg_3_40_all_n_18),
        .\q_reg[13]_1 (reg_3_38_all_n_23),
        .\q_reg[4]_0 (reg_3_33_13_8_n_3),
        .\q_reg[5]_0 (reg_3_33_13_8_n_2),
        .\q_reg[7]_0 (reg_3_37_9_0_n_3),
        .\rddata_out_reg[12] (reg_3_35_all_n_18),
        .\rddata_out_reg[13] (reg_3_35_all_n_0),
        .\rddata_out_reg[7] (reg_3_35_all_n_1));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized14 reg_3_36_all
       (.E(E),
        .Q(Q[0]),
        .\addr_reg_reg[14] (\q_reg[0]_7 ),
        .\addr_reg_reg[17] (reg_1_0_15_n_10),
        .\addr_reg_reg[1] (reg_3_34_all_n_24),
        .\addr_reg_reg[20] ({\addr_reg_reg[20] [20:15],\addr_reg_reg[20] [6:0]}),
        .\addr_reg_reg[2] (reg_3_33_7_0_n_2),
        .\addr_reg_reg[2]_0 (\rddata_out[14]_i_13_n_0 ),
        .\addr_reg_reg[5] (reg_3_0_15_n_25),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[47:32]),
        .\q_reg[0]_0 (reg_3_36_all_n_2),
        .\q_reg[12]_0 ({pseudo_rand_seeds_int[102],pseudo_rand_seeds_int[95:94]}),
        .\q_reg[12]_1 (reg_3_43_all_n_14),
        .\q_reg[5]_0 (reg_3_41_9_0_n_1),
        .\rddata_out_reg[12] (reg_3_36_all_n_21),
        .\rddata_out_reg[14] (reg_3_36_all_n_3),
        .\rddata_out_reg[15] (reg_3_36_all_n_20),
        .\rddata_out_reg[4] (reg_3_36_all_n_22),
        .\rddata_out_reg[5] (reg_3_36_all_n_1),
        .\shift_reg_reg[15] (\shift_reg_reg[15]_1 ),
        .\state_reg[1] (\state_reg[1]_0 ),
        .\state_reg[2] (\state_reg[2]_0 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized15 reg_3_37_9_0
       (.D({\shift_reg_reg[9] ,reg_3_0_15_n_7}),
        .E(\q_reg[0]_4 ),
        .Q(reg_3_43_all_n_20),
        .\addr_reg_reg[13] (\rddata_out[3]_i_12_n_0 ),
        .\addr_reg_reg[14] (reg_3_40_all_n_20),
        .\addr_reg_reg[1] (\rddata_out[3]_i_14_n_0 ),
        .\addr_reg_reg[20] ({\addr_reg_reg[20] [20:18],\addr_reg_reg[20] [4:0]}),
        .\addr_reg_reg[3] (reg_1_0_15_n_8),
        .\addr_reg_reg[5] (reg_3_0_15_n_25),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[114:113],pseudo_rand_seeds_int[109],pseudo_rand_seeds_int[82:81],pseudo_rand_seeds_int[24]}),
        .\q_reg[0]_0 (reg_3_37_9_0_n_1),
        .\q_reg[3]_0 (reg_3_39_all_n_22),
        .\rddata_out_reg[3] (reg_3_37_9_0_n_2),
        .\rddata_out_reg[7] (reg_3_37_9_0_n_3),
        .\rddata_out_reg[8] (reg_3_37_9_0_n_0),
        .\scr_reg_reg[57] (pseudo_rand_seeds_int[57:48]));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized16 reg_3_38_all
       (.D({\shift_reg_reg[15]_2 ,reg_3_0_15_n_3}),
        .E(\q_reg[0]_1 ),
        .Q(\prbs_err_count_reg[0] [1:0]),
        .\addr_reg_reg[17] ({\addr_reg_reg[20] [17:16],\addr_reg_reg[20] [5:0]}),
        .\addr_reg_reg[1] (reg_3_65535_all_n_21),
        .\addr_reg_reg[2] (reg_1_0_15_n_5),
        .\addr_reg_reg[2]_0 (reg_3_34_all_n_23),
        .\addr_reg_reg[4] (\rddata_out[13]_i_11_n_0 ),
        .\addr_reg_reg[5] (\rddata_out[13]_i_12_n_0 ),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[73:58]),
        .\q_reg[0]_0 (reg_3_38_all_n_21),
        .\q_reg[0]_1 (reg_3_38_all_n_22),
        .\q_reg[0]_2 (d1_reg),
        .\q_reg[14]_0 ({pseudo_rand_seeds_int[104],pseudo_rand_seeds_int[14:13],pseudo_rand_seeds_int[10:8],pseudo_rand_seeds_int[0]}),
        .\rddata_out_reg[0] (reg_3_38_all_n_24),
        .\rddata_out_reg[10] (reg_3_38_all_n_0),
        .\rddata_out_reg[13] (reg_3_38_all_n_23),
        .\rddata_out_reg[14] (reg_3_38_all_n_19),
        .\rddata_out_reg[1] (reg_3_38_all_n_20),
        .\rddata_out_reg[8] (reg_3_38_all_n_18),
        .\rddata_out_reg[9] (reg_3_38_all_n_17));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized17 reg_3_39_all
       (.E(reg_3_39_we),
        .Q(reg_3_43_all_n_19),
        .\addr_reg_reg[14] (reg_3_40_all_n_21),
        .\addr_reg_reg[19] ({\addr_reg_reg[20] [19:18],\addr_reg_reg[20] [16:8],\addr_reg_reg[20] [5:0]}),
        .\addr_reg_reg[2] (\rddata_out[15]_i_3_n_0 ),
        .\addr_reg_reg[3] (reg_1_0_15_n_8),
        .\addr_reg_reg[5] (reg_3_0_15_n_25),
        .\addr_reg_reg[5]_0 (reg_3_0_11_n_4),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[89:74]),
        .\q_reg[0]_0 (reg_1_0_15_n_9),
        .\q_reg[0]_1 (reg_1_0_11_n_0),
        .\q_reg[0]_2 (reg_3_0_15_n_28),
        .\q_reg[0]_3 (reg_3_33_15_n_5),
        .\q_reg[11]_0 (d1_reg_0[11]),
        .\q_reg[11]_1 (reg_3_34_all_n_21),
        .\q_reg[3]_0 (reg_3_33_13_8_n_1),
        .\q_reg[9]_0 ({pseudo_rand_seeds_int[115],pseudo_rand_seeds_int[112],pseudo_rand_seeds_int[57],pseudo_rand_seeds_int[54],pseudo_rand_seeds_int[25],pseudo_rand_seeds_int[22],pseudo_rand_seeds_int[19]}),
        .\rddata_out_reg[10] (reg_3_39_all_n_21),
        .\rddata_out_reg[11] (reg_3_39_all_n_0),
        .\rddata_out_reg[15] (reg_3_39_all_n_3),
        .\rddata_out_reg[3] (reg_3_39_all_n_22),
        .\rddata_out_reg[5] (reg_3_39_all_n_23),
        .\rddata_out_reg[6] (reg_3_39_all_n_24),
        .\rddata_out_reg[7] (reg_3_39_all_n_20),
        .\rddata_out_reg[9] (reg_3_39_all_n_1),
        .re_prev_reg(reg_3_39_all_n_2),
        .reg_1_8_11(reg_1_8_11__0),
        .\shift_reg_reg[15] (\shift_reg_reg[15]_3 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized18 reg_3_40_all
       (.E(\q_reg[0]_6 ),
        .Q(Q[0]),
        .\addr_reg_reg[17] ({\addr_reg_reg[20] [17:14],\addr_reg_reg[20] [7:0]}),
        .\addr_reg_reg[18] (reg_3_8_11_n_0),
        .\addr_reg_reg[1] (reg_3_33_13_8_n_4),
        .\addr_reg_reg[1]_0 (reg_3_33_13_8_n_5),
        .\addr_reg_reg[1]_1 (\rddata_out[3]_i_16_n_0 ),
        .\addr_reg_reg[2] (\rddata_out[14]_i_13_n_0 ),
        .\addr_reg_reg[3] (reg_3_32_1_n_1),
        .\addr_reg_reg[8] (reg_3_39_all_n_20),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int[105:90]),
        .\q_reg[0]_0 (reg_3_38_all_n_24),
        .\q_reg[13]_0 ({pseudo_rand_seeds_int[45],pseudo_rand_seeds_int[42:38],pseudo_rand_seeds_int[35:34],pseudo_rand_seeds_int[32]}),
        .\q_reg[1]_0 (reg_3_38_all_n_20),
        .\q_reg[8]_0 (reg_3_38_all_n_18),
        .\q_reg[9]_0 (d1_reg_0[9:8]),
        .\q_reg[9]_1 (reg_3_38_all_n_17),
        .\rddata_out_reg[0] (reg_3_40_all_n_26),
        .\rddata_out_reg[10] (reg_3_40_all_n_19),
        .\rddata_out_reg[13] (reg_3_40_all_n_18),
        .\rddata_out_reg[1] (reg_3_40_all_n_22),
        .\rddata_out_reg[2] (reg_3_40_all_n_1),
        .\rddata_out_reg[3] (reg_3_40_all_n_23),
        .\rddata_out_reg[6] (reg_3_40_all_n_25),
        .\rddata_out_reg[7] (reg_3_40_all_n_24),
        .\rddata_out_reg[8] (reg_3_40_all_n_20),
        .\rddata_out_reg[9] (reg_3_40_all_n_21),
        .reg_3_32_0(reg_3_32_0__0),
        .\shift_reg_reg[15] (\shift_reg_reg[15]_4 ),
        .\state_reg[1] (\state_reg[1]_0 ),
        .\state_reg[2] (\state_reg[2]_0 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized19 reg_3_41_9_0
       (.D({\shift_reg_reg[9]_0 ,reg_3_0_15_n_1}),
        .E(\q_reg[0]_0 ),
        .\addr_reg_reg[1] (reg_3_40_all_n_26),
        .\addr_reg_reg[2] (reg_3_39_all_n_23),
        .\addr_reg_reg[3] (reg_3_43_all_n_7),
        .\addr_reg_reg[3]_0 (reg_3_40_all_n_1),
        .\addr_reg_reg[5] ({\addr_reg_reg[20] [5],\addr_reg_reg[20] [3:0]}),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[53:52],pseudo_rand_seeds_int[50:48],pseudo_rand_seeds_int[21:20]}),
        .\q_reg[0]_0 (reg_3_43_all_n_11),
        .\q_reg[1]_0 (reg_3_43_all_n_10),
        .\q_reg[1]_1 ({reg_3_33_7_0_n_6,reg_3_33_7_0_n_7}),
        .\rddata_out_reg[0] (reg_3_41_9_0_n_2),
        .\rddata_out_reg[1] (reg_3_41_9_0_n_14),
        .\rddata_out_reg[2] (reg_3_41_9_0_n_13),
        .\rddata_out_reg[4] (reg_3_41_9_0_n_0),
        .\rddata_out_reg[5] (reg_3_41_9_0_n_1),
        .\scr_reg_reg[57] (pseudo_rand_seeds_int[115:106]));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized20 reg_3_42_5_0
       (.D(D),
        .E(\q_reg[0]_8 ),
        .Q({\prbs_err_count_reg[0] [4],reg_3_42,\prbs_err_count_reg[0] [3:0]}),
        .\addr_reg_reg[19] ({\addr_reg_reg[20] [19:17],\addr_reg_reg[20] [2:0]}),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .indirect_read_reg(indirect_read_reg),
        .new_tx_test_seed(new_tx_test_seed),
        .out(out),
        .\prbs31_err_count_reg[15] (\prbs31_err_count_reg[15] ),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\q_reg[0]_0 (reg_3_42_5_0_n_9),
        .\rd_data_reg[7] (\rd_data_reg[7] ),
        .\scr_reg_reg[57] (\scr_reg_reg[57] ),
        .\state_reg[2] (\state_reg[2]_3 ),
        .\tx_66_enc_out_reg[0] (\tx_66_enc_out_reg[0] ),
        .tx_66_fifo(tx_66_fifo),
        .\tx_test_patt_seed_sel_reg[0] (\tx_test_patt_seed_sel_reg[0] ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized21 reg_3_43_all
       (.Q({reg_3_43_all_n_12,reg_3_43_all_n_13,reg_3_43_all_n_14,reg_3_43_all_n_15,reg_3_43_all_n_16,reg_3_43_all_n_17,reg_3_43_all_n_18,reg_3_43_all_n_19,reg_3_43_all_n_20}),
        .SR(reg_3_0_15_n_11),
        .\addr_reg_reg[20] (\addr_reg_reg[20] ),
        .\addr_reg_reg[3] (\rddata_out[14]_i_10_n_0 ),
        .\addr_reg_reg[4] (\rddata_out[15]_i_16_n_0 ),
        .coreclk(coreclk),
        .\prbs_err_count_reg[15] (\prbs_err_count_reg[15] ),
        .pseudo_rand_seeds_int({pseudo_rand_seeds_int[84],pseudo_rand_seeds_int[78],pseudo_rand_seeds_int[76:74],pseudo_rand_seeds_int[60],pseudo_rand_seeds_int[30],pseudo_rand_seeds_int[26],pseudo_rand_seeds_int[18:16]}),
        .\q_reg[0]_0 (reg_3_43_all_n_2),
        .\q_reg[0]_1 (\q_reg[0]_7 ),
        .\q_reg[2]_0 (\prbs_err_count_reg[0] [2]),
        .\q_reg[7]_0 (reg_3_33_7_0_n_5),
        .\rddata_out_reg[0] (reg_3_43_all_n_11),
        .\rddata_out_reg[10] (reg_3_43_all_n_6),
        .\rddata_out_reg[14] (reg_3_43_all_n_4),
        .\rddata_out_reg[1] (reg_3_43_all_n_10),
        .\rddata_out_reg[2] (reg_3_43_all_n_8),
        .\rddata_out_reg[4] (reg_3_43_all_n_7),
        .\rddata_out_reg[7] (reg_3_43_all_n_9),
        .re_prev(re_prev),
        .re_prev_reg_0(reg_3_43_all_n_3),
        .reg_3_43_re(reg_3_43_re),
        .\state_reg[2] (\state_reg[2]_1 ),
        .\state_reg[2]_0 (\state_reg[2]_0 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized22 reg_3_65535_all
       (.D(rddata[4]),
        .E(\q_reg[0]_5 ),
        .Q(Q[0]),
        .\addr_reg_reg[0] (reg_3_41_9_0_n_0),
        .\addr_reg_reg[10] (\rddata_out[4]_i_7_n_0 ),
        .\addr_reg_reg[13] (reg_3_39_all_n_21),
        .\addr_reg_reg[14] (\rddata_out[4]_i_8_n_0 ),
        .\addr_reg_reg[17] (\addr_reg_reg[20] [17:0]),
        .\addr_reg_reg[1] (reg_3_33_7_0_n_1),
        .\addr_reg_reg[1]_0 (reg_3_34_all_n_25),
        .\addr_reg_reg[20] (\q_reg[0]_11 ),
        .\addr_reg_reg[2] (reg_3_36_all_n_22),
        .coreclk(coreclk),
        .d1_reg(d1_reg_0),
        .data_out_reg(SR),
        .\q_reg[0]_0 (reg_3_65535_all_n_1),
        .\rddata_out_reg[0] (reg_3_65535_all_n_20),
        .\rddata_out_reg[15] (reg_3_65535_all_n_19),
        .\rddata_out_reg[1] (reg_3_65535_all_n_21),
        .\shift_reg_reg[15] (\shift_reg_reg[15]_5 ),
        .\state_reg[1] (\state_reg[1]_0 ),
        .\state_reg[2] (\state_reg[2]_0 ),
        .\state_reg[2]_0 (\state_reg[2]_2 ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized7 reg_3_8_10
       (.\addr_reg_reg[0] (reg_1_0_15_n_12),
        .\addr_reg_reg[15] (reg_3_34_all_n_20),
        .\addr_reg_reg[2] (reg_1_0_15_n_5),
        .\addr_reg_reg[4] (\rddata_out[7]_i_2_n_0 ),
        .\addr_reg_reg[7] (\addr_reg_reg[20] [7:3]),
        .\addr_reg_reg[8] (reg_3_39_all_n_20),
        .coreclk(coreclk),
        .q_reg(reg_3_8_11_n_4),
        .\q_reg[0]_0 (reg_3_0_15_n_28),
        .\q_reg[7] (reg_3_43_all_n_9),
        .\rddata_out_reg[10] (reg_3_8_10_n_2),
        .\rddata_out_reg[7] (reg_3_8_10_n_1),
        .reg_3_8(reg_3_8));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized6 reg_3_8_11
       (.\addr_reg_reg[20] (\addr_reg_reg[20] ),
        .coreclk(coreclk),
        .data_out_reg(SR),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\q_reg[0] (reg_3_8_11_n_0),
        .\q_reg[0]_0 (\q_reg[0]_9 ),
        .\q_reg[0]_1 (reg_3_8_11_n_4),
        .\rddata_out_reg[0] (\rddata_out_reg[0]_0 ),
        .\rddata_out_reg[3] (reg_3_8_11_n_2),
        .read_reg_reg(read_reg_reg_0),
        .reg_3_8(reg_3_8),
        .\state_reg[2] (\state_reg[2]_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    wrack_i_1
       (.I0(regs_wrack),
        .O(wrack_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wrack_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(wrack_i_1_n_0),
        .Q(regs_wrack),
        .R(mgmt_rnw));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_dp_ram" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_dp_ram
   (E,
    rd_data,
    wr_clk_en,
    full_int_reg,
    wr_en,
    rd_en,
    rd_clk_en,
    empty_int_reg,
    wr_clk,
    wr_data,
    Q,
    \wr_addr_reg[4] ,
    rd_clk);
  output [0:0]E;
  output [65:0]rd_data;
  input wr_clk_en;
  input full_int_reg;
  input wr_en;
  input rd_en;
  input rd_clk_en;
  input empty_int_reg;
  input wr_clk;
  input [65:0]wr_data;
  input [4:0]Q;
  input [4:0]\wr_addr_reg[4] ;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire empty_int_reg;
  wire full_int_reg;
  wire rd_clk;
  wire rd_clk_en;
  wire [65:0]rd_data;
  wire \rd_data[65]_i_1_n_0 ;
  wire [65:0]rd_data_unreg;
  wire rd_en;
  wire [4:0]\wr_addr_reg[4] ;
  wire wr_clk;
  wire wr_clk_en;
  wire [65:0]wr_data;
  wire wr_en;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED;

  LUT3 #(
    .INIT(8'h08)) 
    \rd_data[65]_i_1 
       (.I0(rd_en),
        .I1(rd_clk_en),
        .I2(empty_int_reg),
        .O(\rd_data[65]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[0]),
        .Q(rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[10]),
        .Q(rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[11]),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[12]),
        .Q(rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[13]),
        .Q(rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[14]),
        .Q(rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[15]),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[16]),
        .Q(rd_data[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[17]),
        .Q(rd_data[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[18]),
        .Q(rd_data[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[19]),
        .Q(rd_data[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[1]),
        .Q(rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[20]),
        .Q(rd_data[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[21]),
        .Q(rd_data[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[22]),
        .Q(rd_data[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[23]),
        .Q(rd_data[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[24] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[24]),
        .Q(rd_data[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[25]),
        .Q(rd_data[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[26]),
        .Q(rd_data[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[27]),
        .Q(rd_data[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[28]),
        .Q(rd_data[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[29] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[29]),
        .Q(rd_data[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[2]),
        .Q(rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[30] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[30]),
        .Q(rd_data[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[31] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[31]),
        .Q(rd_data[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[32] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[32]),
        .Q(rd_data[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[33] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[33]),
        .Q(rd_data[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[34] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[34]),
        .Q(rd_data[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[35] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[35]),
        .Q(rd_data[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[36] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[36]),
        .Q(rd_data[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[37] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[37]),
        .Q(rd_data[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[38] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[38]),
        .Q(rd_data[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[39] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[39]),
        .Q(rd_data[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[3]),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[40] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[40]),
        .Q(rd_data[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[41] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[41]),
        .Q(rd_data[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[42] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[42]),
        .Q(rd_data[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[43] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[43]),
        .Q(rd_data[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[44] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[44]),
        .Q(rd_data[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[45] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[45]),
        .Q(rd_data[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[46] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[46]),
        .Q(rd_data[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[47] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[47]),
        .Q(rd_data[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[48] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[48]),
        .Q(rd_data[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[49] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[49]),
        .Q(rd_data[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[4]),
        .Q(rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[50] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[50]),
        .Q(rd_data[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[51] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[51]),
        .Q(rd_data[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[52] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[52]),
        .Q(rd_data[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[53] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[53]),
        .Q(rd_data[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[54] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[54]),
        .Q(rd_data[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[55] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[55]),
        .Q(rd_data[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[56] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[56]),
        .Q(rd_data[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[57] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[57]),
        .Q(rd_data[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[58] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[58]),
        .Q(rd_data[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[59] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[59]),
        .Q(rd_data[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[5]),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[60] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[60]),
        .Q(rd_data[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[61] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[61]),
        .Q(rd_data[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[62] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[62]),
        .Q(rd_data[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[63] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[63]),
        .Q(rd_data[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[64] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[64]),
        .Q(rd_data[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[65] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[65]),
        .Q(rd_data[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[6]),
        .Q(rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[7]),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[8]),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(rd_clk),
        .CE(\rd_data[65]_i_1_n_0 ),
        .D(rd_data_unreg[9]),
        .Q(rd_data[9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_0_5
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[1:0]),
        .DIB(wr_data[3:2]),
        .DIC(wr_data[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[1:0]),
        .DOB(rd_data_unreg[3:2]),
        .DOC(rd_data_unreg[5:4]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_12_17
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[13:12]),
        .DIB(wr_data[15:14]),
        .DIC(wr_data[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[13:12]),
        .DOB(rd_data_unreg[15:14]),
        .DOC(rd_data_unreg[17:16]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_18_23
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[19:18]),
        .DIB(wr_data[21:20]),
        .DIC(wr_data[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[19:18]),
        .DOB(rd_data_unreg[21:20]),
        .DOC(rd_data_unreg[23:22]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_24_29
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[25:24]),
        .DIB(wr_data[27:26]),
        .DIC(wr_data[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[25:24]),
        .DOB(rd_data_unreg[27:26]),
        .DOC(rd_data_unreg[29:28]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_30_35
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[31:30]),
        .DIB(wr_data[33:32]),
        .DIC(wr_data[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[31:30]),
        .DOB(rd_data_unreg[33:32]),
        .DOC(rd_data_unreg[35:34]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_36_41
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[37:36]),
        .DIB(wr_data[39:38]),
        .DIC(wr_data[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[37:36]),
        .DOB(rd_data_unreg[39:38]),
        .DOC(rd_data_unreg[41:40]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_42_47
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[43:42]),
        .DIB(wr_data[45:44]),
        .DIC(wr_data[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[43:42]),
        .DOB(rd_data_unreg[45:44]),
        .DOC(rd_data_unreg[47:46]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_48_53
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[49:48]),
        .DIB(wr_data[51:50]),
        .DIC(wr_data[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[49:48]),
        .DOB(rd_data_unreg[51:50]),
        .DOC(rd_data_unreg[53:52]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_54_59
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[55:54]),
        .DIB(wr_data[57:56]),
        .DIC(wr_data[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[55:54]),
        .DOB(rd_data_unreg[57:56]),
        .DOC(rd_data_unreg[59:58]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_60_65
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[61:60]),
        .DIB(wr_data[63:62]),
        .DIC(wr_data[65:64]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[61:60]),
        .DOB(rd_data_unreg[63:62]),
        .DOC(rd_data_unreg[65:64]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_6_11
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[7:6]),
        .DIB(wr_data[9:8]),
        .DIC(wr_data[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[7:6]),
        .DOB(rd_data_unreg[9:8]),
        .DOC(rd_data_unreg[11:10]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  LUT3 #(
    .INIT(8'h20)) 
    \wr_addr[4]_i_1 
       (.I0(wr_clk_en),
        .I1(full_int_reg),
        .I2(wr_en),
        .O(E));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_dp_ram" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_dp_ram__parameterized0
   (E,
    rd_data,
    wr_clk_en,
    full_int_reg,
    wr_en,
    rd_en,
    rd_clk_en,
    empty_int_reg,
    wr_clk,
    wr_data,
    Q,
    \wr_addr_reg[4] ,
    rd_clk);
  output [0:0]E;
  output [73:0]rd_data;
  input wr_clk_en;
  input full_int_reg;
  input wr_en;
  input rd_en;
  input rd_clk_en;
  input empty_int_reg;
  input wr_clk;
  input [73:0]wr_data;
  input [4:0]Q;
  input [4:0]\wr_addr_reg[4] ;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire empty_int_reg;
  wire full_int_reg;
  wire rd_clk;
  wire rd_clk_en;
  wire [73:0]rd_data;
  wire \rd_data[73]_i_1_n_0 ;
  wire [73:0]rd_data_unreg;
  wire rd_en;
  wire [4:0]\wr_addr_reg[4] ;
  wire wr_clk;
  wire wr_clk_en;
  wire [73:0]wr_data;
  wire wr_en;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_66_71_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOB_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOC_UNCONNECTED;
  wire [1:0]NLW_ten_gig_disti_ram_reg_0_31_72_73_DOD_UNCONNECTED;

  LUT3 #(
    .INIT(8'h08)) 
    \rd_data[73]_i_1 
       (.I0(rd_en),
        .I1(rd_clk_en),
        .I2(empty_int_reg),
        .O(\rd_data[73]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[0] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[0]),
        .Q(rd_data[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[10] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[10]),
        .Q(rd_data[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[11] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[11]),
        .Q(rd_data[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[12] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[12]),
        .Q(rd_data[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[13] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[13]),
        .Q(rd_data[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[14] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[14]),
        .Q(rd_data[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[15] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[15]),
        .Q(rd_data[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[16] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[16]),
        .Q(rd_data[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[17] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[17]),
        .Q(rd_data[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[18] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[18]),
        .Q(rd_data[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[19] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[19]),
        .Q(rd_data[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[1] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[1]),
        .Q(rd_data[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[20] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[20]),
        .Q(rd_data[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[21] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[21]),
        .Q(rd_data[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[22] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[22]),
        .Q(rd_data[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[23] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[23]),
        .Q(rd_data[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[24] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[24]),
        .Q(rd_data[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[25] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[25]),
        .Q(rd_data[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[26] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[26]),
        .Q(rd_data[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[27] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[27]),
        .Q(rd_data[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[28] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[28]),
        .Q(rd_data[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[29] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[29]),
        .Q(rd_data[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[2] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[2]),
        .Q(rd_data[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[30] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[30]),
        .Q(rd_data[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[31] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[31]),
        .Q(rd_data[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[32] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[32]),
        .Q(rd_data[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[33] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[33]),
        .Q(rd_data[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[34] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[34]),
        .Q(rd_data[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[35] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[35]),
        .Q(rd_data[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[36] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[36]),
        .Q(rd_data[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[37] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[37]),
        .Q(rd_data[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[38] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[38]),
        .Q(rd_data[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[39] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[39]),
        .Q(rd_data[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[3] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[3]),
        .Q(rd_data[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[40] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[40]),
        .Q(rd_data[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[41] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[41]),
        .Q(rd_data[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[42] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[42]),
        .Q(rd_data[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[43] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[43]),
        .Q(rd_data[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[44] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[44]),
        .Q(rd_data[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[45] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[45]),
        .Q(rd_data[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[46] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[46]),
        .Q(rd_data[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[47] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[47]),
        .Q(rd_data[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[48] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[48]),
        .Q(rd_data[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[49] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[49]),
        .Q(rd_data[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[4] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[4]),
        .Q(rd_data[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[50] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[50]),
        .Q(rd_data[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[51] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[51]),
        .Q(rd_data[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[52] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[52]),
        .Q(rd_data[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[53] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[53]),
        .Q(rd_data[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[54] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[54]),
        .Q(rd_data[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[55] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[55]),
        .Q(rd_data[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[56] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[56]),
        .Q(rd_data[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[57] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[57]),
        .Q(rd_data[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[58] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[58]),
        .Q(rd_data[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[59] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[59]),
        .Q(rd_data[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[5] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[5]),
        .Q(rd_data[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[60] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[60]),
        .Q(rd_data[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[61] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[61]),
        .Q(rd_data[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[62] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[62]),
        .Q(rd_data[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[63] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[63]),
        .Q(rd_data[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[64] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[64]),
        .Q(rd_data[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[65] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[65]),
        .Q(rd_data[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[66] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[66]),
        .Q(rd_data[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[67] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[67]),
        .Q(rd_data[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[68] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[68]),
        .Q(rd_data[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[69] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[69]),
        .Q(rd_data[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[6] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[6]),
        .Q(rd_data[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[70] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[70]),
        .Q(rd_data[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[71] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[71]),
        .Q(rd_data[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[72] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[72]),
        .Q(rd_data[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[73] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[73]),
        .Q(rd_data[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[7] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[7]),
        .Q(rd_data[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[8] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[8]),
        .Q(rd_data[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rd_data_reg[9] 
       (.C(rd_clk),
        .CE(\rd_data[73]_i_1_n_0 ),
        .D(rd_data_unreg[9]),
        .Q(rd_data[9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_0_5
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[1:0]),
        .DIB(wr_data[3:2]),
        .DIC(wr_data[5:4]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[1:0]),
        .DOB(rd_data_unreg[3:2]),
        .DOC(rd_data_unreg[5:4]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_12_17
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[13:12]),
        .DIB(wr_data[15:14]),
        .DIC(wr_data[17:16]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[13:12]),
        .DOB(rd_data_unreg[15:14]),
        .DOC(rd_data_unreg[17:16]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_18_23
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[19:18]),
        .DIB(wr_data[21:20]),
        .DIC(wr_data[23:22]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[19:18]),
        .DOB(rd_data_unreg[21:20]),
        .DOC(rd_data_unreg[23:22]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_24_29
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[25:24]),
        .DIB(wr_data[27:26]),
        .DIC(wr_data[29:28]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[25:24]),
        .DOB(rd_data_unreg[27:26]),
        .DOC(rd_data_unreg[29:28]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_30_35
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[31:30]),
        .DIB(wr_data[33:32]),
        .DIC(wr_data[35:34]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[31:30]),
        .DOB(rd_data_unreg[33:32]),
        .DOC(rd_data_unreg[35:34]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_36_41
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[37:36]),
        .DIB(wr_data[39:38]),
        .DIC(wr_data[41:40]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[37:36]),
        .DOB(rd_data_unreg[39:38]),
        .DOC(rd_data_unreg[41:40]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_42_47
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[43:42]),
        .DIB(wr_data[45:44]),
        .DIC(wr_data[47:46]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[43:42]),
        .DOB(rd_data_unreg[45:44]),
        .DOC(rd_data_unreg[47:46]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_48_53
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[49:48]),
        .DIB(wr_data[51:50]),
        .DIC(wr_data[53:52]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[49:48]),
        .DOB(rd_data_unreg[51:50]),
        .DOC(rd_data_unreg[53:52]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_48_53_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_54_59
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[55:54]),
        .DIB(wr_data[57:56]),
        .DIC(wr_data[59:58]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[55:54]),
        .DOB(rd_data_unreg[57:56]),
        .DOC(rd_data_unreg[59:58]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_54_59_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_60_65
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[61:60]),
        .DIB(wr_data[63:62]),
        .DIC(wr_data[65:64]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[61:60]),
        .DOB(rd_data_unreg[63:62]),
        .DOC(rd_data_unreg[65:64]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_60_65_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_66_71
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[67:66]),
        .DIB(wr_data[69:68]),
        .DIC(wr_data[71:70]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[67:66]),
        .DOB(rd_data_unreg[69:68]),
        .DOC(rd_data_unreg[71:70]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_66_71_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_6_11
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[7:6]),
        .DIB(wr_data[9:8]),
        .DIC(wr_data[11:10]),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[7:6]),
        .DOB(rd_data_unreg[9:8]),
        .DOC(rd_data_unreg[11:10]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M ten_gig_disti_ram_reg_0_31_72_73
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(\wr_addr_reg[4] ),
        .DIA(wr_data[73:72]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(rd_data_unreg[73:72]),
        .DOB(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_ten_gig_disti_ram_reg_0_31_72_73_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  LUT3 #(
    .INIT(8'h20)) 
    \wr_addr[4]_i_1 
       (.I0(wr_clk_en),
        .I1(full_int_reg),
        .I2(wr_en),
        .O(E));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_drp_ipif" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_drp_ipif
   (toggle_reg,
    control_reg,
    drp_ack,
    drp_den,
    drp_daddr,
    drp_di,
    Q,
    drp_req,
    drp_dwe,
    dclk,
    mgmt_drp_cs,
    coreclk,
    drp_drdy,
    \state_reg[2] ,
    dclk_reset,
    drp_drpdo,
    drp_gnt,
    mgmt_rnw,
    D,
    \shift_reg_reg[15] );
  output toggle_reg;
  output control_reg;
  output drp_ack;
  output drp_den;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  output [15:0]Q;
  output drp_req;
  output drp_dwe;
  input dclk;
  input mgmt_drp_cs;
  input coreclk;
  input drp_drdy;
  input \state_reg[2] ;
  input dclk_reset;
  input [15:0]drp_drpdo;
  input drp_gnt;
  input mgmt_rnw;
  input [15:0]D;
  input [15:0]\shift_reg_reg[15] ;

  wire [15:0]D;
  wire [15:0]Q;
  wire control_reg;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [15:0]ipif_addr_dclk;
  wire ipif_cs_dclk_reg;
  wire [15:0]ipif_rddata_dclk;
  wire ipif_rddata_dclk0;
  wire ipif_rnw_dclk;
  wire [15:0]ipif_wrdata_dclk;
  wire mgmt_drp_cs;
  wire mgmt_rnw;
  wire [15:0]p_1_in;
  wire [15:0]\shift_reg_reg[15] ;
  wire [1:0]state;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state_reg[2] ;
  wire synch_1_n_2;
  wire synch_1_n_21;
  wire synch_1_n_22;
  wire synch_1_n_23;
  wire synch_1_n_24;
  wire synch_1_n_25;
  wire synch_1_n_26;
  wire synch_1_n_27;
  wire synch_1_n_28;
  wire synch_1_n_29;
  wire synch_1_n_3;
  wire synch_1_n_30;
  wire synch_1_n_31;
  wire synch_1_n_32;
  wire synch_1_n_33;
  wire synch_1_n_34;
  wire synch_1_n_35;
  wire synch_1_n_36;
  wire synch_1_n_4;
  wire toggle_reg;

  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[0]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[0]),
        .O(drp_daddr[0]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[10]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[10]),
        .O(drp_daddr[10]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[11]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[11]),
        .O(drp_daddr[11]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[12]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[12]),
        .O(drp_daddr[12]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[13]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[13]),
        .O(drp_daddr[13]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[14]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[14]),
        .O(drp_daddr[14]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[15]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[15]),
        .O(drp_daddr[15]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[1]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[1]),
        .O(drp_daddr[1]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[2]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[2]),
        .O(drp_daddr[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[3]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[3]),
        .O(drp_daddr[3]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[4]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[4]),
        .O(drp_daddr[4]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[5]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[5]),
        .O(drp_daddr[5]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[6]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[6]),
        .O(drp_daddr[6]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[7]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[7]),
        .O(drp_daddr[7]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[8]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[8]),
        .O(drp_daddr[8]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_daddr[9]_INST_0 
       (.I0(state[1]),
        .I1(ipif_addr_dclk[9]),
        .O(drp_daddr[9]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h2)) 
    drp_den_INST_0
       (.I0(state[1]),
        .I1(state[0]),
        .O(drp_den));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[0]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[0]),
        .O(drp_di[0]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[10]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[10]),
        .O(drp_di[10]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[11]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[11]),
        .O(drp_di[11]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[12]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[12]),
        .O(drp_di[12]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[13]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[13]),
        .O(drp_di[13]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[14]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[14]),
        .O(drp_di[14]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[15]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[15]),
        .O(drp_di[15]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[1]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[1]),
        .O(drp_di[1]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[2]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[2]),
        .O(drp_di[2]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[3]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[3]),
        .O(drp_di[3]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[4]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[4]),
        .O(drp_di[4]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[5]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[5]),
        .O(drp_di[5]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[6]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[6]),
        .O(drp_di[6]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[7]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[7]),
        .O(drp_di[7]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[8]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[8]),
        .O(drp_di[8]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \drp_di[9]_INST_0 
       (.I0(state[1]),
        .I1(ipif_wrdata_dclk[9]),
        .O(drp_di[9]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'h04)) 
    drp_dwe_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(ipif_rnw_dclk),
        .O(drp_dwe));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hE)) 
    drp_req_INST_0
       (.I0(state[0]),
        .I1(state[1]),
        .O(drp_req));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[0] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[0]),
        .Q(ipif_addr_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[10] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[10]),
        .Q(ipif_addr_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[11] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[11]),
        .Q(ipif_addr_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[12] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[12]),
        .Q(ipif_addr_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[13] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[13]),
        .Q(ipif_addr_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[14] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[14]),
        .Q(ipif_addr_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[15] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[15]),
        .Q(ipif_addr_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[1] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[1]),
        .Q(ipif_addr_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[2] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[2]),
        .Q(ipif_addr_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[3] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[3]),
        .Q(ipif_addr_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[4] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[4]),
        .Q(ipif_addr_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[5] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[5]),
        .Q(ipif_addr_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[6] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[6]),
        .Q(ipif_addr_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[7] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[7]),
        .Q(ipif_addr_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[8] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[8]),
        .Q(ipif_addr_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_addr_dclk_reg[9] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(p_1_in[9]),
        .Q(ipif_addr_dclk[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_cs_dclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(synch_1_n_3),
        .Q(ipif_cs_dclk_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \ipif_rddata_dclk[15]_i_1 
       (.I0(drp_drdy),
        .I1(ipif_rnw_dclk),
        .O(ipif_rddata_dclk0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[0] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[0]),
        .Q(ipif_rddata_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[10] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[10]),
        .Q(ipif_rddata_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[11] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[11]),
        .Q(ipif_rddata_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[12] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[12]),
        .Q(ipif_rddata_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[13] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[13]),
        .Q(ipif_rddata_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[14] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[14]),
        .Q(ipif_rddata_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[15] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[15]),
        .Q(ipif_rddata_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[1] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[1]),
        .Q(ipif_rddata_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[2] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[2]),
        .Q(ipif_rddata_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[3] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[3]),
        .Q(ipif_rddata_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[4] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[4]),
        .Q(ipif_rddata_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[5] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[5]),
        .Q(ipif_rddata_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[6] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[6]),
        .Q(ipif_rddata_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[7] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[7]),
        .Q(ipif_rddata_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[8] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[8]),
        .Q(ipif_rddata_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_rddata_dclk_reg[9] 
       (.C(dclk),
        .CE(ipif_rddata_dclk0),
        .D(drp_drpdo[9]),
        .Q(ipif_rddata_dclk[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ipif_rnw_dclk_reg
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_4),
        .Q(ipif_rnw_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[0] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_36),
        .Q(ipif_wrdata_dclk[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[10] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_26),
        .Q(ipif_wrdata_dclk[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[11] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_25),
        .Q(ipif_wrdata_dclk[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[12] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_24),
        .Q(ipif_wrdata_dclk[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[13] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_23),
        .Q(ipif_wrdata_dclk[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[14] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_22),
        .Q(ipif_wrdata_dclk[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[15] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_21),
        .Q(ipif_wrdata_dclk[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[1] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_35),
        .Q(ipif_wrdata_dclk[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[2] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_34),
        .Q(ipif_wrdata_dclk[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[3] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_33),
        .Q(ipif_wrdata_dclk[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[4] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_32),
        .Q(ipif_wrdata_dclk[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[5] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_31),
        .Q(ipif_wrdata_dclk[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[6] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_30),
        .Q(ipif_wrdata_dclk[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[7] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_29),
        .Q(ipif_wrdata_dclk[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[8] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_28),
        .Q(ipif_wrdata_dclk[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ipif_wrdata_dclk_reg[9] 
       (.C(dclk),
        .CE(synch_1_n_2),
        .D(synch_1_n_27),
        .Q(ipif_wrdata_dclk[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000003734F7F4)) 
    \state[0]_i_1 
       (.I0(drp_gnt),
        .I1(state[0]),
        .I2(state[1]),
        .I3(synch_1_n_2),
        .I4(drp_drdy),
        .I5(dclk_reset),
        .O(\state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'h000058F8)) 
    \state[1]_i_1 
       (.I0(state[0]),
        .I1(drp_gnt),
        .I2(state[1]),
        .I3(drp_drdy),
        .I4(dclk_reset),
        .O(\state[1]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(1'b0));
  FDRE \state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\state[1]_i_1_n_0 ),
        .Q(state[1]),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer synch_1
       (.D({mgmt_rnw,D}),
        .E(synch_1_n_2),
        .Q({synch_1_n_4,p_1_in,synch_1_n_21,synch_1_n_22,synch_1_n_23,synch_1_n_24,synch_1_n_25,synch_1_n_26,synch_1_n_27,synch_1_n_28,synch_1_n_29,synch_1_n_30,synch_1_n_31,synch_1_n_32,synch_1_n_33,synch_1_n_34,synch_1_n_35,synch_1_n_36}),
        .control_reg(control_reg),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .ipif_cs_dclk_reg(ipif_cs_dclk_reg),
        .ipif_cs_dclk_reg_reg(synch_1_n_3),
        .mgmt_drp_cs(mgmt_drp_cs),
        .\shift_reg_reg[15] (\shift_reg_reg[15] ),
        .\state_reg[2] (\state_reg[2] ),
        .toggle_reg(toggle_reg));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer__parameterized0 synch_2
       (.Q(ipif_rddata_dclk),
        .coreclk(coreclk),
        .dclk(dclk),
        .drp_ack(drp_ack),
        .drp_drdy(drp_drdy),
        .\prbs31_err_count_reg[15] (Q));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer
   (xgmii_rxd,
    xgmii_rxc,
    comp_0,
    comp_1,
    comp_2,
    comp_3,
    comp_4,
    comp_5,
    comp_6,
    comp_7,
    comp_8,
    comp_0_0,
    comp_1_1,
    comp_2_2,
    comp_3_3,
    comp_4_4,
    comp_5_5,
    comp_6_6,
    comp_7_7,
    comp_8_8,
    comp_0_9,
    comp_1_10,
    comp_2_11,
    comp_0_12,
    comp_1_13,
    comp_2_14,
    rxusrclk2,
    eq_rxusrclk2_en156_reg,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    Q,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    out,
    pcs_loopback_core_int,
    \xgmii_txc_reg2_reg[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input comp_0;
  input comp_1;
  input comp_2;
  input comp_3;
  input comp_4;
  input comp_5;
  input comp_6;
  input comp_7;
  input comp_8;
  input comp_0_0;
  input comp_1_1;
  input comp_2_2;
  input comp_3_3;
  input comp_4_4;
  input comp_5_5;
  input comp_6_6;
  input comp_7_7;
  input comp_8_8;
  input comp_0_9;
  input comp_1_10;
  input comp_2_11;
  input comp_0_12;
  input comp_1_13;
  input comp_2_14;
  input rxusrclk2;
  input eq_rxusrclk2_en156_reg;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [63:0]Q;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  input [63:0]out;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_txc_reg2_reg[7] ;

  wire [63:0]Q;
  wire asynch_fifo_i_n_76;
  wire asynch_fifo_i_n_77;
  wire asynch_fifo_i_n_78;
  wire asynch_fifo_i_n_79;
  wire asynch_fifo_i_n_80;
  wire asynch_fifo_i_n_81;
  wire asynch_fifo_i_n_82;
  wire asynch_fifo_i_n_83;
  wire asynch_fifo_i_n_84;
  wire asynch_fifo_i_n_85;
  wire can_insert_rd;
  wire can_insert_wra;
  wire can_insert_wra2;
  wire can_insert_wra_comb;
  wire can_insert_wra_comb_i_1_n_0;
  wire can_insert_wra_i_1_n_0;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_12;
  wire comp_0_9;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_10;
  wire comp_1_13;
  wire comp_2;
  wire comp_2_11;
  wire comp_2_14;
  wire comp_2_2;
  wire comp_3;
  wire comp_3_3;
  wire comp_4;
  wire comp_4_4;
  wire comp_5;
  wire comp_5_5;
  wire comp_6;
  wire comp_6_6;
  wire comp_7;
  wire comp_7_7;
  wire comp_8;
  wire comp_8_8;
  wire coreclk;
  wire empty;
  wire eq_rxusrclk2_en156_reg;
  wire [73:0]fifo_rd_data;
  wire [4:4]fifo_status;
  wire [73:0]fifo_wr_data;
  wire idle_delete_i_n_0;
  wire idle_insert_i_n_0;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [63:0]out;
  wire pcs_loopback_core_int;
  wire q;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;
  wire NLW_asynch_fifo_i_full_UNCONNECTED;
  wire [3:0]NLW_asynch_fifo_i_status_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* WIDTH = "74" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo__parameterized0 asynch_fifo_i
       (.empty(empty),
        .fifo_rd_addr({asynch_fifo_i_n_81,asynch_fifo_i_n_82,asynch_fifo_i_n_83,asynch_fifo_i_n_84,asynch_fifo_i_n_85}),
        .fifo_wr_addr({asynch_fifo_i_n_76,asynch_fifo_i_n_77,asynch_fifo_i_n_78,asynch_fifo_i_n_79,asynch_fifo_i_n_80}),
        .full(NLW_asynch_fifo_i_full_UNCONNECTED),
        .rd_clk(coreclk),
        .rd_clk_en(1'b1),
        .rd_data(fifo_rd_data),
        .rd_en(idle_insert_i_n_0),
        .rd_reset(reset),
        .status({fifo_status,NLW_asynch_fifo_i_status_UNCONNECTED[3:0]}),
        .wr_clk(rxusrclk2),
        .wr_clk_en(eq_rxusrclk2_en156_reg),
        .wr_data(fifo_wr_data),
        .wr_en(idle_delete_i_n_0),
        .wr_reset(rxreset_rxusrclk2));
  FDRE can_insert_rd_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(q),
        .Q(can_insert_rd),
        .R(reset));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_42 can_insert_synch
       (.can_insert_wra_comb(can_insert_wra_comb),
        .coreclk(coreclk),
        .q(q));
  FDRE can_insert_wra2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra),
        .Q(can_insert_wra2),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    can_insert_wra_comb_i_1
       (.I0(can_insert_wra),
        .I1(can_insert_wra2),
        .O(can_insert_wra_comb_i_1_n_0));
  FDRE can_insert_wra_comb_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra_comb_i_1_n_0),
        .Q(can_insert_wra_comb),
        .R(rxreset_rxusrclk2));
  LUT1 #(
    .INIT(2'h1)) 
    can_insert_wra_i_1
       (.I0(fifo_status),
        .O(can_insert_wra_i_1_n_0));
  FDRE can_insert_wra_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(can_insert_wra_i_1_n_0),
        .Q(can_insert_wra),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_delete idle_delete_i
       (.Q(Q),
        .comp_0(comp_0),
        .comp_0_0(comp_0_0),
        .comp_0_12(comp_0_12),
        .comp_0_9(comp_0_9),
        .comp_1(comp_1),
        .comp_1_1(comp_1_1),
        .comp_1_10(comp_1_10),
        .comp_1_13(comp_1_13),
        .comp_2(comp_2),
        .comp_2_11(comp_2_11),
        .comp_2_14(comp_2_14),
        .comp_2_2(comp_2_2),
        .comp_3(comp_3),
        .comp_3_3(comp_3_3),
        .comp_4(comp_4),
        .comp_4_4(comp_4_4),
        .comp_5(comp_5),
        .comp_5_5(comp_5_5),
        .comp_6(comp_6),
        .comp_6_6(comp_6_6),
        .comp_7(comp_7),
        .comp_7_7(comp_7_7),
        .comp_8(comp_8),
        .comp_8_8(comp_8_8),
        .eq_rxusrclk2_en156_reg(eq_rxusrclk2_en156_reg),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .status(fifo_status),
        .\wr_addr_reg[4] (idle_delete_i_n_0),
        .wr_data(fifo_wr_data));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_insert idle_insert_i
       (.can_insert_rd(can_insert_rd),
        .coreclk(coreclk),
        .empty(empty),
        .out(out),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .rd_data(fifo_rd_data),
        .\rd_data_reg[73] (idle_insert_i_n_0),
        .reset(reset),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (\xgmii_txc_reg2_reg[7] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer_wrapper" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer_wrapper
   (xgmii_rxd,
    xgmii_rxc,
    comp_0,
    comp_1,
    comp_2,
    comp_3,
    comp_4,
    comp_5,
    comp_6,
    comp_7,
    comp_8,
    comp_0_0,
    comp_1_1,
    comp_2_2,
    comp_3_3,
    comp_4_4,
    comp_5_5,
    comp_6_6,
    comp_7_7,
    comp_8_8,
    comp_0_9,
    comp_1_10,
    comp_2_11,
    comp_0_12,
    comp_1_13,
    comp_2_14,
    rxusrclk2,
    eq_rxusrclk2_en156_reg,
    rxreset_rxusrclk2,
    coreclk,
    reset,
    Q,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    out,
    pcs_loopback_core_int,
    \xgmii_txc_reg2_reg[7] );
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input comp_0;
  input comp_1;
  input comp_2;
  input comp_3;
  input comp_4;
  input comp_5;
  input comp_6;
  input comp_7;
  input comp_8;
  input comp_0_0;
  input comp_1_1;
  input comp_2_2;
  input comp_3_3;
  input comp_4_4;
  input comp_5_5;
  input comp_6_6;
  input comp_7_7;
  input comp_8_8;
  input comp_0_9;
  input comp_1_10;
  input comp_2_11;
  input comp_0_12;
  input comp_1_13;
  input comp_2_14;
  input rxusrclk2;
  input eq_rxusrclk2_en156_reg;
  input rxreset_rxusrclk2;
  input coreclk;
  input reset;
  input [63:0]Q;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  input [63:0]out;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_txc_reg2_reg[7] ;

  wire [63:0]Q;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_12;
  wire comp_0_9;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_10;
  wire comp_1_13;
  wire comp_2;
  wire comp_2_11;
  wire comp_2_14;
  wire comp_2_2;
  wire comp_3;
  wire comp_3_3;
  wire comp_4;
  wire comp_4_4;
  wire comp_5;
  wire comp_5_5;
  wire comp_6;
  wire comp_6_6;
  wire comp_7;
  wire comp_7_7;
  wire comp_8;
  wire comp_8_8;
  wire coreclk;
  wire eq_rxusrclk2_en156_reg;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [63:0]out;
  wire pcs_loopback_core_int;
  wire reset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_elastic_buffer rx_elastic_buffer_i
       (.Q(Q),
        .comp_0(comp_0),
        .comp_0_0(comp_0_0),
        .comp_0_12(comp_0_12),
        .comp_0_9(comp_0_9),
        .comp_1(comp_1),
        .comp_1_1(comp_1_1),
        .comp_1_10(comp_1_10),
        .comp_1_13(comp_1_13),
        .comp_2(comp_2),
        .comp_2_11(comp_2_11),
        .comp_2_14(comp_2_14),
        .comp_2_2(comp_2_2),
        .comp_3(comp_3),
        .comp_3_3(comp_3_3),
        .comp_4(comp_4),
        .comp_4_4(comp_4_4),
        .comp_5(comp_5),
        .comp_5_5(comp_5_5),
        .comp_6(comp_6),
        .comp_6_6(comp_6_6),
        .comp_7(comp_7),
        .comp_7_7(comp_7_7),
        .comp_8(comp_8),
        .comp_8_8(comp_8_8),
        .coreclk(coreclk),
        .eq_rxusrclk2_en156_reg(eq_rxusrclk2_en156_reg),
        .\mcp1_rx_ebuff_ctrl_reg[7] (\mcp1_rx_ebuff_ctrl_reg[7] ),
        .out(out),
        .pcs_loopback_core_int(pcs_loopback_core_int),
        .reset(reset),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .\xgmii_txc_reg2_reg[7] (\xgmii_txc_reg2_reg[7] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register
   (loopback_ctrl,
    \rddata_out_reg[0] ,
    data_out_reg,
    \shift_reg_reg[0] ,
    coreclk,
    \addr_reg_reg[3] ,
    \q_reg[0]_0 );
  output [0:0]loopback_ctrl;
  output \rddata_out_reg[0] ;
  input data_out_reg;
  input \shift_reg_reg[0] ;
  input coreclk;
  input [3:0]\addr_reg_reg[3] ;
  input \q_reg[0]_0 ;

  wire [3:0]\addr_reg_reg[3] ;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]loopback_ctrl;
  wire \q_reg[0]_0 ;
  wire \rddata_out_reg[0] ;
  wire \shift_reg_reg[0] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[0] ),
        .Q(loopback_ctrl),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h000000000505F454)) 
    \rddata_out[0]_i_6 
       (.I0(\addr_reg_reg[3] [1]),
        .I1(loopback_ctrl),
        .I2(\addr_reg_reg[3] [3]),
        .I3(\q_reg[0]_0 ),
        .I4(\addr_reg_reg[3] [2]),
        .I5(\addr_reg_reg[3] [0]),
        .O(\rddata_out_reg[0] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_36
   (\rddata_out_reg[11] ,
    data_out_reg,
    \shift_reg_reg[11] ,
    coreclk);
  output \rddata_out_reg[11] ;
  input data_out_reg;
  input \shift_reg_reg[11] ;
  input coreclk;

  wire coreclk;
  wire data_out_reg;
  wire \rddata_out_reg[11] ;
  wire \shift_reg_reg[11] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[11] ),
        .Q(\rddata_out_reg[11] ),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_37
   (tx_disable_int,
    \rddata_out_reg[0] ,
    \q_reg[0]_0 ,
    data_out_reg,
    \shift_reg_reg[0] ,
    coreclk,
    \q_reg[0]_1 ,
    \addr_reg_reg[1] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[3] ,
    \addr_reg_reg[1]_0 ,
    p_0_in,
    \addr_reg_reg[18] ,
    \addr_reg_reg[12] ,
    pma_pmd_type);
  output tx_disable_int;
  output \rddata_out_reg[0] ;
  output \q_reg[0]_0 ;
  input data_out_reg;
  input \shift_reg_reg[0] ;
  input coreclk;
  input \q_reg[0]_1 ;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[3] ;
  input \addr_reg_reg[1]_0 ;
  input p_0_in;
  input [5:0]\addr_reg_reg[18] ;
  input \addr_reg_reg[12] ;
  input [0:0]pma_pmd_type;

  wire \addr_reg_reg[12] ;
  wire [5:0]\addr_reg_reg[18] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[1]_0 ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[3] ;
  wire coreclk;
  wire data_out_reg;
  wire p_0_in;
  wire [0:0]pma_pmd_type;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \rddata_out[0]_i_2_n_0 ;
  wire \rddata_out[0]_i_5_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \shift_reg_reg[0] ;
  wire tx_disable_int;

  LUT2 #(
    .INIT(4'hE)) 
    \q[0]_i_4__0 
       (.I0(\addr_reg_reg[18] [5]),
        .I1(\addr_reg_reg[18] [4]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[0] ),
        .Q(tx_disable_int),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \rddata_out[0]_i_1 
       (.I0(\rddata_out[0]_i_2_n_0 ),
        .I1(\q_reg[0]_1 ),
        .I2(\addr_reg_reg[1] ),
        .I3(\addr_reg_reg[2] ),
        .I4(\addr_reg_reg[3] ),
        .O(\rddata_out_reg[0] ));
  LUT5 #(
    .INIT(32'h0000000E)) 
    \rddata_out[0]_i_2 
       (.I0(\rddata_out[0]_i_5_n_0 ),
        .I1(\addr_reg_reg[1]_0 ),
        .I2(p_0_in),
        .I3(\addr_reg_reg[18] [4]),
        .I4(\addr_reg_reg[12] ),
        .O(\rddata_out[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0000A0A0000)) 
    \rddata_out[0]_i_5 
       (.I0(tx_disable_int),
        .I1(\addr_reg_reg[18] [0]),
        .I2(\addr_reg_reg[18] [1]),
        .I3(pma_pmd_type),
        .I4(\addr_reg_reg[18] [3]),
        .I5(\addr_reg_reg[18] [2]),
        .O(\rddata_out[0]_i_5_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_38
   (\q_reg[0]_0 ,
    reg_3_0_15_we,
    \q_reg[0]_1 ,
    re_prev_reg,
    \rddata_out_reg[11] ,
    data_out_reg,
    \state_reg[2] ,
    coreclk,
    \state_reg[2]_0 ,
    \addr_reg_reg[20] ,
    \addr_reg_reg[14] ,
    \state_reg[2]_1 ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[4] ,
    \addr_reg_reg[2] );
  output \q_reg[0]_0 ;
  output reg_3_0_15_we;
  output \q_reg[0]_1 ;
  output re_prev_reg;
  output \rddata_out_reg[11] ;
  input data_out_reg;
  input \state_reg[2] ;
  input coreclk;
  input \state_reg[2]_0 ;
  input [12:0]\addr_reg_reg[20] ;
  input \addr_reg_reg[14] ;
  input \state_reg[2]_1 ;
  input [0:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[2] ;

  wire \addr_reg_reg[14] ;
  wire [12:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[4] ;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]pseudo_rand_seeds_int;
  wire \q[0]_i_3__0_n_0 ;
  wire \q[0]_i_4__1_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \rddata_out_reg[11] ;
  wire re_prev_reg;
  wire reg_3_0_15_we;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;

  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \q[0]_i_2__0 
       (.I0(\state_reg[2]_0 ),
        .I1(\addr_reg_reg[20] [8]),
        .I2(\addr_reg_reg[20] [9]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\q[0]_i_3__0_n_0 ),
        .I5(\addr_reg_reg[14] ),
        .O(reg_3_0_15_we));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \q[0]_i_3__0 
       (.I0(\q_reg[0]_1 ),
        .I1(\q[0]_i_4__1_n_0 ),
        .I2(\state_reg[2]_1 ),
        .I3(re_prev_reg),
        .I4(\addr_reg_reg[20] [0]),
        .I5(\addr_reg_reg[20] [10]),
        .O(\q[0]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[0]_i_3__1 
       (.I0(\addr_reg_reg[20] [11]),
        .I1(\addr_reg_reg[20] [12]),
        .I2(\addr_reg_reg[20] [5]),
        .I3(\addr_reg_reg[20] [6]),
        .O(\q_reg[0]_1 ));
  LUT2 #(
    .INIT(4'hE)) 
    \q[0]_i_4__1 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [3]),
        .O(\q[0]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \q[9]_i_5__0 
       (.I0(\addr_reg_reg[20] [7]),
        .I1(\addr_reg_reg[20] [1]),
        .O(re_prev_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state_reg[2] ),
        .Q(\q_reg[0]_0 ),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h000000000000A404)) 
    \rddata_out[11]_i_6 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\q_reg[0]_0 ),
        .I2(\addr_reg_reg[20] [3]),
        .I3(pseudo_rand_seeds_int),
        .I4(\addr_reg_reg[4] ),
        .I5(\addr_reg_reg[2] ),
        .O(\rddata_out_reg[11] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register_39
   (d1_reg,
    core_in_testmode_wire,
    data_out_reg,
    \state_reg[2] ,
    coreclk,
    prbs31_rx_enable_core_regb_reg,
    Q);
  output d1_reg;
  output core_in_testmode_wire;
  input data_out_reg;
  input \state_reg[2] ;
  input coreclk;
  input prbs31_rx_enable_core_regb_reg;
  input [0:0]Q;

  wire [0:0]Q;
  wire core_in_testmode_wire;
  wire coreclk;
  wire d1_reg;
  wire data_out_reg;
  wire prbs31_rx_enable_core_regb_reg;
  wire \state_reg[2] ;

  LUT3 #(
    .INIT(8'hFE)) 
    core_in_testmode_i_1
       (.I0(d1_reg),
        .I1(prbs31_rx_enable_core_regb_reg),
        .I2(Q),
        .O(core_in_testmode_wire));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state_reg[2] ),
        .Q(d1_reg),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized0
   (p_0_in,
    \rddata_out_reg[1] ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[2] ,
    \q_reg[0]_0 ,
    reg_1_9_we,
    \q_reg[0]_1 ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[15] ,
    \rddata_out_reg[7] ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    coreclk,
    \addr_reg_reg[9] ,
    \addr_reg_reg[0] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[0]_0 ,
    \addr_reg_reg[8] ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[0]_1 ,
    \addr_reg_reg[1] ,
    \q_reg[3] ,
    \addr_reg_reg[20] ,
    \addr_reg_reg[0]_2 ,
    \q_reg[2] ,
    \addr_reg_reg[1]_0 ,
    \addr_reg_reg[0]_3 ,
    \addr_reg_reg[0]_4 ,
    \addr_reg_reg[16] ,
    \state_reg[2] ,
    \addr_reg_reg[0]_5 ,
    \addr_reg_reg[19] ,
    \addr_reg_reg[18] ,
    \addr_reg_reg[11] ,
    \addr_reg_reg[15] ,
    \addr_reg_reg[2]_0 ,
    pma_pmd_type,
    \addr_reg_reg[12] ,
    \addr_reg_reg[1]_1 ,
    \addr_reg_reg[13] ,
    \addr_reg_reg[6] ,
    \addr_reg_reg[5]_0 ,
    reset,
    \addr_reg_reg[5]_1 ,
    \q_reg[0]_4 ,
    \addr_reg_reg[1]_2 ,
    Q,
    loopback_ctrl,
    \q_reg[0]_5 ,
    pcs_reset_clear_core_intr,
    resetdone);
  output p_0_in;
  output \rddata_out_reg[1] ;
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[13] ;
  output \rddata_out_reg[2] ;
  output \q_reg[0]_0 ;
  output reg_1_9_we;
  output \q_reg[0]_1 ;
  output \rddata_out_reg[9] ;
  output \rddata_out_reg[11] ;
  output \rddata_out_reg[5] ;
  output \rddata_out_reg[15] ;
  output \rddata_out_reg[7] ;
  output \q_reg[0]_2 ;
  output \q_reg[0]_3 ;
  input coreclk;
  input \addr_reg_reg[9] ;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[0]_0 ;
  input \addr_reg_reg[8] ;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[0]_1 ;
  input \addr_reg_reg[1] ;
  input \q_reg[3] ;
  input [16:0]\addr_reg_reg[20] ;
  input \addr_reg_reg[0]_2 ;
  input \q_reg[2] ;
  input \addr_reg_reg[1]_0 ;
  input \addr_reg_reg[0]_3 ;
  input \addr_reg_reg[0]_4 ;
  input \addr_reg_reg[16] ;
  input \state_reg[2] ;
  input \addr_reg_reg[0]_5 ;
  input \addr_reg_reg[19] ;
  input \addr_reg_reg[18] ;
  input \addr_reg_reg[11] ;
  input \addr_reg_reg[15] ;
  input \addr_reg_reg[2]_0 ;
  input [1:0]pma_pmd_type;
  input \addr_reg_reg[12] ;
  input \addr_reg_reg[1]_1 ;
  input \addr_reg_reg[13] ;
  input \addr_reg_reg[6] ;
  input \addr_reg_reg[5]_0 ;
  input reset;
  input \addr_reg_reg[5]_1 ;
  input \q_reg[0]_4 ;
  input \addr_reg_reg[1]_2 ;
  input [2:0]Q;
  input [0:0]loopback_ctrl;
  input \q_reg[0]_5 ;
  input pcs_reset_clear_core_intr;
  input resetdone;

  wire [2:0]Q;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[0]_0 ;
  wire \addr_reg_reg[0]_1 ;
  wire \addr_reg_reg[0]_2 ;
  wire \addr_reg_reg[0]_3 ;
  wire \addr_reg_reg[0]_4 ;
  wire \addr_reg_reg[0]_5 ;
  wire \addr_reg_reg[11] ;
  wire \addr_reg_reg[12] ;
  wire \addr_reg_reg[13] ;
  wire \addr_reg_reg[15] ;
  wire \addr_reg_reg[16] ;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[19] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[1]_0 ;
  wire \addr_reg_reg[1]_1 ;
  wire \addr_reg_reg[1]_2 ;
  wire [16:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[5] ;
  wire \addr_reg_reg[5]_0 ;
  wire \addr_reg_reg[5]_1 ;
  wire \addr_reg_reg[6] ;
  wire \addr_reg_reg[8] ;
  wire \addr_reg_reg[9] ;
  wire coreclk;
  wire [0:0]loopback_ctrl;
  wire p_0_in;
  wire pcs_reset_clear_core_intr;
  wire [1:0]pma_pmd_type;
  wire \q[0]_i_1__4_n_0 ;
  wire \q[0]_i_5__0_n_0 ;
  wire \q[0]_i_5_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[0]_5 ;
  wire \q_reg[2] ;
  wire \q_reg[3] ;
  wire \rddata_out[13]_i_5_n_0 ;
  wire \rddata_out[1]_i_11_n_0 ;
  wire \rddata_out[1]_i_2_n_0 ;
  wire \rddata_out[1]_i_7_n_0 ;
  wire \rddata_out[2]_i_2_n_0 ;
  wire \rddata_out[3]_i_2_n_0 ;
  wire \rddata_out[3]_i_8_n_0 ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[9] ;
  wire reg_1_0_15_we;
  wire reg_1_9_we;
  wire reset;
  wire resetdone;
  wire \state_reg[2] ;

  LUT2 #(
    .INIT(4'hE)) 
    pma_resetout_INST_0
       (.I0(reset),
        .I1(p_0_in),
        .O(\q_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFF8F00000080)) 
    \q[0]_i_1__2 
       (.I0(Q[0]),
        .I1(\state_reg[2] ),
        .I2(reg_1_0_15_we),
        .I3(p_0_in),
        .I4(reset),
        .I5(loopback_ctrl),
        .O(\q_reg[0]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFF8F00000080)) 
    \q[0]_i_1__3 
       (.I0(\state_reg[2] ),
        .I1(Q[1]),
        .I2(reg_1_0_15_we),
        .I3(p_0_in),
        .I4(reset),
        .I5(\q_reg[0]_5 ),
        .O(\q_reg[0]_3 ));
  LUT6 #(
    .INIT(64'hE2220000E222E222)) 
    \q[0]_i_1__4 
       (.I0(p_0_in),
        .I1(reg_1_0_15_we),
        .I2(\state_reg[2] ),
        .I3(Q[2]),
        .I4(pcs_reset_clear_core_intr),
        .I5(resetdone),
        .O(\q[0]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \q[0]_i_2 
       (.I0(\addr_reg_reg[0]_5 ),
        .I1(\addr_reg_reg[19] ),
        .I2(\addr_reg_reg[18] ),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [11]),
        .I5(\q[0]_i_5_n_0 ),
        .O(reg_1_9_we));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \q[0]_i_3 
       (.I0(\addr_reg_reg[16] ),
        .I1(\addr_reg_reg[20] [16]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\state_reg[2] ),
        .I4(\q_reg[0]_0 ),
        .I5(\q[0]_i_5__0_n_0 ),
        .O(reg_1_0_15_we));
  LUT2 #(
    .INIT(4'hE)) 
    \q[0]_i_4 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [1]),
        .O(\q_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF7F)) 
    \q[0]_i_5 
       (.I0(\state_reg[2] ),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [12]),
        .I3(\addr_reg_reg[20] [4]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\q_reg[0]_1 ),
        .O(\q[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[0]_i_5__0 
       (.I0(\addr_reg_reg[20] [13]),
        .I1(\addr_reg_reg[20] [14]),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [15]),
        .O(\q[0]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__4_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEF)) 
    \rddata_out[12]_i_4 
       (.I0(\addr_reg_reg[8] ),
        .I1(\addr_reg_reg[15] ),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\rddata_out_reg[11] ),
        .I4(\addr_reg_reg[20] [0]),
        .I5(\q_reg[0]_0 ),
        .O(\rddata_out_reg[9] ));
  LUT6 #(
    .INIT(64'h5555555545555554)) 
    \rddata_out[13]_i_3 
       (.I0(\addr_reg_reg[20] [13]),
        .I1(\rddata_out[13]_i_5_n_0 ),
        .I2(\addr_reg_reg[20] [5]),
        .I3(\addr_reg_reg[20] [7]),
        .I4(\addr_reg_reg[20] [6]),
        .I5(\addr_reg_reg[0]_2 ),
        .O(\rddata_out_reg[13] ));
  LUT5 #(
    .INIT(32'hFFFFBFFE)) 
    \rddata_out[13]_i_5 
       (.I0(\addr_reg_reg[11] ),
        .I1(\addr_reg_reg[20] [10]),
        .I2(\addr_reg_reg[20] [11]),
        .I3(\addr_reg_reg[20] [9]),
        .I4(p_0_in),
        .O(\rddata_out[13]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[14]_i_7 
       (.I0(p_0_in),
        .I1(\addr_reg_reg[20] [13]),
        .O(\rddata_out_reg[11] ));
  LUT6 #(
    .INIT(64'h00000000FFEFFFEC)) 
    \rddata_out[15]_i_5 
       (.I0(\q_reg[0]_0 ),
        .I1(\addr_reg_reg[12] ),
        .I2(p_0_in),
        .I3(\addr_reg_reg[20] [0]),
        .I4(\addr_reg_reg[1]_1 ),
        .I5(\addr_reg_reg[20] [13]),
        .O(\rddata_out_reg[15] ));
  LUT5 #(
    .INIT(32'h4444444F)) 
    \rddata_out[1]_i_1 
       (.I0(\rddata_out[1]_i_2_n_0 ),
        .I1(\addr_reg_reg[9] ),
        .I2(\addr_reg_reg[0] ),
        .I3(\addr_reg_reg[2] ),
        .I4(\addr_reg_reg[0]_0 ),
        .O(\rddata_out_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \rddata_out[1]_i_11 
       (.I0(\addr_reg_reg[20] [13]),
        .I1(p_0_in),
        .I2(\addr_reg_reg[20] [0]),
        .O(\rddata_out[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF77FFFF4C)) 
    \rddata_out[1]_i_2 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [1]),
        .I2(pma_pmd_type[0]),
        .I3(\addr_reg_reg[20] [4]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\rddata_out[1]_i_7_n_0 ),
        .O(\rddata_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7EFFFF7E)) 
    \rddata_out[1]_i_7 
       (.I0(\addr_reg_reg[20] [6]),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[20] [4]),
        .I3(\addr_reg_reg[20] [10]),
        .I4(\addr_reg_reg[20] [11]),
        .I5(\rddata_out[1]_i_11_n_0 ),
        .O(\rddata_out[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBABABAB)) 
    \rddata_out[2]_i_1 
       (.I0(\rddata_out[2]_i_2_n_0 ),
        .I1(\q_reg[2] ),
        .I2(\addr_reg_reg[1]_0 ),
        .I3(\addr_reg_reg[0]_3 ),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\addr_reg_reg[0]_4 ),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \rddata_out[2]_i_2 
       (.I0(\addr_reg_reg[13] ),
        .I1(\rddata_out[3]_i_8_n_0 ),
        .I2(\addr_reg_reg[20] [11]),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\addr_reg_reg[6] ),
        .I5(\addr_reg_reg[5]_0 ),
        .O(\rddata_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111F111F1111111F)) 
    \rddata_out[3]_i_1 
       (.I0(\rddata_out[3]_i_2_n_0 ),
        .I1(\addr_reg_reg[8] ),
        .I2(\addr_reg_reg[5] ),
        .I3(\addr_reg_reg[0]_1 ),
        .I4(\addr_reg_reg[1] ),
        .I5(\q_reg[3] ),
        .O(\rddata_out_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \rddata_out[3]_i_2 
       (.I0(\rddata_out[3]_i_8_n_0 ),
        .I1(\addr_reg_reg[20] [9]),
        .I2(\addr_reg_reg[20] [8]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [11]),
        .I5(\addr_reg_reg[1]_2 ),
        .O(\rddata_out[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \rddata_out[3]_i_8 
       (.I0(\addr_reg_reg[20] [10]),
        .I1(\addr_reg_reg[20] [0]),
        .I2(p_0_in),
        .I3(\addr_reg_reg[20] [13]),
        .O(\rddata_out[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFEFFFEF)) 
    \rddata_out[5]_i_6 
       (.I0(\addr_reg_reg[20] [13]),
        .I1(p_0_in),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[2]_0 ),
        .I4(pma_pmd_type[0]),
        .I5(pma_pmd_type[1]),
        .O(\rddata_out_reg[5] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFAB)) 
    \rddata_out[7]_i_6 
       (.I0(\rddata_out_reg[11] ),
        .I1(\addr_reg_reg[20] [0]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[6] ),
        .I4(\addr_reg_reg[5]_1 ),
        .I5(\q_reg[0]_4 ),
        .O(\rddata_out_reg[7] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized1
   (\q_reg[0]_0 ,
    \rddata_out_reg[2] ,
    coreclk,
    read_reg_reg,
    \addr_reg_reg[20] ,
    \state_reg[2] ,
    pma_pmd_type,
    global_pmd_rx_signal_detect_core_i,
    reset,
    p_0_in);
  output \q_reg[0]_0 ;
  output \rddata_out_reg[2] ;
  input coreclk;
  input read_reg_reg;
  input [10:0]\addr_reg_reg[20] ;
  input \state_reg[2] ;
  input [0:0]pma_pmd_type;
  input global_pmd_rx_signal_detect_core_i;
  input reset;
  input p_0_in;

  wire [10:0]\addr_reg_reg[20] ;
  wire coreclk;
  wire global_pmd_rx_signal_detect_core_i;
  wire p_0_in;
  wire [0:0]pma_pmd_type;
  wire q0;
  wire \q[0]_i_1__7_n_0 ;
  wire \q_reg[0]_0 ;
  wire \rddata_out_reg[2] ;
  wire re_prev;
  wire re_prev_i_2__1_n_0;
  wire re_prev_i_4_n_0;
  wire read_reg_reg;
  wire reg_1_1_re;
  wire reset;
  wire \state_reg[2] ;

  LUT6 #(
    .INIT(64'h020202AA02020202)) 
    \q[0]_i_1__7 
       (.I0(global_pmd_rx_signal_detect_core_i),
        .I1(re_prev_i_2__1_n_0),
        .I2(re_prev),
        .I3(reset),
        .I4(p_0_in),
        .I5(q0),
        .O(\q[0]_i_1__7_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \q[15]_i_5__1 
       (.I0(\addr_reg_reg[20] [10]),
        .I1(\addr_reg_reg[20] [9]),
        .I2(\addr_reg_reg[20] [8]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__7_n_0 ),
        .Q(q0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFDFFFFFCFDFFFFFF)) 
    \rddata_out[2]_i_7 
       (.I0(pma_pmd_type),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[20] [4]),
        .I3(\addr_reg_reg[20] [1]),
        .I4(\addr_reg_reg[20] [2]),
        .I5(q0),
        .O(\rddata_out_reg[2] ));
  LUT1 #(
    .INIT(2'h1)) 
    re_prev_i_1__2
       (.I0(re_prev_i_2__1_n_0),
        .O(reg_1_1_re));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    re_prev_i_2__1
       (.I0(read_reg_reg),
        .I1(re_prev_i_4_n_0),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\state_reg[2] ),
        .I5(\q_reg[0]_0 ),
        .O(re_prev_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hEFFF)) 
    re_prev_i_4
       (.I0(\addr_reg_reg[20] [7]),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [6]),
        .O(re_prev_i_4_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_1_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized10
   (\rddata_out_reg[10] ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[12] ,
    \rddata_out_reg[8] ,
    \rddata_out_reg[9] ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[10] ,
    \addr_reg_reg[15] ,
    \addr_reg_reg[13] ,
    \addr_reg_reg[5] ,
    \q_reg[10]_0 ,
    \addr_reg_reg[3] ,
    \q_reg[10]_1 ,
    \addr_reg_reg[2] ,
    pseudo_rand_seeds_int,
    Q,
    \addr_reg_reg[4] ,
    SR,
    \pcs_ber_count_reg[5] ,
    coreclk);
  output \rddata_out_reg[10] ;
  output \rddata_out_reg[11] ;
  output \rddata_out_reg[13] ;
  output \rddata_out_reg[12] ;
  output \rddata_out_reg[8] ;
  output \rddata_out_reg[9] ;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input [0:0]\q_reg[10] ;
  input \addr_reg_reg[15] ;
  input \addr_reg_reg[13] ;
  input [5:0]\addr_reg_reg[5] ;
  input \q_reg[10]_0 ;
  input \addr_reg_reg[3] ;
  input \q_reg[10]_1 ;
  input \addr_reg_reg[2] ;
  input [2:0]pseudo_rand_seeds_int;
  input [2:0]Q;
  input \addr_reg_reg[4] ;
  input [0:0]SR;
  input [5:0]\pcs_ber_count_reg[5] ;
  input coreclk;

  wire [2:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[13] ;
  wire \addr_reg_reg[15] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[4] ;
  wire [5:0]\addr_reg_reg[5] ;
  wire coreclk;
  wire [5:0]\pcs_ber_count_reg[5] ;
  wire [2:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire [0:0]\q_reg[10] ;
  wire \q_reg[10]_0 ;
  wire \q_reg[10]_1 ;
  wire \q_reg_n_0_[0] ;
  wire \q_reg_n_0_[1] ;
  wire \q_reg_n_0_[2] ;
  wire \q_reg_n_0_[3] ;
  wire \q_reg_n_0_[4] ;
  wire \q_reg_n_0_[5] ;
  wire \rddata_out[10]_i_2_n_0 ;
  wire \rddata_out[10]_i_7_n_0 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[8] ;
  wire \rddata_out_reg[9] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [0]),
        .Q(\q_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [1]),
        .Q(\q_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [2]),
        .Q(\q_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [3]),
        .Q(\q_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [4]),
        .Q(\q_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_ber_count_reg[5] [5]),
        .Q(\q_reg_n_0_[5] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000020002020202)) 
    \rddata_out[10]_i_1 
       (.I0(\rddata_out[10]_i_2_n_0 ),
        .I1(\q_reg[0]_0 ),
        .I2(\q_reg[0]_1 ),
        .I3(\q_reg[10] ),
        .I4(\addr_reg_reg[15] ),
        .I5(\addr_reg_reg[13] ),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'hC080C08FC080C080)) 
    \rddata_out[10]_i_2 
       (.I0(\addr_reg_reg[5] [5]),
        .I1(\rddata_out[10]_i_7_n_0 ),
        .I2(\addr_reg_reg[5] [0]),
        .I3(\addr_reg_reg[5] [4]),
        .I4(\q_reg[10]_0 ),
        .I5(\addr_reg_reg[3] ),
        .O(\rddata_out[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80018000)) 
    \rddata_out[10]_i_7 
       (.I0(\addr_reg_reg[5] [3]),
        .I1(\addr_reg_reg[5] [1]),
        .I2(\addr_reg_reg[5] [2]),
        .I3(\addr_reg_reg[5] [4]),
        .I4(\q_reg_n_0_[2] ),
        .I5(\q_reg[10]_1 ),
        .O(\rddata_out[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFF44F4F444444444)) 
    \rddata_out[11]_i_5 
       (.I0(\addr_reg_reg[2] ),
        .I1(\q_reg_n_0_[3] ),
        .I2(pseudo_rand_seeds_int[0]),
        .I3(Q[2]),
        .I4(\addr_reg_reg[5] [3]),
        .I5(\addr_reg_reg[4] ),
        .O(\rddata_out_reg[11] ));
  LUT5 #(
    .INIT(32'hF0020002)) 
    \rddata_out[12]_i_12 
       (.I0(\q_reg_n_0_[4] ),
        .I1(\addr_reg_reg[5] [3]),
        .I2(\addr_reg_reg[5] [2]),
        .I3(\addr_reg_reg[5] [1]),
        .I4(pseudo_rand_seeds_int[1]),
        .O(\rddata_out_reg[12] ));
  LUT6 #(
    .INIT(64'h0300000200000002)) 
    \rddata_out[13]_i_8 
       (.I0(\q_reg_n_0_[5] ),
        .I1(\addr_reg_reg[5] [3]),
        .I2(\addr_reg_reg[5] [4]),
        .I3(\addr_reg_reg[5] [1]),
        .I4(\addr_reg_reg[5] [2]),
        .I5(pseudo_rand_seeds_int[2]),
        .O(\rddata_out_reg[13] ));
  LUT5 #(
    .INIT(32'h50015A01)) 
    \rddata_out[8]_i_7 
       (.I0(\addr_reg_reg[5] [1]),
        .I1(\q_reg_n_0_[0] ),
        .I2(\addr_reg_reg[5] [2]),
        .I3(\addr_reg_reg[5] [3]),
        .I4(Q[0]),
        .O(\rddata_out_reg[8] ));
  LUT5 #(
    .INIT(32'h50015A01)) 
    \rddata_out[9]_i_7 
       (.I0(\addr_reg_reg[5] [1]),
        .I1(\q_reg_n_0_[1] ),
        .I2(\addr_reg_reg[5] [2]),
        .I3(\addr_reg_reg[5] [3]),
        .I4(Q[1]),
        .O(\rddata_out_reg[9] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized11
   (\rddata_out_reg[3] ,
    \rddata_out_reg[4] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[6] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[7] ,
    \addr_reg_reg[15] ,
    \addr_reg_reg[4] ,
    \addr_reg_reg[6] ,
    \addr_reg_reg[11] ,
    \addr_reg_reg[1] ,
    \q_reg[6]_0 ,
    \q_reg[0]_0 ,
    \addr_reg_reg[6]_0 ,
    Q,
    \q_reg[2]_0 ,
    SR,
    \pcs_error_block_count_reg[7] ,
    coreclk);
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[4] ;
  output \rddata_out_reg[5] ;
  output \rddata_out_reg[6] ;
  output \rddata_out_reg[2] ;
  output [2:0]\rddata_out_reg[7] ;
  input [5:0]\addr_reg_reg[15] ;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[6] ;
  input \addr_reg_reg[11] ;
  input \addr_reg_reg[1] ;
  input [1:0]\q_reg[6]_0 ;
  input \q_reg[0]_0 ;
  input \addr_reg_reg[6]_0 ;
  input [0:0]Q;
  input \q_reg[2]_0 ;
  input [0:0]SR;
  input [7:0]\pcs_error_block_count_reg[7] ;
  input coreclk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[11] ;
  wire [5:0]\addr_reg_reg[15] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[6] ;
  wire \addr_reg_reg[6]_0 ;
  wire coreclk;
  wire [7:0]\pcs_error_block_count_reg[7] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[2]_0 ;
  wire [1:0]\q_reg[6]_0 ;
  wire \q_reg_n_0_[2] ;
  wire \q_reg_n_0_[3] ;
  wire \q_reg_n_0_[4] ;
  wire \q_reg_n_0_[5] ;
  wire \q_reg_n_0_[6] ;
  wire \rddata_out[6]_i_9_n_0 ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[6] ;
  wire [2:0]\rddata_out_reg[7] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [0]),
        .Q(\rddata_out_reg[7] [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [1]),
        .Q(\rddata_out_reg[7] [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [2]),
        .Q(\q_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [3]),
        .Q(\q_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [4]),
        .Q(\q_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [5]),
        .Q(\q_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [6]),
        .Q(\q_reg_n_0_[6] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\pcs_error_block_count_reg[7] [7]),
        .Q(\rddata_out_reg[7] [2]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFEFFFFFFAAAAAAAA)) 
    \rddata_out[2]_i_4 
       (.I0(\addr_reg_reg[15] [0]),
        .I1(\addr_reg_reg[15] [2]),
        .I2(\addr_reg_reg[15] [1]),
        .I3(\q_reg_n_0_[2] ),
        .I4(\addr_reg_reg[15] [3]),
        .I5(\q_reg[2]_0 ),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF50C051C3)) 
    \rddata_out[3]_i_4 
       (.I0(\addr_reg_reg[15] [3]),
        .I1(\addr_reg_reg[15] [2]),
        .I2(\addr_reg_reg[15] [1]),
        .I3(\addr_reg_reg[15] [0]),
        .I4(\q_reg_n_0_[3] ),
        .I5(\addr_reg_reg[4] ),
        .O(\rddata_out_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4041)) 
    \rddata_out[4]_i_4 
       (.I0(\addr_reg_reg[15] [0]),
        .I1(\addr_reg_reg[15] [2]),
        .I2(\addr_reg_reg[15] [1]),
        .I3(\q_reg_n_0_[4] ),
        .I4(\addr_reg_reg[6] ),
        .I5(\addr_reg_reg[11] ),
        .O(\rddata_out_reg[4] ));
  LUT6 #(
    .INIT(64'h45FFFFFFFFFF4545)) 
    \rddata_out[5]_i_4 
       (.I0(\addr_reg_reg[1] ),
        .I1(\addr_reg_reg[15] [1]),
        .I2(\q_reg_n_0_[5] ),
        .I3(\q_reg[6]_0 [0]),
        .I4(\addr_reg_reg[15] [5]),
        .I5(\addr_reg_reg[15] [4]),
        .O(\rddata_out_reg[5] ));
  LUT6 #(
    .INIT(64'h0000000000004101)) 
    \rddata_out[6]_i_6 
       (.I0(\rddata_out[6]_i_9_n_0 ),
        .I1(\addr_reg_reg[15] [4]),
        .I2(\addr_reg_reg[15] [5]),
        .I3(\q_reg[6]_0 [1]),
        .I4(\q_reg[0]_0 ),
        .I5(\addr_reg_reg[6]_0 ),
        .O(\rddata_out_reg[6] ));
  LUT6 #(
    .INIT(64'h00CC00CC0310CF10)) 
    \rddata_out[6]_i_9 
       (.I0(\q_reg_n_0_[6] ),
        .I1(\addr_reg_reg[15] [2]),
        .I2(\addr_reg_reg[15] [3]),
        .I3(\addr_reg_reg[15] [0]),
        .I4(Q),
        .I5(\addr_reg_reg[15] [1]),
        .O(\rddata_out[6]_i_9_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized12
   (E,
    \rddata_out_reg[6] ,
    \rddata_out_reg[12] ,
    D,
    pseudo_rand_seeds_int,
    \rddata_out_reg[7] ,
    \rddata_out_reg[11] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[4] ,
    \rddata_out_reg[3] ,
    Q,
    \q_reg[0]_0 ,
    \pma_pmd_type[1] ,
    pma_pmd_type,
    \addr_reg_reg[17] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[3] ,
    \addr_reg_reg[4] ,
    \addr_reg_reg[18] ,
    \state_reg[1] ,
    read_reg_reg,
    reg_3_0_15,
    \state_reg[2] ,
    \q_reg[0]_1 ,
    \addr_reg_reg[3]_0 ,
    \q_reg[0]_2 ,
    \q_reg[15]_0 ,
    \addr_reg_reg[5]_0 ,
    \addr_reg_reg[14] ,
    \addr_reg_reg[9] ,
    \q_reg[15]_1 ,
    \addr_reg_reg[3]_1 ,
    \addr_reg_reg[5]_1 ,
    \addr_reg_reg[0] ,
    \q_reg[12]_0 ,
    \q_reg[12]_1 ,
    \addr_reg_reg[3]_2 ,
    \addr_reg_reg[3]_3 ,
    \addr_reg_reg[2]_0 ,
    \q_reg[7]_0 ,
    \q_reg[6]_0 ,
    \q_reg[5]_0 ,
    data_out_reg,
    \shift_reg_reg[15] ,
    coreclk);
  output [0:0]E;
  output \rddata_out_reg[6] ;
  output \rddata_out_reg[12] ;
  output [0:0]D;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[11] ;
  output \rddata_out_reg[2] ;
  output \rddata_out_reg[1] ;
  output \rddata_out_reg[5] ;
  output \rddata_out_reg[4] ;
  output \rddata_out_reg[3] ;
  input [0:0]Q;
  input \q_reg[0]_0 ;
  input \pma_pmd_type[1] ;
  input [0:0]pma_pmd_type;
  input [8:0]\addr_reg_reg[17] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[3] ;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[18] ;
  input \state_reg[1] ;
  input read_reg_reg;
  input reg_3_0_15;
  input \state_reg[2] ;
  input \q_reg[0]_1 ;
  input \addr_reg_reg[3]_0 ;
  input \q_reg[0]_2 ;
  input \q_reg[15]_0 ;
  input \addr_reg_reg[5]_0 ;
  input \addr_reg_reg[14] ;
  input \addr_reg_reg[9] ;
  input [8:0]\q_reg[15]_1 ;
  input \addr_reg_reg[3]_1 ;
  input \addr_reg_reg[5]_1 ;
  input \addr_reg_reg[0] ;
  input [1:0]\q_reg[12]_0 ;
  input \q_reg[12]_1 ;
  input \addr_reg_reg[3]_2 ;
  input \addr_reg_reg[3]_3 ;
  input \addr_reg_reg[2]_0 ;
  input \q_reg[7]_0 ;
  input \q_reg[6]_0 ;
  input [2:0]\q_reg[5]_0 ;
  input data_out_reg;
  input [14:0]\shift_reg_reg[15] ;
  input coreclk;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[14] ;
  wire [8:0]\addr_reg_reg[17] ;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[3]_0 ;
  wire \addr_reg_reg[3]_1 ;
  wire \addr_reg_reg[3]_2 ;
  wire \addr_reg_reg[3]_3 ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[5] ;
  wire \addr_reg_reg[5]_0 ;
  wire \addr_reg_reg[5]_1 ;
  wire \addr_reg_reg[9] ;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]pma_pmd_type;
  wire \pma_pmd_type[1] ;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q[0]_i_1__14_n_0 ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire [1:0]\q_reg[12]_0 ;
  wire \q_reg[12]_1 ;
  wire \q_reg[15]_0 ;
  wire [8:0]\q_reg[15]_1 ;
  wire [2:0]\q_reg[5]_0 ;
  wire \q_reg[6]_0 ;
  wire \q_reg[7]_0 ;
  wire \rddata_out[12]_i_2_n_0 ;
  wire \rddata_out[12]_i_5_n_0 ;
  wire \rddata_out[15]_i_2_n_0 ;
  wire \rddata_out[15]_i_6_n_0 ;
  wire \rddata_out[6]_i_2_n_0 ;
  wire \rddata_out[6]_i_4_n_0 ;
  wire \rddata_out[7]_i_9_n_0 ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[7] ;
  wire read_reg_reg;
  wire reg_3_0_15;
  wire [14:0]\shift_reg_reg[15] ;
  wire \state_reg[1] ;
  wire \state_reg[2] ;

  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__14 
       (.I0(E),
        .I1(Q),
        .O(\q[0]_i_1__14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \q[15]_i_1__2 
       (.I0(\addr_reg_reg[4] ),
        .I1(\addr_reg_reg[18] ),
        .I2(\addr_reg_reg[17] [1]),
        .I3(\addr_reg_reg[17] [4]),
        .I4(\state_reg[1] ),
        .I5(read_reg_reg),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q[0]_i_1__14_n_0 ),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [9]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [10]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [11]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [12]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [13]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [14]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [0]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [1]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [2]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [3]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [4]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [5]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [6]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [7]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [8]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'hA808A0A0A8080000)) 
    \rddata_out[11]_i_7 
       (.I0(\addr_reg_reg[3]_3 ),
        .I1(pseudo_rand_seeds_int[11]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(\q_reg[15]_1 [6]),
        .I4(\addr_reg_reg[17] [1]),
        .I5(\q_reg[15]_1 [0]),
        .O(\rddata_out_reg[11] ));
  LUT3 #(
    .INIT(8'h4F)) 
    \rddata_out[12]_i_1 
       (.I0(\rddata_out[12]_i_2_n_0 ),
        .I1(\addr_reg_reg[5] ),
        .I2(\addr_reg_reg[3] ),
        .O(\rddata_out_reg[12] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEFFFFFEE)) 
    \rddata_out[12]_i_2 
       (.I0(\rddata_out[12]_i_5_n_0 ),
        .I1(\addr_reg_reg[0] ),
        .I2(\q_reg[12]_0 [1]),
        .I3(\addr_reg_reg[17] [7]),
        .I4(\addr_reg_reg[17] [6]),
        .I5(\q_reg[12]_1 ),
        .O(\rddata_out[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF57F7)) 
    \rddata_out[12]_i_5 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(pseudo_rand_seeds_int[12]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(\q_reg[15]_1 [7]),
        .I4(\addr_reg_reg[17] [3]),
        .I5(\addr_reg_reg[2]_0 ),
        .O(\rddata_out[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BAFF0000)) 
    \rddata_out[15]_i_1 
       (.I0(\rddata_out[15]_i_2_n_0 ),
        .I1(\addr_reg_reg[2] ),
        .I2(reg_3_0_15),
        .I3(\addr_reg_reg[17] [8]),
        .I4(\state_reg[2] ),
        .I5(\q_reg[0]_1 ),
        .O(D));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    \rddata_out[15]_i_2 
       (.I0(\rddata_out[15]_i_6_n_0 ),
        .I1(\addr_reg_reg[3]_0 ),
        .I2(\addr_reg_reg[17] [0]),
        .I3(\addr_reg_reg[17] [4]),
        .I4(\q_reg[0]_2 ),
        .I5(\q_reg[15]_0 ),
        .O(\rddata_out[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000005555FD5D)) 
    \rddata_out[15]_i_6 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(pseudo_rand_seeds_int[15]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(\q_reg[15]_1 [8]),
        .I4(\addr_reg_reg[3]_1 ),
        .I5(\addr_reg_reg[5]_1 ),
        .O(\rddata_out[15]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0000EF00)) 
    \rddata_out[1]_i_14 
       (.I0(\addr_reg_reg[17] [2]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(pseudo_rand_seeds_int[1]),
        .I3(\addr_reg_reg[17] [1]),
        .I4(\addr_reg_reg[17] [0]),
        .O(\rddata_out_reg[1] ));
  LUT5 #(
    .INIT(32'h8180AAAA)) 
    \rddata_out[2]_i_6 
       (.I0(\addr_reg_reg[17] [0]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(pseudo_rand_seeds_int[2]),
        .I4(\addr_reg_reg[17] [4]),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \rddata_out[3]_i_6 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(pseudo_rand_seeds_int[3]),
        .I2(\addr_reg_reg[17] [3]),
        .I3(\q_reg[5]_0 [0]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\q_reg[15]_1 [1]),
        .O(\rddata_out_reg[3] ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \rddata_out[4]_i_5 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(\addr_reg_reg[17] [3]),
        .I3(\q_reg[5]_0 [1]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\q_reg[15]_1 [2]),
        .O(\rddata_out_reg[4] ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \rddata_out[5]_i_3 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(\addr_reg_reg[17] [3]),
        .I3(\q_reg[5]_0 [2]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\q_reg[15]_1 [3]),
        .O(\rddata_out_reg[5] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAABABBBB)) 
    \rddata_out[6]_i_1 
       (.I0(\rddata_out[6]_i_2_n_0 ),
        .I1(\q_reg[0]_0 ),
        .I2(\pma_pmd_type[1] ),
        .I3(pma_pmd_type),
        .I4(\addr_reg_reg[17] [3]),
        .I5(\addr_reg_reg[2] ),
        .O(\rddata_out_reg[6] ));
  LUT6 #(
    .INIT(64'hFD0D000000000000)) 
    \rddata_out[6]_i_2 
       (.I0(\addr_reg_reg[17] [4]),
        .I1(\rddata_out[6]_i_4_n_0 ),
        .I2(\addr_reg_reg[17] [0]),
        .I3(\addr_reg_reg[5]_0 ),
        .I4(\addr_reg_reg[14] ),
        .I5(\addr_reg_reg[9] ),
        .O(\rddata_out[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \rddata_out[6]_i_4 
       (.I0(pseudo_rand_seeds_int[6]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(\q_reg[15]_1 [4]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[17] [1]),
        .I5(\q_reg[6]_0 ),
        .O(\rddata_out[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFEFFFFFFFE)) 
    \rddata_out[7]_i_5 
       (.I0(\rddata_out[7]_i_9_n_0 ),
        .I1(\addr_reg_reg[3]_2 ),
        .I2(\addr_reg_reg[17] [7]),
        .I3(\addr_reg_reg[17] [6]),
        .I4(\addr_reg_reg[17] [5]),
        .I5(\q_reg[12]_0 [0]),
        .O(\rddata_out_reg[7] ));
  LUT6 #(
    .INIT(64'h00000000DDDFFFDF)) 
    \rddata_out[7]_i_9 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(pseudo_rand_seeds_int[7]),
        .I3(\addr_reg_reg[17] [2]),
        .I4(\q_reg[15]_1 [5]),
        .I5(\q_reg[7]_0 ),
        .O(\rddata_out[7]_i_9_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized13
   (\rddata_out_reg[13] ,
    \rddata_out_reg[7] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[12] ,
    \q_reg[5]_0 ,
    \addr_reg_reg[5] ,
    \q_reg[13]_0 ,
    \q_reg[13]_1 ,
    \q_reg[7]_0 ,
    \q_reg[4]_0 ,
    Q,
    data_out_reg,
    E,
    D,
    coreclk);
  output \rddata_out_reg[13] ;
  output \rddata_out_reg[7] ;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[12] ;
  input \q_reg[5]_0 ;
  input [5:0]\addr_reg_reg[5] ;
  input \q_reg[13]_0 ;
  input \q_reg[13]_1 ;
  input \q_reg[7]_0 ;
  input \q_reg[4]_0 ;
  input [0:0]Q;
  input data_out_reg;
  input [0:0]E;
  input [15:0]D;
  input coreclk;

  wire [15:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire [5:0]\addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q_reg[13]_0 ;
  wire \q_reg[13]_1 ;
  wire \q_reg[4]_0 ;
  wire \q_reg[5]_0 ;
  wire \q_reg[7]_0 ;
  wire \rddata_out[13]_i_7_n_0 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[7] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(D[0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(D[10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(D[11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(D[12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(D[13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(D[14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(D[15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(D[1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(D[2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(D[3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(D[4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(D[5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(D[6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(D[7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(D[8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(D[9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h000000002A0A2A2A)) 
    \rddata_out[12]_i_6 
       (.I0(\addr_reg_reg[5] [0]),
        .I1(\addr_reg_reg[5] [3]),
        .I2(\addr_reg_reg[5] [1]),
        .I3(\addr_reg_reg[5] [2]),
        .I4(pseudo_rand_seeds_int[12]),
        .I5(\q_reg[4]_0 ),
        .O(\rddata_out_reg[12] ));
  LUT6 #(
    .INIT(64'hD000FFFFD000D000)) 
    \rddata_out[13]_i_4 
       (.I0(\rddata_out[13]_i_7_n_0 ),
        .I1(\q_reg[5]_0 ),
        .I2(\addr_reg_reg[5] [5]),
        .I3(\addr_reg_reg[5] [0]),
        .I4(\q_reg[13]_0 ),
        .I5(\q_reg[13]_1 ),
        .O(\rddata_out_reg[13] ));
  LUT6 #(
    .INIT(64'h0FFFFFFFFF35FFFF)) 
    \rddata_out[13]_i_7 
       (.I0(pseudo_rand_seeds_int[13]),
        .I1(Q),
        .I2(\addr_reg_reg[5] [3]),
        .I3(\addr_reg_reg[5] [4]),
        .I4(\addr_reg_reg[5] [1]),
        .I5(\addr_reg_reg[5] [2]),
        .O(\rddata_out[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EFEE0000)) 
    \rddata_out[7]_i_10 
       (.I0(\addr_reg_reg[5] [3]),
        .I1(\addr_reg_reg[5] [2]),
        .I2(pseudo_rand_seeds_int[7]),
        .I3(\addr_reg_reg[5] [1]),
        .I4(\addr_reg_reg[5] [0]),
        .I5(\q_reg[7]_0 ),
        .O(\rddata_out_reg[7] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized14
   (E,
    \rddata_out_reg[5] ,
    \q_reg[0]_0 ,
    \rddata_out_reg[14] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[15] ,
    \rddata_out_reg[12] ,
    \rddata_out_reg[4] ,
    Q,
    \addr_reg_reg[1] ,
    \addr_reg_reg[2] ,
    \q_reg[5]_0 ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[17] ,
    \addr_reg_reg[20] ,
    \state_reg[2] ,
    \addr_reg_reg[14] ,
    \state_reg[1] ,
    \addr_reg_reg[2]_0 ,
    \q_reg[12]_0 ,
    \q_reg[12]_1 ,
    data_out_reg,
    \shift_reg_reg[15] ,
    coreclk);
  output [0:0]E;
  output \rddata_out_reg[5] ;
  output \q_reg[0]_0 ;
  output \rddata_out_reg[14] ;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[15] ;
  output \rddata_out_reg[12] ;
  output \rddata_out_reg[4] ;
  input [0:0]Q;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[2] ;
  input \q_reg[5]_0 ;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[17] ;
  input [12:0]\addr_reg_reg[20] ;
  input \state_reg[2] ;
  input \addr_reg_reg[14] ;
  input \state_reg[1] ;
  input \addr_reg_reg[2]_0 ;
  input [2:0]\q_reg[12]_0 ;
  input [0:0]\q_reg[12]_1 ;
  input data_out_reg;
  input [14:0]\shift_reg_reg[15] ;
  input coreclk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \addr_reg_reg[14] ;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[1] ;
  wire [12:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q[0]_i_1__9_n_0 ;
  wire \q[15]_i_4__0_n_0 ;
  wire \q_reg[0]_0 ;
  wire [2:0]\q_reg[12]_0 ;
  wire [0:0]\q_reg[12]_1 ;
  wire \q_reg[5]_0 ;
  wire \rddata_out[5]_i_2_n_0 ;
  wire \rddata_out_reg[12] ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[5] ;
  wire [14:0]\shift_reg_reg[15] ;
  wire \state_reg[1] ;
  wire \state_reg[2] ;

  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__9 
       (.I0(E),
        .I1(Q),
        .O(\q[0]_i_1__9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \q[15]_i_1 
       (.I0(\addr_reg_reg[20] [5]),
        .I1(\state_reg[2] ),
        .I2(\q[15]_i_4__0_n_0 ),
        .I3(\addr_reg_reg[14] ),
        .I4(\addr_reg_reg[20] [9]),
        .I5(\addr_reg_reg[20] [6]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \q[15]_i_4__0 
       (.I0(\q_reg[0]_0 ),
        .I1(\addr_reg_reg[20] [8]),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\addr_reg_reg[20] [1]),
        .I4(\addr_reg_reg[20] [4]),
        .I5(\state_reg[1] ),
        .O(\q[15]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \q[15]_i_4__2 
       (.I0(\addr_reg_reg[20] [10]),
        .I1(\addr_reg_reg[20] [11]),
        .I2(\addr_reg_reg[20] [12]),
        .I3(\addr_reg_reg[20] [7]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[20] [0]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q[0]_i_1__9_n_0 ),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [9]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [10]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [11]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [12]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [13]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [14]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [0]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [1]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [2]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [3]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [4]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [5]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [6]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [7]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [8]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h0000D0DC0C0CD0DC)) 
    \rddata_out[12]_i_7 
       (.I0(pseudo_rand_seeds_int[12]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\q_reg[12]_0 [2]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\q_reg[12]_1 ),
        .O(\rddata_out_reg[12] ));
  LUT6 #(
    .INIT(64'h0000007500000055)) 
    \rddata_out[14]_i_6 
       (.I0(\addr_reg_reg[2]_0 ),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [5]),
        .I3(\addr_reg_reg[20] [0]),
        .I4(\addr_reg_reg[20] [4]),
        .I5(pseudo_rand_seeds_int[14]),
        .O(\rddata_out_reg[14] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBFFF00)) 
    \rddata_out[15]_i_15 
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\addr_reg_reg[20] [5]),
        .I2(pseudo_rand_seeds_int[15]),
        .I3(\addr_reg_reg[20] [0]),
        .I4(\addr_reg_reg[2]_0 ),
        .I5(\addr_reg_reg[20] [4]),
        .O(\rddata_out_reg[15] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000F888)) 
    \rddata_out[4]_i_6 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(\q_reg[12]_0 [0]),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\addr_reg_reg[20] [0]),
        .O(\rddata_out_reg[4] ));
  LUT6 #(
    .INIT(64'h000B0000FFFFFFFF)) 
    \rddata_out[5]_i_1 
       (.I0(\rddata_out[5]_i_2_n_0 ),
        .I1(\addr_reg_reg[1] ),
        .I2(\addr_reg_reg[2] ),
        .I3(\q_reg[5]_0 ),
        .I4(\addr_reg_reg[5] ),
        .I5(\addr_reg_reg[17] ),
        .O(\rddata_out_reg[5] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000F888)) 
    \rddata_out[5]_i_2 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(\q_reg[12]_0 [1]),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\addr_reg_reg[20] [0]),
        .O(\rddata_out[5]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized15
   (\rddata_out_reg[8] ,
    \q_reg[0]_0 ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[7] ,
    \scr_reg_reg[57] ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[3] ,
    \addr_reg_reg[20] ,
    \addr_reg_reg[13] ,
    Q,
    \addr_reg_reg[1] ,
    \q_reg[3]_0 ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[14] ,
    data_out_reg,
    E,
    D,
    coreclk);
  output \rddata_out_reg[8] ;
  output \q_reg[0]_0 ;
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[7] ;
  output [9:0]\scr_reg_reg[57] ;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[3] ;
  input [7:0]\addr_reg_reg[20] ;
  input \addr_reg_reg[13] ;
  input [0:0]Q;
  input \addr_reg_reg[1] ;
  input \q_reg[3]_0 ;
  input [5:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[14] ;
  input data_out_reg;
  input [0:0]E;
  input [9:0]D;
  input coreclk;

  wire [9:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire \addr_reg_reg[13] ;
  wire \addr_reg_reg[14] ;
  wire \addr_reg_reg[1] ;
  wire [7:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire [5:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[3]_0 ;
  wire \rddata_out[3]_i_13_n_0 ;
  wire \rddata_out[8]_i_2_n_0 ;
  wire \rddata_out[8]_i_3_n_0 ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[8] ;
  wire [9:0]\scr_reg_reg[57] ;

  LUT4 #(
    .INIT(16'hFFFE)) 
    \q[9]_i_4__0 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[20] [6]),
        .I3(\addr_reg_reg[20] [7]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(D[0]),
        .Q(\scr_reg_reg[57] [0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(D[1]),
        .Q(\scr_reg_reg[57] [1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(D[2]),
        .Q(\scr_reg_reg[57] [2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(D[3]),
        .Q(\scr_reg_reg[57] [3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(D[4]),
        .Q(\scr_reg_reg[57] [4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(D[5]),
        .Q(\scr_reg_reg[57] [5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(D[6]),
        .Q(\scr_reg_reg[57] [6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(D[7]),
        .Q(\scr_reg_reg[57] [7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(D[8]),
        .Q(\scr_reg_reg[57] [8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(D[9]),
        .Q(\scr_reg_reg[57] [9]),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'h0000DD0D)) 
    \rddata_out[3]_i_13 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\scr_reg_reg[57] [3]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(pseudo_rand_seeds_int[3]),
        .I4(\addr_reg_reg[20] [1]),
        .O(\rddata_out[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hBABAAABAAAAAAAAA)) 
    \rddata_out[3]_i_5 
       (.I0(\addr_reg_reg[13] ),
        .I1(\rddata_out[3]_i_13_n_0 ),
        .I2(\addr_reg_reg[20] [0]),
        .I3(Q),
        .I4(\addr_reg_reg[1] ),
        .I5(\q_reg[3]_0 ),
        .O(\rddata_out_reg[3] ));
  LUT6 #(
    .INIT(64'hFFCCE2E2CCCCE2E2)) 
    \rddata_out[7]_i_14 
       (.I0(\scr_reg_reg[57] [7]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(pseudo_rand_seeds_int[4]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(pseudo_rand_seeds_int[1]),
        .O(\rddata_out_reg[7] ));
  LUT3 #(
    .INIT(8'h4F)) 
    \rddata_out[8]_i_1 
       (.I0(\rddata_out[8]_i_2_n_0 ),
        .I1(\addr_reg_reg[5] ),
        .I2(\addr_reg_reg[3] ),
        .O(\rddata_out_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04444444)) 
    \rddata_out[8]_i_2 
       (.I0(\rddata_out[8]_i_3_n_0 ),
        .I1(\addr_reg_reg[20] [0]),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\addr_reg_reg[20] [1]),
        .I4(pseudo_rand_seeds_int[2]),
        .I5(\addr_reg_reg[14] ),
        .O(\rddata_out[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCCEFEFCFCC2323)) 
    \rddata_out[8]_i_3 
       (.I0(\scr_reg_reg[57] [8]),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [2]),
        .I3(pseudo_rand_seeds_int[0]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(pseudo_rand_seeds_int[5]),
        .O(\rddata_out[8]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized16
   (\rddata_out_reg[10] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[9] ,
    \rddata_out_reg[8] ,
    \rddata_out_reg[14] ,
    \rddata_out_reg[1] ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \rddata_out_reg[13] ,
    \rddata_out_reg[0] ,
    \addr_reg_reg[17] ,
    \q_reg[14]_0 ,
    \addr_reg_reg[2] ,
    \q_reg[0]_2 ,
    Q,
    \addr_reg_reg[2]_0 ,
    \addr_reg_reg[1] ,
    \addr_reg_reg[4] ,
    \addr_reg_reg[5] ,
    data_out_reg,
    E,
    D,
    coreclk);
  output \rddata_out_reg[10] ;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[9] ;
  output \rddata_out_reg[8] ;
  output \rddata_out_reg[14] ;
  output \rddata_out_reg[1] ;
  output \q_reg[0]_0 ;
  output \q_reg[0]_1 ;
  output \rddata_out_reg[13] ;
  output \rddata_out_reg[0] ;
  input [7:0]\addr_reg_reg[17] ;
  input [6:0]\q_reg[14]_0 ;
  input \addr_reg_reg[2] ;
  input \q_reg[0]_2 ;
  input [1:0]Q;
  input \addr_reg_reg[2]_0 ;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[5] ;
  input data_out_reg;
  input [0:0]E;
  input [15:0]D;
  input coreclk;

  wire [15:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [7:0]\addr_reg_reg[17] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire [6:0]\q_reg[14]_0 ;
  wire \rddata_out[14]_i_12_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[8] ;
  wire \rddata_out_reg[9] ;

  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    \q[15]_i_4__4 
       (.I0(\q_reg[0]_1 ),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [4]),
        .I3(\addr_reg_reg[17] [0]),
        .I4(\addr_reg_reg[17] [7]),
        .I5(\addr_reg_reg[17] [6]),
        .O(\q_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_7__0 
       (.I0(\addr_reg_reg[17] [2]),
        .I1(\addr_reg_reg[17] [1]),
        .O(\q_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(D[0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(D[10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(D[11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(D[12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(D[13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(D[14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(D[15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(D[1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(D[2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(D[3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(D[4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(D[5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(D[6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(D[7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(D[8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(D[9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \rddata_out[0]_i_12 
       (.I0(pseudo_rand_seeds_int[0]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(Q[0]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\q_reg[14]_0 [0]),
        .O(\rddata_out_reg[0] ));
  LUT6 #(
    .INIT(64'h40444000FFFFFFFF)) 
    \rddata_out[10]_i_9 
       (.I0(\addr_reg_reg[17] [3]),
        .I1(\addr_reg_reg[17] [5]),
        .I2(pseudo_rand_seeds_int[10]),
        .I3(\addr_reg_reg[17] [2]),
        .I4(\q_reg[14]_0 [3]),
        .I5(\addr_reg_reg[17] [1]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'h4455505500550055)) 
    \rddata_out[13]_i_10 
       (.I0(\addr_reg_reg[4] ),
        .I1(pseudo_rand_seeds_int[13]),
        .I2(\q_reg[14]_0 [4]),
        .I3(\addr_reg_reg[17] [1]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\addr_reg_reg[5] ),
        .O(\rddata_out_reg[13] ));
  LUT6 #(
    .INIT(64'h8AAA8A8A8AAAAAAA)) 
    \rddata_out[14]_i_12 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [5]),
        .I3(pseudo_rand_seeds_int[14]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\q_reg[14]_0 [5]),
        .O(\rddata_out[14]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hABBAABBBBBBABBBB)) 
    \rddata_out[14]_i_5 
       (.I0(\rddata_out[14]_i_12_n_0 ),
        .I1(\addr_reg_reg[2] ),
        .I2(\addr_reg_reg[17] [3]),
        .I3(\addr_reg_reg[17] [5]),
        .I4(\q_reg[0]_2 ),
        .I5(\q_reg[14]_0 [6]),
        .O(\rddata_out_reg[14] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC7F70000)) 
    \rddata_out[1]_i_10 
       (.I0(pseudo_rand_seeds_int[1]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(\addr_reg_reg[17] [3]),
        .I3(Q[1]),
        .I4(\addr_reg_reg[2]_0 ),
        .I5(\addr_reg_reg[1] ),
        .O(\rddata_out_reg[1] ));
  LUT5 #(
    .INIT(32'hFF47FFFF)) 
    \rddata_out[8]_i_6 
       (.I0(pseudo_rand_seeds_int[8]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(\q_reg[14]_0 [1]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[17] [1]),
        .O(\rddata_out_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hFF47FFFF)) 
    \rddata_out[9]_i_6 
       (.I0(pseudo_rand_seeds_int[9]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(\q_reg[14]_0 [2]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[17] [1]),
        .O(\rddata_out_reg[9] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized17
   (\rddata_out_reg[11] ,
    \rddata_out_reg[9] ,
    re_prev_reg,
    \rddata_out_reg[15] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[7] ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[6] ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \addr_reg_reg[19] ,
    reg_1_8_11,
    \addr_reg_reg[2] ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[3] ,
    \q_reg[11]_0 ,
    \q_reg[0]_2 ,
    \q_reg[3]_0 ,
    \addr_reg_reg[5]_0 ,
    \q_reg[11]_1 ,
    \q_reg[0]_3 ,
    \q_reg[9]_0 ,
    \addr_reg_reg[14] ,
    Q,
    data_out_reg,
    E,
    \shift_reg_reg[15] ,
    coreclk);
  output \rddata_out_reg[11] ;
  output \rddata_out_reg[9] ;
  output re_prev_reg;
  output \rddata_out_reg[15] ;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[10] ;
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[5] ;
  output \rddata_out_reg[6] ;
  input \q_reg[0]_0 ;
  input \q_reg[0]_1 ;
  input [16:0]\addr_reg_reg[19] ;
  input reg_1_8_11;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[3] ;
  input [0:0]\q_reg[11]_0 ;
  input \q_reg[0]_2 ;
  input \q_reg[3]_0 ;
  input \addr_reg_reg[5]_0 ;
  input \q_reg[11]_1 ;
  input \q_reg[0]_3 ;
  input [6:0]\q_reg[9]_0 ;
  input \addr_reg_reg[14] ;
  input [0:0]Q;
  input data_out_reg;
  input [0:0]E;
  input [15:0]\shift_reg_reg[15] ;
  input coreclk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \addr_reg_reg[14] ;
  wire [16:0]\addr_reg_reg[19] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[5] ;
  wire \addr_reg_reg[5]_0 ;
  wire coreclk;
  wire data_out_reg;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire [0:0]\q_reg[11]_0 ;
  wire \q_reg[11]_1 ;
  wire \q_reg[3]_0 ;
  wire [6:0]\q_reg[9]_0 ;
  wire \rddata_out[11]_i_2_n_0 ;
  wire \rddata_out[11]_i_3_n_0 ;
  wire \rddata_out[11]_i_4_n_0 ;
  wire \rddata_out[6]_i_8_n_0 ;
  wire \rddata_out[9]_i_2_n_0 ;
  wire \rddata_out[9]_i_3_n_0 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[11] ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[5] ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[9] ;
  wire re_prev_reg;
  wire reg_1_8_11;
  wire [15:0]\shift_reg_reg[15] ;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \q[15]_i_6__0 
       (.I0(\addr_reg_reg[19] [6]),
        .I1(\addr_reg_reg[19] [7]),
        .I2(\addr_reg_reg[19] [10]),
        .I3(\addr_reg_reg[19] [9]),
        .I4(\addr_reg_reg[19] [8]),
        .I5(\rddata_out_reg[10] ),
        .O(\rddata_out_reg[7] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [0]),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [10]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [11]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [12]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [13]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [14]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [15]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [1]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [2]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [3]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [4]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [5]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [6]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [7]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [8]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [9]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT3 #(
    .INIT(8'hFE)) 
    \rddata_out[10]_i_6 
       (.I0(\addr_reg_reg[19] [11]),
        .I1(\addr_reg_reg[19] [13]),
        .I2(\addr_reg_reg[19] [12]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'hAAAAAAAABBBAAABA)) 
    \rddata_out[11]_i_1 
       (.I0(\rddata_out[11]_i_2_n_0 ),
        .I1(\q_reg[0]_0 ),
        .I2(\q_reg[0]_1 ),
        .I3(\addr_reg_reg[19] [3]),
        .I4(reg_1_8_11),
        .I5(\addr_reg_reg[2] ),
        .O(\rddata_out_reg[11] ));
  LUT6 #(
    .INIT(64'h0000000080020002)) 
    \rddata_out[11]_i_2 
       (.I0(\rddata_out[11]_i_3_n_0 ),
        .I1(\addr_reg_reg[19] [13]),
        .I2(\addr_reg_reg[19] [12]),
        .I3(\addr_reg_reg[19] [11]),
        .I4(\q_reg[11]_0 ),
        .I5(\q_reg[0]_2 ),
        .O(\rddata_out[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFD000)) 
    \rddata_out[11]_i_3 
       (.I0(\rddata_out[11]_i_4_n_0 ),
        .I1(\q_reg[3]_0 ),
        .I2(\addr_reg_reg[19] [5]),
        .I3(\addr_reg_reg[19] [0]),
        .I4(\addr_reg_reg[5]_0 ),
        .I5(\q_reg[11]_1 ),
        .O(\rddata_out[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h6FFF7FFF)) 
    \rddata_out[11]_i_4 
       (.I0(\addr_reg_reg[19] [3]),
        .I1(\addr_reg_reg[19] [4]),
        .I2(\addr_reg_reg[19] [1]),
        .I3(\addr_reg_reg[19] [2]),
        .I4(pseudo_rand_seeds_int[11]),
        .O(\rddata_out[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80408000)) 
    \rddata_out[15]_i_7 
       (.I0(\addr_reg_reg[19] [3]),
        .I1(\addr_reg_reg[19] [1]),
        .I2(\addr_reg_reg[19] [2]),
        .I3(\addr_reg_reg[19] [4]),
        .I4(pseudo_rand_seeds_int[15]),
        .I5(\q_reg[0]_3 ),
        .O(\rddata_out_reg[15] ));
  LUT6 #(
    .INIT(64'h0077FF0F00000000)) 
    \rddata_out[3]_i_15 
       (.I0(pseudo_rand_seeds_int[3]),
        .I1(\addr_reg_reg[19] [1]),
        .I2(\q_reg[9]_0 [0]),
        .I3(\addr_reg_reg[19] [3]),
        .I4(\addr_reg_reg[19] [2]),
        .I5(\addr_reg_reg[19] [5]),
        .O(\rddata_out_reg[3] ));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \rddata_out[5]_i_9 
       (.I0(\addr_reg_reg[19] [2]),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(\addr_reg_reg[19] [1]),
        .I3(\addr_reg_reg[19] [3]),
        .I4(Q),
        .O(\rddata_out_reg[5] ));
  LUT6 #(
    .INIT(64'hAA88A8AAAA88A888)) 
    \rddata_out[6]_i_5 
       (.I0(\addr_reg_reg[19] [5]),
        .I1(\rddata_out[6]_i_8_n_0 ),
        .I2(\q_reg[9]_0 [5]),
        .I3(\addr_reg_reg[19] [3]),
        .I4(\addr_reg_reg[19] [1]),
        .I5(\q_reg[9]_0 [3]),
        .O(\rddata_out_reg[6] ));
  LUT5 #(
    .INIT(32'h880088F3)) 
    \rddata_out[6]_i_8 
       (.I0(pseudo_rand_seeds_int[6]),
        .I1(\addr_reg_reg[19] [1]),
        .I2(\q_reg[9]_0 [1]),
        .I3(\addr_reg_reg[19] [2]),
        .I4(\addr_reg_reg[19] [3]),
        .O(\rddata_out[6]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \rddata_out[9]_i_1 
       (.I0(\rddata_out[9]_i_2_n_0 ),
        .I1(\addr_reg_reg[5] ),
        .I2(\addr_reg_reg[3] ),
        .O(\rddata_out_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00044444)) 
    \rddata_out[9]_i_2 
       (.I0(\rddata_out[9]_i_3_n_0 ),
        .I1(\addr_reg_reg[19] [0]),
        .I2(\addr_reg_reg[19] [1]),
        .I3(\q_reg[9]_0 [6]),
        .I4(\addr_reg_reg[19] [3]),
        .I5(\addr_reg_reg[14] ),
        .O(\rddata_out[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA3A03333A3A00303)) 
    \rddata_out[9]_i_3 
       (.I0(pseudo_rand_seeds_int[9]),
        .I1(\addr_reg_reg[19] [3]),
        .I2(\addr_reg_reg[19] [2]),
        .I3(\q_reg[9]_0 [2]),
        .I4(\addr_reg_reg[19] [1]),
        .I5(\q_reg[9]_0 [4]),
        .O(\rddata_out[9]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    re_prev_i_2__4
       (.I0(\addr_reg_reg[19] [16]),
        .I1(\addr_reg_reg[19] [15]),
        .I2(\addr_reg_reg[19] [14]),
        .I3(\addr_reg_reg[19] [5]),
        .O(re_prev_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized18
   (E,
    \rddata_out_reg[2] ,
    pseudo_rand_seeds_int,
    \rddata_out_reg[13] ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[8] ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[7] ,
    \rddata_out_reg[6] ,
    \rddata_out_reg[0] ,
    Q,
    \addr_reg_reg[17] ,
    \q_reg[13]_0 ,
    \state_reg[1] ,
    \addr_reg_reg[8] ,
    \addr_reg_reg[18] ,
    \state_reg[2] ,
    \q_reg[8]_0 ,
    \addr_reg_reg[1] ,
    \q_reg[9]_0 ,
    \q_reg[9]_1 ,
    \addr_reg_reg[1]_0 ,
    \addr_reg_reg[3] ,
    \q_reg[1]_0 ,
    \addr_reg_reg[1]_1 ,
    \addr_reg_reg[2] ,
    \q_reg[0]_0 ,
    reg_3_32_0,
    data_out_reg,
    \shift_reg_reg[15] ,
    coreclk);
  output [0:0]E;
  output \rddata_out_reg[2] ;
  output [15:0]pseudo_rand_seeds_int;
  output \rddata_out_reg[13] ;
  output \rddata_out_reg[10] ;
  output \rddata_out_reg[8] ;
  output \rddata_out_reg[9] ;
  output \rddata_out_reg[1] ;
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[6] ;
  output \rddata_out_reg[0] ;
  input [0:0]Q;
  input [11:0]\addr_reg_reg[17] ;
  input [8:0]\q_reg[13]_0 ;
  input \state_reg[1] ;
  input \addr_reg_reg[8] ;
  input \addr_reg_reg[18] ;
  input \state_reg[2] ;
  input \q_reg[8]_0 ;
  input \addr_reg_reg[1] ;
  input [1:0]\q_reg[9]_0 ;
  input \q_reg[9]_1 ;
  input \addr_reg_reg[1]_0 ;
  input \addr_reg_reg[3] ;
  input \q_reg[1]_0 ;
  input \addr_reg_reg[1]_1 ;
  input \addr_reg_reg[2] ;
  input \q_reg[0]_0 ;
  input reg_3_32_0;
  input data_out_reg;
  input [14:0]\shift_reg_reg[15] ;
  input coreclk;

  wire [0:0]E;
  wire [0:0]Q;
  wire [11:0]\addr_reg_reg[17] ;
  wire \addr_reg_reg[18] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[1]_0 ;
  wire \addr_reg_reg[1]_1 ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[8] ;
  wire coreclk;
  wire data_out_reg;
  wire [15:0]pseudo_rand_seeds_int;
  wire \q[0]_i_1__17_n_0 ;
  wire \q[15]_i_3__3_n_0 ;
  wire \q[15]_i_4__3_n_0 ;
  wire \q[15]_i_6_n_0 ;
  wire \q_reg[0]_0 ;
  wire [8:0]\q_reg[13]_0 ;
  wire \q_reg[1]_0 ;
  wire \q_reg[8]_0 ;
  wire [1:0]\q_reg[9]_0 ;
  wire \q_reg[9]_1 ;
  wire \rddata_out[0]_i_11_n_0 ;
  wire \rddata_out[8]_i_5_n_0 ;
  wire \rddata_out[9]_i_5_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[13] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[6] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[8] ;
  wire \rddata_out_reg[9] ;
  wire reg_3_32_0;
  wire [14:0]\shift_reg_reg[15] ;
  wire \state_reg[1] ;
  wire \state_reg[2] ;

  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__17 
       (.I0(E),
        .I1(Q),
        .O(\q[0]_i_1__17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \q[15]_i_1__4 
       (.I0(\state_reg[1] ),
        .I1(\addr_reg_reg[8] ),
        .I2(\q[15]_i_3__3_n_0 ),
        .I3(\q[15]_i_4__3_n_0 ),
        .I4(\addr_reg_reg[18] ),
        .I5(\q[15]_i_6_n_0 ),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_3__3 
       (.I0(\addr_reg_reg[17] [3]),
        .I1(\addr_reg_reg[17] [5]),
        .O(\q[15]_i_3__3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \q[15]_i_4__3 
       (.I0(\addr_reg_reg[17] [4]),
        .I1(\addr_reg_reg[17] [7]),
        .I2(\addr_reg_reg[17] [6]),
        .O(\q[15]_i_4__3_n_0 ));
  LUT4 #(
    .INIT(16'hFFBF)) 
    \q[15]_i_6 
       (.I0(\addr_reg_reg[17] [2]),
        .I1(\addr_reg_reg[17] [11]),
        .I2(\addr_reg_reg[17] [10]),
        .I3(\state_reg[2] ),
        .O(\q[15]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q[0]_i_1__17_n_0 ),
        .Q(pseudo_rand_seeds_int[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [9]),
        .Q(pseudo_rand_seeds_int[10]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [10]),
        .Q(pseudo_rand_seeds_int[11]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [11]),
        .Q(pseudo_rand_seeds_int[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [12]),
        .Q(pseudo_rand_seeds_int[13]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [13]),
        .Q(pseudo_rand_seeds_int[14]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [14]),
        .Q(pseudo_rand_seeds_int[15]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [0]),
        .Q(pseudo_rand_seeds_int[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [1]),
        .Q(pseudo_rand_seeds_int[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [2]),
        .Q(pseudo_rand_seeds_int[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [3]),
        .Q(pseudo_rand_seeds_int[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [4]),
        .Q(pseudo_rand_seeds_int[5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [5]),
        .Q(pseudo_rand_seeds_int[6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [6]),
        .Q(pseudo_rand_seeds_int[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [7]),
        .Q(pseudo_rand_seeds_int[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [8]),
        .Q(pseudo_rand_seeds_int[9]),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[0]_i_11 
       (.I0(pseudo_rand_seeds_int[0]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\q_reg[13]_0 [0]),
        .I3(\addr_reg_reg[17] [2]),
        .I4(reg_3_32_0),
        .O(\rddata_out[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hF3F3F3FF43434F4F)) 
    \rddata_out[10]_i_8 
       (.I0(pseudo_rand_seeds_int[10]),
        .I1(\addr_reg_reg[17] [5]),
        .I2(\addr_reg_reg[17] [3]),
        .I3(\q_reg[13]_0 [7]),
        .I4(\addr_reg_reg[17] [1]),
        .I5(\addr_reg_reg[17] [2]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'h00000000FF3F5FF0)) 
    \rddata_out[13]_i_9 
       (.I0(pseudo_rand_seeds_int[13]),
        .I1(\q_reg[13]_0 [8]),
        .I2(\addr_reg_reg[17] [5]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\addr_reg_reg[17] [1]),
        .O(\rddata_out_reg[13] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF01110000)) 
    \rddata_out[1]_i_6 
       (.I0(\addr_reg_reg[17] [0]),
        .I1(\addr_reg_reg[17] [1]),
        .I2(pseudo_rand_seeds_int[1]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[3] ),
        .I5(\q_reg[1]_0 ),
        .O(\rddata_out_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'h22F2FFFF)) 
    \rddata_out[2]_i_13 
       (.I0(\addr_reg_reg[17] [3]),
        .I1(pseudo_rand_seeds_int[2]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(\q_reg[13]_0 [1]),
        .I4(\addr_reg_reg[17] [5]),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFF4444444)) 
    \rddata_out[3]_i_7 
       (.I0(\addr_reg_reg[1]_1 ),
        .I1(pseudo_rand_seeds_int[3]),
        .I2(\addr_reg_reg[2] ),
        .I3(\q_reg[13]_0 [2]),
        .I4(\addr_reg_reg[17] [5]),
        .I5(\addr_reg_reg[17] [0]),
        .O(\rddata_out_reg[3] ));
  LUT4 #(
    .INIT(16'hF888)) 
    \rddata_out[6]_i_7 
       (.I0(pseudo_rand_seeds_int[6]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\q_reg[13]_0 [3]),
        .I3(\addr_reg_reg[17] [2]),
        .O(\rddata_out_reg[6] ));
  LUT6 #(
    .INIT(64'hF0FFF0F8F0F8F0F8)) 
    \rddata_out[7]_i_13 
       (.I0(pseudo_rand_seeds_int[7]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [0]),
        .I3(\addr_reg_reg[17] [1]),
        .I4(\addr_reg_reg[17] [2]),
        .I5(\q_reg[13]_0 [4]),
        .O(\rddata_out_reg[7] ));
  LUT6 #(
    .INIT(64'hF4FFFFF4FFFFFFF4)) 
    \rddata_out[8]_i_4 
       (.I0(\rddata_out[8]_i_5_n_0 ),
        .I1(\q_reg[8]_0 ),
        .I2(\addr_reg_reg[1] ),
        .I3(\addr_reg_reg[17] [8]),
        .I4(\addr_reg_reg[17] [9]),
        .I5(\q_reg[9]_0 [0]),
        .O(\rddata_out_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000F888)) 
    \rddata_out[8]_i_5 
       (.I0(\addr_reg_reg[17] [3]),
        .I1(pseudo_rand_seeds_int[8]),
        .I2(\q_reg[13]_0 [5]),
        .I3(\addr_reg_reg[17] [2]),
        .I4(\addr_reg_reg[17] [1]),
        .I5(\addr_reg_reg[17] [0]),
        .O(\rddata_out[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF4FF4FFF4)) 
    \rddata_out[9]_i_4 
       (.I0(\rddata_out[9]_i_5_n_0 ),
        .I1(\q_reg[9]_1 ),
        .I2(\addr_reg_reg[17] [8]),
        .I3(\addr_reg_reg[17] [9]),
        .I4(\q_reg[9]_0 [1]),
        .I5(\addr_reg_reg[1]_0 ),
        .O(\rddata_out_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000F888)) 
    \rddata_out[9]_i_5 
       (.I0(\addr_reg_reg[17] [3]),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(\q_reg[13]_0 [6]),
        .I3(\addr_reg_reg[17] [2]),
        .I4(\addr_reg_reg[17] [1]),
        .I5(\addr_reg_reg[17] [0]),
        .O(\rddata_out[9]_i_5_n_0 ));
  MUXF7 \rddata_out_reg[0]_i_8 
       (.I0(\rddata_out[0]_i_11_n_0 ),
        .I1(\q_reg[0]_0 ),
        .O(\rddata_out_reg[0] ),
        .S(\addr_reg_reg[17] [1]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized19
   (\rddata_out_reg[4] ,
    \rddata_out_reg[5] ,
    \rddata_out_reg[0] ,
    \scr_reg_reg[57] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[1] ,
    \addr_reg_reg[5] ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[3] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[1] ,
    \addr_reg_reg[3]_0 ,
    \q_reg[1]_0 ,
    \q_reg[1]_1 ,
    \q_reg[0]_0 ,
    data_out_reg,
    E,
    D,
    coreclk);
  output \rddata_out_reg[4] ;
  output \rddata_out_reg[5] ;
  output \rddata_out_reg[0] ;
  output [9:0]\scr_reg_reg[57] ;
  output \rddata_out_reg[2] ;
  output \rddata_out_reg[1] ;
  input [4:0]\addr_reg_reg[5] ;
  input [6:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[3] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[3]_0 ;
  input \q_reg[1]_0 ;
  input [1:0]\q_reg[1]_1 ;
  input \q_reg[0]_0 ;
  input data_out_reg;
  input [0:0]E;
  input [9:0]D;
  input coreclk;

  wire [9:0]D;
  wire [0:0]E;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[3]_0 ;
  wire [4:0]\addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire [6:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[1]_0 ;
  wire [1:0]\q_reg[1]_1 ;
  wire \rddata_out[0]_i_9_n_0 ;
  wire \rddata_out[1]_i_12_n_0 ;
  wire \rddata_out[4]_i_9_n_0 ;
  wire \rddata_out[5]_i_8_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[0]_i_7_n_0 ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[5] ;
  wire [9:0]\scr_reg_reg[57] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(D[0]),
        .Q(\scr_reg_reg[57] [0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(D[1]),
        .Q(\scr_reg_reg[57] [1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(D[2]),
        .Q(\scr_reg_reg[57] [2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(D[3]),
        .Q(\scr_reg_reg[57] [3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(D[4]),
        .Q(\scr_reg_reg[57] [4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(D[5]),
        .Q(\scr_reg_reg[57] [5]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(D[6]),
        .Q(\scr_reg_reg[57] [6]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(D[7]),
        .Q(\scr_reg_reg[57] [7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(D[8]),
        .Q(\scr_reg_reg[57] [8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(D[9]),
        .Q(\scr_reg_reg[57] [9]),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h07FF07FF0000FF00)) 
    \rddata_out[0]_i_4 
       (.I0(\addr_reg_reg[5] [3]),
        .I1(\addr_reg_reg[5] [2]),
        .I2(\rddata_out_reg[0]_i_7_n_0 ),
        .I3(\addr_reg_reg[5] [4]),
        .I4(\addr_reg_reg[1] ),
        .I5(\addr_reg_reg[5] [0]),
        .O(\rddata_out_reg[0] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[0]_i_9 
       (.I0(\scr_reg_reg[57] [0]),
        .I1(\addr_reg_reg[5] [3]),
        .I2(pseudo_rand_seeds_int[2]),
        .I3(\addr_reg_reg[5] [2]),
        .I4(\q_reg[1]_1 [0]),
        .O(\rddata_out[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[1]_i_12 
       (.I0(\scr_reg_reg[57] [1]),
        .I1(\addr_reg_reg[5] [3]),
        .I2(pseudo_rand_seeds_int[3]),
        .I3(\addr_reg_reg[5] [2]),
        .I4(\q_reg[1]_1 [1]),
        .O(\rddata_out[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0777FFFF07770000)) 
    \rddata_out[2]_i_11 
       (.I0(\scr_reg_reg[57] [2]),
        .I1(\addr_reg_reg[5] [3]),
        .I2(pseudo_rand_seeds_int[4]),
        .I3(\addr_reg_reg[5] [2]),
        .I4(\addr_reg_reg[5] [0]),
        .I5(\addr_reg_reg[3]_0 ),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBBFFBBB)) 
    \rddata_out[4]_i_3 
       (.I0(\rddata_out[4]_i_9_n_0 ),
        .I1(\addr_reg_reg[5] [0]),
        .I2(\addr_reg_reg[5] [2]),
        .I3(\addr_reg_reg[5] [3]),
        .I4(pseudo_rand_seeds_int[0]),
        .I5(\addr_reg_reg[3] ),
        .O(\rddata_out_reg[4] ));
  LUT5 #(
    .INIT(32'h0000DD0D)) 
    \rddata_out[4]_i_9 
       (.I0(\addr_reg_reg[5] [3]),
        .I1(\scr_reg_reg[57] [4]),
        .I2(\addr_reg_reg[5] [2]),
        .I3(pseudo_rand_seeds_int[5]),
        .I4(\addr_reg_reg[5] [1]),
        .O(\rddata_out[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000A0A020)) 
    \rddata_out[5]_i_5 
       (.I0(\rddata_out[5]_i_8_n_0 ),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(\addr_reg_reg[5] [0]),
        .I3(\addr_reg_reg[5] [2]),
        .I4(\addr_reg_reg[5] [3]),
        .I5(\addr_reg_reg[2] ),
        .O(\rddata_out_reg[5] ));
  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    \rddata_out[5]_i_8 
       (.I0(\scr_reg_reg[57] [5]),
        .I1(\addr_reg_reg[5] [3]),
        .I2(\addr_reg_reg[5] [2]),
        .I3(pseudo_rand_seeds_int[6]),
        .I4(\addr_reg_reg[5] [1]),
        .O(\rddata_out[5]_i_8_n_0 ));
  MUXF7 \rddata_out_reg[0]_i_7 
       (.I0(\rddata_out[0]_i_9_n_0 ),
        .I1(\q_reg[0]_0 ),
        .O(\rddata_out_reg[0]_i_7_n_0 ),
        .S(\addr_reg_reg[5] [1]));
  MUXF7 \rddata_out_reg[1]_i_8 
       (.I0(\rddata_out[1]_i_12_n_0 ),
        .I1(\q_reg[1]_0 ),
        .O(\rddata_out_reg[1] ),
        .S(\addr_reg_reg[5] [1]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized2
   (reg_1_8_11,
    \rddata_out_reg[7] ,
    coreclk,
    read_reg_reg,
    \addr_reg_reg[20] ,
    \state_reg[2] ,
    pma_pmd_type,
    pma_pmd_status_tx_fault_core_int,
    reset,
    p_0_in);
  output reg_1_8_11;
  output \rddata_out_reg[7] ;
  input coreclk;
  input read_reg_reg;
  input [8:0]\addr_reg_reg[20] ;
  input \state_reg[2] ;
  input [2:0]pma_pmd_type;
  input pma_pmd_status_tx_fault_core_int;
  input reset;
  input p_0_in;

  wire [8:0]\addr_reg_reg[20] ;
  wire coreclk;
  wire p_0_in;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire \q[0]_i_1__5_n_0 ;
  wire \rddata_out_reg[7] ;
  wire re_prev_i_2__2_n_0;
  wire re_prev_i_3__1_n_0;
  wire read_reg_reg;
  wire \reg_1_8_10/re_prev ;
  wire reg_1_8_11;
  wire reg_1_8_re;
  wire reset;
  wire \state_reg[2] ;

  LUT6 #(
    .INIT(64'h020202FE020202AA)) 
    \q[0]_i_1__5 
       (.I0(pma_pmd_status_tx_fault_core_int),
        .I1(\reg_1_8_10/re_prev ),
        .I2(re_prev_i_2__2_n_0),
        .I3(reset),
        .I4(p_0_in),
        .I5(reg_1_8_11),
        .O(\q[0]_i_1__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__5_n_0 ),
        .Q(reg_1_8_11),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hD0DDDDDDDDDDDDDD)) 
    \rddata_out[7]_i_12 
       (.I0(reg_1_8_11),
        .I1(\addr_reg_reg[20] [3]),
        .I2(\addr_reg_reg[20] [0]),
        .I3(pma_pmd_type[0]),
        .I4(pma_pmd_type[2]),
        .I5(pma_pmd_type[1]),
        .O(\rddata_out_reg[7] ));
  LUT1 #(
    .INIT(2'h1)) 
    re_prev_i_1__3
       (.I0(re_prev_i_2__2_n_0),
        .O(reg_1_8_re));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    re_prev_i_2__2
       (.I0(read_reg_reg),
        .I1(re_prev_i_3__1_n_0),
        .I2(\addr_reg_reg[20] [5]),
        .I3(\addr_reg_reg[20] [6]),
        .I4(\addr_reg_reg[20] [0]),
        .I5(\addr_reg_reg[20] [7]),
        .O(re_prev_i_2__2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    re_prev_i_3__1
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [8]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(\state_reg[2] ),
        .O(re_prev_i_3__1_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_1_8_re),
        .Q(\reg_1_8_10/re_prev ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized20
   (\scr_reg_reg[57] ,
    Q,
    \rd_data_reg[7] ,
    tx_66_fifo,
    \q_reg[0]_0 ,
    D,
    prbs31_rx_enable_core_int,
    indirect_read_reg,
    prbs31_tx_enable_core_int,
    new_tx_test_seed,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[0] ,
    \addr_reg_reg[19] ,
    out,
    \prbs31_err_count_reg[15] ,
    data_out_reg,
    E,
    \state_reg[2] ,
    coreclk);
  output \scr_reg_reg[57] ;
  output [5:0]Q;
  output \rd_data_reg[7] ;
  output [0:0]tx_66_fifo;
  output \q_reg[0]_0 ;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output indirect_read_reg;
  output prbs31_tx_enable_core_int;
  input new_tx_test_seed;
  input [0:0]\tx_test_patt_seed_sel_reg[0] ;
  input [0:0]\tx_66_enc_out_reg[0] ;
  input [5:0]\addr_reg_reg[19] ;
  input [15:0]out;
  input [15:0]\prbs31_err_count_reg[15] ;
  input data_out_reg;
  input [0:0]E;
  input [5:0]\state_reg[2] ;
  input coreclk;

  wire [15:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire [5:0]\addr_reg_reg[19] ;
  wire coreclk;
  wire data_out_reg;
  wire indirect_read_reg;
  wire new_tx_test_seed;
  wire [15:0]out;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire prbs31_rx_enable_core_int;
  wire prbs31_tx_enable_core_int;
  wire \q_reg[0]_0 ;
  wire \rd_data_reg[7] ;
  wire \scr_reg_reg[57] ;
  wire [5:0]\state_reg[2] ;
  wire [0:0]\tx_66_enc_out_reg[0] ;
  wire [0:0]tx_66_fifo;
  wire [0:0]\tx_test_patt_seed_sel_reg[0] ;

  LUT3 #(
    .INIT(8'h74)) 
    asynch_fifo_i_i_66
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(\tx_66_enc_out_reg[0] ),
        .O(tx_66_fifo));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h4004)) 
    asynch_fifo_i_i_80
       (.I0(Q[1]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(\tx_test_patt_seed_sel_reg[0] ),
        .O(\rd_data_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'hB)) 
    indirect_read_i_2
       (.I0(Q[2]),
        .I1(Q[5]),
        .O(indirect_read_reg));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_rx_enable_core_regb_i_1
       (.I0(Q[5]),
        .I1(Q[2]),
        .O(prbs31_rx_enable_core_int));
  LUT2 #(
    .INIT(4'h2)) 
    prbs31_tx_enable_core_reg_i_1
       (.I0(Q[4]),
        .I1(Q[3]),
        .O(prbs31_tx_enable_core_int));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[0]_i_1 
       (.I0(out[0]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [0]),
        .O(D[0]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[10]_i_1 
       (.I0(out[10]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [10]),
        .O(D[10]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[11]_i_1 
       (.I0(out[11]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [11]),
        .O(D[11]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[12]_i_1 
       (.I0(out[12]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [12]),
        .O(D[12]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[13]_i_1 
       (.I0(out[13]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [13]),
        .O(D[13]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[14]_i_1 
       (.I0(out[14]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [14]),
        .O(D[14]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[15]_i_1 
       (.I0(out[15]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [15]),
        .O(D[15]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[1]_i_1 
       (.I0(out[1]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [1]),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[2]_i_1 
       (.I0(out[2]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [2]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[3]_i_1 
       (.I0(out[3]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [3]),
        .O(D[3]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[4]_i_1 
       (.I0(out[4]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [4]),
        .O(D[4]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[5]_i_1 
       (.I0(out[5]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [5]),
        .O(D[5]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[6]_i_1 
       (.I0(out[6]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [6]),
        .O(D[6]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[7]_i_1 
       (.I0(out[7]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [7]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[8]_i_1 
       (.I0(out[8]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [8]),
        .O(D[8]));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \prbs_err_count[9]_i_1 
       (.I0(out[9]),
        .I1(Q[2]),
        .I2(Q[5]),
        .I3(\prbs31_err_count_reg[15] [9]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \q[5]_i_3 
       (.I0(\addr_reg_reg[19] [0]),
        .I1(\addr_reg_reg[19] [2]),
        .I2(\addr_reg_reg[19] [1]),
        .I3(\addr_reg_reg[19] [3]),
        .I4(\addr_reg_reg[19] [4]),
        .I5(\addr_reg_reg[19] [5]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [0]),
        .Q(Q[0]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [1]),
        .Q(Q[1]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [2]),
        .Q(Q[2]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [3]),
        .Q(Q[3]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [4]),
        .Q(Q[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\state_reg[2] [5]),
        .Q(Q[5]),
        .R(data_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \scr_reg[57]_i_2 
       (.I0(Q[3]),
        .I1(new_tx_test_seed),
        .O(\scr_reg_reg[57] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized21
   (re_prev,
    reg_3_43_re,
    \q_reg[0]_0 ,
    re_prev_reg_0,
    \rddata_out_reg[14] ,
    \q_reg[0]_1 ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[4] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[7] ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[0] ,
    Q,
    coreclk,
    \addr_reg_reg[20] ,
    \state_reg[2] ,
    \state_reg[2]_0 ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[4] ,
    \addr_reg_reg[3] ,
    \q_reg[2]_0 ,
    \q_reg[7]_0 ,
    SR,
    \prbs_err_count_reg[15] );
  output re_prev;
  output reg_3_43_re;
  output \q_reg[0]_0 ;
  output re_prev_reg_0;
  output \rddata_out_reg[14] ;
  output \q_reg[0]_1 ;
  output \rddata_out_reg[10] ;
  output \rddata_out_reg[4] ;
  output \rddata_out_reg[2] ;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[1] ;
  output \rddata_out_reg[0] ;
  output [8:0]Q;
  input coreclk;
  input [20:0]\addr_reg_reg[20] ;
  input \state_reg[2] ;
  input \state_reg[2]_0 ;
  input [10:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[3] ;
  input [0:0]\q_reg[2]_0 ;
  input [0:0]\q_reg[7]_0 ;
  input [0:0]SR;
  input [15:0]\prbs_err_count_reg[15] ;

  wire [8:0]Q;
  wire [0:0]SR;
  wire [20:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[4] ;
  wire coreclk;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [10:0]pseudo_rand_seeds_int;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire [0:0]\q_reg[2]_0 ;
  wire [0:0]\q_reg[7]_0 ;
  wire \q_reg_n_0_[0] ;
  wire \q_reg_n_0_[10] ;
  wire \q_reg_n_0_[14] ;
  wire \q_reg_n_0_[1] ;
  wire \q_reg_n_0_[2] ;
  wire \q_reg_n_0_[4] ;
  wire \q_reg_n_0_[7] ;
  wire \rddata_out[2]_i_12_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[7] ;
  wire re_prev;
  wire re_prev_i_2_n_0;
  wire re_prev_i_3__2_n_0;
  wire re_prev_reg_0;
  wire reg_3_43_re;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \q[15]_i_3__1 
       (.I0(\addr_reg_reg[20] [15]),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [20]),
        .I3(\addr_reg_reg[20] [19]),
        .I4(\addr_reg_reg[20] [18]),
        .I5(\addr_reg_reg[20] [4]),
        .O(re_prev_reg_0));
  LUT3 #(
    .INIT(8'hFD)) 
    \q[15]_i_5__2 
       (.I0(\q_reg[0]_0 ),
        .I1(\addr_reg_reg[20] [14]),
        .I2(\addr_reg_reg[20] [7]),
        .O(\q_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \q[15]_i_6__3 
       (.I0(\addr_reg_reg[20] [13]),
        .I1(\addr_reg_reg[20] [8]),
        .I2(\addr_reg_reg[20] [9]),
        .I3(\addr_reg_reg[20] [12]),
        .I4(\addr_reg_reg[20] [11]),
        .I5(\addr_reg_reg[20] [10]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [0]),
        .Q(\q_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [10]),
        .Q(\q_reg_n_0_[10] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [11]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [12]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [13]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [14]),
        .Q(\q_reg_n_0_[14] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [15]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [1]),
        .Q(\q_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [2]),
        .Q(\q_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [3]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [4]),
        .Q(\q_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [5]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [6]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [7]),
        .Q(\q_reg_n_0_[7] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [8]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\prbs_err_count_reg[15] [9]),
        .Q(Q[4]),
        .R(SR));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[0]_i_10 
       (.I0(\q_reg_n_0_[0] ),
        .I1(\addr_reg_reg[20] [3]),
        .I2(pseudo_rand_seeds_int[6]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(pseudo_rand_seeds_int[0]),
        .O(\rddata_out_reg[0] ));
  LUT6 #(
    .INIT(64'hAC00FFFFAC00AC00)) 
    \rddata_out[10]_i_11 
       (.I0(\q_reg_n_0_[10] ),
        .I1(pseudo_rand_seeds_int[3]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[4] ),
        .I4(\addr_reg_reg[3] ),
        .I5(pseudo_rand_seeds_int[10]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'h67EEFFFF67FFFFFF)) 
    \rddata_out[14]_i_11 
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\q_reg_n_0_[14] ),
        .I3(\addr_reg_reg[20] [3]),
        .I4(\addr_reg_reg[20] [1]),
        .I5(pseudo_rand_seeds_int[4]),
        .O(\rddata_out_reg[14] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[1]_i_13 
       (.I0(\q_reg_n_0_[1] ),
        .I1(\addr_reg_reg[20] [3]),
        .I2(pseudo_rand_seeds_int[7]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(pseudo_rand_seeds_int[1]),
        .O(\rddata_out_reg[1] ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \rddata_out[2]_i_12 
       (.I0(\q_reg_n_0_[2] ),
        .I1(\addr_reg_reg[20] [3]),
        .I2(pseudo_rand_seeds_int[8]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(pseudo_rand_seeds_int[2]),
        .O(\rddata_out[2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \rddata_out[2]_i_5 
       (.I0(\rddata_out[2]_i_12_n_0 ),
        .I1(\addr_reg_reg[20] [0]),
        .I2(pseudo_rand_seeds_int[5]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\q_reg[2]_0 ),
        .O(\rddata_out_reg[2] ));
  LUT5 #(
    .INIT(32'hF8008800)) 
    \rddata_out[4]_i_10 
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\q_reg_n_0_[4] ),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\addr_reg_reg[20] [1]),
        .I4(pseudo_rand_seeds_int[9]),
        .O(\rddata_out_reg[4] ));
  LUT5 #(
    .INIT(32'h2323FFFC)) 
    \rddata_out[7]_i_7 
       (.I0(\q_reg_n_0_[7] ),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\addr_reg_reg[20] [1]),
        .I3(\q_reg[7]_0 ),
        .I4(\addr_reg_reg[20] [3]),
        .O(\rddata_out_reg[7] ));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    re_prev_i_1
       (.I0(re_prev_i_2_n_0),
        .I1(re_prev_reg_0),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[20] [5]),
        .I4(\state_reg[2] ),
        .I5(re_prev_i_3__2_n_0),
        .O(reg_3_43_re));
  LUT4 #(
    .INIT(16'h2000)) 
    re_prev_i_2
       (.I0(\addr_reg_reg[20] [16]),
        .I1(\state_reg[2]_0 ),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [1]),
        .O(re_prev_i_2_n_0));
  LUT3 #(
    .INIT(8'hFB)) 
    re_prev_i_3__2
       (.I0(\q_reg[0]_1 ),
        .I1(\addr_reg_reg[20] [17]),
        .I2(\addr_reg_reg[20] [6]),
        .O(re_prev_i_3__2_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_43_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized22
   (E,
    \q_reg[0]_0 ,
    D,
    d1_reg,
    \rddata_out_reg[15] ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[1] ,
    Q,
    \addr_reg_reg[17] ,
    \state_reg[2] ,
    \addr_reg_reg[20] ,
    \state_reg[1] ,
    \state_reg[2]_0 ,
    \addr_reg_reg[0] ,
    \addr_reg_reg[1] ,
    \addr_reg_reg[1]_0 ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[10] ,
    \addr_reg_reg[14] ,
    \addr_reg_reg[13] ,
    data_out_reg,
    \shift_reg_reg[15] ,
    coreclk);
  output [0:0]E;
  output \q_reg[0]_0 ;
  output [0:0]D;
  output [15:0]d1_reg;
  output \rddata_out_reg[15] ;
  output \rddata_out_reg[0] ;
  output \rddata_out_reg[1] ;
  input [0:0]Q;
  input [17:0]\addr_reg_reg[17] ;
  input \state_reg[2] ;
  input \addr_reg_reg[20] ;
  input \state_reg[1] ;
  input \state_reg[2]_0 ;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[1]_0 ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[10] ;
  input \addr_reg_reg[14] ;
  input \addr_reg_reg[13] ;
  input data_out_reg;
  input [14:0]\shift_reg_reg[15] ;
  input coreclk;

  wire [0:0]D;
  wire [0:0]E;
  wire [0:0]Q;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[10] ;
  wire \addr_reg_reg[13] ;
  wire \addr_reg_reg[14] ;
  wire [17:0]\addr_reg_reg[17] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[1]_0 ;
  wire \addr_reg_reg[20] ;
  wire \addr_reg_reg[2] ;
  wire coreclk;
  wire [15:0]d1_reg;
  wire data_out_reg;
  wire \q[0]_i_1__16_n_0 ;
  wire \q[15]_i_4__5_n_0 ;
  wire \q[15]_i_5__3_n_0 ;
  wire \q[15]_i_6__1_n_0 ;
  wire \q[15]_i_7_n_0 ;
  wire \q_reg[0]_0 ;
  wire \rddata_out[4]_i_2_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[1] ;
  wire [14:0]\shift_reg_reg[15] ;
  wire \state_reg[1] ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;

  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__16 
       (.I0(E),
        .I1(Q),
        .O(\q[0]_i_1__16_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \q[15]_i_1__3 
       (.I0(\addr_reg_reg[17] [17]),
        .I1(\addr_reg_reg[17] [16]),
        .I2(\state_reg[2] ),
        .I3(\q_reg[0]_0 ),
        .I4(\addr_reg_reg[20] ),
        .I5(\state_reg[1] ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFFFFF)) 
    \q[15]_i_3__4 
       (.I0(\q[15]_i_4__5_n_0 ),
        .I1(\q[15]_i_5__3_n_0 ),
        .I2(\addr_reg_reg[17] [9]),
        .I3(\q[15]_i_6__1_n_0 ),
        .I4(\addr_reg_reg[17] [13]),
        .I5(\q[15]_i_7_n_0 ),
        .O(\q_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \q[15]_i_4__5 
       (.I0(\addr_reg_reg[17] [5]),
        .I1(\addr_reg_reg[17] [6]),
        .I2(\addr_reg_reg[17] [7]),
        .I3(\addr_reg_reg[17] [4]),
        .O(\q[15]_i_4__5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_5__3 
       (.I0(\addr_reg_reg[17] [10]),
        .I1(\addr_reg_reg[17] [11]),
        .O(\q[15]_i_5__3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \q[15]_i_6__1 
       (.I0(\addr_reg_reg[17] [14]),
        .I1(\addr_reg_reg[17] [15]),
        .O(\q[15]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \q[15]_i_7 
       (.I0(\addr_reg_reg[17] [0]),
        .I1(\addr_reg_reg[17] [2]),
        .I2(\addr_reg_reg[17] [1]),
        .I3(\addr_reg_reg[17] [3]),
        .I4(\addr_reg_reg[17] [8]),
        .I5(\addr_reg_reg[17] [12]),
        .O(\q[15]_i_7_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(E),
        .D(\q[0]_i_1__16_n_0 ),
        .Q(d1_reg[0]),
        .S(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [9]),
        .Q(d1_reg[10]),
        .S(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [10]),
        .Q(d1_reg[11]),
        .S(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [11]),
        .Q(d1_reg[12]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [12]),
        .Q(d1_reg[13]),
        .R(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [13]),
        .Q(d1_reg[14]),
        .S(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [14]),
        .Q(d1_reg[15]),
        .R(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [0]),
        .Q(d1_reg[1]),
        .S(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [1]),
        .Q(d1_reg[2]),
        .R(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [2]),
        .Q(d1_reg[3]),
        .S(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [3]),
        .Q(d1_reg[4]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [4]),
        .Q(d1_reg[5]),
        .R(data_out_reg));
  FDSE #(
    .INIT(1'b1)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [5]),
        .Q(d1_reg[6]),
        .S(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [6]),
        .Q(d1_reg[7]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [7]),
        .Q(d1_reg[8]),
        .R(data_out_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(E),
        .D(\shift_reg_reg[15] [8]),
        .Q(d1_reg[9]),
        .R(data_out_reg));
  LUT6 #(
    .INIT(64'h00ABFFFF00AB00AB)) 
    \rddata_out[0]_i_3 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [2]),
        .I3(\addr_reg_reg[17] [5]),
        .I4(d1_reg[0]),
        .I5(\addr_reg_reg[13] ),
        .O(\rddata_out_reg[0] ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFC)) 
    \rddata_out[15]_i_9 
       (.I0(d1_reg[15]),
        .I1(\addr_reg_reg[17] [14]),
        .I2(\addr_reg_reg[17] [15]),
        .I3(\addr_reg_reg[17] [13]),
        .I4(\addr_reg_reg[17] [12]),
        .I5(\addr_reg_reg[17] [11]),
        .O(\rddata_out_reg[15] ));
  LUT5 #(
    .INIT(32'h0EFF0E0E)) 
    \rddata_out[1]_i_15 
       (.I0(\addr_reg_reg[17] [1]),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [5]),
        .I3(d1_reg[1]),
        .I4(\addr_reg_reg[13] ),
        .O(\rddata_out_reg[1] ));
  LUT6 #(
    .INIT(64'h0040004000000040)) 
    \rddata_out[4]_i_1 
       (.I0(\rddata_out[4]_i_2_n_0 ),
        .I1(\state_reg[2]_0 ),
        .I2(\addr_reg_reg[0] ),
        .I3(\addr_reg_reg[1] ),
        .I4(\addr_reg_reg[1]_0 ),
        .I5(\addr_reg_reg[2] ),
        .O(D));
  LUT6 #(
    .INIT(64'hEFFFFFEFFFFFFFEF)) 
    \rddata_out[4]_i_2 
       (.I0(\addr_reg_reg[10] ),
        .I1(\addr_reg_reg[14] ),
        .I2(\addr_reg_reg[17] [5]),
        .I3(\addr_reg_reg[17] [14]),
        .I4(\addr_reg_reg[17] [15]),
        .I5(d1_reg[4]),
        .O(\rddata_out[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized23
   (\rddata_out_reg[0] ,
    data_out_reg,
    global_pmd_rx_signal_detect_core_i,
    coreclk);
  output \rddata_out_reg[0] ;
  input data_out_reg;
  input global_pmd_rx_signal_detect_core_i;
  input coreclk;

  wire coreclk;
  wire data_out_reg;
  wire global_pmd_rx_signal_detect_core_i;
  wire \rddata_out_reg[0] ;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(global_pmd_rx_signal_detect_core_i),
        .Q(\rddata_out_reg[0] ),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized24
   (reg_3_32_12,
    \rddata_out_reg[12] ,
    data_out_reg,
    pcs_rx_link_up_core_sync_int,
    coreclk,
    \addr_reg_reg[3] );
  output reg_3_32_12;
  output \rddata_out_reg[12] ;
  input data_out_reg;
  input pcs_rx_link_up_core_sync_int;
  input coreclk;
  input [3:0]\addr_reg_reg[3] ;

  wire [3:0]\addr_reg_reg[3] ;
  wire coreclk;
  wire data_out_reg;
  wire pcs_rx_link_up_core_sync_int;
  wire \rddata_out_reg[12] ;
  wire reg_3_32_12;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_rx_link_up_core_sync_int),
        .Q(reg_3_32_12),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'hCFCFCFCE)) 
    \rddata_out[12]_i_11 
       (.I0(\addr_reg_reg[3] [2]),
        .I1(\addr_reg_reg[3] [0]),
        .I2(\addr_reg_reg[3] [1]),
        .I3(reg_3_32_12),
        .I4(\addr_reg_reg[3] [3]),
        .O(\rddata_out_reg[12] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized25
   (reg_3_32_1,
    \rddata_out_reg[1] ,
    data_out_reg,
    pcs_hi_ber_core_i,
    coreclk,
    \addr_reg_reg[5] ,
    pseudo_rand_seeds_int);
  output reg_3_32_1;
  output \rddata_out_reg[1] ;
  input data_out_reg;
  input pcs_hi_ber_core_i;
  input coreclk;
  input [2:0]\addr_reg_reg[5] ;
  input [0:0]pseudo_rand_seeds_int;

  wire [2:0]\addr_reg_reg[5] ;
  wire coreclk;
  wire data_out_reg;
  wire pcs_hi_ber_core_i;
  wire [0:0]pseudo_rand_seeds_int;
  wire \rddata_out_reg[1] ;
  wire reg_3_32_1;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_hi_ber_core_i),
        .Q(reg_3_32_1),
        .R(data_out_reg));
  LUT5 #(
    .INIT(32'hBBBFFFBF)) 
    \rddata_out[1]_i_9 
       (.I0(\addr_reg_reg[5] [1]),
        .I1(\addr_reg_reg[5] [2]),
        .I2(reg_3_32_1),
        .I3(\addr_reg_reg[5] [0]),
        .I4(pseudo_rand_seeds_int),
        .O(\rddata_out_reg[1] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized26
   (reg_3_32_0,
    data_out_reg,
    core_status,
    coreclk);
  output reg_3_32_0;
  input data_out_reg;
  input [0:0]core_status;
  input coreclk;

  wire [0:0]core_status;
  wire coreclk;
  wire data_out_reg;
  wire reg_3_32_0;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(core_status),
        .Q(reg_3_32_0),
        .R(data_out_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized4
   (reg_3_0_15,
    D,
    E,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \q_reg[0]_4 ,
    \q_reg[0]_5 ,
    \rddata_out_reg[14] ,
    \rddata_out_reg[13] ,
    SR,
    \q_reg[2] ,
    \q_reg[0]_6 ,
    \q_reg[0]_7 ,
    \q_reg[0]_8 ,
    \pcs_test_pattern_error_count_reg[15] ,
    clear_test_pattern_err_count,
    \pcs_ber_count_reg[5] ,
    \pcs_error_block_count_reg[7] ,
    \rddata_out_reg[13]_0 ,
    \q_reg[0]_9 ,
    \q_reg[0]_10 ,
    \rddata_out_reg[3] ,
    \rddata_out_reg[9] ,
    \rddata_out_reg[9]_0 ,
    \rddata_out_reg[10] ,
    \rddata_out_reg[1] ,
    \rddata_out_reg[7] ,
    \rddata_out_reg[2] ,
    \rddata_out_reg[15] ,
    \rddata_out_reg[4] ,
    coreclk,
    Q,
    \q_reg[0]_11 ,
    \addr_reg_reg[3] ,
    \addr_reg_reg[3]_0 ,
    \q_reg[0]_12 ,
    \addr_reg_reg[9] ,
    \q_reg[14] ,
    \addr_reg_reg[15] ,
    \addr_reg_reg[13] ,
    \addr_reg_reg[5] ,
    \addr_reg_reg[20] ,
    reg_3_43_re,
    re_prev,
    reg_3_0_15_we,
    \state_reg[2] ,
    \state_reg[1] ,
    \q_reg[0]_13 ,
    \q_reg[0]_14 ,
    \state_reg[2]_0 ,
    \addr_reg_reg[6] ,
    \addr_reg_reg[0] ,
    \addr_reg_reg[8] ,
    \addr_reg_reg[0]_0 ,
    \addr_reg_reg[5]_0 ,
    \addr_reg_reg[3]_1 ,
    \state_reg[2]_1 ,
    \addr_reg_reg[20]_0 ,
    read_reg_reg,
    \addr_reg_reg[15]_0 ,
    \addr_reg_reg[14] ,
    reg_3_33_re,
    \addr_reg_reg[0]_1 ,
    \addr_reg_reg[4] ,
    \addr_reg_reg[15]_1 ,
    \state_reg[2]_2 ,
    \addr_reg_reg[17] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[19] ,
    \addr_reg_reg[2]_0 ,
    \addr_reg_reg[10] ,
    \addr_reg_reg[9]_0 ,
    \addr_reg_reg[11] ,
    \addr_reg_reg[1] ,
    \addr_reg_reg[5]_1 ,
    \addr_reg_reg[14]_0 ,
    \addr_reg_reg[1]_0 ,
    \addr_reg_reg[4]_0 ,
    reset,
    \addr_reg_reg[2]_1 ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[3]_2 ,
    pcs_reset_clear_core_intr,
    resetdone);
  output reg_3_0_15;
  output [0:0]D;
  output [0:0]E;
  output [0:0]\q_reg[0]_0 ;
  output [0:0]\q_reg[0]_1 ;
  output [0:0]\q_reg[0]_2 ;
  output [0:0]\q_reg[0]_3 ;
  output [0:0]\q_reg[0]_4 ;
  output [0:0]\q_reg[0]_5 ;
  output \rddata_out_reg[14] ;
  output \rddata_out_reg[13] ;
  output [0:0]SR;
  output \q_reg[2] ;
  output \q_reg[0]_6 ;
  output \q_reg[0]_7 ;
  output [0:0]\q_reg[0]_8 ;
  output \pcs_test_pattern_error_count_reg[15] ;
  output clear_test_pattern_err_count;
  output [0:0]\pcs_ber_count_reg[5] ;
  output [0:0]\pcs_error_block_count_reg[7] ;
  output [0:0]\rddata_out_reg[13]_0 ;
  output [0:0]\q_reg[0]_9 ;
  output \q_reg[0]_10 ;
  output \rddata_out_reg[3] ;
  output \rddata_out_reg[9] ;
  output \rddata_out_reg[9]_0 ;
  output \rddata_out_reg[10] ;
  output \rddata_out_reg[1] ;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[2] ;
  output \rddata_out_reg[15] ;
  output \rddata_out_reg[4] ;
  input coreclk;
  input [3:0]Q;
  input \q_reg[0]_11 ;
  input \addr_reg_reg[3] ;
  input \addr_reg_reg[3]_0 ;
  input \q_reg[0]_12 ;
  input \addr_reg_reg[9] ;
  input [3:0]\q_reg[14] ;
  input \addr_reg_reg[15] ;
  input \addr_reg_reg[13] ;
  input \addr_reg_reg[5] ;
  input [15:0]\addr_reg_reg[20] ;
  input reg_3_43_re;
  input re_prev;
  input reg_3_0_15_we;
  input \state_reg[2] ;
  input \state_reg[1] ;
  input \q_reg[0]_13 ;
  input \q_reg[0]_14 ;
  input \state_reg[2]_0 ;
  input \addr_reg_reg[6] ;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[8] ;
  input \addr_reg_reg[0]_0 ;
  input \addr_reg_reg[5]_0 ;
  input \addr_reg_reg[3]_1 ;
  input \state_reg[2]_1 ;
  input \addr_reg_reg[20]_0 ;
  input read_reg_reg;
  input \addr_reg_reg[15]_0 ;
  input \addr_reg_reg[14] ;
  input reg_3_33_re;
  input \addr_reg_reg[0]_1 ;
  input \addr_reg_reg[4] ;
  input \addr_reg_reg[15]_1 ;
  input \state_reg[2]_2 ;
  input \addr_reg_reg[17] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[19] ;
  input \addr_reg_reg[2]_0 ;
  input \addr_reg_reg[10] ;
  input \addr_reg_reg[9]_0 ;
  input \addr_reg_reg[11] ;
  input \addr_reg_reg[1] ;
  input \addr_reg_reg[5]_1 ;
  input \addr_reg_reg[14]_0 ;
  input \addr_reg_reg[1]_0 ;
  input \addr_reg_reg[4]_0 ;
  input reset;
  input \addr_reg_reg[2]_1 ;
  input [0:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[3]_2 ;
  input pcs_reset_clear_core_intr;
  input resetdone;

  wire [0:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[0]_0 ;
  wire \addr_reg_reg[0]_1 ;
  wire \addr_reg_reg[10] ;
  wire \addr_reg_reg[11] ;
  wire \addr_reg_reg[13] ;
  wire \addr_reg_reg[14] ;
  wire \addr_reg_reg[14]_0 ;
  wire \addr_reg_reg[15] ;
  wire \addr_reg_reg[15]_0 ;
  wire \addr_reg_reg[15]_1 ;
  wire \addr_reg_reg[17] ;
  wire \addr_reg_reg[19] ;
  wire \addr_reg_reg[1] ;
  wire \addr_reg_reg[1]_0 ;
  wire [15:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[20]_0 ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[2]_1 ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[3]_0 ;
  wire \addr_reg_reg[3]_1 ;
  wire \addr_reg_reg[3]_2 ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[4]_0 ;
  wire \addr_reg_reg[5] ;
  wire \addr_reg_reg[5]_0 ;
  wire \addr_reg_reg[5]_1 ;
  wire \addr_reg_reg[6] ;
  wire \addr_reg_reg[8] ;
  wire \addr_reg_reg[9] ;
  wire \addr_reg_reg[9]_0 ;
  wire clear_test_pattern_err_count;
  wire coreclk;
  wire [0:0]\pcs_ber_count_reg[5] ;
  wire [0:0]\pcs_error_block_count_reg[7] ;
  wire pcs_reset_clear_core_intr;
  wire \pcs_test_pattern_error_count_reg[15] ;
  wire [0:0]pseudo_rand_seeds_int;
  wire \q[0]_i_1__0_n_0 ;
  wire \q[15]_i_4__1_n_0 ;
  wire \q[15]_i_4_n_0 ;
  wire \q[9]_i_5_n_0 ;
  wire [0:0]\q_reg[0]_0 ;
  wire [0:0]\q_reg[0]_1 ;
  wire \q_reg[0]_10 ;
  wire \q_reg[0]_11 ;
  wire \q_reg[0]_12 ;
  wire \q_reg[0]_13 ;
  wire \q_reg[0]_14 ;
  wire [0:0]\q_reg[0]_2 ;
  wire [0:0]\q_reg[0]_3 ;
  wire [0:0]\q_reg[0]_4 ;
  wire [0:0]\q_reg[0]_5 ;
  wire \q_reg[0]_6 ;
  wire \q_reg[0]_7 ;
  wire [0:0]\q_reg[0]_8 ;
  wire [0:0]\q_reg[0]_9 ;
  wire [3:0]\q_reg[14] ;
  wire \q_reg[2] ;
  wire \rddata_out[13]_i_2_n_0 ;
  wire \rddata_out[14]_i_3_n_0 ;
  wire \rddata_out[3]_i_17_n_0 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[13] ;
  wire [0:0]\rddata_out_reg[13]_0 ;
  wire \rddata_out_reg[14] ;
  wire \rddata_out_reg[15] ;
  wire \rddata_out_reg[1] ;
  wire \rddata_out_reg[2] ;
  wire \rddata_out_reg[3] ;
  wire \rddata_out_reg[4] ;
  wire \rddata_out_reg[7] ;
  wire \rddata_out_reg[9] ;
  wire \rddata_out_reg[9]_0 ;
  wire re_prev;
  wire read_reg_reg;
  wire reg_3_0_15;
  wire reg_3_0_15_we;
  wire reg_3_33_re;
  wire reg_3_43_re;
  wire reset;
  wire resetdone;
  wire \state_reg[1] ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;

  LUT2 #(
    .INIT(4'hE)) 
    clear_test_pattern_err_count_reg_i_1
       (.I0(\q_reg[2] ),
        .I1(reg_3_43_re),
        .O(clear_test_pattern_err_count));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pcs_ber_count[5]_i_1 
       (.I0(\q_reg[2] ),
        .I1(reg_3_33_re),
        .O(\pcs_ber_count_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pcs_error_block_count[7]_i_1 
       (.I0(\q_reg[2] ),
        .I1(reg_3_33_re),
        .O(\pcs_error_block_count_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'hE)) 
    pcs_resetout_INST_0
       (.I0(reset),
        .I1(reg_3_0_15),
        .O(\q_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \pcs_test_pattern_error_count[0]_i_1 
       (.I0(\q_reg[2] ),
        .I1(reg_3_43_re),
        .O(\pcs_test_pattern_error_count_reg[15] ));
  LUT6 #(
    .INIT(64'hE2220000E222E222)) 
    \q[0]_i_1__0 
       (.I0(reg_3_0_15),
        .I1(reg_3_0_15_we),
        .I2(\state_reg[2]_1 ),
        .I3(Q[3]),
        .I4(pcs_reset_clear_core_intr),
        .I5(resetdone),
        .O(\q[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__11 
       (.I0(E),
        .I1(Q[0]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__12 
       (.I0(\q_reg[0]_1 ),
        .I1(Q[0]),
        .O(\q_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__13 
       (.I0(\q_reg[0]_3 ),
        .I1(Q[0]),
        .O(\q_reg[0]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[0]_i_1__15 
       (.I0(\q_reg[0]_5 ),
        .I1(Q[0]),
        .O(\q_reg[0]_4 ));
  LUT6 #(
    .INIT(64'hDDFDDDDD00200000)) 
    \q[0]_i_1__20 
       (.I0(reg_3_0_15_we),
        .I1(\q_reg[2] ),
        .I2(\state_reg[2] ),
        .I3(\state_reg[1] ),
        .I4(Q[2]),
        .I5(\q_reg[0]_13 ),
        .O(\q_reg[0]_6 ));
  LUT6 #(
    .INIT(64'hDDFDDDDD00200000)) 
    \q[0]_i_1__21 
       (.I0(reg_3_0_15_we),
        .I1(\q_reg[2] ),
        .I2(\state_reg[2] ),
        .I3(\state_reg[1] ),
        .I4(Q[1]),
        .I5(\q_reg[0]_14 ),
        .O(\q_reg[0]_7 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \q[15]_i_1__0 
       (.I0(\addr_reg_reg[5]_0 ),
        .I1(\addr_reg_reg[3]_1 ),
        .I2(\q_reg[2] ),
        .I3(\state_reg[2]_1 ),
        .I4(\addr_reg_reg[20]_0 ),
        .I5(\addr_reg_reg[8] ),
        .O(\q_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \q[15]_i_1__1 
       (.I0(\addr_reg_reg[20] [1]),
        .I1(\addr_reg_reg[20] [0]),
        .I2(read_reg_reg),
        .I3(\addr_reg_reg[15]_0 ),
        .I4(\q[15]_i_4__1_n_0 ),
        .I5(\addr_reg_reg[14] ),
        .O(\q_reg[0]_3 ));
  LUT1 #(
    .INIT(2'h1)) 
    \q[15]_i_1__5 
       (.I0(\q_reg[0]_10 ),
        .O(\q_reg[0]_9 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \q[15]_i_1__7 
       (.I0(\q_reg[2] ),
        .I1(reg_3_43_re),
        .I2(re_prev),
        .O(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \q[15]_i_3__0 
       (.I0(\addr_reg_reg[8] ),
        .I1(\q[15]_i_4_n_0 ),
        .I2(\addr_reg_reg[2] ),
        .I3(\addr_reg_reg[20] [4]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[6] ),
        .O(\q_reg[0]_10 ));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    \q[15]_i_4 
       (.I0(\addr_reg_reg[19] ),
        .I1(\addr_reg_reg[20] [15]),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [14]),
        .I4(\q_reg[2] ),
        .I5(\state_reg[2]_1 ),
        .O(\q[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    \q[15]_i_4__1 
       (.I0(\state_reg[2]_1 ),
        .I1(\q_reg[2] ),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[20] [5]),
        .I4(\addr_reg_reg[20] [6]),
        .I5(\addr_reg_reg[20] [14]),
        .O(\q[15]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \q[5]_i_1__0 
       (.I0(\state_reg[2]_0 ),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[6] ),
        .I3(\q[9]_i_5_n_0 ),
        .I4(\addr_reg_reg[0] ),
        .I5(\addr_reg_reg[8] ),
        .O(\q_reg[0]_8 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \q[9]_i_1__0 
       (.I0(\state_reg[2]_0 ),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[6] ),
        .I3(\addr_reg_reg[0]_0 ),
        .I4(\q[9]_i_5_n_0 ),
        .I5(\addr_reg_reg[8] ),
        .O(E));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \q[9]_i_1__4 
       (.I0(\addr_reg_reg[0]_1 ),
        .I1(\addr_reg_reg[4] ),
        .I2(\addr_reg_reg[20] [2]),
        .I3(\addr_reg_reg[20] [13]),
        .I4(\addr_reg_reg[15]_1 ),
        .I5(\q[15]_i_4__1_n_0 ),
        .O(\q_reg[0]_5 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFDFFFFFF)) 
    \q[9]_i_5 
       (.I0(\state_reg[2]_1 ),
        .I1(\q_reg[2] ),
        .I2(\addr_reg_reg[20] [15]),
        .I3(\addr_reg_reg[20] [13]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[20] [4]),
        .O(\q[9]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__0_n_0 ),
        .Q(reg_3_0_15),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFEF)) 
    \rddata_out[10]_i_3 
       (.I0(\addr_reg_reg[11] ),
        .I1(reg_3_0_15),
        .I2(\addr_reg_reg[20] [14]),
        .I3(\addr_reg_reg[20] [8]),
        .I4(\addr_reg_reg[20] [9]),
        .I5(\addr_reg_reg[20] [10]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'h0000000080000008)) 
    \rddata_out[12]_i_3 
       (.I0(\addr_reg_reg[9]_0 ),
        .I1(\addr_reg_reg[20] [5]),
        .I2(\addr_reg_reg[20] [6]),
        .I3(\addr_reg_reg[20] [4]),
        .I4(\addr_reg_reg[2]_0 ),
        .I5(\rddata_out_reg[9] ),
        .O(\rddata_out_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \rddata_out[12]_i_9 
       (.I0(reg_3_0_15),
        .I1(\addr_reg_reg[20] [14]),
        .O(\rddata_out_reg[9] ));
  LUT6 #(
    .INIT(64'h0000000080020000)) 
    \rddata_out[13]_i_1 
       (.I0(\rddata_out[13]_i_2_n_0 ),
        .I1(\addr_reg_reg[20] [10]),
        .I2(\addr_reg_reg[20] [9]),
        .I3(\addr_reg_reg[20] [8]),
        .I4(\state_reg[2]_2 ),
        .I5(\addr_reg_reg[17] ),
        .O(\rddata_out_reg[13]_0 ));
  LUT6 #(
    .INIT(64'h04550000FFFFFFFF)) 
    \rddata_out[13]_i_2 
       (.I0(\rddata_out_reg[13] ),
        .I1(\q_reg[14] [2]),
        .I2(\addr_reg_reg[15] ),
        .I3(\addr_reg_reg[13] ),
        .I4(\addr_reg_reg[5] ),
        .I5(\addr_reg_reg[20] [14]),
        .O(\rddata_out[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h454445444544FFFF)) 
    \rddata_out[14]_i_2 
       (.I0(\rddata_out[14]_i_3_n_0 ),
        .I1(\q_reg[0]_11 ),
        .I2(\addr_reg_reg[3] ),
        .I3(\addr_reg_reg[3]_0 ),
        .I4(\q_reg[0]_12 ),
        .I5(\addr_reg_reg[9] ),
        .O(\rddata_out_reg[14] ));
  LUT5 #(
    .INIT(32'hBFFFFFFA)) 
    \rddata_out[14]_i_3 
       (.I0(\rddata_out_reg[7] ),
        .I1(\q_reg[14] [3]),
        .I2(\addr_reg_reg[20] [10]),
        .I3(\addr_reg_reg[20] [11]),
        .I4(\addr_reg_reg[20] [12]),
        .O(\rddata_out[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00444545)) 
    \rddata_out[15]_i_13 
       (.I0(\addr_reg_reg[2]_1 ),
        .I1(\addr_reg_reg[20] [5]),
        .I2(reg_3_0_15),
        .I3(pseudo_rand_seeds_int),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[3]_2 ),
        .O(\rddata_out_reg[15] ));
  LUT5 #(
    .INIT(32'hEFFFFFFE)) 
    \rddata_out[15]_i_8 
       (.I0(reg_3_0_15),
        .I1(\addr_reg_reg[11] ),
        .I2(\addr_reg_reg[20] [6]),
        .I3(\addr_reg_reg[20] [7]),
        .I4(\addr_reg_reg[20] [4]),
        .O(\rddata_out_reg[13] ));
  LUT6 #(
    .INIT(64'hAAAABAAABAAABAAA)) 
    \rddata_out[1]_i_4 
       (.I0(\rddata_out_reg[7] ),
        .I1(\addr_reg_reg[1] ),
        .I2(\addr_reg_reg[20] [0]),
        .I3(\addr_reg_reg[20] [5]),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[20] [2]),
        .O(\rddata_out_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBA)) 
    \rddata_out[2]_i_3 
       (.I0(\rddata_out_reg[7] ),
        .I1(\q_reg[14] [0]),
        .I2(\addr_reg_reg[13] ),
        .I3(\addr_reg_reg[5]_1 ),
        .I4(\addr_reg_reg[14]_0 ),
        .I5(\addr_reg_reg[1]_0 ),
        .O(\rddata_out_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFF7EFFFF7E)) 
    \rddata_out[3]_i_11 
       (.I0(\addr_reg_reg[2]_0 ),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [6]),
        .I3(\addr_reg_reg[20] [12]),
        .I4(\addr_reg_reg[20] [11]),
        .I5(\rddata_out[3]_i_17_n_0 ),
        .O(\rddata_out_reg[3] ));
  LUT6 #(
    .INIT(64'hEFEEEFEEEFEEFFFF)) 
    \rddata_out[3]_i_17 
       (.I0(\addr_reg_reg[10] ),
        .I1(\rddata_out_reg[9] ),
        .I2(\q_reg[14] [1]),
        .I3(\addr_reg_reg[20] [12]),
        .I4(\addr_reg_reg[20] [2]),
        .I5(\addr_reg_reg[20] [5]),
        .O(\rddata_out[3]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7EEEFFFFFFFF)) 
    \rddata_out[4]_i_11 
       (.I0(\addr_reg_reg[20] [6]),
        .I1(\addr_reg_reg[20] [4]),
        .I2(\addr_reg_reg[20] [3]),
        .I3(\addr_reg_reg[20] [2]),
        .I4(reg_3_0_15),
        .I5(\addr_reg_reg[20] [14]),
        .O(\rddata_out_reg[4] ));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFEF)) 
    \rddata_out[7]_i_4 
       (.I0(\addr_reg_reg[4]_0 ),
        .I1(reg_3_0_15),
        .I2(\addr_reg_reg[20] [14]),
        .I3(\addr_reg_reg[20] [8]),
        .I4(\addr_reg_reg[20] [9]),
        .I5(\addr_reg_reg[20] [10]),
        .O(\rddata_out_reg[7] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized5
   (\q_reg[0]_0 ,
    \rddata_out_reg[2] ,
    reg_3_1_re,
    coreclk,
    \addr_reg_reg[19] ,
    reg_3_32_12,
    data_out_reg);
  output \q_reg[0]_0 ;
  output \rddata_out_reg[2] ;
  input reg_3_1_re;
  input coreclk;
  input [8:0]\addr_reg_reg[19] ;
  input reg_3_32_12;
  input data_out_reg;

  wire [8:0]\addr_reg_reg[19] ;
  wire coreclk;
  wire data_out_reg;
  wire q0;
  wire \q[0]_i_1__8_n_0 ;
  wire \q_reg[0]_0 ;
  wire \rddata_out_reg[2] ;
  wire re_prev;
  wire reg_3_1_re;
  wire reg_3_32_12;

  LUT5 #(
    .INIT(32'h20AA2020)) 
    \q[0]_i_1__8 
       (.I0(reg_3_32_12),
        .I1(re_prev),
        .I2(reg_3_1_re),
        .I3(data_out_reg),
        .I4(q0),
        .O(\q[0]_i_1__8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \q[9]_i_4 
       (.I0(\addr_reg_reg[19] [0]),
        .I1(\addr_reg_reg[19] [6]),
        .I2(\addr_reg_reg[19] [2]),
        .I3(\addr_reg_reg[19] [1]),
        .I4(\addr_reg_reg[19] [7]),
        .I5(\addr_reg_reg[19] [8]),
        .O(\q_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__8_n_0 ),
        .Q(q0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h7F7FFFFFF3F30003)) 
    \rddata_out[2]_i_10 
       (.I0(\addr_reg_reg[19] [1]),
        .I1(\addr_reg_reg[19] [5]),
        .I2(\addr_reg_reg[19] [3]),
        .I3(q0),
        .I4(\addr_reg_reg[19] [2]),
        .I5(\addr_reg_reg[19] [4]),
        .O(\rddata_out_reg[2] ));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_1_re),
        .Q(re_prev),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized6
   (\q_reg[0] ,
    \rddata_out_reg[0] ,
    \rddata_out_reg[3] ,
    \q_reg[0]_0 ,
    \q_reg[0]_1 ,
    coreclk,
    read_reg_reg,
    \state_reg[2] ,
    \addr_reg_reg[20] ,
    pcs_rx_link_up_core_sync_int,
    data_out_reg,
    reg_3_8);
  output \q_reg[0] ;
  output \rddata_out_reg[0] ;
  output \rddata_out_reg[3] ;
  output \q_reg[0]_0 ;
  output \q_reg[0]_1 ;
  input coreclk;
  input read_reg_reg;
  input \state_reg[2] ;
  input [20:0]\addr_reg_reg[20] ;
  input pcs_rx_link_up_core_sync_int;
  input data_out_reg;
  input [0:0]reg_3_8;

  wire [20:0]\addr_reg_reg[20] ;
  wire coreclk;
  wire data_out_reg;
  wire pcs_rx_link_up_core_sync_int;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \rddata_out[3]_i_10_n_0 ;
  wire \rddata_out_reg[0] ;
  wire \rddata_out_reg[3] ;
  wire re_prev_i_2__3_n_0;
  wire re_prev_i_3__3_n_0;
  wire read_reg_reg;
  wire [0:0]reg_3_8;
  wire \reg_3_8_10/re_prev ;
  wire reg_3_8_re;
  wire \state_reg[2] ;

  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'h01FD0155)) 
    \q[0]_i_1__1 
       (.I0(pcs_rx_link_up_core_sync_int),
        .I1(\reg_3_8_10/re_prev ),
        .I2(re_prev_i_2__3_n_0),
        .I3(data_out_reg),
        .I4(reg_3_8),
        .O(\q_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \q[15]_i_5__0 
       (.I0(\addr_reg_reg[20] [18]),
        .I1(\addr_reg_reg[20] [19]),
        .I2(\addr_reg_reg[20] [20]),
        .I3(\addr_reg_reg[20] [0]),
        .I4(\addr_reg_reg[20] [1]),
        .O(\q_reg[0] ));
  LUT2 #(
    .INIT(4'hE)) 
    \q[9]_i_3__0 
       (.I0(\addr_reg_reg[20] [6]),
        .I1(\addr_reg_reg[20] [7]),
        .O(\q_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \rddata_out[15]_i_10 
       (.I0(\addr_reg_reg[20] [12]),
        .I1(\addr_reg_reg[20] [13]),
        .I2(\addr_reg_reg[20] [14]),
        .I3(\addr_reg_reg[20] [15]),
        .I4(\rddata_out_reg[3] ),
        .O(\rddata_out_reg[0] ));
  LUT2 #(
    .INIT(4'hE)) 
    \rddata_out[3]_i_10 
       (.I0(\addr_reg_reg[20] [4]),
        .I1(\addr_reg_reg[20] [5]),
        .O(\rddata_out[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \rddata_out[3]_i_3 
       (.I0(\rddata_out[3]_i_10_n_0 ),
        .I1(\q_reg[0]_0 ),
        .I2(\addr_reg_reg[20] [8]),
        .I3(\addr_reg_reg[20] [9]),
        .I4(\addr_reg_reg[20] [10]),
        .I5(\addr_reg_reg[20] [11]),
        .O(\rddata_out_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT1 #(
    .INIT(2'h1)) 
    re_prev_i_1__4
       (.I0(re_prev_i_2__3_n_0),
        .O(reg_3_8_re));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFFFF)) 
    re_prev_i_2__3
       (.I0(read_reg_reg),
        .I1(\state_reg[2] ),
        .I2(re_prev_i_3__3_n_0),
        .I3(\addr_reg_reg[20] [17]),
        .I4(\addr_reg_reg[20] [16]),
        .I5(\q_reg[0] ),
        .O(re_prev_i_2__3_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    re_prev_i_3__3
       (.I0(\addr_reg_reg[20] [2]),
        .I1(\addr_reg_reg[20] [3]),
        .O(re_prev_i_3__3_n_0));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_8_re),
        .Q(\reg_3_8_10/re_prev ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized7
   (reg_3_8,
    \rddata_out_reg[7] ,
    \rddata_out_reg[10] ,
    q_reg,
    coreclk,
    \addr_reg_reg[4] ,
    \q_reg[0]_0 ,
    \addr_reg_reg[15] ,
    \addr_reg_reg[0] ,
    \addr_reg_reg[8] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[7] ,
    \q_reg[7] );
  output [0:0]reg_3_8;
  output \rddata_out_reg[7] ;
  output \rddata_out_reg[10] ;
  input q_reg;
  input coreclk;
  input \addr_reg_reg[4] ;
  input \q_reg[0]_0 ;
  input \addr_reg_reg[15] ;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[8] ;
  input \addr_reg_reg[2] ;
  input [4:0]\addr_reg_reg[7] ;
  input \q_reg[7] ;

  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[15] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[4] ;
  wire [4:0]\addr_reg_reg[7] ;
  wire \addr_reg_reg[8] ;
  wire coreclk;
  wire q_reg;
  wire \q_reg[0]_0 ;
  wire \q_reg[7] ;
  wire \rddata_out[7]_i_3_n_0 ;
  wire \rddata_out_reg[10] ;
  wire \rddata_out_reg[7] ;
  wire [0:0]reg_3_8;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(reg_3_8),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h3FFFFFF1)) 
    \rddata_out[10]_i_4 
       (.I0(reg_3_8),
        .I1(\addr_reg_reg[7] [2]),
        .I2(\addr_reg_reg[7] [1]),
        .I3(\addr_reg_reg[7] [4]),
        .I4(\addr_reg_reg[7] [3]),
        .O(\rddata_out_reg[10] ));
  LUT6 #(
    .INIT(64'h000D000D000DFFFF)) 
    \rddata_out[7]_i_1 
       (.I0(\addr_reg_reg[4] ),
        .I1(\rddata_out[7]_i_3_n_0 ),
        .I2(\q_reg[0]_0 ),
        .I3(\addr_reg_reg[15] ),
        .I4(\addr_reg_reg[0] ),
        .I5(\addr_reg_reg[8] ),
        .O(\rddata_out_reg[7] ));
  LUT6 #(
    .INIT(64'h00000000FF040004)) 
    \rddata_out[7]_i_3 
       (.I0(\addr_reg_reg[2] ),
        .I1(reg_3_8),
        .I2(\addr_reg_reg[7] [0]),
        .I3(\addr_reg_reg[7] [2]),
        .I4(\q_reg[7] ),
        .I5(\addr_reg_reg[7] [1]),
        .O(\rddata_out[7]_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized8
   (reg_3_33_re,
    SR,
    \q_reg[7] ,
    \q_reg[0]_0 ,
    re_prev_reg_0,
    \rddata_out_reg[15] ,
    coreclk,
    data_out_reg,
    reg_3_32_0,
    reg_3_32_1,
    reg_3_33,
    \addr_reg_reg[19] ,
    \state_reg[1] ,
    \addr_reg_reg[15] ,
    \state_reg[2] ,
    \addr_reg_reg[17] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[4] ,
    Q,
    pseudo_rand_seeds_int,
    \addr_reg_reg[14] );
  output reg_3_33_re;
  output [0:0]SR;
  output [0:0]\q_reg[7] ;
  output \q_reg[0]_0 ;
  output re_prev_reg_0;
  output \rddata_out_reg[15] ;
  input coreclk;
  input data_out_reg;
  input reg_3_32_0;
  input reg_3_32_1;
  input [0:0]reg_3_33;
  input \addr_reg_reg[19] ;
  input \state_reg[1] ;
  input \addr_reg_reg[15] ;
  input \state_reg[2] ;
  input [5:0]\addr_reg_reg[17] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[4] ;
  input [0:0]Q;
  input [0:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[14] ;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[14] ;
  wire \addr_reg_reg[15] ;
  wire [5:0]\addr_reg_reg[17] ;
  wire \addr_reg_reg[19] ;
  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[4] ;
  wire coreclk;
  wire data_out_reg;
  wire [0:0]pseudo_rand_seeds_int;
  wire q0;
  wire \q[0]_i_1__18_n_0 ;
  wire \q_reg[0]_0 ;
  wire [0:0]\q_reg[7] ;
  wire \rddata_out_reg[15] ;
  wire re_prev_reg_0;
  wire reg_3_32_0;
  wire reg_3_32_1;
  wire [0:0]reg_3_33;
  wire \reg_3_33_7_0/re_prev ;
  wire reg_3_33_re;
  wire \state_reg[1] ;
  wire \state_reg[2] ;

  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'h2020F020)) 
    \q[0]_i_1__18 
       (.I0(reg_3_33_re),
        .I1(\reg_3_33_7_0/re_prev ),
        .I2(reg_3_32_0),
        .I3(q0),
        .I4(data_out_reg),
        .O(\q[0]_i_1__18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h20FD20F0)) 
    \q[0]_i_1__19 
       (.I0(reg_3_33_re),
        .I1(\reg_3_33_7_0/re_prev ),
        .I2(reg_3_32_1),
        .I3(data_out_reg),
        .I4(reg_3_33),
        .O(\q_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \q[15]_i_3__2 
       (.I0(\addr_reg_reg[14] ),
        .I1(\addr_reg_reg[17] [3]),
        .I2(\addr_reg_reg[17] [1]),
        .I3(\addr_reg_reg[17] [4]),
        .I4(\addr_reg_reg[17] [5]),
        .O(re_prev_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hF2)) 
    \q[5]_i_1__9 
       (.I0(reg_3_33_re),
        .I1(\reg_3_33_7_0/re_prev ),
        .I2(data_out_reg),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hF2)) 
    \q[7]_i_1__8 
       (.I0(reg_3_33_re),
        .I1(\reg_3_33_7_0/re_prev ),
        .I2(data_out_reg),
        .O(\q_reg[7] ));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\q[0]_i_1__18_n_0 ),
        .Q(q0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF444F4F4F4444444)) 
    \rddata_out[15]_i_14 
       (.I0(\addr_reg_reg[2] ),
        .I1(q0),
        .I2(\addr_reg_reg[4] ),
        .I3(Q),
        .I4(\addr_reg_reg[17] [2]),
        .I5(pseudo_rand_seeds_int),
        .O(\rddata_out_reg[15] ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    re_prev_i_1__1
       (.I0(re_prev_reg_0),
        .I1(\addr_reg_reg[19] ),
        .I2(\state_reg[1] ),
        .I3(\addr_reg_reg[15] ),
        .I4(\state_reg[2] ),
        .I5(\addr_reg_reg[17] [0]),
        .O(reg_3_33_re));
  FDRE re_prev_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reg_3_33_re),
        .Q(\reg_3_33_7_0/re_prev ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_register" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_register__parameterized9
   (reg_3_33,
    \rddata_out_reg[14] ,
    re_prev_reg,
    coreclk,
    \addr_reg_reg[5] ,
    \addr_reg_reg[2] ,
    \addr_reg_reg[3] ,
    pseudo_rand_seeds_int,
    \addr_reg_reg[2]_0 );
  output [0:0]reg_3_33;
  output \rddata_out_reg[14] ;
  input re_prev_reg;
  input coreclk;
  input \addr_reg_reg[5] ;
  input \addr_reg_reg[2] ;
  input \addr_reg_reg[3] ;
  input [0:0]pseudo_rand_seeds_int;
  input \addr_reg_reg[2]_0 ;

  wire \addr_reg_reg[2] ;
  wire \addr_reg_reg[2]_0 ;
  wire \addr_reg_reg[3] ;
  wire \addr_reg_reg[5] ;
  wire coreclk;
  wire [0:0]pseudo_rand_seeds_int;
  wire \rddata_out_reg[14] ;
  wire re_prev_reg;
  wire [0:0]reg_3_33;

  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(re_prev_reg),
        .Q(reg_3_33),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h20AA2020AAAAAAAA)) 
    \rddata_out[14]_i_4 
       (.I0(\addr_reg_reg[5] ),
        .I1(\addr_reg_reg[2] ),
        .I2(reg_3_33),
        .I3(\addr_reg_reg[3] ),
        .I4(pseudo_rand_seeds_int),
        .I5(\addr_reg_reg[2]_0 ),
        .O(\rddata_out_reg[14] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_resyncs" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs
   (core_status,
    pcs_hi_ber_core_int,
    pcs_rx_link_up_core_sync_int,
    b_lock,
    hiber,
    pcs_rx_link_up_core_reg,
    coreclk);
  output [0:0]core_status;
  output pcs_hi_ber_core_int;
  output pcs_rx_link_up_core_sync_int;
  input b_lock;
  input hiber;
  input pcs_rx_link_up_core_reg;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  wire hiber;
  wire pcs_hi_ber_core_int;
  wire pcs_rx_link_up_core_reg;
  wire pcs_rx_link_up_core_sync_int;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_26 \resynch[0].synch_inst 
       (.b_lock(b_lock),
        .core_status(core_status),
        .coreclk(coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_27 \resynch[1].synch_inst 
       (.coreclk(coreclk),
        .hiber(hiber),
        .pcs_hi_ber_core_int(pcs_hi_ber_core_int));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_28 \resynch[2].synch_inst 
       (.coreclk(coreclk),
        .pcs_rx_link_up_core_reg(pcs_rx_link_up_core_reg),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_resyncs" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs__parameterized0
   (tx_prbs31_en,
    sel0,
    prbs31_tx_enable_core_reg,
    pcs_loopback_core_int,
    txusrclk2);
  output tx_prbs31_en;
  output [0:0]sel0;
  input prbs31_tx_enable_core_reg;
  input pcs_loopback_core_int;
  input txusrclk2;

  wire pcs_loopback_core_int;
  wire prbs31_tx_enable_core_reg;
  wire [0:0]sel0;
  wire tx_prbs31_en;
  wire txusrclk2;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_45 \resynch[0].synch_inst 
       (.prbs31_tx_enable_core_reg(prbs31_tx_enable_core_reg),
        .tx_prbs31_en(tx_prbs31_en),
        .txusrclk2(txusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_46 \resynch[1].synch_inst 
       (.pcs_loopback_core_int(pcs_loopback_core_int),
        .sel0(sel0),
        .txusrclk2(txusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_g_resyncs_en" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_g_resyncs_en
   (clear_test_pattern_error_count,
    rxusrclk2,
    clear_test_pattern_err_count_reg,
    E);
  output clear_test_pattern_error_count;
  input rxusrclk2;
  input clear_test_pattern_err_count_reg;
  input [0:0]E;

  wire [0:0]E;
  wire clear_test_pattern_err_count_reg;
  wire clear_test_pattern_error_count;
  wire rxusrclk2;

  (* KEEP_HIERARCHY = "true" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable \resynch[0].synch_inst 
       (.clk(rxusrclk2),
        .d(clear_test_pattern_err_count_reg),
        .en(E),
        .q(clear_test_pattern_error_count));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_idle_delete" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_delete
   (\wr_addr_reg[4] ,
    wr_data,
    comp_0,
    comp_1,
    comp_2,
    comp_3,
    comp_4,
    comp_5,
    comp_6,
    comp_7,
    comp_8,
    comp_0_0,
    comp_1_1,
    comp_2_2,
    comp_3_3,
    comp_4_4,
    comp_5_5,
    comp_6_6,
    comp_7_7,
    comp_8_8,
    comp_0_9,
    comp_1_10,
    comp_2_11,
    comp_0_12,
    comp_1_13,
    comp_2_14,
    rxreset_rxusrclk2,
    eq_rxusrclk2_en156_reg,
    rxusrclk2,
    Q,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    status);
  output \wr_addr_reg[4] ;
  output [73:0]wr_data;
  input comp_0;
  input comp_1;
  input comp_2;
  input comp_3;
  input comp_4;
  input comp_5;
  input comp_6;
  input comp_7;
  input comp_8;
  input comp_0_0;
  input comp_1_1;
  input comp_2_2;
  input comp_3_3;
  input comp_4_4;
  input comp_5_5;
  input comp_6_6;
  input comp_7_7;
  input comp_8_8;
  input comp_0_9;
  input comp_1_10;
  input comp_2_11;
  input comp_0_12;
  input comp_1_13;
  input comp_2_14;
  input rxreset_rxusrclk2;
  input eq_rxusrclk2_en156_reg;
  input rxusrclk2;
  input [63:0]Q;
  input [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  input [0:0]status;

  wire [63:0]Q;
  wire comp_0;
  wire comp_0_0;
  wire comp_0_12;
  wire comp_0_9;
  wire comp_1;
  wire comp_1_1;
  wire comp_1_10;
  wire comp_1_13;
  wire comp_2;
  wire comp_2_11;
  wire comp_2_14;
  wire comp_2_2;
  wire comp_3;
  wire comp_3_3;
  wire comp_4;
  wire comp_4_4;
  wire comp_5;
  wire comp_5_5;
  wire comp_6;
  wire comp_6_6;
  wire comp_7;
  wire comp_7_7;
  wire comp_8;
  wire comp_8_8;
  wire eq_rxusrclk2_en156_reg;
  wire [1:0]input_is_idle_comb;
  wire [1:0]input_is_seq_comb;
  wire [7:4]mcp1_ctrl_delay;
  wire [7:0]mcp1_ctrl_pipe;
  wire [63:32]mcp1_data_delay;
  wire [63:0]mcp1_data_pipe;
  wire \mcp1_fifo_cc_seq_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_cc_seq_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[0]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[10]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[11]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[12]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[13]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[14]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[15]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[16]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[17]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[18]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[19]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[1]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[20]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[21]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[22]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[23]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[24]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[25]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[26]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[27]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[28]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[29]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[2]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[30]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[31]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[31]_i_2_n_0 ;
  wire \mcp1_fifo_data_out[32]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[33]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[34]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[35]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[36]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[37]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[38]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[39]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[3]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[40]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[41]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[42]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[43]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[44]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[45]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[46]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[47]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[48]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[49]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[4]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[50]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[51]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[52]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[53]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[54]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[55]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[56]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[57]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[58]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[59]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[5]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[60]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[61]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[62]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_2_n_0 ;
  wire \mcp1_fifo_data_out[63]_i_3_n_0 ;
  wire \mcp1_fifo_data_out[6]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[7]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[8]_i_1_n_0 ;
  wire \mcp1_fifo_data_out[9]_i_1_n_0 ;
  wire \mcp1_input_is_idle_reg_n_0_[0] ;
  wire \mcp1_input_is_idle_reg_n_0_[1] ;
  wire [1:0]mcp1_input_is_seq_or_idle;
  wire \mcp1_input_is_seq_or_idle[0]_i_1_n_0 ;
  wire \mcp1_input_is_seq_or_idle[1]_i_1_n_0 ;
  wire \mcp1_input_is_seq_reg_n_0_[0] ;
  wire \mcp1_input_is_seq_reg_n_0_[1] ;
  wire mcp1_input_was_idle;
  wire mcp1_input_was_seq;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [2:0]mcp1_state;
  wire \mcp1_state[1]_i_2_n_0 ;
  wire \mcp1_state[2]_i_2_n_0 ;
  wire \mcp1_state[2]_i_3_n_0 ;
  wire \mcp1_state[2]_i_4_n_0 ;
  wire [2:0]next_state;
  wire p_0_in;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire [0:0]status;
  wire \wr_addr_reg[4] ;
  wire [73:0]wr_data;

  LUT3 #(
    .INIT(8'hEB)) 
    asynch_fifo_i_i_1__0
       (.I0(mcp1_state[2]),
        .I1(mcp1_state[1]),
        .I2(mcp1_state[0]),
        .O(\wr_addr_reg[4] ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_detect idle_detect_i0
       (.D(input_is_idle_comb[0]),
        .comp_0(comp_0),
        .comp_1(comp_1),
        .comp_2(comp_2),
        .comp_3(comp_3),
        .comp_4(comp_4),
        .comp_5(comp_5),
        .comp_6(comp_6),
        .comp_7(comp_7),
        .comp_8(comp_8));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_detect_43 idle_detect_i1
       (.D(input_is_idle_comb[1]),
        .comp_0_0(comp_0_0),
        .comp_1_1(comp_1_1),
        .comp_2_2(comp_2_2),
        .comp_3_3(comp_3_3),
        .comp_4_4(comp_4_4),
        .comp_5_5(comp_5_5),
        .comp_6_6(comp_6_6),
        .comp_7_7(comp_7_7),
        .comp_8_8(comp_8_8));
  FDSE \mcp1_ctrl_delay_reg[4] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_ctrl_pipe[4]),
        .Q(mcp1_ctrl_delay[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[5] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_ctrl_pipe[5]),
        .Q(mcp1_ctrl_delay[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[6] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_ctrl_pipe[6]),
        .Q(mcp1_ctrl_delay[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_delay_reg[7] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_ctrl_pipe[7]),
        .Q(mcp1_ctrl_delay[7]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [0]),
        .Q(mcp1_ctrl_pipe[0]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [1]),
        .Q(mcp1_ctrl_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [2]),
        .Q(mcp1_ctrl_pipe[2]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [3]),
        .Q(mcp1_ctrl_pipe[3]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_ctrl_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [4]),
        .Q(mcp1_ctrl_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [5]),
        .Q(mcp1_ctrl_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [6]),
        .Q(mcp1_ctrl_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_ctrl_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_rx_ebuff_ctrl_reg[7] [7]),
        .Q(mcp1_ctrl_pipe[7]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[32] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[32]),
        .Q(mcp1_data_delay[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[33] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[33]),
        .Q(mcp1_data_delay[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[34] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[34]),
        .Q(mcp1_data_delay[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[35] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[35]),
        .Q(mcp1_data_delay[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[36] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[36]),
        .Q(mcp1_data_delay[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[37] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[37]),
        .Q(mcp1_data_delay[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[38] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[38]),
        .Q(mcp1_data_delay[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[39] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[39]),
        .Q(mcp1_data_delay[39]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[40] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[40]),
        .Q(mcp1_data_delay[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[41] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[41]),
        .Q(mcp1_data_delay[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[42] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[42]),
        .Q(mcp1_data_delay[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[43] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[43]),
        .Q(mcp1_data_delay[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[44] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[44]),
        .Q(mcp1_data_delay[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[45] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[45]),
        .Q(mcp1_data_delay[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[46] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[46]),
        .Q(mcp1_data_delay[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[47] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[47]),
        .Q(mcp1_data_delay[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[48] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[48]),
        .Q(mcp1_data_delay[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[49] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[49]),
        .Q(mcp1_data_delay[49]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[50] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[50]),
        .Q(mcp1_data_delay[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[51] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[51]),
        .Q(mcp1_data_delay[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[52] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[52]),
        .Q(mcp1_data_delay[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[53] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[53]),
        .Q(mcp1_data_delay[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[54] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[54]),
        .Q(mcp1_data_delay[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[55] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[55]),
        .Q(mcp1_data_delay[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_delay_reg[56] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[56]),
        .Q(mcp1_data_delay[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[57] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[57]),
        .Q(mcp1_data_delay[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[58] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[58]),
        .Q(mcp1_data_delay[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[59] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[59]),
        .Q(mcp1_data_delay[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[60] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[60]),
        .Q(mcp1_data_delay[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[61] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[61]),
        .Q(mcp1_data_delay[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[62] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[62]),
        .Q(mcp1_data_delay[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_delay_reg[63] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_data_pipe[63]),
        .Q(mcp1_data_delay[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[0]),
        .Q(mcp1_data_pipe[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[10] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[10]),
        .Q(mcp1_data_pipe[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[11] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[11]),
        .Q(mcp1_data_pipe[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[12] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[12]),
        .Q(mcp1_data_pipe[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[13] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[13]),
        .Q(mcp1_data_pipe[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[14] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[14]),
        .Q(mcp1_data_pipe[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[15] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[15]),
        .Q(mcp1_data_pipe[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[16] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[16]),
        .Q(mcp1_data_pipe[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[17] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[17]),
        .Q(mcp1_data_pipe[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[18] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[18]),
        .Q(mcp1_data_pipe[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[19] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[19]),
        .Q(mcp1_data_pipe[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[1]),
        .Q(mcp1_data_pipe[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[20] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[20]),
        .Q(mcp1_data_pipe[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[21] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[21]),
        .Q(mcp1_data_pipe[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[22] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[22]),
        .Q(mcp1_data_pipe[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[23] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[23]),
        .Q(mcp1_data_pipe[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[24] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[24]),
        .Q(mcp1_data_pipe[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[25] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[25]),
        .Q(mcp1_data_pipe[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[26] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[26]),
        .Q(mcp1_data_pipe[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[27] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[27]),
        .Q(mcp1_data_pipe[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[28] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[28]),
        .Q(mcp1_data_pipe[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[29] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[29]),
        .Q(mcp1_data_pipe[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[2] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[2]),
        .Q(mcp1_data_pipe[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[30] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[30]),
        .Q(mcp1_data_pipe[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[31] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[31]),
        .Q(mcp1_data_pipe[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[32] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[32]),
        .Q(mcp1_data_pipe[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[33] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[33]),
        .Q(mcp1_data_pipe[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[34] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[34]),
        .Q(mcp1_data_pipe[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[35] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[35]),
        .Q(mcp1_data_pipe[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[36] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[36]),
        .Q(mcp1_data_pipe[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[37] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[37]),
        .Q(mcp1_data_pipe[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[38] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[38]),
        .Q(mcp1_data_pipe[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[39] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[39]),
        .Q(mcp1_data_pipe[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[3] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[3]),
        .Q(mcp1_data_pipe[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[40] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[40]),
        .Q(mcp1_data_pipe[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[41] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[41]),
        .Q(mcp1_data_pipe[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[42] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[42]),
        .Q(mcp1_data_pipe[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[43] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[43]),
        .Q(mcp1_data_pipe[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[44] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[44]),
        .Q(mcp1_data_pipe[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[45] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[45]),
        .Q(mcp1_data_pipe[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[46] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[46]),
        .Q(mcp1_data_pipe[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[47] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[47]),
        .Q(mcp1_data_pipe[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[48] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[48]),
        .Q(mcp1_data_pipe[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[49] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[49]),
        .Q(mcp1_data_pipe[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[4] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[4]),
        .Q(mcp1_data_pipe[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[50] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[50]),
        .Q(mcp1_data_pipe[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[51] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[51]),
        .Q(mcp1_data_pipe[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[52] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[52]),
        .Q(mcp1_data_pipe[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[53] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[53]),
        .Q(mcp1_data_pipe[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[54] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[54]),
        .Q(mcp1_data_pipe[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[55] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[55]),
        .Q(mcp1_data_pipe[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[56] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[56]),
        .Q(mcp1_data_pipe[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[57] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[57]),
        .Q(mcp1_data_pipe[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[58] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[58]),
        .Q(mcp1_data_pipe[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[59] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[59]),
        .Q(mcp1_data_pipe[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[5] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[5]),
        .Q(mcp1_data_pipe[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[60] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[60]),
        .Q(mcp1_data_pipe[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[61] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[61]),
        .Q(mcp1_data_pipe[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[62] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[62]),
        .Q(mcp1_data_pipe[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[63] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[63]),
        .Q(mcp1_data_pipe[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[6] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[6]),
        .Q(mcp1_data_pipe[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_data_pipe_reg[7] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[7]),
        .Q(mcp1_data_pipe[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[8] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[8]),
        .Q(mcp1_data_pipe[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_data_pipe_reg[9] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(Q[9]),
        .Q(mcp1_data_pipe[9]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_cc_seq_out[0]_i_1 
       (.I0(mcp1_input_is_seq_or_idle[0]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(p_0_in),
        .O(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_cc_seq_out[1]_i_1 
       (.I0(mcp1_input_is_seq_or_idle[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_input_is_seq_or_idle[1]),
        .O(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ));
  FDRE \mcp1_fifo_cc_seq_out_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_cc_seq_out[0]_i_1_n_0 ),
        .Q(wr_data[72]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_cc_seq_out_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_cc_seq_out[1]_i_1_n_0 ),
        .Q(wr_data[73]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[0]_i_1 
       (.I0(mcp1_ctrl_pipe[0]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_ctrl_delay[4]),
        .O(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[1]_i_1 
       (.I0(mcp1_ctrl_pipe[1]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_ctrl_delay[5]),
        .O(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[2]_i_1 
       (.I0(mcp1_ctrl_pipe[2]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_ctrl_delay[6]),
        .O(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[3]_i_1 
       (.I0(mcp1_ctrl_pipe[3]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_ctrl_delay[7]),
        .O(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[4]_i_1 
       (.I0(mcp1_ctrl_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[4]),
        .O(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[5]_i_1 
       (.I0(mcp1_ctrl_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[5]),
        .O(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[6]_i_1 
       (.I0(mcp1_ctrl_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[6]),
        .O(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_ctrl_out[7]_i_1 
       (.I0(mcp1_ctrl_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_ctrl_pipe[7]),
        .O(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_fifo_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[0]_i_1_n_0 ),
        .Q(wr_data[64]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[1]_i_1_n_0 ),
        .Q(wr_data[65]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[2]_i_1_n_0 ),
        .Q(wr_data[66]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[3]_i_1_n_0 ),
        .Q(wr_data[67]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[4]_i_1_n_0 ),
        .Q(wr_data[68]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[5]_i_1_n_0 ),
        .Q(wr_data[69]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[6]_i_1_n_0 ),
        .Q(wr_data[70]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_ctrl_out[7]_i_1_n_0 ),
        .Q(wr_data[71]),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[0]_i_1 
       (.I0(mcp1_data_pipe[0]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[32]),
        .O(\mcp1_fifo_data_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[10]_i_1 
       (.I0(mcp1_data_pipe[10]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[42]),
        .O(\mcp1_fifo_data_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[11]_i_1 
       (.I0(mcp1_data_pipe[11]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[43]),
        .O(\mcp1_fifo_data_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[12]_i_1 
       (.I0(mcp1_data_pipe[12]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[44]),
        .O(\mcp1_fifo_data_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[13]_i_1 
       (.I0(mcp1_data_pipe[13]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[45]),
        .O(\mcp1_fifo_data_out[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[14]_i_1 
       (.I0(mcp1_data_pipe[14]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[46]),
        .O(\mcp1_fifo_data_out[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[15]_i_1 
       (.I0(mcp1_data_pipe[15]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[47]),
        .O(\mcp1_fifo_data_out[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[16]_i_1 
       (.I0(mcp1_data_pipe[16]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[48]),
        .O(\mcp1_fifo_data_out[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[17]_i_1 
       (.I0(mcp1_data_pipe[17]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[49]),
        .O(\mcp1_fifo_data_out[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[18]_i_1 
       (.I0(mcp1_data_pipe[18]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[50]),
        .O(\mcp1_fifo_data_out[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[19]_i_1 
       (.I0(mcp1_data_pipe[19]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[51]),
        .O(\mcp1_fifo_data_out[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[1]_i_1 
       (.I0(mcp1_data_pipe[1]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[33]),
        .O(\mcp1_fifo_data_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[20]_i_1 
       (.I0(mcp1_data_pipe[20]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[52]),
        .O(\mcp1_fifo_data_out[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[21]_i_1 
       (.I0(mcp1_data_pipe[21]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[53]),
        .O(\mcp1_fifo_data_out[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[22]_i_1 
       (.I0(mcp1_data_pipe[22]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[54]),
        .O(\mcp1_fifo_data_out[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[23]_i_1 
       (.I0(mcp1_data_pipe[23]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[55]),
        .O(\mcp1_fifo_data_out[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[24]_i_1 
       (.I0(mcp1_data_pipe[24]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[56]),
        .O(\mcp1_fifo_data_out[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[25]_i_1 
       (.I0(mcp1_data_pipe[25]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[57]),
        .O(\mcp1_fifo_data_out[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[26]_i_1 
       (.I0(mcp1_data_pipe[26]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[58]),
        .O(\mcp1_fifo_data_out[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[27]_i_1 
       (.I0(mcp1_data_pipe[27]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[59]),
        .O(\mcp1_fifo_data_out[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[28]_i_1 
       (.I0(mcp1_data_pipe[28]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[60]),
        .O(\mcp1_fifo_data_out[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[29]_i_1 
       (.I0(mcp1_data_pipe[29]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[61]),
        .O(\mcp1_fifo_data_out[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[2]_i_1 
       (.I0(mcp1_data_pipe[2]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[34]),
        .O(\mcp1_fifo_data_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[30]_i_1 
       (.I0(mcp1_data_pipe[30]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[62]),
        .O(\mcp1_fifo_data_out[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[31]_i_1 
       (.I0(mcp1_data_pipe[31]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[63]),
        .O(\mcp1_fifo_data_out[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEE99999111)) 
    \mcp1_fifo_data_out[31]_i_2 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[0]),
        .I2(mcp1_input_was_idle),
        .I3(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I4(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .I5(mcp1_state[2]),
        .O(\mcp1_fifo_data_out[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[32]_i_1 
       (.I0(mcp1_data_pipe[0]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[32]),
        .O(\mcp1_fifo_data_out[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[33]_i_1 
       (.I0(mcp1_data_pipe[1]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[33]),
        .O(\mcp1_fifo_data_out[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[34]_i_1 
       (.I0(mcp1_data_pipe[2]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[34]),
        .O(\mcp1_fifo_data_out[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[35]_i_1 
       (.I0(mcp1_data_pipe[3]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[35]),
        .O(\mcp1_fifo_data_out[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[36]_i_1 
       (.I0(mcp1_data_pipe[4]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[36]),
        .O(\mcp1_fifo_data_out[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[37]_i_1 
       (.I0(mcp1_data_pipe[5]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[37]),
        .O(\mcp1_fifo_data_out[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[38]_i_1 
       (.I0(mcp1_data_pipe[6]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[38]),
        .O(\mcp1_fifo_data_out[38]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[39]_i_1 
       (.I0(mcp1_data_pipe[7]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[39]),
        .O(\mcp1_fifo_data_out[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[3]_i_1 
       (.I0(mcp1_data_pipe[3]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[35]),
        .O(\mcp1_fifo_data_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[40]_i_1 
       (.I0(mcp1_data_pipe[8]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[40]),
        .O(\mcp1_fifo_data_out[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[41]_i_1 
       (.I0(mcp1_data_pipe[9]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[41]),
        .O(\mcp1_fifo_data_out[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[42]_i_1 
       (.I0(mcp1_data_pipe[10]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[42]),
        .O(\mcp1_fifo_data_out[42]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[43]_i_1 
       (.I0(mcp1_data_pipe[11]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[43]),
        .O(\mcp1_fifo_data_out[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[44]_i_1 
       (.I0(mcp1_data_pipe[12]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[44]),
        .O(\mcp1_fifo_data_out[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[45]_i_1 
       (.I0(mcp1_data_pipe[13]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[45]),
        .O(\mcp1_fifo_data_out[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[46]_i_1 
       (.I0(mcp1_data_pipe[14]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[46]),
        .O(\mcp1_fifo_data_out[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[47]_i_1 
       (.I0(mcp1_data_pipe[15]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[47]),
        .O(\mcp1_fifo_data_out[47]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[48]_i_1 
       (.I0(mcp1_data_pipe[16]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[48]),
        .O(\mcp1_fifo_data_out[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[49]_i_1 
       (.I0(mcp1_data_pipe[17]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[49]),
        .O(\mcp1_fifo_data_out[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[4]_i_1 
       (.I0(mcp1_data_pipe[4]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[36]),
        .O(\mcp1_fifo_data_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[50]_i_1 
       (.I0(mcp1_data_pipe[18]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[50]),
        .O(\mcp1_fifo_data_out[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[51]_i_1 
       (.I0(mcp1_data_pipe[19]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[51]),
        .O(\mcp1_fifo_data_out[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[52]_i_1 
       (.I0(mcp1_data_pipe[20]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[52]),
        .O(\mcp1_fifo_data_out[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[53]_i_1 
       (.I0(mcp1_data_pipe[21]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[53]),
        .O(\mcp1_fifo_data_out[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[54]_i_1 
       (.I0(mcp1_data_pipe[22]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[54]),
        .O(\mcp1_fifo_data_out[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[55]_i_1 
       (.I0(mcp1_data_pipe[23]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[55]),
        .O(\mcp1_fifo_data_out[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[56]_i_1 
       (.I0(mcp1_data_pipe[24]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[56]),
        .O(\mcp1_fifo_data_out[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[57]_i_1 
       (.I0(mcp1_data_pipe[25]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[57]),
        .O(\mcp1_fifo_data_out[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[58]_i_1 
       (.I0(mcp1_data_pipe[26]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[58]),
        .O(\mcp1_fifo_data_out[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[59]_i_1 
       (.I0(mcp1_data_pipe[27]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[59]),
        .O(\mcp1_fifo_data_out[59]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[5]_i_1 
       (.I0(mcp1_data_pipe[5]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[37]),
        .O(\mcp1_fifo_data_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[60]_i_1 
       (.I0(mcp1_data_pipe[28]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[60]),
        .O(\mcp1_fifo_data_out[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[61]_i_1 
       (.I0(mcp1_data_pipe[29]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[61]),
        .O(\mcp1_fifo_data_out[61]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[62]_i_1 
       (.I0(mcp1_data_pipe[30]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[62]),
        .O(\mcp1_fifo_data_out[62]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[63]_i_1 
       (.I0(mcp1_data_pipe[31]),
        .I1(\mcp1_fifo_data_out[63]_i_2_n_0 ),
        .I2(mcp1_data_pipe[63]),
        .O(\mcp1_fifo_data_out[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000007FF00FFFF00)) 
    \mcp1_fifo_data_out[63]_i_2 
       (.I0(mcp1_input_was_idle),
        .I1(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I2(\mcp1_fifo_data_out[63]_i_3_n_0 ),
        .I3(mcp1_state[1]),
        .I4(mcp1_state[2]),
        .I5(mcp1_state[0]),
        .O(\mcp1_fifo_data_out[63]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_fifo_data_out[63]_i_3 
       (.I0(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I1(mcp1_input_was_seq),
        .O(\mcp1_fifo_data_out[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[6]_i_1 
       (.I0(mcp1_data_pipe[6]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[38]),
        .O(\mcp1_fifo_data_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[7]_i_1 
       (.I0(mcp1_data_pipe[7]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[39]),
        .O(\mcp1_fifo_data_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[8]_i_1 
       (.I0(mcp1_data_pipe[8]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[40]),
        .O(\mcp1_fifo_data_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_fifo_data_out[9]_i_1 
       (.I0(mcp1_data_pipe[9]),
        .I1(\mcp1_fifo_data_out[31]_i_2_n_0 ),
        .I2(mcp1_data_delay[41]),
        .O(\mcp1_fifo_data_out[9]_i_1_n_0 ));
  FDRE \mcp1_fifo_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[0]_i_1_n_0 ),
        .Q(wr_data[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[10]_i_1_n_0 ),
        .Q(wr_data[10]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[11]_i_1_n_0 ),
        .Q(wr_data[11]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[12]_i_1_n_0 ),
        .Q(wr_data[12]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[13]_i_1_n_0 ),
        .Q(wr_data[13]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[14]_i_1_n_0 ),
        .Q(wr_data[14]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[15]_i_1_n_0 ),
        .Q(wr_data[15]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[16]_i_1_n_0 ),
        .Q(wr_data[16]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[17]_i_1_n_0 ),
        .Q(wr_data[17]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[18]_i_1_n_0 ),
        .Q(wr_data[18]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[19]_i_1_n_0 ),
        .Q(wr_data[19]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[1]_i_1_n_0 ),
        .Q(wr_data[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[20]_i_1_n_0 ),
        .Q(wr_data[20]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[21]_i_1_n_0 ),
        .Q(wr_data[21]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[22]_i_1_n_0 ),
        .Q(wr_data[22]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[23]_i_1_n_0 ),
        .Q(wr_data[23]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[24]_i_1_n_0 ),
        .Q(wr_data[24]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[25]_i_1_n_0 ),
        .Q(wr_data[25]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[26]_i_1_n_0 ),
        .Q(wr_data[26]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[27]_i_1_n_0 ),
        .Q(wr_data[27]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[28]_i_1_n_0 ),
        .Q(wr_data[28]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[29]_i_1_n_0 ),
        .Q(wr_data[29]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[2]_i_1_n_0 ),
        .Q(wr_data[2]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[30]_i_1_n_0 ),
        .Q(wr_data[30]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[31]_i_1_n_0 ),
        .Q(wr_data[31]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[32]_i_1_n_0 ),
        .Q(wr_data[32]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[33]_i_1_n_0 ),
        .Q(wr_data[33]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[34]_i_1_n_0 ),
        .Q(wr_data[34]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[35]_i_1_n_0 ),
        .Q(wr_data[35]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[36]_i_1_n_0 ),
        .Q(wr_data[36]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[37]_i_1_n_0 ),
        .Q(wr_data[37]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[38]_i_1_n_0 ),
        .Q(wr_data[38]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[39]_i_1_n_0 ),
        .Q(wr_data[39]),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[3]_i_1_n_0 ),
        .Q(wr_data[3]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[40]_i_1_n_0 ),
        .Q(wr_data[40]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[41]_i_1_n_0 ),
        .Q(wr_data[41]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[42]_i_1_n_0 ),
        .Q(wr_data[42]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[43]_i_1_n_0 ),
        .Q(wr_data[43]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[44]_i_1_n_0 ),
        .Q(wr_data[44]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[45]_i_1_n_0 ),
        .Q(wr_data[45]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[46]_i_1_n_0 ),
        .Q(wr_data[46]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[47]_i_1_n_0 ),
        .Q(wr_data[47]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[48]_i_1_n_0 ),
        .Q(wr_data[48]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[49]_i_1_n_0 ),
        .Q(wr_data[49]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[4]_i_1_n_0 ),
        .Q(wr_data[4]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[50]_i_1_n_0 ),
        .Q(wr_data[50]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[51]_i_1_n_0 ),
        .Q(wr_data[51]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[52]_i_1_n_0 ),
        .Q(wr_data[52]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[53]_i_1_n_0 ),
        .Q(wr_data[53]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[54]_i_1_n_0 ),
        .Q(wr_data[54]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[55]_i_1_n_0 ),
        .Q(wr_data[55]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[56]_i_1_n_0 ),
        .Q(wr_data[56]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[57]_i_1_n_0 ),
        .Q(wr_data[57]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[58]_i_1_n_0 ),
        .Q(wr_data[58]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[59]_i_1_n_0 ),
        .Q(wr_data[59]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[5]_i_1_n_0 ),
        .Q(wr_data[5]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[60]_i_1_n_0 ),
        .Q(wr_data[60]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[61]_i_1_n_0 ),
        .Q(wr_data[61]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[62]_i_1_n_0 ),
        .Q(wr_data[62]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[63]_i_1_n_0 ),
        .Q(wr_data[63]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[6]_i_1_n_0 ),
        .Q(wr_data[6]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_fifo_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[7]_i_1_n_0 ),
        .Q(wr_data[7]),
        .S(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[8]_i_1_n_0 ),
        .Q(wr_data[8]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_fifo_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_fifo_data_out[9]_i_1_n_0 ),
        .Q(wr_data[9]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(input_is_idle_comb[0]),
        .Q(\mcp1_input_is_idle_reg_n_0_[0] ),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(input_is_idle_comb[1]),
        .Q(\mcp1_input_is_idle_reg_n_0_[1] ),
        .R(rxreset_rxusrclk2));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[0]_i_1 
       (.I0(input_is_idle_comb[0]),
        .I1(input_is_seq_comb[0]),
        .O(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_input_is_seq_or_idle[1]_i_1 
       (.I0(input_is_idle_comb[1]),
        .I1(input_is_seq_comb[1]),
        .O(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ));
  FDRE \mcp1_input_is_seq_or_idle_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_input_is_seq_or_idle[0]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_is_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_input_is_seq_or_idle[1]_i_1_n_0 ),
        .Q(mcp1_input_is_seq_or_idle[1]),
        .R(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(input_is_seq_comb[0]),
        .Q(\mcp1_input_is_seq_reg_n_0_[0] ),
        .S(rxreset_rxusrclk2));
  FDSE \mcp1_input_is_seq_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(input_is_seq_comb[1]),
        .Q(\mcp1_input_is_seq_reg_n_0_[1] ),
        .S(rxreset_rxusrclk2));
  FDRE mcp1_input_was_idle_reg
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_input_is_idle_reg_n_0_[1] ),
        .Q(mcp1_input_was_idle),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_input_was_seq_or_idle_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(mcp1_input_is_seq_or_idle[1]),
        .Q(p_0_in),
        .R(rxreset_rxusrclk2));
  FDRE mcp1_input_was_seq_reg
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(\mcp1_input_is_seq_reg_n_0_[1] ),
        .Q(mcp1_input_was_seq),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'hFF000F02FF000002)) 
    \mcp1_state[0]_i_1 
       (.I0(\mcp1_state[2]_i_3_n_0 ),
        .I1(\mcp1_state[2]_i_2_n_0 ),
        .I2(mcp1_state[1]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[0]),
        .I5(\mcp1_state[2]_i_4_n_0 ),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hFFFF000000AA0003)) 
    \mcp1_state[1]_i_1 
       (.I0(\mcp1_state[2]_i_4_n_0 ),
        .I1(\mcp1_state[1]_i_2_n_0 ),
        .I2(\mcp1_state[2]_i_3_n_0 ),
        .I3(mcp1_state[0]),
        .I4(mcp1_state[2]),
        .I5(mcp1_state[1]),
        .O(next_state[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_state[1]_i_2 
       (.I0(eq_rxusrclk2_en156_reg),
        .I1(status),
        .O(\mcp1_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFCFF0F0FFCFFAF0)) 
    \mcp1_state[2]_i_1 
       (.I0(\mcp1_state[2]_i_2_n_0 ),
        .I1(\mcp1_state[2]_i_3_n_0 ),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_state[2]_i_4_n_0 ),
        .O(next_state[2]));
  LUT6 #(
    .INIT(64'h77777FFF7FFF7FFF)) 
    \mcp1_state[2]_i_2 
       (.I0(status),
        .I1(eq_rxusrclk2_en156_reg),
        .I2(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I4(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I5(\mcp1_input_is_seq_reg_n_0_[1] ),
        .O(\mcp1_state[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0777)) 
    \mcp1_state[2]_i_3 
       (.I0(mcp1_input_was_idle),
        .I1(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I2(mcp1_input_was_seq),
        .I3(\mcp1_input_is_seq_reg_n_0_[0] ),
        .O(\mcp1_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0080888800800080)) 
    \mcp1_state[2]_i_4 
       (.I0(status),
        .I1(eq_rxusrclk2_en156_reg),
        .I2(\mcp1_input_is_idle_reg_n_0_[1] ),
        .I3(\mcp1_input_is_idle_reg_n_0_[0] ),
        .I4(\mcp1_input_is_seq_reg_n_0_[0] ),
        .I5(\mcp1_input_is_seq_reg_n_0_[1] ),
        .O(\mcp1_state[2]_i_4_n_0 ));
  FDRE \mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(next_state[0]),
        .Q(mcp1_state[0]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(next_state[1]),
        .Q(mcp1_state[1]),
        .R(rxreset_rxusrclk2));
  FDRE \mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(eq_rxusrclk2_en156_reg),
        .D(next_state[2]),
        .Q(mcp1_state[2]),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_seq_detect seq_detect_i0
       (.D(input_is_seq_comb[0]),
        .comp_0_9(comp_0_9),
        .comp_1_10(comp_1_10),
        .comp_2_11(comp_2_11));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_seq_detect_44 seq_detect_i1
       (.D(input_is_seq_comb[1]),
        .comp_0_12(comp_0_12),
        .comp_1_13(comp_1_13),
        .comp_2_14(comp_2_14));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_idle_detect" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_detect
   (D,
    comp_0,
    comp_1,
    comp_2,
    comp_3,
    comp_4,
    comp_5,
    comp_6,
    comp_7,
    comp_8);
  output [0:0]D;
  input comp_0;
  input comp_1;
  input comp_2;
  input comp_3;
  input comp_4;
  input comp_5;
  input comp_6;
  input comp_7;
  input comp_8;

  wire [0:0]D;
  wire comp_0;
  wire comp_1;
  wire comp_2;
  wire comp_3;
  wire comp_4;
  wire comp_5;
  wire comp_6;
  wire comp_7;
  wire comp_8;
  wire muxcyo_3;
  wire muxcyo_7;
  wire [2:0]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [2:0]NLW_muxcy_i4_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_muxcy_i4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i8_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({muxcyo_3,NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_3,comp_2,comp_1,comp_0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i4_CARRY4
       (.CI(muxcyo_3),
        .CO({muxcyo_7,NLW_muxcy_i4_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i4_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_7,comp_6,comp_5,comp_4}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i8_CARRY4
       (.CI(muxcyo_7),
        .CO({NLW_muxcy_i8_CARRY4_CO_UNCONNECTED[3:1],D}),
        .CYINIT(1'b0),
        .DI({NLW_muxcy_i8_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i8_CARRY4_S_UNCONNECTED[3:1],comp_8}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_idle_detect" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_detect_43
   (D,
    comp_0_0,
    comp_1_1,
    comp_2_2,
    comp_3_3,
    comp_4_4,
    comp_5_5,
    comp_6_6,
    comp_7_7,
    comp_8_8);
  output [0:0]D;
  input comp_0_0;
  input comp_1_1;
  input comp_2_2;
  input comp_3_3;
  input comp_4_4;
  input comp_5_5;
  input comp_6_6;
  input comp_7_7;
  input comp_8_8;

  wire [0:0]D;
  wire comp_0_0;
  wire comp_1_1;
  wire comp_2_2;
  wire comp_3_3;
  wire comp_4_4;
  wire comp_5_5;
  wire comp_6_6;
  wire comp_7_7;
  wire comp_8_8;
  wire muxcyo_3;
  wire muxcyo_7;
  wire [2:0]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [2:0]NLW_muxcy_i4_CARRY4_CO_UNCONNECTED;
  wire [3:0]NLW_muxcy_i4_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_CO_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i8_CARRY4_O_UNCONNECTED;
  wire [3:1]NLW_muxcy_i8_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({muxcyo_3,NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_3_3,comp_2_2,comp_1_1,comp_0_0}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i4_CARRY4
       (.CI(muxcyo_3),
        .CO({muxcyo_7,NLW_muxcy_i4_CARRY4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i4_CARRY4_O_UNCONNECTED[3:0]),
        .S({comp_7_7,comp_6_6,comp_5_5,comp_4_4}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i8_CARRY4
       (.CI(muxcyo_7),
        .CO({NLW_muxcy_i8_CARRY4_CO_UNCONNECTED[3:1],D}),
        .CYINIT(1'b0),
        .DI({NLW_muxcy_i8_CARRY4_DI_UNCONNECTED[3:1],1'b0}),
        .O(NLW_muxcy_i8_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i8_CARRY4_S_UNCONNECTED[3:1],comp_8_8}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_idle_insert" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_idle_insert
   (\rd_data_reg[73] ,
    xgmii_rxd,
    xgmii_rxc,
    reset,
    coreclk,
    can_insert_rd,
    empty,
    rd_data,
    out,
    pcs_loopback_core_int,
    \xgmii_txc_reg2_reg[7] );
  output \rd_data_reg[73] ;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input reset;
  input coreclk;
  input can_insert_rd;
  input empty;
  input [73:0]rd_data;
  input [63:0]out;
  input pcs_loopback_core_int;
  input [7:0]\xgmii_txc_reg2_reg[7] ;

  wire can_insert_rd;
  wire coreclk;
  wire \ctrl_out[0]_i_1_n_0 ;
  wire \ctrl_out[1]_i_1_n_0 ;
  wire \ctrl_out[2]_i_1_n_0 ;
  wire \ctrl_out[3]_i_1_n_0 ;
  wire \ctrl_out[4]_i_1_n_0 ;
  wire \ctrl_out[5]_i_1_n_0 ;
  wire \ctrl_out[6]_i_1_n_0 ;
  wire \ctrl_out[7]_i_1_n_0 ;
  wire data_out1;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[10]_i_1_n_0 ;
  wire \data_out[11]_i_1_n_0 ;
  wire \data_out[12]_i_1_n_0 ;
  wire \data_out[13]_i_1_n_0 ;
  wire \data_out[14]_i_1_n_0 ;
  wire \data_out[15]_i_1_n_0 ;
  wire \data_out[16]_i_1_n_0 ;
  wire \data_out[17]_i_1_n_0 ;
  wire \data_out[18]_i_1_n_0 ;
  wire \data_out[19]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[20]_i_1_n_0 ;
  wire \data_out[21]_i_1_n_0 ;
  wire \data_out[22]_i_1_n_0 ;
  wire \data_out[23]_i_1_n_0 ;
  wire \data_out[24]_i_1_n_0 ;
  wire \data_out[25]_i_1_n_0 ;
  wire \data_out[26]_i_1_n_0 ;
  wire \data_out[27]_i_1_n_0 ;
  wire \data_out[28]_i_1_n_0 ;
  wire \data_out[29]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[30]_i_1_n_0 ;
  wire \data_out[31]_i_1_n_0 ;
  wire \data_out[32]_i_1_n_0 ;
  wire \data_out[33]_i_1_n_0 ;
  wire \data_out[34]_i_1_n_0 ;
  wire \data_out[35]_i_1_n_0 ;
  wire \data_out[36]_i_1_n_0 ;
  wire \data_out[37]_i_1_n_0 ;
  wire \data_out[38]_i_1_n_0 ;
  wire \data_out[39]_i_1_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[40]_i_1_n_0 ;
  wire \data_out[41]_i_1_n_0 ;
  wire \data_out[42]_i_1_n_0 ;
  wire \data_out[43]_i_1_n_0 ;
  wire \data_out[44]_i_1_n_0 ;
  wire \data_out[45]_i_1_n_0 ;
  wire \data_out[46]_i_1_n_0 ;
  wire \data_out[47]_i_1_n_0 ;
  wire \data_out[48]_i_1_n_0 ;
  wire \data_out[49]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[50]_i_1_n_0 ;
  wire \data_out[51]_i_1_n_0 ;
  wire \data_out[52]_i_1_n_0 ;
  wire \data_out[53]_i_1_n_0 ;
  wire \data_out[54]_i_1_n_0 ;
  wire \data_out[55]_i_1_n_0 ;
  wire \data_out[56]_i_1_n_0 ;
  wire \data_out[57]_i_1_n_0 ;
  wire \data_out[58]_i_1_n_0 ;
  wire \data_out[59]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[60]_i_1_n_0 ;
  wire \data_out[61]_i_1_n_0 ;
  wire \data_out[62]_i_1_n_0 ;
  wire \data_out[63]_i_1_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire \data_out[8]_i_1_n_0 ;
  wire \data_out[9]_i_1_n_0 ;
  wire empty;
  wire [7:4]fifo_ctrl_delay;
  wire [63:32]fifo_data_delay;
  wire [1:0]jam_idle;
  wire local_fault;
  wire local_fault_i_1_n_0;
  wire [2:0]next_state;
  wire [63:0]out;
  wire pcs_loopback_core_int;
  wire [73:0]rd_data;
  wire \rd_data_reg[73] ;
  wire reset;
  wire [2:0]state;
  wire twist1_out;
  wire [7:0]xgmii_rxc;
  wire [7:0]xgmii_rxc_ebuff;
  wire [63:0]xgmii_rxd;
  wire [63:0]xgmii_rxd_ebuff;
  wire [7:0]\xgmii_txc_reg2_reg[7] ;

  LUT6 #(
    .INIT(64'h5555155550505555)) 
    asynch_fifo_i_i_2
       (.I0(local_fault),
        .I1(rd_data[72]),
        .I2(state[2]),
        .I3(can_insert_rd),
        .I4(state[1]),
        .I5(state[0]),
        .O(\rd_data_reg[73] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE2)) 
    \ctrl_out[0]_i_1 
       (.I0(rd_data[64]),
        .I1(twist1_out),
        .I2(fifo_ctrl_delay[4]),
        .I3(jam_idle[0]),
        .I4(empty),
        .I5(data_out1),
        .O(\ctrl_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[1]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[65]),
        .I3(fifo_ctrl_delay[5]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[2]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[66]),
        .I3(fifo_ctrl_delay[6]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[3]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[67]),
        .I3(fifo_ctrl_delay[7]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE2)) 
    \ctrl_out[4]_i_1 
       (.I0(rd_data[68]),
        .I1(twist1_out),
        .I2(rd_data[64]),
        .I3(jam_idle[1]),
        .I4(empty),
        .I5(data_out1),
        .O(\ctrl_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[5]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[69]),
        .I3(rd_data[65]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[6]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[70]),
        .I3(rd_data[66]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \ctrl_out[7]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[71]),
        .I3(rd_data[67]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\ctrl_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[0]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[1]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[2]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[3]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[4]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[5]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[6]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ctrl_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\ctrl_out[7]_i_1_n_0 ),
        .Q(xgmii_rxc_ebuff[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[0]_i_1 
       (.I0(jam_idle[0]),
        .I1(rd_data[0]),
        .I2(fifo_data_delay[32]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[10]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[10]),
        .I3(fifo_data_delay[42]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[11]_i_1 
       (.I0(empty),
        .I1(rd_data[11]),
        .I2(fifo_data_delay[43]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[12]_i_1 
       (.I0(empty),
        .I1(rd_data[12]),
        .I2(fifo_data_delay[44]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[13]_i_1 
       (.I0(empty),
        .I1(rd_data[13]),
        .I2(fifo_data_delay[45]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[14]_i_1 
       (.I0(empty),
        .I1(rd_data[14]),
        .I2(fifo_data_delay[46]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[15]_i_1 
       (.I0(empty),
        .I1(rd_data[15]),
        .I2(fifo_data_delay[47]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[16]_i_1 
       (.I0(jam_idle[0]),
        .I1(rd_data[16]),
        .I2(fifo_data_delay[48]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[17]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[17]),
        .I3(fifo_data_delay[49]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[18]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[18]),
        .I3(fifo_data_delay[50]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[19]_i_1 
       (.I0(empty),
        .I1(rd_data[19]),
        .I2(fifo_data_delay[51]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[1]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[1]),
        .I3(fifo_data_delay[33]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[20]_i_1 
       (.I0(empty),
        .I1(rd_data[20]),
        .I2(fifo_data_delay[52]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[21]_i_1 
       (.I0(empty),
        .I1(rd_data[21]),
        .I2(fifo_data_delay[53]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[22]_i_1 
       (.I0(empty),
        .I1(rd_data[22]),
        .I2(fifo_data_delay[54]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[23]_i_1 
       (.I0(empty),
        .I1(rd_data[23]),
        .I2(fifo_data_delay[55]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF5404)) 
    \data_out[24]_i_1 
       (.I0(empty),
        .I1(rd_data[24]),
        .I2(twist1_out),
        .I3(fifo_data_delay[56]),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[25]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[25]),
        .I3(fifo_data_delay[57]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[26]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[26]),
        .I3(fifo_data_delay[58]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[27]_i_1 
       (.I0(empty),
        .I1(rd_data[27]),
        .I2(fifo_data_delay[59]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[28]_i_1 
       (.I0(empty),
        .I1(rd_data[28]),
        .I2(fifo_data_delay[60]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[29]_i_1 
       (.I0(empty),
        .I1(rd_data[29]),
        .I2(fifo_data_delay[61]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE2)) 
    \data_out[2]_i_1 
       (.I0(rd_data[2]),
        .I1(twist1_out),
        .I2(fifo_data_delay[34]),
        .I3(jam_idle[0]),
        .I4(empty),
        .I5(data_out1),
        .O(\data_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[30]_i_1 
       (.I0(empty),
        .I1(rd_data[30]),
        .I2(fifo_data_delay[62]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[31]_i_1 
       (.I0(empty),
        .I1(rd_data[31]),
        .I2(fifo_data_delay[63]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0110)) 
    \data_out[31]_i_2 
       (.I0(local_fault),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[0]),
        .O(jam_idle[0]));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[32]_i_1 
       (.I0(jam_idle[1]),
        .I1(rd_data[32]),
        .I2(rd_data[0]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[33]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[33]),
        .I3(rd_data[1]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFE2)) 
    \data_out[34]_i_1 
       (.I0(rd_data[34]),
        .I1(twist1_out),
        .I2(rd_data[2]),
        .I3(jam_idle[1]),
        .I4(empty),
        .I5(data_out1),
        .O(\data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCFFCCFECCEECCFE)) 
    \data_out[35]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[35]),
        .I3(jam_idle[1]),
        .I4(twist1_out),
        .I5(rd_data[3]),
        .O(\data_out[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCFFCCFECCEECCFE)) 
    \data_out[36]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[36]),
        .I3(jam_idle[1]),
        .I4(twist1_out),
        .I5(rd_data[4]),
        .O(\data_out[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[37]_i_1 
       (.I0(empty),
        .I1(rd_data[37]),
        .I2(rd_data[5]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[38]_i_1 
       (.I0(empty),
        .I1(rd_data[38]),
        .I2(rd_data[6]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCFFCCFECCEECCFE)) 
    \data_out[39]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[39]),
        .I3(jam_idle[1]),
        .I4(twist1_out),
        .I5(rd_data[7]),
        .O(\data_out[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCFFFEEEFE)) 
    \data_out[3]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[3]),
        .I3(twist1_out),
        .I4(fifo_data_delay[35]),
        .I5(jam_idle[0]),
        .O(\data_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[40]_i_1 
       (.I0(jam_idle[1]),
        .I1(rd_data[40]),
        .I2(rd_data[8]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[41]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[41]),
        .I3(rd_data[9]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[42]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[42]),
        .I3(rd_data[10]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[43]_i_1 
       (.I0(empty),
        .I1(rd_data[43]),
        .I2(rd_data[11]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[44]_i_1 
       (.I0(empty),
        .I1(rd_data[44]),
        .I2(rd_data[12]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[45]_i_1 
       (.I0(empty),
        .I1(rd_data[45]),
        .I2(rd_data[13]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[46]_i_1 
       (.I0(empty),
        .I1(rd_data[46]),
        .I2(rd_data[14]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[47]_i_1 
       (.I0(empty),
        .I1(rd_data[47]),
        .I2(rd_data[15]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[48]_i_1 
       (.I0(jam_idle[1]),
        .I1(rd_data[48]),
        .I2(rd_data[16]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[49]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[49]),
        .I3(rd_data[17]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCFFFEEEFE)) 
    \data_out[4]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[4]),
        .I3(twist1_out),
        .I4(fifo_data_delay[36]),
        .I5(jam_idle[0]),
        .O(\data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[50]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[50]),
        .I3(rd_data[18]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[51]_i_1 
       (.I0(empty),
        .I1(rd_data[51]),
        .I2(rd_data[19]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[52]_i_1 
       (.I0(empty),
        .I1(rd_data[52]),
        .I2(rd_data[20]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[53]_i_1 
       (.I0(empty),
        .I1(rd_data[53]),
        .I2(rd_data[21]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[54]_i_1 
       (.I0(empty),
        .I1(rd_data[54]),
        .I2(rd_data[22]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[55]_i_1 
       (.I0(empty),
        .I1(rd_data[55]),
        .I2(rd_data[23]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF5404)) 
    \data_out[56]_i_1 
       (.I0(empty),
        .I1(rd_data[56]),
        .I2(twist1_out),
        .I3(rd_data[24]),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[57]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[57]),
        .I3(rd_data[25]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[58]_i_1 
       (.I0(empty),
        .I1(jam_idle[1]),
        .I2(rd_data[58]),
        .I3(rd_data[26]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[59]_i_1 
       (.I0(empty),
        .I1(rd_data[59]),
        .I2(rd_data[27]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[5]_i_1 
       (.I0(empty),
        .I1(rd_data[5]),
        .I2(fifo_data_delay[37]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[60]_i_1 
       (.I0(empty),
        .I1(rd_data[60]),
        .I2(rd_data[28]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[61]_i_1 
       (.I0(empty),
        .I1(rd_data[61]),
        .I2(rd_data[29]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[62]_i_1 
       (.I0(empty),
        .I1(rd_data[62]),
        .I2(rd_data[30]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[63]_i_1 
       (.I0(empty),
        .I1(rd_data[63]),
        .I2(rd_data[31]),
        .I3(twist1_out),
        .I4(jam_idle[1]),
        .I5(data_out1),
        .O(\data_out[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0074)) 
    \data_out[63]_i_2 
       (.I0(state[2]),
        .I1(state[1]),
        .I2(state[0]),
        .I3(local_fault),
        .O(twist1_out));
  LUT6 #(
    .INIT(64'h0000000003020202)) 
    \data_out[63]_i_3 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(can_insert_rd),
        .I4(rd_data[72]),
        .I5(local_fault),
        .O(jam_idle[1]));
  LUT2 #(
    .INIT(4'hE)) 
    \data_out[63]_i_4 
       (.I0(reset),
        .I1(local_fault),
        .O(data_out1));
  LUT6 #(
    .INIT(64'h000000000000FAEE)) 
    \data_out[6]_i_1 
       (.I0(empty),
        .I1(rd_data[6]),
        .I2(fifo_data_delay[38]),
        .I3(twist1_out),
        .I4(jam_idle[0]),
        .I5(data_out1),
        .O(\data_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCCCCCCCFFFEEEFE)) 
    \data_out[7]_i_1 
       (.I0(empty),
        .I1(data_out1),
        .I2(rd_data[7]),
        .I3(twist1_out),
        .I4(fifo_data_delay[39]),
        .I5(jam_idle[0]),
        .O(\data_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AA00FA00EE)) 
    \data_out[8]_i_1 
       (.I0(jam_idle[0]),
        .I1(rd_data[8]),
        .I2(fifo_data_delay[40]),
        .I3(data_out1),
        .I4(twist1_out),
        .I5(empty),
        .O(\data_out[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEFE)) 
    \data_out[9]_i_1 
       (.I0(empty),
        .I1(jam_idle[0]),
        .I2(rd_data[9]),
        .I3(fifo_data_delay[41]),
        .I4(twist1_out),
        .I5(data_out1),
        .O(\data_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[10]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[11]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[12]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[13]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[14]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[15]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[16]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[17]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[18]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[19]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[20]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[21]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[22]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[23]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[24]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[25]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[26]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[27]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[28]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[29]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[30]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[31]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[32]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[33]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[34]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[35]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[36]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[37]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[38]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[39]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[40]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[41]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[42]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[43]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[44]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[45]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[46]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[47]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[48]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[49]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[50]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[51]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[52]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[53]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[54]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[55]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[56]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[57]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[58]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[59]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[60]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[61]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[62]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[63]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[8]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\data_out[9]_i_1_n_0 ),
        .Q(xgmii_rxd_ebuff[9]),
        .R(1'b0));
  FDSE \fifo_ctrl_delay_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[68]),
        .Q(fifo_ctrl_delay[4]),
        .S(reset));
  FDRE \fifo_ctrl_delay_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[69]),
        .Q(fifo_ctrl_delay[5]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[70]),
        .Q(fifo_ctrl_delay[6]),
        .R(reset));
  FDRE \fifo_ctrl_delay_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[71]),
        .Q(fifo_ctrl_delay[7]),
        .R(reset));
  FDRE \fifo_data_delay_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[32]),
        .Q(fifo_data_delay[32]),
        .R(reset));
  FDRE \fifo_data_delay_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[33]),
        .Q(fifo_data_delay[33]),
        .R(reset));
  FDSE \fifo_data_delay_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[34]),
        .Q(fifo_data_delay[34]),
        .S(reset));
  FDSE \fifo_data_delay_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[35]),
        .Q(fifo_data_delay[35]),
        .S(reset));
  FDSE \fifo_data_delay_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[36]),
        .Q(fifo_data_delay[36]),
        .S(reset));
  FDRE \fifo_data_delay_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[37]),
        .Q(fifo_data_delay[37]),
        .R(reset));
  FDRE \fifo_data_delay_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[38]),
        .Q(fifo_data_delay[38]),
        .R(reset));
  FDSE \fifo_data_delay_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[39]),
        .Q(fifo_data_delay[39]),
        .S(reset));
  FDRE \fifo_data_delay_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[40]),
        .Q(fifo_data_delay[40]),
        .R(reset));
  FDRE \fifo_data_delay_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[41]),
        .Q(fifo_data_delay[41]),
        .R(reset));
  FDRE \fifo_data_delay_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[42]),
        .Q(fifo_data_delay[42]),
        .R(reset));
  FDRE \fifo_data_delay_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[43]),
        .Q(fifo_data_delay[43]),
        .R(reset));
  FDRE \fifo_data_delay_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[44]),
        .Q(fifo_data_delay[44]),
        .R(reset));
  FDRE \fifo_data_delay_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[45]),
        .Q(fifo_data_delay[45]),
        .R(reset));
  FDRE \fifo_data_delay_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[46]),
        .Q(fifo_data_delay[46]),
        .R(reset));
  FDRE \fifo_data_delay_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[47]),
        .Q(fifo_data_delay[47]),
        .R(reset));
  FDRE \fifo_data_delay_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[48]),
        .Q(fifo_data_delay[48]),
        .R(reset));
  FDRE \fifo_data_delay_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[49]),
        .Q(fifo_data_delay[49]),
        .R(reset));
  FDRE \fifo_data_delay_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[50]),
        .Q(fifo_data_delay[50]),
        .R(reset));
  FDRE \fifo_data_delay_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[51]),
        .Q(fifo_data_delay[51]),
        .R(reset));
  FDRE \fifo_data_delay_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[52]),
        .Q(fifo_data_delay[52]),
        .R(reset));
  FDRE \fifo_data_delay_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[53]),
        .Q(fifo_data_delay[53]),
        .R(reset));
  FDRE \fifo_data_delay_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[54]),
        .Q(fifo_data_delay[54]),
        .R(reset));
  FDRE \fifo_data_delay_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[55]),
        .Q(fifo_data_delay[55]),
        .R(reset));
  FDSE \fifo_data_delay_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[56]),
        .Q(fifo_data_delay[56]),
        .S(reset));
  FDRE \fifo_data_delay_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[57]),
        .Q(fifo_data_delay[57]),
        .R(reset));
  FDRE \fifo_data_delay_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[58]),
        .Q(fifo_data_delay[58]),
        .R(reset));
  FDRE \fifo_data_delay_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[59]),
        .Q(fifo_data_delay[59]),
        .R(reset));
  FDRE \fifo_data_delay_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[60]),
        .Q(fifo_data_delay[60]),
        .R(reset));
  FDRE \fifo_data_delay_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[61]),
        .Q(fifo_data_delay[61]),
        .R(reset));
  FDRE \fifo_data_delay_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[62]),
        .Q(fifo_data_delay[62]),
        .R(reset));
  FDRE \fifo_data_delay_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(rd_data[63]),
        .Q(fifo_data_delay[63]),
        .R(reset));
  LUT4 #(
    .INIT(16'hFFF8)) 
    local_fault_i_1
       (.I0(local_fault),
        .I1(can_insert_rd),
        .I2(empty),
        .I3(reset),
        .O(local_fault_i_1_n_0));
  FDRE local_fault_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(local_fault_i_1_n_0),
        .Q(local_fault),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hA2A2A2AAAEAEAEAA)) 
    \state[0]_i_1 
       (.I0(state[0]),
        .I1(can_insert_rd),
        .I2(state[1]),
        .I3(rd_data[72]),
        .I4(rd_data[73]),
        .I5(state[2]),
        .O(next_state[0]));
  LUT6 #(
    .INIT(64'hAA00EA00AA44AA00)) 
    \state[1]_i_1 
       (.I0(state[1]),
        .I1(can_insert_rd),
        .I2(rd_data[73]),
        .I3(state[2]),
        .I4(rd_data[72]),
        .I5(state[0]),
        .O(next_state[1]));
  LUT6 #(
    .INIT(64'hEEEECCCCAEEECCCC)) 
    \state[2]_i_1 
       (.I0(state[1]),
        .I1(state[0]),
        .I2(can_insert_rd),
        .I3(rd_data[73]),
        .I4(state[2]),
        .I5(rd_data[72]),
        .O(next_state[2]));
  FDRE \state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[0]),
        .Q(state[0]),
        .R(reset));
  FDRE \state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[1]),
        .Q(state[1]),
        .R(reset));
  FDRE \state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(next_state[2]),
        .Q(state[2]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[0]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [0]),
        .I1(xgmii_rxc_ebuff[0]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[0]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[1]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [1]),
        .I1(xgmii_rxc_ebuff[1]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[1]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[2]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [2]),
        .I1(xgmii_rxc_ebuff[2]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[2]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[3]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [3]),
        .I1(xgmii_rxc_ebuff[3]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[3]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[4]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [4]),
        .I1(xgmii_rxc_ebuff[4]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[4]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[5]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [5]),
        .I1(xgmii_rxc_ebuff[5]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[5]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[6]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [6]),
        .I1(xgmii_rxc_ebuff[6]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[6]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxc[7]_INST_0 
       (.I0(\xgmii_txc_reg2_reg[7] [7]),
        .I1(xgmii_rxc_ebuff[7]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxc[7]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[0]_INST_0 
       (.I0(out[0]),
        .I1(xgmii_rxd_ebuff[0]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[0]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[10]_INST_0 
       (.I0(out[10]),
        .I1(xgmii_rxd_ebuff[10]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[10]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[11]_INST_0 
       (.I0(out[11]),
        .I1(xgmii_rxd_ebuff[11]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[11]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[12]_INST_0 
       (.I0(out[12]),
        .I1(xgmii_rxd_ebuff[12]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[12]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[13]_INST_0 
       (.I0(out[13]),
        .I1(xgmii_rxd_ebuff[13]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[13]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[14]_INST_0 
       (.I0(out[14]),
        .I1(xgmii_rxd_ebuff[14]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[14]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[15]_INST_0 
       (.I0(out[15]),
        .I1(xgmii_rxd_ebuff[15]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[15]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[16]_INST_0 
       (.I0(out[16]),
        .I1(xgmii_rxd_ebuff[16]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[16]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[17]_INST_0 
       (.I0(out[17]),
        .I1(xgmii_rxd_ebuff[17]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[17]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[18]_INST_0 
       (.I0(out[18]),
        .I1(xgmii_rxd_ebuff[18]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[18]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[19]_INST_0 
       (.I0(out[19]),
        .I1(xgmii_rxd_ebuff[19]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[19]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[1]_INST_0 
       (.I0(out[1]),
        .I1(xgmii_rxd_ebuff[1]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[1]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[20]_INST_0 
       (.I0(out[20]),
        .I1(xgmii_rxd_ebuff[20]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[20]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[21]_INST_0 
       (.I0(out[21]),
        .I1(xgmii_rxd_ebuff[21]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[21]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[22]_INST_0 
       (.I0(out[22]),
        .I1(xgmii_rxd_ebuff[22]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[22]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[23]_INST_0 
       (.I0(out[23]),
        .I1(xgmii_rxd_ebuff[23]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[23]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[24]_INST_0 
       (.I0(out[24]),
        .I1(xgmii_rxd_ebuff[24]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[24]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[25]_INST_0 
       (.I0(out[25]),
        .I1(xgmii_rxd_ebuff[25]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[25]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[26]_INST_0 
       (.I0(out[26]),
        .I1(xgmii_rxd_ebuff[26]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[26]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[27]_INST_0 
       (.I0(out[27]),
        .I1(xgmii_rxd_ebuff[27]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[27]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[28]_INST_0 
       (.I0(out[28]),
        .I1(xgmii_rxd_ebuff[28]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[28]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[29]_INST_0 
       (.I0(out[29]),
        .I1(xgmii_rxd_ebuff[29]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[29]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[2]_INST_0 
       (.I0(out[2]),
        .I1(xgmii_rxd_ebuff[2]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[2]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[30]_INST_0 
       (.I0(out[30]),
        .I1(xgmii_rxd_ebuff[30]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[30]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[31]_INST_0 
       (.I0(out[31]),
        .I1(xgmii_rxd_ebuff[31]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[31]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[32]_INST_0 
       (.I0(out[32]),
        .I1(xgmii_rxd_ebuff[32]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[32]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[33]_INST_0 
       (.I0(out[33]),
        .I1(xgmii_rxd_ebuff[33]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[33]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[34]_INST_0 
       (.I0(out[34]),
        .I1(xgmii_rxd_ebuff[34]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[34]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[35]_INST_0 
       (.I0(out[35]),
        .I1(xgmii_rxd_ebuff[35]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[35]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[36]_INST_0 
       (.I0(out[36]),
        .I1(xgmii_rxd_ebuff[36]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[36]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[37]_INST_0 
       (.I0(out[37]),
        .I1(xgmii_rxd_ebuff[37]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[37]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[38]_INST_0 
       (.I0(out[38]),
        .I1(xgmii_rxd_ebuff[38]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[38]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[39]_INST_0 
       (.I0(out[39]),
        .I1(xgmii_rxd_ebuff[39]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[39]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[3]_INST_0 
       (.I0(out[3]),
        .I1(xgmii_rxd_ebuff[3]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[3]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[40]_INST_0 
       (.I0(out[40]),
        .I1(xgmii_rxd_ebuff[40]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[40]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[41]_INST_0 
       (.I0(out[41]),
        .I1(xgmii_rxd_ebuff[41]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[41]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[42]_INST_0 
       (.I0(out[42]),
        .I1(xgmii_rxd_ebuff[42]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[42]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[43]_INST_0 
       (.I0(out[43]),
        .I1(xgmii_rxd_ebuff[43]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[43]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[44]_INST_0 
       (.I0(out[44]),
        .I1(xgmii_rxd_ebuff[44]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[44]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[45]_INST_0 
       (.I0(out[45]),
        .I1(xgmii_rxd_ebuff[45]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[45]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[46]_INST_0 
       (.I0(out[46]),
        .I1(xgmii_rxd_ebuff[46]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[46]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[47]_INST_0 
       (.I0(out[47]),
        .I1(xgmii_rxd_ebuff[47]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[47]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[48]_INST_0 
       (.I0(out[48]),
        .I1(xgmii_rxd_ebuff[48]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[48]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[49]_INST_0 
       (.I0(out[49]),
        .I1(xgmii_rxd_ebuff[49]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[49]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[4]_INST_0 
       (.I0(out[4]),
        .I1(xgmii_rxd_ebuff[4]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[4]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[50]_INST_0 
       (.I0(out[50]),
        .I1(xgmii_rxd_ebuff[50]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[50]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[51]_INST_0 
       (.I0(out[51]),
        .I1(xgmii_rxd_ebuff[51]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[51]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[52]_INST_0 
       (.I0(out[52]),
        .I1(xgmii_rxd_ebuff[52]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[52]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[53]_INST_0 
       (.I0(out[53]),
        .I1(xgmii_rxd_ebuff[53]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[53]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[54]_INST_0 
       (.I0(out[54]),
        .I1(xgmii_rxd_ebuff[54]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[54]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[55]_INST_0 
       (.I0(out[55]),
        .I1(xgmii_rxd_ebuff[55]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[55]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[56]_INST_0 
       (.I0(out[56]),
        .I1(xgmii_rxd_ebuff[56]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[56]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[57]_INST_0 
       (.I0(out[57]),
        .I1(xgmii_rxd_ebuff[57]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[57]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[58]_INST_0 
       (.I0(out[58]),
        .I1(xgmii_rxd_ebuff[58]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[58]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[59]_INST_0 
       (.I0(out[59]),
        .I1(xgmii_rxd_ebuff[59]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[59]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[5]_INST_0 
       (.I0(out[5]),
        .I1(xgmii_rxd_ebuff[5]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[5]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[60]_INST_0 
       (.I0(out[60]),
        .I1(xgmii_rxd_ebuff[60]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[60]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[61]_INST_0 
       (.I0(out[61]),
        .I1(xgmii_rxd_ebuff[61]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[61]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[62]_INST_0 
       (.I0(out[62]),
        .I1(xgmii_rxd_ebuff[62]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[62]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[63]_INST_0 
       (.I0(out[63]),
        .I1(xgmii_rxd_ebuff[63]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[63]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[6]_INST_0 
       (.I0(out[6]),
        .I1(xgmii_rxd_ebuff[6]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[6]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[7]_INST_0 
       (.I0(out[7]),
        .I1(xgmii_rxd_ebuff[7]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[7]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[8]_INST_0 
       (.I0(out[8]),
        .I1(xgmii_rxd_ebuff[8]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[8]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \xgmii_rxd[9]_INST_0 
       (.I0(out[9]),
        .I1(xgmii_rxd_ebuff[9]),
        .I2(pcs_loopback_core_int),
        .O(xgmii_rxd[9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_ieee_counters" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ieee_counters
   (out,
    Q,
    \q_reg[5] ,
    counter_out,
    counter_out_reg,
    counter_out_reg_0,
    SR,
    coreclk,
    data_out_reg,
    data_out_reg_0);
  output [15:0]out;
  output [7:0]Q;
  output [5:0]\q_reg[5] ;
  input counter_out;
  input counter_out_reg;
  input counter_out_reg_0;
  input [0:0]SR;
  input coreclk;
  input [0:0]data_out_reg;
  input data_out_reg_0;

  wire [7:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire counter_out;
  wire counter_out_reg;
  wire counter_out_reg_0;
  wire [0:0]data_out_reg;
  wire data_out_reg_0;
  wire [15:0]out;
  wire [7:0]p_0_in__0;
  wire [5:0]p_0_in__1;
  wire pcs_ber_count0;
  wire \pcs_ber_count[5]_i_4_n_0 ;
  wire pcs_error_block_count0;
  wire \pcs_error_block_count[7]_i_4_n_0 ;
  wire pcs_test_pattern_error_count0;
  wire \pcs_test_pattern_error_count[0]_i_10_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_11_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_5_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_6_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_7_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_8_n_0 ;
  wire \pcs_test_pattern_error_count[0]_i_9_n_0 ;
  wire \pcs_test_pattern_error_count[12]_i_2_n_0 ;
  wire \pcs_test_pattern_error_count[12]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count[12]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[12]_i_5_n_0 ;
  wire \pcs_test_pattern_error_count[4]_i_2_n_0 ;
  wire \pcs_test_pattern_error_count[4]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count[4]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[4]_i_5_n_0 ;
  wire \pcs_test_pattern_error_count[8]_i_2_n_0 ;
  wire \pcs_test_pattern_error_count[8]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count[8]_i_4_n_0 ;
  wire \pcs_test_pattern_error_count[8]_i_5_n_0 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_0 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_1 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_2 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_3 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_4 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_5 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_6 ;
  wire \pcs_test_pattern_error_count_reg[0]_i_3_n_7 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[12]_i_1_n_7 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_0 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[4]_i_1_n_7 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_0 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_1 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_2 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_3 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_4 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_5 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_6 ;
  wire \pcs_test_pattern_error_count_reg[8]_i_1_n_7 ;
  wire [5:0]\q_reg[5] ;
  wire [3:3]\NLW_pcs_test_pattern_error_count_reg[12]_i_1_CO_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_ber_count[0]_i_1 
       (.I0(\q_reg[5] [0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_ber_count[1]_i_1 
       (.I0(\q_reg[5] [0]),
        .I1(\q_reg[5] [1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_ber_count[2]_i_1 
       (.I0(\q_reg[5] [2]),
        .I1(\q_reg[5] [1]),
        .I2(\q_reg[5] [0]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_ber_count[3]_i_1 
       (.I0(\q_reg[5] [3]),
        .I1(\q_reg[5] [0]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_ber_count[4]_i_1 
       (.I0(\q_reg[5] [4]),
        .I1(\q_reg[5] [2]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [0]),
        .I4(\q_reg[5] [3]),
        .O(p_0_in__1[4]));
  LUT3 #(
    .INIT(8'h2A)) 
    \pcs_ber_count[5]_i_2 
       (.I0(counter_out_reg),
        .I1(\pcs_ber_count[5]_i_4_n_0 ),
        .I2(\q_reg[5] [5]),
        .O(pcs_ber_count0));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_ber_count[5]_i_3 
       (.I0(\q_reg[5] [5]),
        .I1(\q_reg[5] [3]),
        .I2(\q_reg[5] [0]),
        .I3(\q_reg[5] [1]),
        .I4(\q_reg[5] [2]),
        .I5(\q_reg[5] [4]),
        .O(p_0_in__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \pcs_ber_count[5]_i_4 
       (.I0(\q_reg[5] [4]),
        .I1(\q_reg[5] [2]),
        .I2(\q_reg[5] [1]),
        .I3(\q_reg[5] [0]),
        .I4(\q_reg[5] [3]),
        .O(\pcs_ber_count[5]_i_4_n_0 ));
  FDRE \pcs_ber_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[0]),
        .Q(\q_reg[5] [0]),
        .R(data_out_reg));
  FDRE \pcs_ber_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[1]),
        .Q(\q_reg[5] [1]),
        .R(data_out_reg));
  FDRE \pcs_ber_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[2]),
        .Q(\q_reg[5] [2]),
        .R(data_out_reg));
  FDRE \pcs_ber_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[3]),
        .Q(\q_reg[5] [3]),
        .R(data_out_reg));
  FDRE \pcs_ber_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[4]),
        .Q(\q_reg[5] [4]),
        .R(data_out_reg));
  FDRE \pcs_ber_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_ber_count0),
        .D(p_0_in__1[5]),
        .Q(\q_reg[5] [5]),
        .R(data_out_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_error_block_count[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pcs_error_block_count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \pcs_error_block_count[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \pcs_error_block_count[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \pcs_error_block_count[4]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \pcs_error_block_count[5]_i_1 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \pcs_error_block_count[6]_i_1 
       (.I0(\pcs_error_block_count[7]_i_4_n_0 ),
        .I1(Q[6]),
        .O(p_0_in__0[6]));
  LUT4 #(
    .INIT(16'hA2AA)) 
    \pcs_error_block_count[7]_i_2 
       (.I0(counter_out),
        .I1(Q[6]),
        .I2(\pcs_error_block_count[7]_i_4_n_0 ),
        .I3(Q[7]),
        .O(pcs_error_block_count0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \pcs_error_block_count[7]_i_3 
       (.I0(Q[7]),
        .I1(\pcs_error_block_count[7]_i_4_n_0 ),
        .I2(Q[6]),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \pcs_error_block_count[7]_i_4 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\pcs_error_block_count[7]_i_4_n_0 ));
  FDRE \pcs_error_block_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \pcs_error_block_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_error_block_count0),
        .D(p_0_in__0[7]),
        .Q(Q[7]),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[0]_i_10 
       (.I0(out[1]),
        .O(\pcs_test_pattern_error_count[0]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_test_pattern_error_count[0]_i_11 
       (.I0(out[0]),
        .O(\pcs_test_pattern_error_count[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    \pcs_test_pattern_error_count[0]_i_2 
       (.I0(counter_out_reg_0),
        .I1(\pcs_test_pattern_error_count[0]_i_4_n_0 ),
        .I2(\pcs_test_pattern_error_count[0]_i_5_n_0 ),
        .I3(\pcs_test_pattern_error_count[0]_i_6_n_0 ),
        .I4(\pcs_test_pattern_error_count[0]_i_7_n_0 ),
        .O(pcs_test_pattern_error_count0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_4 
       (.I0(out[5]),
        .I1(out[3]),
        .I2(out[8]),
        .I3(out[4]),
        .O(\pcs_test_pattern_error_count[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_5 
       (.I0(out[10]),
        .I1(out[0]),
        .I2(out[9]),
        .I3(out[1]),
        .O(\pcs_test_pattern_error_count[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \pcs_test_pattern_error_count[0]_i_6 
       (.I0(out[14]),
        .I1(out[6]),
        .I2(out[11]),
        .I3(out[7]),
        .O(\pcs_test_pattern_error_count[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_test_pattern_error_count[0]_i_7 
       (.I0(out[15]),
        .I1(out[13]),
        .I2(out[12]),
        .I3(out[2]),
        .O(\pcs_test_pattern_error_count[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[0]_i_8 
       (.I0(out[3]),
        .O(\pcs_test_pattern_error_count[0]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[0]_i_9 
       (.I0(out[2]),
        .O(\pcs_test_pattern_error_count[0]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[12]_i_2 
       (.I0(out[15]),
        .O(\pcs_test_pattern_error_count[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[12]_i_3 
       (.I0(out[14]),
        .O(\pcs_test_pattern_error_count[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[12]_i_4 
       (.I0(out[13]),
        .O(\pcs_test_pattern_error_count[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[12]_i_5 
       (.I0(out[12]),
        .O(\pcs_test_pattern_error_count[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[4]_i_2 
       (.I0(out[7]),
        .O(\pcs_test_pattern_error_count[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[4]_i_3 
       (.I0(out[6]),
        .O(\pcs_test_pattern_error_count[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[4]_i_4 
       (.I0(out[5]),
        .O(\pcs_test_pattern_error_count[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[4]_i_5 
       (.I0(out[4]),
        .O(\pcs_test_pattern_error_count[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[8]_i_2 
       (.I0(out[11]),
        .O(\pcs_test_pattern_error_count[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[8]_i_3 
       (.I0(out[10]),
        .O(\pcs_test_pattern_error_count[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[8]_i_4 
       (.I0(out[9]),
        .O(\pcs_test_pattern_error_count[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_test_pattern_error_count[8]_i_5 
       (.I0(out[8]),
        .O(\pcs_test_pattern_error_count[8]_i_5_n_0 ));
  FDRE \pcs_test_pattern_error_count_reg[0] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_7 ),
        .Q(out[0]),
        .R(data_out_reg_0));
  CARRY4 \pcs_test_pattern_error_count_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\pcs_test_pattern_error_count_reg[0]_i_3_n_0 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_1 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_2 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pcs_test_pattern_error_count_reg[0]_i_3_n_4 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_5 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_6 ,\pcs_test_pattern_error_count_reg[0]_i_3_n_7 }),
        .S({\pcs_test_pattern_error_count[0]_i_8_n_0 ,\pcs_test_pattern_error_count[0]_i_9_n_0 ,\pcs_test_pattern_error_count[0]_i_10_n_0 ,\pcs_test_pattern_error_count[0]_i_11_n_0 }));
  FDRE \pcs_test_pattern_error_count_reg[10] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_5 ),
        .Q(out[10]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[11] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_4 ),
        .Q(out[11]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[12] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_7 ),
        .Q(out[12]),
        .R(data_out_reg_0));
  CARRY4 \pcs_test_pattern_error_count_reg[12]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[8]_i_1_n_0 ),
        .CO({\NLW_pcs_test_pattern_error_count_reg[12]_i_1_CO_UNCONNECTED [3],\pcs_test_pattern_error_count_reg[12]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[12]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[12]_i_1_n_7 }),
        .S({\pcs_test_pattern_error_count[12]_i_2_n_0 ,\pcs_test_pattern_error_count[12]_i_3_n_0 ,\pcs_test_pattern_error_count[12]_i_4_n_0 ,\pcs_test_pattern_error_count[12]_i_5_n_0 }));
  FDRE \pcs_test_pattern_error_count_reg[13] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_6 ),
        .Q(out[13]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[14] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_5 ),
        .Q(out[14]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[15] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[12]_i_1_n_4 ),
        .Q(out[15]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[1] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_6 ),
        .Q(out[1]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[2] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_5 ),
        .Q(out[2]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[3] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[0]_i_3_n_4 ),
        .Q(out[3]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[4] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_7 ),
        .Q(out[4]),
        .R(data_out_reg_0));
  CARRY4 \pcs_test_pattern_error_count_reg[4]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[0]_i_3_n_0 ),
        .CO({\pcs_test_pattern_error_count_reg[4]_i_1_n_0 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[4]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[4]_i_1_n_7 }),
        .S({\pcs_test_pattern_error_count[4]_i_2_n_0 ,\pcs_test_pattern_error_count[4]_i_3_n_0 ,\pcs_test_pattern_error_count[4]_i_4_n_0 ,\pcs_test_pattern_error_count[4]_i_5_n_0 }));
  FDRE \pcs_test_pattern_error_count_reg[5] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_6 ),
        .Q(out[5]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[6] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_5 ),
        .Q(out[6]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[7] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[4]_i_1_n_4 ),
        .Q(out[7]),
        .R(data_out_reg_0));
  FDRE \pcs_test_pattern_error_count_reg[8] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_7 ),
        .Q(out[8]),
        .R(data_out_reg_0));
  CARRY4 \pcs_test_pattern_error_count_reg[8]_i_1 
       (.CI(\pcs_test_pattern_error_count_reg[4]_i_1_n_0 ),
        .CO({\pcs_test_pattern_error_count_reg[8]_i_1_n_0 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_1 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_2 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_test_pattern_error_count_reg[8]_i_1_n_4 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_5 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_6 ,\pcs_test_pattern_error_count_reg[8]_i_1_n_7 }),
        .S({\pcs_test_pattern_error_count[8]_i_2_n_0 ,\pcs_test_pattern_error_count[8]_i_3_n_0 ,\pcs_test_pattern_error_count[8]_i_4_n_0 ,\pcs_test_pattern_error_count[8]_i_5_n_0 }));
  FDRE \pcs_test_pattern_error_count_reg[9] 
       (.C(coreclk),
        .CE(pcs_test_pattern_error_count0),
        .D(\pcs_test_pattern_error_count_reg[8]_i_1_n_6 ),
        .Q(out[9]),
        .R(data_out_reg_0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_ieee_registers" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ieee_registers
   (\q_reg[2] ,
    \q_reg[0] ,
    regs_rdack,
    regs_wrack,
    d1_reg,
    loopback_ctrl,
    tx_disable_int,
    reg_3_36_we,
    reg_3_41_we,
    reg_3_38_we,
    reg_3_35_we,
    reg_3_34_we,
    reg_3_37_we,
    reg_3_65535_we,
    reg_3_40_we,
    re_prev_reg,
    d1_reg_0,
    pseudo_rand_seeds_int,
    core_in_testmode_wire,
    \prbs_err_count_reg[0] ,
    \scr_reg_reg[57] ,
    \rd_data_reg[7] ,
    tx_66_fifo,
    \q_reg[0]_0 ,
    reg_3_42_we,
    \q_reg[0]_1 ,
    \q_reg[0]_2 ,
    \q_reg[0]_3 ,
    \pcs_test_pattern_error_count_reg[15] ,
    clear_test_pattern_err_count,
    \pcs_ber_count_reg[5] ,
    SR,
    reg_1_9_we,
    \q_reg[0]_4 ,
    \rddata_out_reg[0] ,
    D,
    prbs31_rx_enable_core_int,
    indirect_read_reg,
    prbs31_tx_enable_core_int,
    rddata_out,
    core_status,
    coreclk,
    pcs_hi_ber_core_i,
    pcs_rx_link_up_core_sync_int,
    global_pmd_rx_signal_detect_core_i,
    reg_3_1_re,
    rdack0,
    mgmt_rnw,
    \shift_reg_reg[0] ,
    Q,
    pma_pmd_type,
    \state_reg[2] ,
    \state_reg[1] ,
    prbs31_rx_enable_core_regb_reg,
    new_tx_test_seed,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[0] ,
    \state_reg[2]_0 ,
    \addr_reg_reg[5]_0 ,
    \state_reg[2]_1 ,
    read_reg_reg,
    \addr_reg_reg[16]_0 ,
    \state_reg[1]_0 ,
    \state_reg[1]_1 ,
    \addr_reg_reg[0]_0 ,
    read_reg_reg_0,
    \state_reg[2]_2 ,
    reset,
    out,
    \prbs31_err_count_reg[15] ,
    pcs_reset_clear_core_intr,
    resetdone,
    pma_pmd_status_tx_fault_core_int,
    \devad_reg_reg[4] ,
    \pcs_error_block_count_reg[7] ,
    \pcs_ber_count_reg[5]_0 ,
    \shift_reg_reg[15] ,
    \shift_reg_reg[15]_0 ,
    \shift_reg_reg[15]_1 ,
    \shift_reg_reg[9] ,
    \shift_reg_reg[15]_2 ,
    \shift_reg_reg[15]_3 ,
    \shift_reg_reg[15]_4 ,
    \shift_reg_reg[9]_0 ,
    \state_reg[2]_3 ,
    \prbs_err_count_reg[15] ,
    \shift_reg_reg[15]_5 ,
    read_reg,
    \state_reg[0] );
  output \q_reg[2] ;
  output \q_reg[0] ;
  output regs_rdack;
  output regs_wrack;
  output d1_reg;
  output [0:0]loopback_ctrl;
  output tx_disable_int;
  output reg_3_36_we;
  output reg_3_41_we;
  output reg_3_38_we;
  output reg_3_35_we;
  output reg_3_34_we;
  output reg_3_37_we;
  output reg_3_65535_we;
  output reg_3_40_we;
  output [4:0]re_prev_reg;
  output [15:0]d1_reg_0;
  output [115:0]pseudo_rand_seeds_int;
  output core_in_testmode_wire;
  output [4:0]\prbs_err_count_reg[0] ;
  output \scr_reg_reg[57] ;
  output \rd_data_reg[7] ;
  output [0:0]tx_66_fifo;
  output \q_reg[0]_0 ;
  output reg_3_42_we;
  output \q_reg[0]_1 ;
  output \q_reg[0]_2 ;
  output \q_reg[0]_3 ;
  output \pcs_test_pattern_error_count_reg[15] ;
  output clear_test_pattern_err_count;
  output [0:0]\pcs_ber_count_reg[5] ;
  output [0:0]SR;
  output reg_1_9_we;
  output \q_reg[0]_4 ;
  output \rddata_out_reg[0] ;
  output [15:0]D;
  output prbs31_rx_enable_core_int;
  output indirect_read_reg;
  output prbs31_tx_enable_core_int;
  output [15:0]rddata_out;
  input [0:0]core_status;
  input coreclk;
  input pcs_hi_ber_core_i;
  input pcs_rx_link_up_core_sync_int;
  input global_pmd_rx_signal_detect_core_i;
  input reg_3_1_re;
  input rdack0;
  input mgmt_rnw;
  input \shift_reg_reg[0] ;
  input [3:0]Q;
  input [2:0]pma_pmd_type;
  input \state_reg[2] ;
  input \state_reg[1] ;
  input prbs31_rx_enable_core_regb_reg;
  input new_tx_test_seed;
  input [0:0]\tx_test_patt_seed_sel_reg[0] ;
  input [0:0]\tx_66_enc_out_reg[0] ;
  input \state_reg[2]_0 ;
  input \addr_reg_reg[5]_0 ;
  input \state_reg[2]_1 ;
  input read_reg_reg;
  input \addr_reg_reg[16]_0 ;
  input \state_reg[1]_0 ;
  input \state_reg[1]_1 ;
  input \addr_reg_reg[0]_0 ;
  input read_reg_reg_0;
  input \state_reg[2]_2 ;
  input reset;
  input [15:0]out;
  input [15:0]\prbs31_err_count_reg[15] ;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input pma_pmd_status_tx_fault_core_int;
  input [20:0]\devad_reg_reg[4] ;
  input [7:0]\pcs_error_block_count_reg[7] ;
  input [5:0]\pcs_ber_count_reg[5]_0 ;
  input [14:0]\shift_reg_reg[15] ;
  input [14:0]\shift_reg_reg[15]_0 ;
  input [14:0]\shift_reg_reg[15]_1 ;
  input [8:0]\shift_reg_reg[9] ;
  input [14:0]\shift_reg_reg[15]_2 ;
  input [15:0]\shift_reg_reg[15]_3 ;
  input [14:0]\shift_reg_reg[15]_4 ;
  input [8:0]\shift_reg_reg[9]_0 ;
  input [5:0]\state_reg[2]_3 ;
  input [15:0]\prbs_err_count_reg[15] ;
  input [14:0]\shift_reg_reg[15]_5 ;
  input read_reg;
  input [0:0]\state_reg[0] ;

  wire [15:0]D;
  wire [3:0]Q;
  wire [0:0]SR;
  wire [19:1]addr_reg;
  wire \addr_reg_reg[0]_0 ;
  wire \addr_reg_reg[16]_0 ;
  wire \addr_reg_reg[5]_0 ;
  wire clear_test_pattern_err_count;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire d1_reg;
  wire [15:0]d1_reg_0;
  wire [20:0]\devad_reg_reg[4] ;
  wire global_pmd_rx_signal_detect_core_i;
  wire indirect_read_reg;
  wire [0:0]loopback_ctrl;
  wire mgmt_rnw;
  wire new_tx_test_seed;
  wire [15:0]out;
  wire [0:0]\pcs_ber_count_reg[5] ;
  wire [5:0]\pcs_ber_count_reg[5]_0 ;
  wire [7:0]\pcs_error_block_count_reg[7] ;
  wire pcs_hi_ber_core_i;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire \pcs_test_pattern_error_count_reg[15] ;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire prbs31_rx_enable_core_int;
  wire prbs31_rx_enable_core_regb_reg;
  wire prbs31_tx_enable_core_int;
  wire [4:0]\prbs_err_count_reg[0] ;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire \q_reg[2] ;
  wire \rd_data_reg[7] ;
  wire rdack0;
  wire [15:0]rddata_out;
  wire \rddata_out_reg[0] ;
  wire [4:0]re_prev_reg;
  wire read_reg;
  wire read_reg_reg;
  wire read_reg_reg_0;
  wire reg_1_9_we;
  wire reg_3_1_re;
  wire reg_3_34_we;
  wire reg_3_35_we;
  wire reg_3_36_we;
  wire reg_3_37_we;
  wire reg_3_38_we;
  wire reg_3_40_we;
  wire reg_3_41_we;
  wire reg_3_42_we;
  wire reg_3_65535_we;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire \scr_reg_reg[57] ;
  wire \shift_reg_reg[0] ;
  wire [14:0]\shift_reg_reg[15] ;
  wire [14:0]\shift_reg_reg[15]_0 ;
  wire [14:0]\shift_reg_reg[15]_1 ;
  wire [14:0]\shift_reg_reg[15]_2 ;
  wire [15:0]\shift_reg_reg[15]_3 ;
  wire [14:0]\shift_reg_reg[15]_4 ;
  wire [14:0]\shift_reg_reg[15]_5 ;
  wire [8:0]\shift_reg_reg[9] ;
  wire [8:0]\shift_reg_reg[9]_0 ;
  wire [0:0]\state_reg[0] ;
  wire \state_reg[1] ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire \state_reg[2] ;
  wire \state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire [5:0]\state_reg[2]_3 ;
  wire [0:0]\tx_66_enc_out_reg[0] ;
  wire [0:0]tx_66_fifo;
  wire tx_disable_int;
  wire [0:0]\tx_test_patt_seed_sel_reg[0] ;

  FDRE \addr_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [0]),
        .Q(re_prev_reg[0]),
        .R(reset));
  FDRE \addr_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [10]),
        .Q(addr_reg[10]),
        .R(reset));
  FDRE \addr_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [11]),
        .Q(addr_reg[11]),
        .R(reset));
  FDRE \addr_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [12]),
        .Q(addr_reg[12]),
        .R(reset));
  FDRE \addr_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [13]),
        .Q(addr_reg[13]),
        .R(reset));
  FDRE \addr_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [14]),
        .Q(addr_reg[14]),
        .R(reset));
  FDRE \addr_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [15]),
        .Q(addr_reg[15]),
        .R(reset));
  FDRE \addr_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [16]),
        .Q(re_prev_reg[3]),
        .R(reset));
  FDRE \addr_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [17]),
        .Q(addr_reg[17]),
        .R(reset));
  FDRE \addr_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [18]),
        .Q(addr_reg[18]),
        .R(reset));
  FDRE \addr_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [19]),
        .Q(addr_reg[19]),
        .R(reset));
  FDRE \addr_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [1]),
        .Q(addr_reg[1]),
        .R(reset));
  FDRE \addr_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [20]),
        .Q(re_prev_reg[4]),
        .R(reset));
  FDRE \addr_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [2]),
        .Q(addr_reg[2]),
        .R(reset));
  FDRE \addr_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [3]),
        .Q(re_prev_reg[1]),
        .R(reset));
  FDRE \addr_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [4]),
        .Q(addr_reg[4]),
        .R(reset));
  FDRE \addr_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [5]),
        .Q(re_prev_reg[2]),
        .R(reset));
  FDRE \addr_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [6]),
        .Q(addr_reg[6]),
        .R(reset));
  FDRE \addr_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [7]),
        .Q(addr_reg[7]),
        .R(reset));
  FDRE \addr_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [8]),
        .Q(addr_reg[8]),
        .R(reset));
  FDRE \addr_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\devad_reg_reg[4] [9]),
        .Q(addr_reg[9]),
        .R(reset));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_common_ieee_registers common_reg_block
       (.D(D),
        .E(reg_3_36_we),
        .Q(Q),
        .SR(\q_reg[2] ),
        .\addr_reg_reg[0] (\addr_reg_reg[0]_0 ),
        .\addr_reg_reg[16] (\addr_reg_reg[16]_0 ),
        .\addr_reg_reg[20] ({re_prev_reg[4],addr_reg[19:17],re_prev_reg[3],addr_reg[15:6],re_prev_reg[2],addr_reg[4],re_prev_reg[1],addr_reg[2:1],re_prev_reg[0]}),
        .\addr_reg_reg[5] (\addr_reg_reg[5]_0 ),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .d1_reg(d1_reg),
        .d1_reg_0(d1_reg_0),
        .global_pmd_rx_signal_detect_core_i(global_pmd_rx_signal_detect_core_i),
        .indirect_read_reg(indirect_read_reg),
        .loopback_ctrl(loopback_ctrl),
        .mgmt_rnw(mgmt_rnw),
        .new_tx_test_seed(new_tx_test_seed),
        .out(out),
        .\pcs_ber_count_reg[5] (\pcs_ber_count_reg[5] ),
        .\pcs_ber_count_reg[5]_0 (\pcs_ber_count_reg[5]_0 ),
        .\pcs_error_block_count_reg[7] (SR),
        .\pcs_error_block_count_reg[7]_0 (\pcs_error_block_count_reg[7] ),
        .pcs_hi_ber_core_i(pcs_hi_ber_core_i),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\pcs_test_pattern_error_count_reg[15] (\pcs_test_pattern_error_count_reg[15] ),
        .pma_pmd_status_tx_fault_core_int(pma_pmd_status_tx_fault_core_int),
        .pma_pmd_type(pma_pmd_type),
        .\prbs31_err_count_reg[15] (\prbs31_err_count_reg[15] ),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_rx_enable_core_regb_reg(prbs31_rx_enable_core_regb_reg),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\prbs_err_count_reg[0] (\prbs_err_count_reg[0] ),
        .\prbs_err_count_reg[15] (\prbs_err_count_reg[15] ),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[0]_0 (reg_3_41_we),
        .\q_reg[0]_1 (reg_3_38_we),
        .\q_reg[0]_10 (\q_reg[0]_2 ),
        .\q_reg[0]_11 (\q_reg[0]_3 ),
        .\q_reg[0]_12 (\q_reg[0]_4 ),
        .\q_reg[0]_2 (reg_3_35_we),
        .\q_reg[0]_3 (reg_3_34_we),
        .\q_reg[0]_4 (reg_3_37_we),
        .\q_reg[0]_5 (reg_3_65535_we),
        .\q_reg[0]_6 (reg_3_40_we),
        .\q_reg[0]_7 (\q_reg[0]_0 ),
        .\q_reg[0]_8 (reg_3_42_we),
        .\q_reg[0]_9 (\q_reg[0]_1 ),
        .\rd_data_reg[7] (\rd_data_reg[7] ),
        .rdack0(rdack0),
        .rddata_out(rddata_out),
        .\rddata_out_reg[0]_0 (\rddata_out_reg[0] ),
        .read_reg(read_reg),
        .read_reg_reg(read_reg_reg),
        .read_reg_reg_0(read_reg_reg_0),
        .reg_1_9_we(reg_1_9_we),
        .reg_3_1_re(reg_3_1_re),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .reset(reset),
        .resetdone(resetdone),
        .\scr_reg_reg[57] (\scr_reg_reg[57] ),
        .\shift_reg_reg[0] (\shift_reg_reg[0] ),
        .\shift_reg_reg[15] (\shift_reg_reg[15] ),
        .\shift_reg_reg[15]_0 (\shift_reg_reg[15]_0 ),
        .\shift_reg_reg[15]_1 (\shift_reg_reg[15]_1 ),
        .\shift_reg_reg[15]_2 (\shift_reg_reg[15]_2 ),
        .\shift_reg_reg[15]_3 (\shift_reg_reg[15]_3 ),
        .\shift_reg_reg[15]_4 (\shift_reg_reg[15]_4 ),
        .\shift_reg_reg[15]_5 (\shift_reg_reg[15]_5 ),
        .\shift_reg_reg[9] (\shift_reg_reg[9] ),
        .\shift_reg_reg[9]_0 (\shift_reg_reg[9]_0 ),
        .\state_reg[0] (\state_reg[0] ),
        .\state_reg[1] (\state_reg[1] ),
        .\state_reg[1]_0 (\state_reg[1]_0 ),
        .\state_reg[1]_1 (\state_reg[1]_1 ),
        .\state_reg[2] (\state_reg[2] ),
        .\state_reg[2]_0 (\state_reg[2]_0 ),
        .\state_reg[2]_1 (\state_reg[2]_1 ),
        .\state_reg[2]_2 (\state_reg[2]_2 ),
        .\state_reg[2]_3 (\state_reg[2]_3 ),
        .\tx_66_enc_out_reg[0] (\tx_66_enc_out_reg[0] ),
        .tx_66_fifo(tx_66_fifo),
        .tx_disable_int(tx_disable_int),
        .\tx_test_patt_seed_sel_reg[0] (\tx_test_patt_seed_sel_reg[0] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_ipif_access" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ipif_access
   (rdack_reg,
    \q_reg[5] ,
    \state_reg[1]_0 ,
    \state_reg[1]_1 ,
    \q_reg[0] ,
    \state_reg[1]_2 ,
    \q_reg[0]_0 ,
    D,
    control_reg_reg,
    \q_reg[0]_1 ,
    reg_3_1_re,
    re_prev_reg,
    \q_reg[0]_2 ,
    re_prev_reg_0,
    rdack0,
    \rddata_out_reg[4] ,
    re_prev_reg_1,
    \q_reg[0]_3 ,
    mgmt_rnw,
    re_prev_reg_2,
    toggle_reg_reg,
    \q_reg[0]_4 ,
    \prbs_err_count_reg[15] ,
    areset_coreclk,
    p_0_in,
    coreclk,
    reg_3_42_we,
    Q,
    \addr_reg_reg[20] ,
    mdio_rd,
    regs_wrack,
    mdio_we_rising,
    drp_ack,
    regs_rdack,
    \q_reg[15] ,
    rddata_out,
    \addr_reg_reg[6] ,
    \addr_reg_reg[0] ,
    \addr_reg_reg[12] ,
    \addr_reg_reg[14] ,
    \addr_reg_reg[20]_0 ,
    SR,
    control_reg,
    toggle_reg,
    reg_1_9_we,
    tx_disable_int);
  output rdack_reg;
  output [5:0]\q_reg[5] ;
  output \state_reg[1]_0 ;
  output \state_reg[1]_1 ;
  output \q_reg[0] ;
  output [0:0]\state_reg[1]_2 ;
  output \q_reg[0]_0 ;
  output [15:0]D;
  output control_reg_reg;
  output \q_reg[0]_1 ;
  output reg_3_1_re;
  output re_prev_reg;
  output \q_reg[0]_2 ;
  output re_prev_reg_0;
  output rdack0;
  output \rddata_out_reg[4] ;
  output re_prev_reg_1;
  output \q_reg[0]_3 ;
  output mgmt_rnw;
  output re_prev_reg_2;
  output toggle_reg_reg;
  output \q_reg[0]_4 ;
  output [15:0]\prbs_err_count_reg[15] ;
  input areset_coreclk;
  input p_0_in;
  input coreclk;
  input reg_3_42_we;
  input [5:0]Q;
  input [4:0]\addr_reg_reg[20] ;
  input mdio_rd;
  input regs_wrack;
  input mdio_we_rising;
  input drp_ack;
  input regs_rdack;
  input [15:0]\q_reg[15] ;
  input [15:0]rddata_out;
  input \addr_reg_reg[6] ;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[12] ;
  input \addr_reg_reg[14] ;
  input \addr_reg_reg[20]_0 ;
  input [0:0]SR;
  input control_reg;
  input toggle_reg;
  input reg_1_9_we;
  input tx_disable_int;

  wire [15:0]D;
  wire [5:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[12] ;
  wire \addr_reg_reg[14] ;
  wire [4:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[20]_0 ;
  wire \addr_reg_reg[6] ;
  wire areset_coreclk;
  wire control_reg;
  wire control_reg_reg;
  wire coreclk;
  wire drp_ack;
  wire indirect_read;
  wire mdio_rd;
  wire mdio_we_rising;
  wire mgmt_rnw;
  wire mgmt_wrack;
  wire p_0_in;
  wire prbs31_err_count0;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire [15:0]\q_reg[15] ;
  wire [5:0]\q_reg[5] ;
  wire rdack0;
  wire rdack_reg;
  wire [15:0]rddata_out;
  wire \rddata_out_reg[4] ;
  wire re_prev_reg;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire read_reg_i_1_n_0;
  wire reg_1_9_we;
  wire reg_3_1_re;
  wire reg_3_42_we;
  wire regs_rdack;
  wire regs_wrack;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[0]_i_4_n_0 ;
  wire \state[1]_i_1__0_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire [0:0]\state_reg[1]_2 ;
  wire toggle_reg;
  wire toggle_reg_reg;
  wire tx_disable_int;

  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h0014)) 
    control_reg_i_1
       (.I0(rdack_reg),
        .I1(\state_reg[1]_1 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_0 ),
        .O(control_reg_reg));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \d_reg[32]_i_1 
       (.I0(\state_reg[1]_1 ),
        .I1(\state_reg[1]_0 ),
        .O(mgmt_rnw));
  FDRE indirect_read_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(indirect_read),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[0]_i_1 
       (.I0(\q_reg[15] [0]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[10]_i_1 
       (.I0(\q_reg[15] [10]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[10]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[11]_i_1 
       (.I0(\q_reg[15] [11]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[11]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[12]_i_1 
       (.I0(\q_reg[15] [12]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[12]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[13]_i_1 
       (.I0(\q_reg[15] [13]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[13]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[14]_i_1 
       (.I0(\q_reg[15] [14]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[14]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'h0000022000000000)) 
    \prbs31_err_count[15]_i_1 
       (.I0(p_0_in),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(drp_ack),
        .O(prbs31_err_count0));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[15]_i_2 
       (.I0(\q_reg[15] [15]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[15]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[1]_i_1 
       (.I0(\q_reg[15] [1]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[2]_i_1 
       (.I0(\q_reg[15] [2]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[3]_i_1 
       (.I0(\q_reg[15] [3]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[4]_i_1 
       (.I0(\q_reg[15] [4]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[5]_i_1 
       (.I0(\q_reg[15] [5]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[6]_i_1 
       (.I0(\q_reg[15] [6]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[6]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[7]_i_1 
       (.I0(\q_reg[15] [7]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[7]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[8]_i_1 
       (.I0(\q_reg[15] [8]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[8]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \prbs31_err_count[9]_i_1 
       (.I0(\q_reg[15] [9]),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(rddata_out[9]),
        .O(D[9]));
  FDRE \prbs31_err_count_reg[0] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[0]),
        .Q(\prbs_err_count_reg[15] [0]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[10] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[10]),
        .Q(\prbs_err_count_reg[15] [10]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[11] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[11]),
        .Q(\prbs_err_count_reg[15] [11]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[12] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[12]),
        .Q(\prbs_err_count_reg[15] [12]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[13] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[13]),
        .Q(\prbs_err_count_reg[15] [13]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[14] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[14]),
        .Q(\prbs_err_count_reg[15] [14]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[15] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[15]),
        .Q(\prbs_err_count_reg[15] [15]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[1] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[1]),
        .Q(\prbs_err_count_reg[15] [1]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[2] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[2]),
        .Q(\prbs_err_count_reg[15] [2]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[3] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[3]),
        .Q(\prbs_err_count_reg[15] [3]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[4] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[4]),
        .Q(\prbs_err_count_reg[15] [4]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[5] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[5]),
        .Q(\prbs_err_count_reg[15] [5]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[6] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[6]),
        .Q(\prbs_err_count_reg[15] [6]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[7] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[7]),
        .Q(\prbs_err_count_reg[15] [7]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[8] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[8]),
        .Q(\prbs_err_count_reg[15] [8]),
        .R(areset_coreclk));
  FDRE \prbs31_err_count_reg[9] 
       (.C(coreclk),
        .CE(prbs31_err_count0),
        .D(D[9]),
        .Q(\prbs_err_count_reg[15] [9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \q[0]_i_1__10 
       (.I0(reg_3_42_we),
        .I1(Q[0]),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[1]_1 ),
        .O(\q_reg[5] [0]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT5 #(
    .INIT(32'h08FF0800)) 
    \q[0]_i_1__6 
       (.I0(Q[0]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(reg_1_9_we),
        .I4(tx_disable_int),
        .O(\q_reg[0]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[0]_i_2__1 
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[1]_1 ),
        .O(re_prev_reg_2));
  LUT6 #(
    .INIT(64'h0004444000004040)) 
    \q[15]_i_3 
       (.I0(\addr_reg_reg[6] ),
        .I1(\addr_reg_reg[20] [2]),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_1 ),
        .I5(rdack_reg),
        .O(\q_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'hE1F5)) 
    \q[15]_i_3__5 
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[1]_2 ),
        .I2(\state_reg[1]_1 ),
        .I3(rdack_reg),
        .O(\q_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \q[15]_i_5 
       (.I0(SR),
        .I1(\state_reg[1]_1 ),
        .I2(\state_reg[1]_0 ),
        .O(\q_reg[0]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'hCCD7FFFF)) 
    \q[15]_i_6__2 
       (.I0(rdack_reg),
        .I1(\state_reg[1]_1 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_0 ),
        .I4(\addr_reg_reg[20] [3]),
        .O(\q_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \q[1]_i_1__8 
       (.I0(reg_3_42_we),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(Q[1]),
        .O(\q_reg[5] [1]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \q[2]_i_1__8 
       (.I0(reg_3_42_we),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(Q[2]),
        .O(\q_reg[5] [2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \q[3]_i_1__8 
       (.I0(reg_3_42_we),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(Q[3]),
        .O(\q_reg[5] [3]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \q[4]_i_1__8 
       (.I0(reg_3_42_we),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(Q[4]),
        .O(\q_reg[5] [4]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \q[5]_i_2 
       (.I0(reg_3_42_we),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_1 ),
        .I3(Q[5]),
        .O(\q_reg[5] [5]));
  LUT6 #(
    .INIT(64'h0004444000004040)) 
    \q[9]_i_3 
       (.I0(\addr_reg_reg[14] ),
        .I1(\addr_reg_reg[20] [0]),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_1 ),
        .I5(rdack_reg),
        .O(\q_reg[0]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h00000208)) 
    rdack_i_1
       (.I0(rdack_reg),
        .I1(\state_reg[1]_2 ),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(regs_rdack),
        .O(rdack0));
  LUT6 #(
    .INIT(64'h0000000014000000)) 
    \rddata_out[15]_i_4 
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[1]_2 ),
        .I2(\state_reg[1]_1 ),
        .I3(rdack_reg),
        .I4(\addr_reg_reg[20] [3]),
        .I5(\addr_reg_reg[20]_0 ),
        .O(\rddata_out_reg[4] ));
  LUT6 #(
    .INIT(64'h0000000000002022)) 
    re_prev_i_1__0
       (.I0(re_prev_reg),
        .I1(\addr_reg_reg[0] ),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_0 ),
        .I4(\addr_reg_reg[20] [4]),
        .I5(\addr_reg_reg[20] [1]),
        .O(reg_3_1_re));
  LUT6 #(
    .INIT(64'h0000000002A80088)) 
    re_prev_i_2__0
       (.I0(\addr_reg_reg[20] [3]),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_1 ),
        .I4(rdack_reg),
        .I5(\addr_reg_reg[12] ),
        .O(re_prev_reg));
  LUT5 #(
    .INIT(32'hFFFFCCD7)) 
    re_prev_i_3
       (.I0(rdack_reg),
        .I1(\state_reg[1]_1 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_0 ),
        .I4(\addr_reg_reg[12] ),
        .O(re_prev_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'hFFF4)) 
    re_prev_i_3__0
       (.I0(\state_reg[1]_1 ),
        .I1(\state_reg[1]_0 ),
        .I2(\addr_reg_reg[20] [4]),
        .I3(\addr_reg_reg[20] [1]),
        .O(re_prev_reg_1));
  LUT5 #(
    .INIT(32'hABFBAAAA)) 
    read_reg_i_1
       (.I0(mdio_rd),
        .I1(regs_rdack),
        .I2(control_reg_reg),
        .I3(drp_ack),
        .I4(rdack_reg),
        .O(read_reg_i_1_n_0));
  FDRE read_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(read_reg_i_1_n_0),
        .Q(rdack_reg),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hFFFFFAFF030FAAAA)) 
    \state[0]_i_1 
       (.I0(\state[0]_i_2_n_0 ),
        .I1(mgmt_wrack),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(mdio_rd),
        .O(\state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCC00CC008B8B8B88)) 
    \state[0]_i_2 
       (.I0(\state[0]_i_4_n_0 ),
        .I1(\state_reg[1]_1 ),
        .I2(mdio_we_rising),
        .I3(indirect_read),
        .I4(mdio_rd),
        .I5(\state_reg[1]_2 ),
        .O(\state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'hAAAAA88A)) 
    \state[0]_i_3 
       (.I0(regs_wrack),
        .I1(\state_reg[1]_0 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_1 ),
        .I4(rdack_reg),
        .O(mgmt_wrack));
  LUT6 #(
    .INIT(64'hFFFFFEEF00000220)) 
    \state[0]_i_4 
       (.I0(drp_ack),
        .I1(rdack_reg),
        .I2(\state_reg[1]_1 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_0 ),
        .I5(regs_rdack),
        .O(\state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0010101400100014)) 
    \state[1]_i_1__0 
       (.I0(areset_coreclk),
        .I1(\state_reg[1]_1 ),
        .I2(\state_reg[1]_2 ),
        .I3(\state_reg[1]_0 ),
        .I4(mdio_rd),
        .I5(regs_wrack),
        .O(\state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000003032)) 
    \state[2]_i_1 
       (.I0(mdio_we_rising),
        .I1(mdio_rd),
        .I2(\state_reg[1]_0 ),
        .I3(\state_reg[1]_2 ),
        .I4(\state_reg[1]_1 ),
        .I5(areset_coreclk),
        .O(\state[2]_i_1_n_0 ));
  FDRE \state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[0]_i_1_n_0 ),
        .Q(\state_reg[1]_2 ),
        .R(areset_coreclk));
  FDRE \state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(\state_reg[1]_1 ),
        .R(1'b0));
  FDRE \state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg[1]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFEB00000014)) 
    toggle_reg_i_1
       (.I0(\state_reg[1]_0 ),
        .I1(\state_reg[1]_2 ),
        .I2(\state_reg[1]_1 ),
        .I3(rdack_reg),
        .I4(control_reg),
        .I5(toggle_reg),
        .O(toggle_reg_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_management_mdio" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_management_mdio
   (mdio_out,
    mdio_tri,
    read_reg,
    \q_reg[5] ,
    \state_reg[1] ,
    \state_reg[1]_0 ,
    Q,
    \q_reg[0] ,
    \state_reg[1]_1 ,
    \q_reg[0]_0 ,
    mgmt_drp_cs,
    \addr_reg_reg[20] ,
    \q_reg[15] ,
    \q_reg[9] ,
    \q_reg[15]_0 ,
    \q_reg[0]_1 ,
    \q_reg[15]_1 ,
    reg_3_1_re,
    re_prev_reg,
    \q_reg[15]_2 ,
    \q_reg[9]_0 ,
    \q_reg[0]_2 ,
    \q_reg[15]_3 ,
    \q_reg[15]_4 ,
    re_prev_reg_0,
    rdack0,
    \rddata_out_reg[4] ,
    re_prev_reg_1,
    \q_reg[15]_5 ,
    \q_reg[0]_3 ,
    mgmt_rnw,
    re_prev_reg_2,
    toggle_reg_reg,
    \q_reg[0]_4 ,
    \prbs_err_count_reg[15] ,
    areset_coreclk,
    coreclk,
    mdc,
    mdio_in,
    reg_3_42_we,
    \addr_reg_reg[20]_0 ,
    regs_wrack,
    regs_rdack,
    drp_ack,
    \q_reg[15]_6 ,
    rddata_out,
    reg_3_36_we,
    reg_3_41_we,
    reg_3_38_we,
    \addr_reg_reg[6] ,
    reg_3_35_we,
    \addr_reg_reg[0] ,
    \addr_reg_reg[12] ,
    reg_3_34_we,
    reg_3_37_we,
    \addr_reg_reg[14] ,
    reg_3_65535_we,
    reg_3_40_we,
    \addr_reg_reg[20]_1 ,
    prtad,
    \q_reg[2] ,
    \addr_reg_reg[4] ,
    SR,
    \q_reg[5]_0 ,
    control_reg,
    toggle_reg,
    reg_1_9_we,
    tx_disable_int);
  output mdio_out;
  output mdio_tri;
  output read_reg;
  output [5:0]\q_reg[5] ;
  output \state_reg[1] ;
  output \state_reg[1]_0 ;
  output [15:0]Q;
  output \q_reg[0] ;
  output [0:0]\state_reg[1]_1 ;
  output \q_reg[0]_0 ;
  output mgmt_drp_cs;
  output [20:0]\addr_reg_reg[20] ;
  output [14:0]\q_reg[15] ;
  output [8:0]\q_reg[9] ;
  output [14:0]\q_reg[15]_0 ;
  output \q_reg[0]_1 ;
  output [14:0]\q_reg[15]_1 ;
  output reg_3_1_re;
  output re_prev_reg;
  output [14:0]\q_reg[15]_2 ;
  output [8:0]\q_reg[9]_0 ;
  output \q_reg[0]_2 ;
  output [14:0]\q_reg[15]_3 ;
  output [14:0]\q_reg[15]_4 ;
  output re_prev_reg_0;
  output rdack0;
  output \rddata_out_reg[4] ;
  output re_prev_reg_1;
  output [15:0]\q_reg[15]_5 ;
  output \q_reg[0]_3 ;
  output mgmt_rnw;
  output re_prev_reg_2;
  output toggle_reg_reg;
  output \q_reg[0]_4 ;
  output [15:0]\prbs_err_count_reg[15] ;
  input areset_coreclk;
  input coreclk;
  input mdc;
  input mdio_in;
  input reg_3_42_we;
  input [4:0]\addr_reg_reg[20]_0 ;
  input regs_wrack;
  input regs_rdack;
  input drp_ack;
  input [15:0]\q_reg[15]_6 ;
  input [15:0]rddata_out;
  input reg_3_36_we;
  input reg_3_41_we;
  input reg_3_38_we;
  input \addr_reg_reg[6] ;
  input reg_3_35_we;
  input \addr_reg_reg[0] ;
  input \addr_reg_reg[12] ;
  input reg_3_34_we;
  input reg_3_37_we;
  input \addr_reg_reg[14] ;
  input reg_3_65535_we;
  input reg_3_40_we;
  input \addr_reg_reg[20]_1 ;
  input [4:0]prtad;
  input \q_reg[2] ;
  input \addr_reg_reg[4] ;
  input [0:0]SR;
  input [1:0]\q_reg[5]_0 ;
  input control_reg;
  input toggle_reg;
  input reg_1_9_we;
  input tx_disable_int;

  wire [15:0]Q;
  wire [0:0]SR;
  wire \addr_reg_reg[0] ;
  wire \addr_reg_reg[12] ;
  wire \addr_reg_reg[14] ;
  wire [20:0]\addr_reg_reg[20] ;
  wire [4:0]\addr_reg_reg[20]_0 ;
  wire \addr_reg_reg[20]_1 ;
  wire \addr_reg_reg[4] ;
  wire \addr_reg_reg[6] ;
  wire areset_coreclk;
  wire control_reg;
  wire coreclk;
  wire drp_ack;
  wire mdc;
  (* ASYNC_REG = "true" *) wire mdc_reg1;
  (* ASYNC_REG = "true" *) wire mdc_reg2;
  (* ASYNC_REG = "true" *) wire mdc_reg3;
  (* ASYNC_REG = "true" *) wire mdc_reg4;
  (* ASYNC_REG = "true" *) wire mdc_reg5;
  wire mdc_rising;
  wire mdc_rising_i_1_n_0;
  wire mdio_in;
  (* ASYNC_REG = "true" *) wire mdio_in_reg1;
  (* ASYNC_REG = "true" *) wire mdio_in_reg2;
  (* ASYNC_REG = "true" *) wire mdio_in_reg3;
  (* ASYNC_REG = "true" *) wire mdio_in_reg4;
  (* ASYNC_REG = "true" *) wire mdio_in_reg5;
  wire mdio_interface_i_n_4;
  wire mdio_out;
  wire mdio_rd;
  wire mdio_tri;
  wire mdio_we;
  wire mdio_we_reg;
  wire mdio_we_rising;
  wire mgmt_drp_cs;
  wire [15:0]mgmt_rddata;
  wire mgmt_rnw;
  wire p_0_in;
  wire [15:0]\prbs_err_count_reg[15] ;
  wire [4:0]prtad;
  wire \q_reg[0] ;
  wire \q_reg[0]_0 ;
  wire \q_reg[0]_1 ;
  wire \q_reg[0]_2 ;
  wire \q_reg[0]_3 ;
  wire \q_reg[0]_4 ;
  wire [14:0]\q_reg[15] ;
  wire [14:0]\q_reg[15]_0 ;
  wire [14:0]\q_reg[15]_1 ;
  wire [14:0]\q_reg[15]_2 ;
  wire [14:0]\q_reg[15]_3 ;
  wire [14:0]\q_reg[15]_4 ;
  wire [15:0]\q_reg[15]_5 ;
  wire [15:0]\q_reg[15]_6 ;
  wire \q_reg[2] ;
  wire [5:0]\q_reg[5] ;
  wire [1:0]\q_reg[5]_0 ;
  wire [8:0]\q_reg[9] ;
  wire [8:0]\q_reg[9]_0 ;
  wire rdack0;
  wire [15:0]rddata_out;
  wire \rddata_out_reg[4] ;
  wire re_prev_reg;
  wire re_prev_reg_0;
  wire re_prev_reg_1;
  wire re_prev_reg_2;
  wire read_reg;
  wire reg_1_9_we;
  wire reg_3_1_re;
  wire reg_3_34_we;
  wire reg_3_35_we;
  wire reg_3_36_we;
  wire reg_3_37_we;
  wire reg_3_38_we;
  wire reg_3_40_we;
  wire reg_3_41_we;
  wire reg_3_42_we;
  wire reg_3_65535_we;
  wire regs_rdack;
  wire regs_wrack;
  wire \state_reg[1] ;
  wire \state_reg[1]_0 ;
  wire [0:0]\state_reg[1]_1 ;
  wire toggle_reg;
  wire toggle_reg_reg;
  wire tx_disable_int;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ipif_access ipif_access_inst
       (.D(mgmt_rddata),
        .Q(Q[5:0]),
        .SR(SR),
        .\addr_reg_reg[0] (\addr_reg_reg[0] ),
        .\addr_reg_reg[12] (\addr_reg_reg[12] ),
        .\addr_reg_reg[14] (\addr_reg_reg[14] ),
        .\addr_reg_reg[20] (\addr_reg_reg[20]_0 ),
        .\addr_reg_reg[20]_0 (\addr_reg_reg[20]_1 ),
        .\addr_reg_reg[6] (\addr_reg_reg[6] ),
        .areset_coreclk(areset_coreclk),
        .control_reg(control_reg),
        .control_reg_reg(mgmt_drp_cs),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .mdio_rd(mdio_rd),
        .mdio_we_rising(mdio_we_rising),
        .mgmt_rnw(mgmt_rnw),
        .p_0_in(p_0_in),
        .\prbs_err_count_reg[15] (\prbs_err_count_reg[15] ),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[0]_0 (\q_reg[0]_0 ),
        .\q_reg[0]_1 (\q_reg[0]_1 ),
        .\q_reg[0]_2 (\q_reg[0]_2 ),
        .\q_reg[0]_3 (\q_reg[0]_3 ),
        .\q_reg[0]_4 (\q_reg[0]_4 ),
        .\q_reg[15] (\q_reg[15]_6 ),
        .\q_reg[5] (\q_reg[5] ),
        .rdack0(rdack0),
        .rdack_reg(read_reg),
        .rddata_out(rddata_out),
        .\rddata_out_reg[4] (\rddata_out_reg[4] ),
        .re_prev_reg(re_prev_reg),
        .re_prev_reg_0(re_prev_reg_0),
        .re_prev_reg_1(re_prev_reg_1),
        .re_prev_reg_2(re_prev_reg_2),
        .reg_1_9_we(reg_1_9_we),
        .reg_3_1_re(reg_3_1_re),
        .reg_3_42_we(reg_3_42_we),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .\state_reg[1]_0 (\state_reg[1] ),
        .\state_reg[1]_1 (\state_reg[1]_0 ),
        .\state_reg[1]_2 (\state_reg[1]_1 ),
        .toggle_reg(toggle_reg),
        .toggle_reg_reg(toggle_reg_reg),
        .tx_disable_int(tx_disable_int));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc),
        .Q(mdc_reg1),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg1),
        .Q(mdc_reg2),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg2),
        .Q(mdc_reg3),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg3),
        .Q(mdc_reg4),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE mdc_reg5_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_reg4),
        .Q(mdc_reg5),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    mdc_rising_i_1
       (.I0(mdc_reg4),
        .I1(mdc_reg5),
        .O(mdc_rising_i_1_n_0));
  FDRE mdc_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising_i_1_n_0),
        .Q(mdc_rising),
        .R(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in),
        .Q(mdio_in_reg1),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg1),
        .Q(mdio_in_reg2),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg2),
        .Q(mdio_in_reg3),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg3),
        .Q(mdio_in_reg4),
        .S(areset_coreclk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDSE mdio_in_reg5_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_in_reg4),
        .Q(mdio_in_reg5),
        .S(areset_coreclk));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_mdio_interface mdio_interface_i
       (.D(mgmt_rddata),
        .Q(Q),
        .\addr_reg_reg[20] (\addr_reg_reg[20] ),
        .\addr_reg_reg[4] (\addr_reg_reg[4] ),
        .areset_coreclk(areset_coreclk),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .mdc_rising(mdc_rising),
        .mdio_in_reg5_reg(mdio_in_reg5),
        .mdio_out(mdio_out),
        .mdio_rd(mdio_rd),
        .mdio_tri(mdio_tri),
        .mdio_we(mdio_we),
        .mdio_we_reg(mdio_we_reg),
        .mdio_we_rising_reg(mdio_interface_i_n_4),
        .mgmt_drp_cs(mgmt_drp_cs),
        .p_0_in(p_0_in),
        .prtad(prtad),
        .\q_reg[15] (\q_reg[15] ),
        .\q_reg[15]_0 (\q_reg[15]_0 ),
        .\q_reg[15]_1 (\q_reg[15]_1 ),
        .\q_reg[15]_2 (\q_reg[15]_2 ),
        .\q_reg[15]_3 (\q_reg[15]_3 ),
        .\q_reg[15]_4 (\q_reg[15]_4 ),
        .\q_reg[15]_5 (\q_reg[15]_5 ),
        .\q_reg[2] (\q_reg[2] ),
        .\q_reg[5] (\q_reg[5]_0 ),
        .\q_reg[9] (\q_reg[9] ),
        .\q_reg[9]_0 (\q_reg[9]_0 ),
        .read_reg(read_reg),
        .reg_3_34_we(reg_3_34_we),
        .reg_3_35_we(reg_3_35_we),
        .reg_3_36_we(reg_3_36_we),
        .reg_3_37_we(reg_3_37_we),
        .reg_3_38_we(reg_3_38_we),
        .reg_3_40_we(reg_3_40_we),
        .reg_3_41_we(reg_3_41_we),
        .reg_3_65535_we(reg_3_65535_we),
        .regs_rdack(regs_rdack));
  FDRE mdio_we_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_we),
        .Q(mdio_we_reg),
        .R(areset_coreclk));
  FDRE mdio_we_rising_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdio_interface_i_n_4),
        .Q(mdio_we_rising),
        .R(areset_coreclk));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_management_top" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_management_top
   (Q,
    pseudo_rand_seeds_int,
    drp_den,
    drp_daddr,
    drp_di,
    SR,
    pcs_loopback_core_int,
    core_in_testmode_wire,
    prbs31_tx_enable_core_reg_reg,
    \scr_reg_reg[57] ,
    \rd_data_reg[7] ,
    tx_66_fifo,
    \q_reg[0] ,
    mdio_out,
    mdio_tri,
    clear_test_pattern_err_count,
    tx_disable_int,
    loopback_ctrl,
    prbs31_rx_enable_core_int,
    prbs31_tx_enable_core_int,
    drp_req,
    drp_dwe,
    pma_pmd_type,
    areset_coreclk,
    prbs31_rx_enable_core_regb_reg,
    new_tx_test_seed,
    \tx_test_patt_seed_sel_reg[0] ,
    \tx_66_enc_out_reg[0] ,
    coreclk,
    reset,
    core_status,
    pcs_hi_ber_core_i,
    pcs_rx_link_up_core_sync_int,
    global_pmd_rx_signal_detect_core_i,
    drp_drpdo,
    dclk,
    mdc,
    mdio_in,
    drp_drdy,
    drp_gnt,
    dclk_reset,
    prtad,
    counter_out,
    counter_out_reg,
    counter_out_reg_0,
    pcs_reset_clear_core_intr,
    resetdone,
    pma_pmd_status_tx_fault_core_int);
  output [15:0]Q;
  output [115:0]pseudo_rand_seeds_int;
  output drp_den;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  output [0:0]SR;
  output pcs_loopback_core_int;
  output core_in_testmode_wire;
  output [3:0]prbs31_tx_enable_core_reg_reg;
  output \scr_reg_reg[57] ;
  output \rd_data_reg[7] ;
  output [0:0]tx_66_fifo;
  output \q_reg[0] ;
  output mdio_out;
  output mdio_tri;
  output clear_test_pattern_err_count;
  output tx_disable_int;
  output [0:0]loopback_ctrl;
  output prbs31_rx_enable_core_int;
  output prbs31_tx_enable_core_int;
  output drp_req;
  output drp_dwe;
  input [2:0]pma_pmd_type;
  input areset_coreclk;
  input prbs31_rx_enable_core_regb_reg;
  input new_tx_test_seed;
  input [0:0]\tx_test_patt_seed_sel_reg[0] ;
  input [0:0]\tx_66_enc_out_reg[0] ;
  input coreclk;
  input reset;
  input [0:0]core_status;
  input pcs_hi_ber_core_i;
  input pcs_rx_link_up_core_sync_int;
  input global_pmd_rx_signal_detect_core_i;
  input [15:0]drp_drpdo;
  input dclk;
  input mdc;
  input mdio_in;
  input drp_drdy;
  input drp_gnt;
  input dclk_reset;
  input [4:0]prtad;
  input counter_out;
  input counter_out_reg;
  input counter_out_reg_0;
  input pcs_reset_clear_core_intr;
  input resetdone;
  input pma_pmd_status_tx_fault_core_int;

  wire [15:0]Q;
  wire [0:0]SR;
  wire [20:0]addr;
  wire [20:0]addr_reg;
  wire areset_coreclk;
  wire clear_test_pattern_err_count;
  wire \common_reg_block/rdack0 ;
  wire \common_reg_block/reg_1_9_we ;
  wire \common_reg_block/reg_3_1_re ;
  wire \common_reg_block/reg_3_34_we ;
  wire \common_reg_block/reg_3_35_we ;
  wire \common_reg_block/reg_3_36_we ;
  wire \common_reg_block/reg_3_37_we ;
  wire \common_reg_block/reg_3_38_we ;
  wire \common_reg_block/reg_3_40_we ;
  wire \common_reg_block/reg_3_41_we ;
  wire [5:5]\common_reg_block/reg_3_42 ;
  wire \common_reg_block/reg_3_42_we ;
  wire \common_reg_block/reg_3_65535_we ;
  wire core_in_testmode_wire;
  wire [0:0]core_status;
  wire coreclk;
  wire counter_out;
  wire counter_out_reg;
  wire counter_out_reg_0;
  wire [15:0]data_wr;
  wire dclk;
  wire dclk_reset;
  wire drp_ack;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_ipif_i_n_36;
  wire drp_ipif_i_n_37;
  wire drp_ipif_i_n_38;
  wire drp_ipif_i_n_39;
  wire drp_ipif_i_n_40;
  wire drp_ipif_i_n_41;
  wire drp_ipif_i_n_42;
  wire drp_ipif_i_n_43;
  wire drp_ipif_i_n_44;
  wire drp_ipif_i_n_45;
  wire drp_ipif_i_n_46;
  wire drp_ipif_i_n_47;
  wire drp_ipif_i_n_48;
  wire drp_ipif_i_n_49;
  wire drp_ipif_i_n_50;
  wire drp_ipif_i_n_51;
  wire drp_req;
  wire global_pmd_rx_signal_detect_core_i;
  wire ieee_registers_i_n_161;
  wire ieee_registers_i_n_163;
  wire ieee_registers_i_n_164;
  wire ieee_registers_i_n_165;
  wire ieee_registers_i_n_166;
  wire ieee_registers_i_n_168;
  wire ieee_registers_i_n_169;
  wire ieee_registers_i_n_171;
  wire ieee_registers_i_n_172;
  wire ieee_registers_i_n_173;
  wire ieee_registers_i_n_174;
  wire ieee_registers_i_n_175;
  wire ieee_registers_i_n_176;
  wire ieee_registers_i_n_177;
  wire ieee_registers_i_n_178;
  wire ieee_registers_i_n_179;
  wire ieee_registers_i_n_180;
  wire ieee_registers_i_n_181;
  wire ieee_registers_i_n_182;
  wire ieee_registers_i_n_183;
  wire ieee_registers_i_n_184;
  wire ieee_registers_i_n_185;
  wire ieee_registers_i_n_186;
  wire ieee_registers_i_n_187;
  wire ieee_registers_i_n_188;
  wire ieee_registers_i_n_190;
  wire \ipif_access_inst/read_reg ;
  wire [0:0]loopback_ctrl;
  wire management_mdio_i_n_10;
  wire management_mdio_i_n_100;
  wire management_mdio_i_n_101;
  wire management_mdio_i_n_102;
  wire management_mdio_i_n_103;
  wire management_mdio_i_n_104;
  wire management_mdio_i_n_105;
  wire management_mdio_i_n_106;
  wire management_mdio_i_n_108;
  wire management_mdio_i_n_109;
  wire management_mdio_i_n_110;
  wire management_mdio_i_n_111;
  wire management_mdio_i_n_112;
  wire management_mdio_i_n_113;
  wire management_mdio_i_n_114;
  wire management_mdio_i_n_115;
  wire management_mdio_i_n_116;
  wire management_mdio_i_n_117;
  wire management_mdio_i_n_118;
  wire management_mdio_i_n_119;
  wire management_mdio_i_n_12;
  wire management_mdio_i_n_120;
  wire management_mdio_i_n_121;
  wire management_mdio_i_n_122;
  wire management_mdio_i_n_123;
  wire management_mdio_i_n_124;
  wire management_mdio_i_n_125;
  wire management_mdio_i_n_126;
  wire management_mdio_i_n_127;
  wire management_mdio_i_n_128;
  wire management_mdio_i_n_129;
  wire management_mdio_i_n_13;
  wire management_mdio_i_n_130;
  wire management_mdio_i_n_131;
  wire management_mdio_i_n_132;
  wire management_mdio_i_n_133;
  wire management_mdio_i_n_134;
  wire management_mdio_i_n_135;
  wire management_mdio_i_n_136;
  wire management_mdio_i_n_137;
  wire management_mdio_i_n_138;
  wire management_mdio_i_n_139;
  wire management_mdio_i_n_14;
  wire management_mdio_i_n_140;
  wire management_mdio_i_n_141;
  wire management_mdio_i_n_142;
  wire management_mdio_i_n_143;
  wire management_mdio_i_n_144;
  wire management_mdio_i_n_145;
  wire management_mdio_i_n_146;
  wire management_mdio_i_n_147;
  wire management_mdio_i_n_148;
  wire management_mdio_i_n_149;
  wire management_mdio_i_n_15;
  wire management_mdio_i_n_150;
  wire management_mdio_i_n_151;
  wire management_mdio_i_n_152;
  wire management_mdio_i_n_153;
  wire management_mdio_i_n_154;
  wire management_mdio_i_n_155;
  wire management_mdio_i_n_156;
  wire management_mdio_i_n_157;
  wire management_mdio_i_n_158;
  wire management_mdio_i_n_159;
  wire management_mdio_i_n_16;
  wire management_mdio_i_n_160;
  wire management_mdio_i_n_161;
  wire management_mdio_i_n_162;
  wire management_mdio_i_n_163;
  wire management_mdio_i_n_164;
  wire management_mdio_i_n_166;
  wire management_mdio_i_n_167;
  wire management_mdio_i_n_168;
  wire management_mdio_i_n_169;
  wire management_mdio_i_n_17;
  wire management_mdio_i_n_170;
  wire management_mdio_i_n_171;
  wire management_mdio_i_n_172;
  wire management_mdio_i_n_173;
  wire management_mdio_i_n_174;
  wire management_mdio_i_n_175;
  wire management_mdio_i_n_176;
  wire management_mdio_i_n_177;
  wire management_mdio_i_n_178;
  wire management_mdio_i_n_179;
  wire management_mdio_i_n_18;
  wire management_mdio_i_n_180;
  wire management_mdio_i_n_181;
  wire management_mdio_i_n_182;
  wire management_mdio_i_n_183;
  wire management_mdio_i_n_184;
  wire management_mdio_i_n_186;
  wire management_mdio_i_n_187;
  wire management_mdio_i_n_188;
  wire management_mdio_i_n_19;
  wire management_mdio_i_n_20;
  wire management_mdio_i_n_21;
  wire management_mdio_i_n_22;
  wire management_mdio_i_n_27;
  wire management_mdio_i_n_28;
  wire management_mdio_i_n_29;
  wire management_mdio_i_n_3;
  wire management_mdio_i_n_4;
  wire management_mdio_i_n_5;
  wire management_mdio_i_n_52;
  wire management_mdio_i_n_53;
  wire management_mdio_i_n_54;
  wire management_mdio_i_n_55;
  wire management_mdio_i_n_56;
  wire management_mdio_i_n_57;
  wire management_mdio_i_n_58;
  wire management_mdio_i_n_59;
  wire management_mdio_i_n_6;
  wire management_mdio_i_n_60;
  wire management_mdio_i_n_61;
  wire management_mdio_i_n_62;
  wire management_mdio_i_n_63;
  wire management_mdio_i_n_64;
  wire management_mdio_i_n_65;
  wire management_mdio_i_n_66;
  wire management_mdio_i_n_67;
  wire management_mdio_i_n_68;
  wire management_mdio_i_n_69;
  wire management_mdio_i_n_7;
  wire management_mdio_i_n_70;
  wire management_mdio_i_n_71;
  wire management_mdio_i_n_72;
  wire management_mdio_i_n_73;
  wire management_mdio_i_n_74;
  wire management_mdio_i_n_75;
  wire management_mdio_i_n_76;
  wire management_mdio_i_n_77;
  wire management_mdio_i_n_78;
  wire management_mdio_i_n_79;
  wire management_mdio_i_n_8;
  wire management_mdio_i_n_80;
  wire management_mdio_i_n_81;
  wire management_mdio_i_n_82;
  wire management_mdio_i_n_83;
  wire management_mdio_i_n_84;
  wire management_mdio_i_n_85;
  wire management_mdio_i_n_86;
  wire management_mdio_i_n_87;
  wire management_mdio_i_n_88;
  wire management_mdio_i_n_89;
  wire management_mdio_i_n_9;
  wire management_mdio_i_n_90;
  wire management_mdio_i_n_91;
  wire management_mdio_i_n_92;
  wire management_mdio_i_n_93;
  wire management_mdio_i_n_94;
  wire management_mdio_i_n_95;
  wire management_mdio_i_n_96;
  wire management_mdio_i_n_97;
  wire management_mdio_i_n_98;
  wire management_mdio_i_n_99;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire mgmt_drp_cs;
  wire mgmt_rnw;
  wire new_tx_test_seed;
  wire [5:0]pcs_ber_count;
  wire [7:0]pcs_error_block_count;
  wire pcs_hi_ber_core_i;
  wire pcs_loopback_core_int;
  wire pcs_reset_clear_core_intr;
  wire pcs_rx_link_up_core_sync_int;
  wire [15:0]pcs_test_pattern_error_count;
  wire pma_pmd_status_tx_fault_core_int;
  wire [2:0]pma_pmd_type;
  wire [15:0]prbs31_err_count;
  wire prbs31_rx_enable_core_int;
  wire prbs31_rx_enable_core_regb_reg;
  wire prbs31_tx_enable_core_int;
  wire [3:0]prbs31_tx_enable_core_reg_reg;
  wire [15:0]prbs_err_count;
  wire [4:0]prtad;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[0] ;
  wire \rd_data_reg[7] ;
  wire [15:0]rddata_out;
  wire regs_rdack;
  wire regs_wrack;
  wire reset;
  wire resetdone;
  wire \scr_reg_reg[57] ;
  wire \synch_1/control_reg ;
  wire \synch_1/toggle_reg ;
  wire [0:0]\tx_66_enc_out_reg[0] ;
  wire [0:0]tx_66_fifo;
  wire tx_disable_int;
  wire [0:0]\tx_test_patt_seed_sel_reg[0] ;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_drp_ipif drp_ipif_i
       (.D(addr[15:0]),
        .Q({drp_ipif_i_n_36,drp_ipif_i_n_37,drp_ipif_i_n_38,drp_ipif_i_n_39,drp_ipif_i_n_40,drp_ipif_i_n_41,drp_ipif_i_n_42,drp_ipif_i_n_43,drp_ipif_i_n_44,drp_ipif_i_n_45,drp_ipif_i_n_46,drp_ipif_i_n_47,drp_ipif_i_n_48,drp_ipif_i_n_49,drp_ipif_i_n_50,drp_ipif_i_n_51}),
        .control_reg(\synch_1/control_reg ),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_ack(drp_ack),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .mgmt_drp_cs(mgmt_drp_cs),
        .mgmt_rnw(mgmt_rnw),
        .\shift_reg_reg[15] ({data_wr[15],management_mdio_i_n_12,management_mdio_i_n_13,management_mdio_i_n_14,management_mdio_i_n_15,management_mdio_i_n_16,management_mdio_i_n_17,management_mdio_i_n_18,management_mdio_i_n_19,management_mdio_i_n_20,management_mdio_i_n_21,management_mdio_i_n_22,data_wr[3:0]}),
        .\state_reg[2] (management_mdio_i_n_187),
        .toggle_reg(\synch_1/toggle_reg ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ieee_counters ieee_counters_i
       (.Q(pcs_error_block_count),
        .SR(ieee_registers_i_n_169),
        .coreclk(coreclk),
        .counter_out(counter_out),
        .counter_out_reg(counter_out_reg),
        .counter_out_reg_0(counter_out_reg_0),
        .data_out_reg(ieee_registers_i_n_168),
        .data_out_reg_0(ieee_registers_i_n_166),
        .out(pcs_test_pattern_error_count),
        .\q_reg[5] (pcs_ber_count));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_ieee_registers ieee_registers_i
       (.D({ieee_registers_i_n_173,ieee_registers_i_n_174,ieee_registers_i_n_175,ieee_registers_i_n_176,ieee_registers_i_n_177,ieee_registers_i_n_178,ieee_registers_i_n_179,ieee_registers_i_n_180,ieee_registers_i_n_181,ieee_registers_i_n_182,ieee_registers_i_n_183,ieee_registers_i_n_184,ieee_registers_i_n_185,ieee_registers_i_n_186,ieee_registers_i_n_187,ieee_registers_i_n_188}),
        .Q({data_wr[15],management_mdio_i_n_12,management_mdio_i_n_15,data_wr[0]}),
        .SR(ieee_registers_i_n_169),
        .\addr_reg_reg[0]_0 (management_mdio_i_n_133),
        .\addr_reg_reg[16]_0 (management_mdio_i_n_108),
        .\addr_reg_reg[5]_0 (management_mdio_i_n_91),
        .clear_test_pattern_err_count(clear_test_pattern_err_count),
        .core_in_testmode_wire(core_in_testmode_wire),
        .core_status(core_status),
        .coreclk(coreclk),
        .d1_reg(pcs_loopback_core_int),
        .d1_reg_0(Q),
        .\devad_reg_reg[4] (addr),
        .global_pmd_rx_signal_detect_core_i(global_pmd_rx_signal_detect_core_i),
        .indirect_read_reg(ieee_registers_i_n_190),
        .loopback_ctrl(loopback_ctrl),
        .mgmt_rnw(mgmt_rnw),
        .new_tx_test_seed(new_tx_test_seed),
        .out(pcs_test_pattern_error_count),
        .\pcs_ber_count_reg[5] (ieee_registers_i_n_168),
        .\pcs_ber_count_reg[5]_0 (pcs_ber_count),
        .\pcs_error_block_count_reg[7] (pcs_error_block_count),
        .pcs_hi_ber_core_i(pcs_hi_ber_core_i),
        .pcs_reset_clear_core_intr(pcs_reset_clear_core_intr),
        .pcs_rx_link_up_core_sync_int(pcs_rx_link_up_core_sync_int),
        .\pcs_test_pattern_error_count_reg[15] (ieee_registers_i_n_166),
        .pma_pmd_status_tx_fault_core_int(pma_pmd_status_tx_fault_core_int),
        .pma_pmd_type(pma_pmd_type),
        .\prbs31_err_count_reg[15] (prbs31_err_count),
        .prbs31_rx_enable_core_int(prbs31_rx_enable_core_int),
        .prbs31_rx_enable_core_regb_reg(prbs31_rx_enable_core_regb_reg),
        .prbs31_tx_enable_core_int(prbs31_tx_enable_core_int),
        .\prbs_err_count_reg[0] ({\common_reg_block/reg_3_42 ,prbs31_tx_enable_core_reg_reg}),
        .\prbs_err_count_reg[15] (prbs_err_count),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[0] (\q_reg[0] ),
        .\q_reg[0]_0 (ieee_registers_i_n_161),
        .\q_reg[0]_1 (ieee_registers_i_n_163),
        .\q_reg[0]_2 (ieee_registers_i_n_164),
        .\q_reg[0]_3 (ieee_registers_i_n_165),
        .\q_reg[0]_4 (ieee_registers_i_n_171),
        .\q_reg[2] (SR),
        .\rd_data_reg[7] (\rd_data_reg[7] ),
        .rdack0(\common_reg_block/rdack0 ),
        .rddata_out(rddata_out),
        .\rddata_out_reg[0] (ieee_registers_i_n_172),
        .re_prev_reg({addr_reg[20],addr_reg[16],addr_reg[5],addr_reg[3],addr_reg[0]}),
        .read_reg(\ipif_access_inst/read_reg ),
        .read_reg_reg(management_mdio_i_n_27),
        .read_reg_reg_0(management_mdio_i_n_164),
        .reg_1_9_we(\common_reg_block/reg_1_9_we ),
        .reg_3_1_re(\common_reg_block/reg_3_1_re ),
        .reg_3_34_we(\common_reg_block/reg_3_34_we ),
        .reg_3_35_we(\common_reg_block/reg_3_35_we ),
        .reg_3_36_we(\common_reg_block/reg_3_36_we ),
        .reg_3_37_we(\common_reg_block/reg_3_37_we ),
        .reg_3_38_we(\common_reg_block/reg_3_38_we ),
        .reg_3_40_we(\common_reg_block/reg_3_40_we ),
        .reg_3_41_we(\common_reg_block/reg_3_41_we ),
        .reg_3_42_we(\common_reg_block/reg_3_42_we ),
        .reg_3_65535_we(\common_reg_block/reg_3_65535_we ),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .reset(reset),
        .resetdone(resetdone),
        .\scr_reg_reg[57] (\scr_reg_reg[57] ),
        .\shift_reg_reg[0] (management_mdio_i_n_188),
        .\shift_reg_reg[15] ({management_mdio_i_n_109,management_mdio_i_n_110,management_mdio_i_n_111,management_mdio_i_n_112,management_mdio_i_n_113,management_mdio_i_n_114,management_mdio_i_n_115,management_mdio_i_n_116,management_mdio_i_n_117,management_mdio_i_n_118,management_mdio_i_n_119,management_mdio_i_n_120,management_mdio_i_n_121,management_mdio_i_n_122,management_mdio_i_n_123}),
        .\shift_reg_reg[15]_0 ({management_mdio_i_n_92,management_mdio_i_n_93,management_mdio_i_n_94,management_mdio_i_n_95,management_mdio_i_n_96,management_mdio_i_n_97,management_mdio_i_n_98,management_mdio_i_n_99,management_mdio_i_n_100,management_mdio_i_n_101,management_mdio_i_n_102,management_mdio_i_n_103,management_mdio_i_n_104,management_mdio_i_n_105,management_mdio_i_n_106}),
        .\shift_reg_reg[15]_1 ({management_mdio_i_n_52,management_mdio_i_n_53,management_mdio_i_n_54,management_mdio_i_n_55,management_mdio_i_n_56,management_mdio_i_n_57,management_mdio_i_n_58,management_mdio_i_n_59,management_mdio_i_n_60,management_mdio_i_n_61,management_mdio_i_n_62,management_mdio_i_n_63,management_mdio_i_n_64,management_mdio_i_n_65,management_mdio_i_n_66}),
        .\shift_reg_reg[15]_2 ({management_mdio_i_n_76,management_mdio_i_n_77,management_mdio_i_n_78,management_mdio_i_n_79,management_mdio_i_n_80,management_mdio_i_n_81,management_mdio_i_n_82,management_mdio_i_n_83,management_mdio_i_n_84,management_mdio_i_n_85,management_mdio_i_n_86,management_mdio_i_n_87,management_mdio_i_n_88,management_mdio_i_n_89,management_mdio_i_n_90}),
        .\shift_reg_reg[15]_3 ({management_mdio_i_n_168,management_mdio_i_n_169,management_mdio_i_n_170,management_mdio_i_n_171,management_mdio_i_n_172,management_mdio_i_n_173,management_mdio_i_n_174,management_mdio_i_n_175,management_mdio_i_n_176,management_mdio_i_n_177,management_mdio_i_n_178,management_mdio_i_n_179,management_mdio_i_n_180,management_mdio_i_n_181,management_mdio_i_n_182,management_mdio_i_n_183}),
        .\shift_reg_reg[15]_4 ({management_mdio_i_n_149,management_mdio_i_n_150,management_mdio_i_n_151,management_mdio_i_n_152,management_mdio_i_n_153,management_mdio_i_n_154,management_mdio_i_n_155,management_mdio_i_n_156,management_mdio_i_n_157,management_mdio_i_n_158,management_mdio_i_n_159,management_mdio_i_n_160,management_mdio_i_n_161,management_mdio_i_n_162,management_mdio_i_n_163}),
        .\shift_reg_reg[15]_5 ({management_mdio_i_n_134,management_mdio_i_n_135,management_mdio_i_n_136,management_mdio_i_n_137,management_mdio_i_n_138,management_mdio_i_n_139,management_mdio_i_n_140,management_mdio_i_n_141,management_mdio_i_n_142,management_mdio_i_n_143,management_mdio_i_n_144,management_mdio_i_n_145,management_mdio_i_n_146,management_mdio_i_n_147,management_mdio_i_n_148}),
        .\shift_reg_reg[9] ({management_mdio_i_n_124,management_mdio_i_n_125,management_mdio_i_n_126,management_mdio_i_n_127,management_mdio_i_n_128,management_mdio_i_n_129,management_mdio_i_n_130,management_mdio_i_n_131,management_mdio_i_n_132}),
        .\shift_reg_reg[9]_0 ({management_mdio_i_n_67,management_mdio_i_n_68,management_mdio_i_n_69,management_mdio_i_n_70,management_mdio_i_n_71,management_mdio_i_n_72,management_mdio_i_n_73,management_mdio_i_n_74,management_mdio_i_n_75}),
        .\state_reg[0] (management_mdio_i_n_28),
        .\state_reg[1] (management_mdio_i_n_10),
        .\state_reg[1]_0 (management_mdio_i_n_184),
        .\state_reg[1]_1 (management_mdio_i_n_167),
        .\state_reg[2] (management_mdio_i_n_9),
        .\state_reg[2]_0 (management_mdio_i_n_29),
        .\state_reg[2]_1 (management_mdio_i_n_186),
        .\state_reg[2]_2 (management_mdio_i_n_166),
        .\state_reg[2]_3 ({management_mdio_i_n_3,management_mdio_i_n_4,management_mdio_i_n_5,management_mdio_i_n_6,management_mdio_i_n_7,management_mdio_i_n_8}),
        .\tx_66_enc_out_reg[0] (\tx_66_enc_out_reg[0] ),
        .tx_66_fifo(tx_66_fifo),
        .tx_disable_int(tx_disable_int),
        .\tx_test_patt_seed_sel_reg[0] (\tx_test_patt_seed_sel_reg[0] ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_management_mdio management_mdio_i
       (.Q({data_wr[15],management_mdio_i_n_12,management_mdio_i_n_13,management_mdio_i_n_14,management_mdio_i_n_15,management_mdio_i_n_16,management_mdio_i_n_17,management_mdio_i_n_18,management_mdio_i_n_19,management_mdio_i_n_20,management_mdio_i_n_21,management_mdio_i_n_22,data_wr[3:0]}),
        .SR(SR),
        .\addr_reg_reg[0] (ieee_registers_i_n_164),
        .\addr_reg_reg[12] (ieee_registers_i_n_172),
        .\addr_reg_reg[14] (ieee_registers_i_n_161),
        .\addr_reg_reg[20] (addr),
        .\addr_reg_reg[20]_0 ({addr_reg[20],addr_reg[16],addr_reg[5],addr_reg[3],addr_reg[0]}),
        .\addr_reg_reg[20]_1 (ieee_registers_i_n_165),
        .\addr_reg_reg[4] (ieee_registers_i_n_171),
        .\addr_reg_reg[6] (ieee_registers_i_n_163),
        .areset_coreclk(areset_coreclk),
        .control_reg(\synch_1/control_reg ),
        .coreclk(coreclk),
        .drp_ack(drp_ack),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .mgmt_drp_cs(mgmt_drp_cs),
        .mgmt_rnw(mgmt_rnw),
        .\prbs_err_count_reg[15] (prbs31_err_count),
        .prtad(prtad),
        .\q_reg[0] (management_mdio_i_n_27),
        .\q_reg[0]_0 (management_mdio_i_n_29),
        .\q_reg[0]_1 (management_mdio_i_n_91),
        .\q_reg[0]_2 (management_mdio_i_n_133),
        .\q_reg[0]_3 (management_mdio_i_n_184),
        .\q_reg[0]_4 (management_mdio_i_n_188),
        .\q_reg[15] ({management_mdio_i_n_52,management_mdio_i_n_53,management_mdio_i_n_54,management_mdio_i_n_55,management_mdio_i_n_56,management_mdio_i_n_57,management_mdio_i_n_58,management_mdio_i_n_59,management_mdio_i_n_60,management_mdio_i_n_61,management_mdio_i_n_62,management_mdio_i_n_63,management_mdio_i_n_64,management_mdio_i_n_65,management_mdio_i_n_66}),
        .\q_reg[15]_0 ({management_mdio_i_n_76,management_mdio_i_n_77,management_mdio_i_n_78,management_mdio_i_n_79,management_mdio_i_n_80,management_mdio_i_n_81,management_mdio_i_n_82,management_mdio_i_n_83,management_mdio_i_n_84,management_mdio_i_n_85,management_mdio_i_n_86,management_mdio_i_n_87,management_mdio_i_n_88,management_mdio_i_n_89,management_mdio_i_n_90}),
        .\q_reg[15]_1 ({management_mdio_i_n_92,management_mdio_i_n_93,management_mdio_i_n_94,management_mdio_i_n_95,management_mdio_i_n_96,management_mdio_i_n_97,management_mdio_i_n_98,management_mdio_i_n_99,management_mdio_i_n_100,management_mdio_i_n_101,management_mdio_i_n_102,management_mdio_i_n_103,management_mdio_i_n_104,management_mdio_i_n_105,management_mdio_i_n_106}),
        .\q_reg[15]_2 ({management_mdio_i_n_109,management_mdio_i_n_110,management_mdio_i_n_111,management_mdio_i_n_112,management_mdio_i_n_113,management_mdio_i_n_114,management_mdio_i_n_115,management_mdio_i_n_116,management_mdio_i_n_117,management_mdio_i_n_118,management_mdio_i_n_119,management_mdio_i_n_120,management_mdio_i_n_121,management_mdio_i_n_122,management_mdio_i_n_123}),
        .\q_reg[15]_3 ({management_mdio_i_n_134,management_mdio_i_n_135,management_mdio_i_n_136,management_mdio_i_n_137,management_mdio_i_n_138,management_mdio_i_n_139,management_mdio_i_n_140,management_mdio_i_n_141,management_mdio_i_n_142,management_mdio_i_n_143,management_mdio_i_n_144,management_mdio_i_n_145,management_mdio_i_n_146,management_mdio_i_n_147,management_mdio_i_n_148}),
        .\q_reg[15]_4 ({management_mdio_i_n_149,management_mdio_i_n_150,management_mdio_i_n_151,management_mdio_i_n_152,management_mdio_i_n_153,management_mdio_i_n_154,management_mdio_i_n_155,management_mdio_i_n_156,management_mdio_i_n_157,management_mdio_i_n_158,management_mdio_i_n_159,management_mdio_i_n_160,management_mdio_i_n_161,management_mdio_i_n_162,management_mdio_i_n_163}),
        .\q_reg[15]_5 ({management_mdio_i_n_168,management_mdio_i_n_169,management_mdio_i_n_170,management_mdio_i_n_171,management_mdio_i_n_172,management_mdio_i_n_173,management_mdio_i_n_174,management_mdio_i_n_175,management_mdio_i_n_176,management_mdio_i_n_177,management_mdio_i_n_178,management_mdio_i_n_179,management_mdio_i_n_180,management_mdio_i_n_181,management_mdio_i_n_182,management_mdio_i_n_183}),
        .\q_reg[15]_6 ({drp_ipif_i_n_36,drp_ipif_i_n_37,drp_ipif_i_n_38,drp_ipif_i_n_39,drp_ipif_i_n_40,drp_ipif_i_n_41,drp_ipif_i_n_42,drp_ipif_i_n_43,drp_ipif_i_n_44,drp_ipif_i_n_45,drp_ipif_i_n_46,drp_ipif_i_n_47,drp_ipif_i_n_48,drp_ipif_i_n_49,drp_ipif_i_n_50,drp_ipif_i_n_51}),
        .\q_reg[2] (ieee_registers_i_n_190),
        .\q_reg[5] ({management_mdio_i_n_3,management_mdio_i_n_4,management_mdio_i_n_5,management_mdio_i_n_6,management_mdio_i_n_7,management_mdio_i_n_8}),
        .\q_reg[5]_0 ({\common_reg_block/reg_3_42 ,prbs31_tx_enable_core_reg_reg[2]}),
        .\q_reg[9] ({management_mdio_i_n_67,management_mdio_i_n_68,management_mdio_i_n_69,management_mdio_i_n_70,management_mdio_i_n_71,management_mdio_i_n_72,management_mdio_i_n_73,management_mdio_i_n_74,management_mdio_i_n_75}),
        .\q_reg[9]_0 ({management_mdio_i_n_124,management_mdio_i_n_125,management_mdio_i_n_126,management_mdio_i_n_127,management_mdio_i_n_128,management_mdio_i_n_129,management_mdio_i_n_130,management_mdio_i_n_131,management_mdio_i_n_132}),
        .rdack0(\common_reg_block/rdack0 ),
        .rddata_out(rddata_out),
        .\rddata_out_reg[4] (management_mdio_i_n_166),
        .re_prev_reg(management_mdio_i_n_108),
        .re_prev_reg_0(management_mdio_i_n_164),
        .re_prev_reg_1(management_mdio_i_n_167),
        .re_prev_reg_2(management_mdio_i_n_186),
        .read_reg(\ipif_access_inst/read_reg ),
        .reg_1_9_we(\common_reg_block/reg_1_9_we ),
        .reg_3_1_re(\common_reg_block/reg_3_1_re ),
        .reg_3_34_we(\common_reg_block/reg_3_34_we ),
        .reg_3_35_we(\common_reg_block/reg_3_35_we ),
        .reg_3_36_we(\common_reg_block/reg_3_36_we ),
        .reg_3_37_we(\common_reg_block/reg_3_37_we ),
        .reg_3_38_we(\common_reg_block/reg_3_38_we ),
        .reg_3_40_we(\common_reg_block/reg_3_40_we ),
        .reg_3_41_we(\common_reg_block/reg_3_41_we ),
        .reg_3_42_we(\common_reg_block/reg_3_42_we ),
        .reg_3_65535_we(\common_reg_block/reg_3_65535_we ),
        .regs_rdack(regs_rdack),
        .regs_wrack(regs_wrack),
        .\state_reg[1] (management_mdio_i_n_9),
        .\state_reg[1]_0 (management_mdio_i_n_10),
        .\state_reg[1]_1 (management_mdio_i_n_28),
        .toggle_reg(\synch_1/toggle_reg ),
        .toggle_reg_reg(management_mdio_i_n_187),
        .tx_disable_int(tx_disable_int));
  FDRE \prbs_err_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_188),
        .Q(prbs_err_count[0]),
        .R(reset));
  FDRE \prbs_err_count_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_178),
        .Q(prbs_err_count[10]),
        .R(reset));
  FDRE \prbs_err_count_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_177),
        .Q(prbs_err_count[11]),
        .R(reset));
  FDRE \prbs_err_count_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_176),
        .Q(prbs_err_count[12]),
        .R(reset));
  FDRE \prbs_err_count_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_175),
        .Q(prbs_err_count[13]),
        .R(reset));
  FDRE \prbs_err_count_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_174),
        .Q(prbs_err_count[14]),
        .R(reset));
  FDRE \prbs_err_count_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_173),
        .Q(prbs_err_count[15]),
        .R(reset));
  FDRE \prbs_err_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_187),
        .Q(prbs_err_count[1]),
        .R(reset));
  FDRE \prbs_err_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_186),
        .Q(prbs_err_count[2]),
        .R(reset));
  FDRE \prbs_err_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_185),
        .Q(prbs_err_count[3]),
        .R(reset));
  FDRE \prbs_err_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_184),
        .Q(prbs_err_count[4]),
        .R(reset));
  FDRE \prbs_err_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_183),
        .Q(prbs_err_count[5]),
        .R(reset));
  FDRE \prbs_err_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_182),
        .Q(prbs_err_count[6]),
        .R(reset));
  FDRE \prbs_err_count_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_181),
        .Q(prbs_err_count[7]),
        .R(reset));
  FDRE \prbs_err_count_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_180),
        .Q(prbs_err_count[8]),
        .R(reset));
  FDRE \prbs_err_count_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(ieee_registers_i_n_179),
        .Q(prbs_err_count[9]),
        .R(reset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_mdio_interface" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_mdio_interface
   (mdio_out,
    mdio_tri,
    mdio_we,
    mdio_rd,
    mdio_we_rising_reg,
    Q,
    \addr_reg_reg[20] ,
    p_0_in,
    \q_reg[15] ,
    \q_reg[9] ,
    \q_reg[15]_0 ,
    \q_reg[15]_1 ,
    \q_reg[15]_2 ,
    \q_reg[9]_0 ,
    \q_reg[15]_3 ,
    \q_reg[15]_4 ,
    \q_reg[15]_5 ,
    areset_coreclk,
    mdc_rising,
    mdio_in_reg5_reg,
    coreclk,
    mdio_we_reg,
    regs_rdack,
    mgmt_drp_cs,
    drp_ack,
    read_reg,
    reg_3_36_we,
    reg_3_41_we,
    reg_3_38_we,
    reg_3_35_we,
    reg_3_34_we,
    reg_3_37_we,
    reg_3_65535_we,
    reg_3_40_we,
    prtad,
    \q_reg[2] ,
    \addr_reg_reg[4] ,
    \q_reg[5] ,
    D);
  output mdio_out;
  output mdio_tri;
  output mdio_we;
  output mdio_rd;
  output mdio_we_rising_reg;
  output [15:0]Q;
  output [20:0]\addr_reg_reg[20] ;
  output p_0_in;
  output [14:0]\q_reg[15] ;
  output [8:0]\q_reg[9] ;
  output [14:0]\q_reg[15]_0 ;
  output [14:0]\q_reg[15]_1 ;
  output [14:0]\q_reg[15]_2 ;
  output [8:0]\q_reg[9]_0 ;
  output [14:0]\q_reg[15]_3 ;
  output [14:0]\q_reg[15]_4 ;
  output [15:0]\q_reg[15]_5 ;
  input areset_coreclk;
  input mdc_rising;
  input mdio_in_reg5_reg;
  input coreclk;
  input mdio_we_reg;
  input regs_rdack;
  input mgmt_drp_cs;
  input drp_ack;
  input read_reg;
  input reg_3_36_we;
  input reg_3_41_we;
  input reg_3_38_we;
  input reg_3_35_we;
  input reg_3_34_we;
  input reg_3_37_we;
  input reg_3_65535_we;
  input reg_3_40_we;
  input [4:0]prtad;
  input \q_reg[2] ;
  input \addr_reg_reg[4] ;
  input [1:0]\q_reg[5] ;
  input [15:0]D;

  wire [15:0]D;
  wire \FSM_sequential_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_state[0]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_3_n_0 ;
  wire \FSM_sequential_state[2]_i_1__0_n_0 ;
  wire \FSM_sequential_state[2]_i_2_n_0 ;
  wire \FSM_sequential_state[3]_i_1_n_0 ;
  wire \FSM_sequential_state[3]_i_2_n_0 ;
  wire \FSM_sequential_state[3]_i_3_n_0 ;
  wire [15:0]Q;
  wire \addr_reg[15]_i_2_n_0 ;
  wire \addr_reg[15]_i_3_n_0 ;
  wire \addr_reg[16]_i_2_n_0 ;
  wire \addr_reg[17]_i_2_n_0 ;
  wire \addr_reg[17]_i_3_n_0 ;
  wire \addr_reg[17]_i_4_n_0 ;
  wire \addr_reg[17]_i_5_n_0 ;
  wire \addr_reg[17]_i_6_n_0 ;
  wire \addr_reg[17]_i_7_n_0 ;
  wire \addr_reg[17]_i_8_n_0 ;
  wire \addr_reg[8]_i_2_n_0 ;
  wire [20:0]\addr_reg_reg[20] ;
  wire \addr_reg_reg[4] ;
  wire [15:0]an_addr;
  wire an_addr_int;
  wire \an_addr_int[0]_i_1_n_0 ;
  wire \an_addr_int[10]_i_1_n_0 ;
  wire \an_addr_int[11]_i_1_n_0 ;
  wire \an_addr_int[11]_i_3_n_0 ;
  wire \an_addr_int[11]_i_4_n_0 ;
  wire \an_addr_int[11]_i_5_n_0 ;
  wire \an_addr_int[11]_i_6_n_0 ;
  wire \an_addr_int[12]_i_1_n_0 ;
  wire \an_addr_int[13]_i_1_n_0 ;
  wire \an_addr_int[14]_i_1_n_0 ;
  wire \an_addr_int[15]_i_10_n_0 ;
  wire \an_addr_int[15]_i_11_n_0 ;
  wire \an_addr_int[15]_i_12_n_0 ;
  wire \an_addr_int[15]_i_13_n_0 ;
  wire \an_addr_int[15]_i_2_n_0 ;
  wire \an_addr_int[15]_i_3_n_0 ;
  wire \an_addr_int[15]_i_4_n_0 ;
  wire \an_addr_int[15]_i_5_n_0 ;
  wire \an_addr_int[15]_i_7_n_0 ;
  wire \an_addr_int[15]_i_8_n_0 ;
  wire \an_addr_int[15]_i_9_n_0 ;
  wire \an_addr_int[1]_i_1_n_0 ;
  wire \an_addr_int[2]_i_1_n_0 ;
  wire \an_addr_int[3]_i_1_n_0 ;
  wire \an_addr_int[3]_i_3_n_0 ;
  wire \an_addr_int[3]_i_4_n_0 ;
  wire \an_addr_int[3]_i_5_n_0 ;
  wire \an_addr_int[3]_i_6_n_0 ;
  wire \an_addr_int[4]_i_1_n_0 ;
  wire \an_addr_int[5]_i_1_n_0 ;
  wire \an_addr_int[6]_i_1_n_0 ;
  wire \an_addr_int[7]_i_1_n_0 ;
  wire \an_addr_int[7]_i_3_n_0 ;
  wire \an_addr_int[7]_i_4_n_0 ;
  wire \an_addr_int[7]_i_5_n_0 ;
  wire \an_addr_int[7]_i_6_n_0 ;
  wire \an_addr_int[8]_i_1_n_0 ;
  wire \an_addr_int[9]_i_1_n_0 ;
  wire \an_addr_int_reg[11]_i_2_n_0 ;
  wire \an_addr_int_reg[11]_i_2_n_1 ;
  wire \an_addr_int_reg[11]_i_2_n_2 ;
  wire \an_addr_int_reg[11]_i_2_n_3 ;
  wire \an_addr_int_reg[11]_i_2_n_4 ;
  wire \an_addr_int_reg[11]_i_2_n_5 ;
  wire \an_addr_int_reg[11]_i_2_n_6 ;
  wire \an_addr_int_reg[11]_i_2_n_7 ;
  wire \an_addr_int_reg[15]_i_6_n_1 ;
  wire \an_addr_int_reg[15]_i_6_n_2 ;
  wire \an_addr_int_reg[15]_i_6_n_3 ;
  wire \an_addr_int_reg[15]_i_6_n_4 ;
  wire \an_addr_int_reg[15]_i_6_n_5 ;
  wire \an_addr_int_reg[15]_i_6_n_6 ;
  wire \an_addr_int_reg[15]_i_6_n_7 ;
  wire \an_addr_int_reg[3]_i_2_n_0 ;
  wire \an_addr_int_reg[3]_i_2_n_1 ;
  wire \an_addr_int_reg[3]_i_2_n_2 ;
  wire \an_addr_int_reg[3]_i_2_n_3 ;
  wire \an_addr_int_reg[3]_i_2_n_4 ;
  wire \an_addr_int_reg[3]_i_2_n_5 ;
  wire \an_addr_int_reg[3]_i_2_n_6 ;
  wire \an_addr_int_reg[3]_i_2_n_7 ;
  wire \an_addr_int_reg[7]_i_2_n_0 ;
  wire \an_addr_int_reg[7]_i_2_n_1 ;
  wire \an_addr_int_reg[7]_i_2_n_2 ;
  wire \an_addr_int_reg[7]_i_2_n_3 ;
  wire \an_addr_int_reg[7]_i_2_n_4 ;
  wire \an_addr_int_reg[7]_i_2_n_5 ;
  wire \an_addr_int_reg[7]_i_2_n_6 ;
  wire \an_addr_int_reg[7]_i_2_n_7 ;
  wire areset_coreclk;
  wire \bit_count[2]_i_2_n_0 ;
  wire \bit_count[2]_i_3_n_0 ;
  wire \bit_count[2]_i_4_n_0 ;
  wire \bit_count[2]_i_5_n_0 ;
  wire \bit_count[4]_i_1_n_0 ;
  wire \bit_count[4]_i_4_n_0 ;
  wire \bit_count[4]_i_5_n_0 ;
  wire bit_count_load_en;
  wire bit_count_load_en0;
  wire [0:0]bit_count_load_value;
  wire [4:0]bit_count_reg__0;
  wire coreclk;
  wire [15:0]data_captured;
  wire \data_captured[15]_i_1_n_0 ;
  wire data_captured_0;
  wire [0:0]devad_comb;
  wire devad_match;
  wire devad_match0;
  wire devad_match_i_2_n_0;
  wire devad_match_i_3_n_0;
  wire devad_match_i_4_n_0;
  wire [4:0]devad_reg;
  wire devad_reg0;
  wire drp_ack;
  wire indirect_read_i_3_n_0;
  wire indirect_read_i_4_n_0;
  wire indirect_read_i_5_n_0;
  wire indirect_read_i_6_n_0;
  wire mdc_just_rose;
  wire mdc_rising;
  wire mdc_rising_reg__0;
  wire mdio_in_reg5_reg;
  wire mdio_out;
  wire mdio_out_i_2_n_0;
  wire mdio_out_i_3_n_0;
  wire mdio_out_int;
  wire mdio_rd;
  wire mdio_tri;
  wire mdio_tri_int;
  wire mdio_we;
  wire mdio_we_reg;
  wire mdio_we_rising_reg;
  wire mgmt_drp_cs;
  wire new_state1;
  wire opcode0;
  wire \opcode[0]_i_1_n_0 ;
  wire \opcode[1]_i_1_n_0 ;
  wire \opcode[1]_i_3_n_0 ;
  wire \opcode_reg_n_0_[0] ;
  wire p_0_in;
  wire [4:0]p_0_in__0;
  wire [15:0]pcs_addr;
  wire pcs_addr_int;
  wire \pcs_addr_int[0]_i_1_n_0 ;
  wire \pcs_addr_int[10]_i_1_n_0 ;
  wire \pcs_addr_int[11]_i_1_n_0 ;
  wire \pcs_addr_int[11]_i_3_n_0 ;
  wire \pcs_addr_int[11]_i_4_n_0 ;
  wire \pcs_addr_int[11]_i_5_n_0 ;
  wire \pcs_addr_int[11]_i_6_n_0 ;
  wire \pcs_addr_int[12]_i_1_n_0 ;
  wire \pcs_addr_int[13]_i_1_n_0 ;
  wire \pcs_addr_int[14]_i_1_n_0 ;
  wire \pcs_addr_int[15]_i_10_n_0 ;
  wire \pcs_addr_int[15]_i_11_n_0 ;
  wire \pcs_addr_int[15]_i_2_n_0 ;
  wire \pcs_addr_int[15]_i_3_n_0 ;
  wire \pcs_addr_int[15]_i_4_n_0 ;
  wire \pcs_addr_int[15]_i_5_n_0 ;
  wire \pcs_addr_int[15]_i_7_n_0 ;
  wire \pcs_addr_int[15]_i_8_n_0 ;
  wire \pcs_addr_int[15]_i_9_n_0 ;
  wire \pcs_addr_int[1]_i_1_n_0 ;
  wire \pcs_addr_int[2]_i_1_n_0 ;
  wire \pcs_addr_int[3]_i_1_n_0 ;
  wire \pcs_addr_int[3]_i_3_n_0 ;
  wire \pcs_addr_int[3]_i_4_n_0 ;
  wire \pcs_addr_int[3]_i_5_n_0 ;
  wire \pcs_addr_int[3]_i_6_n_0 ;
  wire \pcs_addr_int[4]_i_1_n_0 ;
  wire \pcs_addr_int[5]_i_1_n_0 ;
  wire \pcs_addr_int[6]_i_1_n_0 ;
  wire \pcs_addr_int[7]_i_1_n_0 ;
  wire \pcs_addr_int[7]_i_3_n_0 ;
  wire \pcs_addr_int[7]_i_4_n_0 ;
  wire \pcs_addr_int[7]_i_5_n_0 ;
  wire \pcs_addr_int[7]_i_6_n_0 ;
  wire \pcs_addr_int[8]_i_1_n_0 ;
  wire \pcs_addr_int[9]_i_1_n_0 ;
  wire \pcs_addr_int_reg[11]_i_2_n_0 ;
  wire \pcs_addr_int_reg[11]_i_2_n_1 ;
  wire \pcs_addr_int_reg[11]_i_2_n_2 ;
  wire \pcs_addr_int_reg[11]_i_2_n_3 ;
  wire \pcs_addr_int_reg[11]_i_2_n_4 ;
  wire \pcs_addr_int_reg[11]_i_2_n_5 ;
  wire \pcs_addr_int_reg[11]_i_2_n_6 ;
  wire \pcs_addr_int_reg[11]_i_2_n_7 ;
  wire \pcs_addr_int_reg[15]_i_6_n_1 ;
  wire \pcs_addr_int_reg[15]_i_6_n_2 ;
  wire \pcs_addr_int_reg[15]_i_6_n_3 ;
  wire \pcs_addr_int_reg[15]_i_6_n_4 ;
  wire \pcs_addr_int_reg[15]_i_6_n_5 ;
  wire \pcs_addr_int_reg[15]_i_6_n_6 ;
  wire \pcs_addr_int_reg[15]_i_6_n_7 ;
  wire \pcs_addr_int_reg[3]_i_2_n_0 ;
  wire \pcs_addr_int_reg[3]_i_2_n_1 ;
  wire \pcs_addr_int_reg[3]_i_2_n_2 ;
  wire \pcs_addr_int_reg[3]_i_2_n_3 ;
  wire \pcs_addr_int_reg[3]_i_2_n_4 ;
  wire \pcs_addr_int_reg[3]_i_2_n_5 ;
  wire \pcs_addr_int_reg[3]_i_2_n_6 ;
  wire \pcs_addr_int_reg[3]_i_2_n_7 ;
  wire \pcs_addr_int_reg[7]_i_2_n_0 ;
  wire \pcs_addr_int_reg[7]_i_2_n_1 ;
  wire \pcs_addr_int_reg[7]_i_2_n_2 ;
  wire \pcs_addr_int_reg[7]_i_2_n_3 ;
  wire \pcs_addr_int_reg[7]_i_2_n_4 ;
  wire \pcs_addr_int_reg[7]_i_2_n_5 ;
  wire \pcs_addr_int_reg[7]_i_2_n_6 ;
  wire \pcs_addr_int_reg[7]_i_2_n_7 ;
  wire [15:0]pma_addr_int;
  wire \pma_addr_int[0]_i_1_n_0 ;
  wire \pma_addr_int[10]_i_1_n_0 ;
  wire \pma_addr_int[11]_i_1_n_0 ;
  wire \pma_addr_int[11]_i_3_n_0 ;
  wire \pma_addr_int[11]_i_4_n_0 ;
  wire \pma_addr_int[11]_i_5_n_0 ;
  wire \pma_addr_int[11]_i_6_n_0 ;
  wire \pma_addr_int[12]_i_1_n_0 ;
  wire \pma_addr_int[13]_i_1_n_0 ;
  wire \pma_addr_int[14]_i_1_n_0 ;
  wire \pma_addr_int[15]_i_10_n_0 ;
  wire \pma_addr_int[15]_i_11_n_0 ;
  wire \pma_addr_int[15]_i_12_n_0 ;
  wire \pma_addr_int[15]_i_2_n_0 ;
  wire \pma_addr_int[15]_i_3_n_0 ;
  wire \pma_addr_int[15]_i_4_n_0 ;
  wire \pma_addr_int[15]_i_6_n_0 ;
  wire \pma_addr_int[15]_i_7_n_0 ;
  wire \pma_addr_int[15]_i_8_n_0 ;
  wire \pma_addr_int[15]_i_9_n_0 ;
  wire \pma_addr_int[1]_i_1_n_0 ;
  wire \pma_addr_int[2]_i_1_n_0 ;
  wire \pma_addr_int[3]_i_1_n_0 ;
  wire \pma_addr_int[3]_i_3_n_0 ;
  wire \pma_addr_int[3]_i_4_n_0 ;
  wire \pma_addr_int[3]_i_5_n_0 ;
  wire \pma_addr_int[3]_i_6_n_0 ;
  wire \pma_addr_int[4]_i_1_n_0 ;
  wire \pma_addr_int[5]_i_1_n_0 ;
  wire \pma_addr_int[6]_i_1_n_0 ;
  wire \pma_addr_int[7]_i_1_n_0 ;
  wire \pma_addr_int[7]_i_3_n_0 ;
  wire \pma_addr_int[7]_i_4_n_0 ;
  wire \pma_addr_int[7]_i_5_n_0 ;
  wire \pma_addr_int[7]_i_6_n_0 ;
  wire \pma_addr_int[8]_i_1_n_0 ;
  wire \pma_addr_int[9]_i_1_n_0 ;
  wire pma_addr_int_1;
  wire \pma_addr_int_reg[11]_i_2_n_0 ;
  wire \pma_addr_int_reg[11]_i_2_n_1 ;
  wire \pma_addr_int_reg[11]_i_2_n_2 ;
  wire \pma_addr_int_reg[11]_i_2_n_3 ;
  wire \pma_addr_int_reg[11]_i_2_n_4 ;
  wire \pma_addr_int_reg[11]_i_2_n_5 ;
  wire \pma_addr_int_reg[11]_i_2_n_6 ;
  wire \pma_addr_int_reg[11]_i_2_n_7 ;
  wire \pma_addr_int_reg[15]_i_5_n_1 ;
  wire \pma_addr_int_reg[15]_i_5_n_2 ;
  wire \pma_addr_int_reg[15]_i_5_n_3 ;
  wire \pma_addr_int_reg[15]_i_5_n_4 ;
  wire \pma_addr_int_reg[15]_i_5_n_5 ;
  wire \pma_addr_int_reg[15]_i_5_n_6 ;
  wire \pma_addr_int_reg[15]_i_5_n_7 ;
  wire \pma_addr_int_reg[3]_i_2_n_0 ;
  wire \pma_addr_int_reg[3]_i_2_n_1 ;
  wire \pma_addr_int_reg[3]_i_2_n_2 ;
  wire \pma_addr_int_reg[3]_i_2_n_3 ;
  wire \pma_addr_int_reg[3]_i_2_n_4 ;
  wire \pma_addr_int_reg[3]_i_2_n_5 ;
  wire \pma_addr_int_reg[3]_i_2_n_6 ;
  wire \pma_addr_int_reg[3]_i_2_n_7 ;
  wire \pma_addr_int_reg[7]_i_2_n_0 ;
  wire \pma_addr_int_reg[7]_i_2_n_1 ;
  wire \pma_addr_int_reg[7]_i_2_n_2 ;
  wire \pma_addr_int_reg[7]_i_2_n_3 ;
  wire \pma_addr_int_reg[7]_i_2_n_4 ;
  wire \pma_addr_int_reg[7]_i_2_n_5 ;
  wire \pma_addr_int_reg[7]_i_2_n_6 ;
  wire \pma_addr_int_reg[7]_i_2_n_7 ;
  wire [4:0]prtad;
  wire [14:0]\q_reg[15] ;
  wire [14:0]\q_reg[15]_0 ;
  wire [14:0]\q_reg[15]_1 ;
  wire [14:0]\q_reg[15]_2 ;
  wire [14:0]\q_reg[15]_3 ;
  wire [14:0]\q_reg[15]_4 ;
  wire [15:0]\q_reg[15]_5 ;
  wire \q_reg[2] ;
  wire [1:0]\q_reg[5] ;
  wire [8:0]\q_reg[9] ;
  wire [8:0]\q_reg[9]_0 ;
  wire rd0;
  wire rd_i_2_n_0;
  wire rd_i_3_n_0;
  wire rd_i_4_n_0;
  wire rd_i_5_n_0;
  wire read_reg;
  wire reg_3_34_we;
  wire reg_3_35_we;
  wire reg_3_36_we;
  wire reg_3_37_we;
  wire reg_3_38_we;
  wire reg_3_40_we;
  wire reg_3_41_we;
  wire reg_3_65535_we;
  wire regs_rdack;
  wire \shift_reg[0]_i_1_n_0 ;
  wire \shift_reg[10]_i_1_n_0 ;
  wire \shift_reg[11]_i_1_n_0 ;
  wire \shift_reg[12]_i_1_n_0 ;
  wire \shift_reg[13]_i_1_n_0 ;
  wire \shift_reg[14]_i_1_n_0 ;
  wire \shift_reg[15]_i_1_n_0 ;
  wire \shift_reg[1]_i_1_n_0 ;
  wire \shift_reg[2]_i_1_n_0 ;
  wire \shift_reg[3]_i_1_n_0 ;
  wire \shift_reg[4]_i_1_n_0 ;
  wire \shift_reg[5]_i_1_n_0 ;
  wire \shift_reg[6]_i_1_n_0 ;
  wire \shift_reg[7]_i_1_n_0 ;
  wire \shift_reg[8]_i_1_n_0 ;
  wire \shift_reg[9]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire [3:0]state;
  wire we0_out;
  wire [3:3]\NLW_an_addr_int_reg[15]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_pcs_addr_int_reg[15]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_pma_addr_int_reg[15]_i_5_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFFFFF000E015E)) 
    \FSM_sequential_state[0]_i_1__0 
       (.I0(state[3]),
        .I1(devad_comb),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .I5(\FSM_sequential_state[0]_i_2_n_0 ),
        .O(\FSM_sequential_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA1000000000)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(\FSM_sequential_state[3]_i_2_n_0 ),
        .I1(rd_i_2_n_0),
        .I2(new_state1),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[2]),
        .O(\FSM_sequential_state[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \FSM_sequential_state[1]_i_1__0 
       (.I0(\FSM_sequential_state[2]_i_2_n_0 ),
        .I1(state[1]),
        .I2(\FSM_sequential_state[1]_i_2_n_0 ),
        .I3(\FSM_sequential_state[1]_i_3_n_0 ),
        .O(\FSM_sequential_state[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h001C0000)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(\FSM_sequential_state[3]_i_2_n_0 ),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\FSM_sequential_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000030044)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(\FSM_sequential_state[3]_i_2_n_0 ),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(devad_comb),
        .O(\FSM_sequential_state[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABBEAABA)) 
    \FSM_sequential_state[2]_i_1__0 
       (.I0(\FSM_sequential_state[2]_i_2_n_0 ),
        .I1(state[3]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(\FSM_sequential_state[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00FF000000040000)) 
    \FSM_sequential_state[2]_i_2 
       (.I0(state[0]),
        .I1(new_state1),
        .I2(rd_i_2_n_0),
        .I3(state[3]),
        .I4(state[2]),
        .I5(\FSM_sequential_state[3]_i_2_n_0 ),
        .O(\FSM_sequential_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0010FFFF00100010)) 
    \FSM_sequential_state[3]_i_1 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(\FSM_sequential_state[3]_i_2_n_0 ),
        .I5(\FSM_sequential_state[3]_i_3_n_0 ),
        .O(\FSM_sequential_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_state[3]_i_2 
       (.I0(bit_count_reg__0[0]),
        .I1(bit_count_reg__0[3]),
        .I2(bit_count_reg__0[4]),
        .I3(bit_count_reg__0[2]),
        .I4(bit_count_reg__0[1]),
        .O(\FSM_sequential_state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \FSM_sequential_state[3]_i_3 
       (.I0(rd_i_2_n_0),
        .I1(state[1]),
        .I2(new_state1),
        .I3(state[0]),
        .I4(state[3]),
        .I5(state[2]),
        .O(\FSM_sequential_state[3]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_sequential_state[0]_i_1__0_n_0 ),
        .Q(state[0]),
        .R(areset_coreclk));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_sequential_state[1]_i_1__0_n_0 ),
        .Q(state[1]),
        .R(areset_coreclk));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[2] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_sequential_state[2]_i_1__0_n_0 ),
        .Q(state[2]),
        .R(areset_coreclk));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[3] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\FSM_sequential_state[3]_i_1_n_0 ),
        .Q(state[3]),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \addr_reg[0]_i_1 
       (.I0(an_addr[0]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[0]),
        .I4(\addr_reg[17]_i_2_n_0 ),
        .I5(pma_addr_int[0]),
        .O(\addr_reg_reg[20] [0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[10]_i_1 
       (.I0(an_addr[10]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[10]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[10]),
        .O(\addr_reg_reg[20] [10]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[11]_i_1 
       (.I0(an_addr[11]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[11]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[11]),
        .O(\addr_reg_reg[20] [11]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[12]_i_1 
       (.I0(an_addr[12]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[12]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[12]),
        .O(\addr_reg_reg[20] [12]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[13]_i_1 
       (.I0(an_addr[13]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[13]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[13]),
        .O(\addr_reg_reg[20] [13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[14]_i_1 
       (.I0(an_addr[14]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[14]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[14]),
        .O(\addr_reg_reg[20] [14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[15]_i_1 
       (.I0(an_addr[15]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[15]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[15]),
        .O(\addr_reg_reg[20] [15]));
  LUT6 #(
    .INIT(64'hFCFFFAFAFCFFFFFF)) 
    \addr_reg[15]_i_2 
       (.I0(Q[1]),
        .I1(devad_reg[2]),
        .I2(\addr_reg[15]_i_3_n_0 ),
        .I3(devad_reg[0]),
        .I4(devad_match_i_2_n_0),
        .I5(devad_comb),
        .O(\addr_reg[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    \addr_reg[15]_i_3 
       (.I0(Q[2]),
        .I1(devad_reg[3]),
        .I2(Q[3]),
        .I3(devad_match_i_2_n_0),
        .I4(devad_reg[4]),
        .O(\addr_reg[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFDFDFD000000FD00)) 
    \addr_reg[16]_i_1 
       (.I0(\addr_reg[17]_i_4_n_0 ),
        .I1(\addr_reg[16]_i_2_n_0 ),
        .I2(\addr_reg[17]_i_3_n_0 ),
        .I3(devad_comb),
        .I4(devad_match_i_2_n_0),
        .I5(devad_reg[0]),
        .O(\addr_reg_reg[20] [16]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \addr_reg[16]_i_2 
       (.I0(devad_reg[1]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[0]),
        .O(\addr_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA02A2AAAAAAAA)) 
    \addr_reg[17]_i_1 
       (.I0(\addr_reg[17]_i_2_n_0 ),
        .I1(devad_comb),
        .I2(devad_match_i_2_n_0),
        .I3(devad_reg[0]),
        .I4(\addr_reg[17]_i_3_n_0 ),
        .I5(\addr_reg[17]_i_4_n_0 ),
        .O(\addr_reg_reg[20] [17]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[17]_i_2 
       (.I0(devad_reg[1]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[0]),
        .O(\addr_reg[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \addr_reg[17]_i_3 
       (.I0(read_reg),
        .I1(mdio_rd),
        .I2(\addr_reg[17]_i_5_n_0 ),
        .I3(\addr_reg[17]_i_6_n_0 ),
        .I4(pcs_addr[0]),
        .O(\addr_reg[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000101000051015)) 
    \addr_reg[17]_i_4 
       (.I0(\addr_reg_reg[20] [18]),
        .I1(devad_reg[4]),
        .I2(devad_match_i_2_n_0),
        .I3(Q[3]),
        .I4(devad_reg[3]),
        .I5(Q[2]),
        .O(\addr_reg[17]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \addr_reg[17]_i_5 
       (.I0(pcs_addr[2]),
        .I1(pcs_addr[8]),
        .I2(pcs_addr[6]),
        .I3(pcs_addr[7]),
        .I4(\addr_reg[17]_i_7_n_0 ),
        .O(\addr_reg[17]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \addr_reg[17]_i_6 
       (.I0(pcs_addr[11]),
        .I1(pcs_addr[12]),
        .I2(pcs_addr[9]),
        .I3(pcs_addr[10]),
        .I4(\addr_reg[17]_i_8_n_0 ),
        .O(\addr_reg[17]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF7FFFFF)) 
    \addr_reg[17]_i_7 
       (.I0(pcs_addr[1]),
        .I1(pcs_addr[5]),
        .I2(pcs_addr[3]),
        .I3(\q_reg[5] [0]),
        .I4(\q_reg[5] [1]),
        .O(\addr_reg[17]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \addr_reg[17]_i_8 
       (.I0(pcs_addr[14]),
        .I1(pcs_addr[13]),
        .I2(pcs_addr[15]),
        .I3(pcs_addr[4]),
        .O(\addr_reg[17]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[18]_i_1 
       (.I0(devad_reg[2]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[1]),
        .O(\addr_reg_reg[20] [18]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[19]_i_1 
       (.I0(devad_reg[3]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[2]),
        .O(\addr_reg_reg[20] [19]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[1]_i_1 
       (.I0(an_addr[1]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[1]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[1]),
        .O(\addr_reg_reg[20] [1]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \addr_reg[20]_i_1 
       (.I0(devad_reg[4]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[3]),
        .O(\addr_reg_reg[20] [20]));
  LUT6 #(
    .INIT(64'hBBB88888BBB8BBB8)) 
    \addr_reg[2]_i_1 
       (.I0(an_addr[2]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[2]),
        .I4(pma_addr_int[2]),
        .I5(\addr_reg[16]_i_2_n_0 ),
        .O(\addr_reg_reg[20] [2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[3]_i_1 
       (.I0(an_addr[3]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[3]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[3]),
        .O(\addr_reg_reg[20] [3]));
  LUT6 #(
    .INIT(64'hBBB88888BBB8BBB8)) 
    \addr_reg[4]_i_1 
       (.I0(an_addr[4]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[4]),
        .I4(pma_addr_int[4]),
        .I5(\addr_reg[16]_i_2_n_0 ),
        .O(\addr_reg_reg[20] [4]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \addr_reg[5]_i_1 
       (.I0(an_addr[5]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[5]),
        .I4(\addr_reg[17]_i_2_n_0 ),
        .I5(pma_addr_int[5]),
        .O(\addr_reg_reg[20] [5]));
  LUT6 #(
    .INIT(64'hBBB88888BBB8BBB8)) 
    \addr_reg[6]_i_1 
       (.I0(an_addr[6]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[6]),
        .I4(pma_addr_int[6]),
        .I5(\addr_reg[16]_i_2_n_0 ),
        .O(\addr_reg_reg[20] [6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[7]_i_1 
       (.I0(an_addr[7]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[7]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[7]),
        .O(\addr_reg_reg[20] [7]));
  LUT6 #(
    .INIT(64'hBBB88888BBB8BBB8)) 
    \addr_reg[8]_i_1 
       (.I0(an_addr[8]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(\addr_reg[8]_i_2_n_0 ),
        .I3(pcs_addr[8]),
        .I4(pma_addr_int[8]),
        .I5(\addr_reg[16]_i_2_n_0 ),
        .O(\addr_reg_reg[20] [8]));
  LUT6 #(
    .INIT(64'h1D1D1DFF1D1D1D1D)) 
    \addr_reg[8]_i_2 
       (.I0(Q[0]),
        .I1(devad_match_i_2_n_0),
        .I2(devad_reg[1]),
        .I3(mdio_rd),
        .I4(read_reg),
        .I5(p_0_in),
        .O(\addr_reg[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \addr_reg[9]_i_1 
       (.I0(an_addr[9]),
        .I1(\addr_reg[15]_i_2_n_0 ),
        .I2(pcs_addr[9]),
        .I3(\addr_reg[17]_i_2_n_0 ),
        .I4(pma_addr_int[9]),
        .O(\addr_reg_reg[20] [9]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[0]_i_1 
       (.I0(\an_addr_int_reg[3]_i_2_n_7 ),
        .I1(new_state1),
        .I2(devad_comb),
        .O(\an_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[10]_i_1 
       (.I0(\an_addr_int_reg[11]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[9]),
        .O(\an_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[11]_i_1 
       (.I0(\an_addr_int_reg[11]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[10]),
        .O(\an_addr_int[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[11]_i_3 
       (.I0(an_addr[11]),
        .O(\an_addr_int[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[11]_i_4 
       (.I0(an_addr[10]),
        .O(\an_addr_int[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[11]_i_5 
       (.I0(an_addr[9]),
        .O(\an_addr_int[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[11]_i_6 
       (.I0(an_addr[8]),
        .O(\an_addr_int[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[12]_i_1 
       (.I0(\an_addr_int_reg[15]_i_6_n_7 ),
        .I1(new_state1),
        .I2(Q[11]),
        .O(\an_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[13]_i_1 
       (.I0(\an_addr_int_reg[15]_i_6_n_6 ),
        .I1(new_state1),
        .I2(Q[12]),
        .O(\an_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[14]_i_1 
       (.I0(\an_addr_int_reg[15]_i_6_n_5 ),
        .I1(new_state1),
        .I2(Q[13]),
        .O(\an_addr_int[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \an_addr_int[15]_i_1 
       (.I0(\an_addr_int[15]_i_3_n_0 ),
        .I1(\an_addr_int[15]_i_4_n_0 ),
        .I2(devad_reg[2]),
        .I3(devad_reg[4]),
        .I4(devad_reg[3]),
        .I5(\an_addr_int[15]_i_5_n_0 ),
        .O(an_addr_int));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[15]_i_10 
       (.I0(an_addr[15]),
        .O(\an_addr_int[15]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[15]_i_11 
       (.I0(an_addr[14]),
        .O(\an_addr_int[15]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[15]_i_12 
       (.I0(an_addr[13]),
        .O(\an_addr_int[15]_i_12_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[15]_i_13 
       (.I0(an_addr[12]),
        .O(\an_addr_int[15]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[15]_i_2 
       (.I0(\an_addr_int_reg[15]_i_6_n_4 ),
        .I1(new_state1),
        .I2(Q[14]),
        .O(\an_addr_int[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \an_addr_int[15]_i_3 
       (.I0(mdc_rising),
        .I1(state[1]),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[3]),
        .I5(mdio_out_i_3_n_0),
        .O(\an_addr_int[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \an_addr_int[15]_i_4 
       (.I0(devad_reg[0]),
        .I1(\opcode_reg_n_0_[0] ),
        .I2(devad_reg[1]),
        .O(\an_addr_int[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \an_addr_int[15]_i_5 
       (.I0(\an_addr_int[15]_i_7_n_0 ),
        .I1(\an_addr_int[15]_i_8_n_0 ),
        .I2(\an_addr_int[15]_i_9_n_0 ),
        .I3(an_addr[4]),
        .I4(an_addr[9]),
        .I5(an_addr[0]),
        .O(\an_addr_int[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \an_addr_int[15]_i_7 
       (.I0(an_addr[15]),
        .I1(an_addr[11]),
        .I2(new_state1),
        .I3(an_addr[12]),
        .I4(an_addr[2]),
        .I5(an_addr[5]),
        .O(\an_addr_int[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \an_addr_int[15]_i_8 
       (.I0(an_addr[14]),
        .I1(an_addr[7]),
        .I2(an_addr[10]),
        .I3(an_addr[8]),
        .O(\an_addr_int[15]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \an_addr_int[15]_i_9 
       (.I0(an_addr[13]),
        .I1(an_addr[6]),
        .I2(an_addr[3]),
        .I3(an_addr[1]),
        .O(\an_addr_int[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[1]_i_1 
       (.I0(\an_addr_int_reg[3]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[0]),
        .O(\an_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[2]_i_1 
       (.I0(\an_addr_int_reg[3]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[1]),
        .O(\an_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[3]_i_1 
       (.I0(\an_addr_int_reg[3]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[2]),
        .O(\an_addr_int[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[3]_i_3 
       (.I0(an_addr[3]),
        .O(\an_addr_int[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[3]_i_4 
       (.I0(an_addr[2]),
        .O(\an_addr_int[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[3]_i_5 
       (.I0(an_addr[1]),
        .O(\an_addr_int[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \an_addr_int[3]_i_6 
       (.I0(an_addr[0]),
        .O(\an_addr_int[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[4]_i_1 
       (.I0(\an_addr_int_reg[7]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[3]),
        .O(\an_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[5]_i_1 
       (.I0(\an_addr_int_reg[7]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[4]),
        .O(\an_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[6]_i_1 
       (.I0(\an_addr_int_reg[7]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[5]),
        .O(\an_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[7]_i_1 
       (.I0(\an_addr_int_reg[7]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[6]),
        .O(\an_addr_int[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[7]_i_3 
       (.I0(an_addr[7]),
        .O(\an_addr_int[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[7]_i_4 
       (.I0(an_addr[6]),
        .O(\an_addr_int[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[7]_i_5 
       (.I0(an_addr[5]),
        .O(\an_addr_int[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \an_addr_int[7]_i_6 
       (.I0(an_addr[4]),
        .O(\an_addr_int[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[8]_i_1 
       (.I0(\an_addr_int_reg[11]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[7]),
        .O(\an_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \an_addr_int[9]_i_1 
       (.I0(\an_addr_int_reg[11]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[8]),
        .O(\an_addr_int[9]_i_1_n_0 ));
  FDRE \an_addr_int_reg[0] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[0]_i_1_n_0 ),
        .Q(an_addr[0]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[10] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[10]_i_1_n_0 ),
        .Q(an_addr[10]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[11] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[11]_i_1_n_0 ),
        .Q(an_addr[11]),
        .R(areset_coreclk));
  CARRY4 \an_addr_int_reg[11]_i_2 
       (.CI(\an_addr_int_reg[7]_i_2_n_0 ),
        .CO({\an_addr_int_reg[11]_i_2_n_0 ,\an_addr_int_reg[11]_i_2_n_1 ,\an_addr_int_reg[11]_i_2_n_2 ,\an_addr_int_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\an_addr_int_reg[11]_i_2_n_4 ,\an_addr_int_reg[11]_i_2_n_5 ,\an_addr_int_reg[11]_i_2_n_6 ,\an_addr_int_reg[11]_i_2_n_7 }),
        .S({\an_addr_int[11]_i_3_n_0 ,\an_addr_int[11]_i_4_n_0 ,\an_addr_int[11]_i_5_n_0 ,\an_addr_int[11]_i_6_n_0 }));
  FDRE \an_addr_int_reg[12] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[12]_i_1_n_0 ),
        .Q(an_addr[12]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[13] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[13]_i_1_n_0 ),
        .Q(an_addr[13]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[14] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[14]_i_1_n_0 ),
        .Q(an_addr[14]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[15] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[15]_i_2_n_0 ),
        .Q(an_addr[15]),
        .R(areset_coreclk));
  CARRY4 \an_addr_int_reg[15]_i_6 
       (.CI(\an_addr_int_reg[11]_i_2_n_0 ),
        .CO({\NLW_an_addr_int_reg[15]_i_6_CO_UNCONNECTED [3],\an_addr_int_reg[15]_i_6_n_1 ,\an_addr_int_reg[15]_i_6_n_2 ,\an_addr_int_reg[15]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\an_addr_int_reg[15]_i_6_n_4 ,\an_addr_int_reg[15]_i_6_n_5 ,\an_addr_int_reg[15]_i_6_n_6 ,\an_addr_int_reg[15]_i_6_n_7 }),
        .S({\an_addr_int[15]_i_10_n_0 ,\an_addr_int[15]_i_11_n_0 ,\an_addr_int[15]_i_12_n_0 ,\an_addr_int[15]_i_13_n_0 }));
  FDRE \an_addr_int_reg[1] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[1]_i_1_n_0 ),
        .Q(an_addr[1]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[2] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[2]_i_1_n_0 ),
        .Q(an_addr[2]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[3] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[3]_i_1_n_0 ),
        .Q(an_addr[3]),
        .R(areset_coreclk));
  CARRY4 \an_addr_int_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\an_addr_int_reg[3]_i_2_n_0 ,\an_addr_int_reg[3]_i_2_n_1 ,\an_addr_int_reg[3]_i_2_n_2 ,\an_addr_int_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,an_addr[0]}),
        .O({\an_addr_int_reg[3]_i_2_n_4 ,\an_addr_int_reg[3]_i_2_n_5 ,\an_addr_int_reg[3]_i_2_n_6 ,\an_addr_int_reg[3]_i_2_n_7 }),
        .S({\an_addr_int[3]_i_3_n_0 ,\an_addr_int[3]_i_4_n_0 ,\an_addr_int[3]_i_5_n_0 ,\an_addr_int[3]_i_6_n_0 }));
  FDRE \an_addr_int_reg[4] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[4]_i_1_n_0 ),
        .Q(an_addr[4]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[5] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[5]_i_1_n_0 ),
        .Q(an_addr[5]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[6] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[6]_i_1_n_0 ),
        .Q(an_addr[6]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[7] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[7]_i_1_n_0 ),
        .Q(an_addr[7]),
        .R(areset_coreclk));
  CARRY4 \an_addr_int_reg[7]_i_2 
       (.CI(\an_addr_int_reg[3]_i_2_n_0 ),
        .CO({\an_addr_int_reg[7]_i_2_n_0 ,\an_addr_int_reg[7]_i_2_n_1 ,\an_addr_int_reg[7]_i_2_n_2 ,\an_addr_int_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\an_addr_int_reg[7]_i_2_n_4 ,\an_addr_int_reg[7]_i_2_n_5 ,\an_addr_int_reg[7]_i_2_n_6 ,\an_addr_int_reg[7]_i_2_n_7 }),
        .S({\an_addr_int[7]_i_3_n_0 ,\an_addr_int[7]_i_4_n_0 ,\an_addr_int[7]_i_5_n_0 ,\an_addr_int[7]_i_6_n_0 }));
  FDRE \an_addr_int_reg[8] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[8]_i_1_n_0 ),
        .Q(an_addr[8]),
        .R(areset_coreclk));
  FDRE \an_addr_int_reg[9] 
       (.C(coreclk),
        .CE(an_addr_int),
        .D(\an_addr_int[9]_i_1_n_0 ),
        .Q(an_addr[9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \bit_count[0]_i_1 
       (.I0(bit_count_load_value),
        .I1(bit_count_load_en),
        .I2(bit_count_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'hB88B)) 
    \bit_count[1]_i_1 
       (.I0(bit_count_load_value),
        .I1(bit_count_load_en),
        .I2(bit_count_reg__0[0]),
        .I3(bit_count_reg__0[1]),
        .O(p_0_in__0[1]));
  LUT6 #(
    .INIT(64'hFFFFEFEEEFEEFFFF)) 
    \bit_count[2]_i_1 
       (.I0(\bit_count[2]_i_2_n_0 ),
        .I1(\bit_count[2]_i_3_n_0 ),
        .I2(mdio_out_i_3_n_0),
        .I3(\bit_count[2]_i_4_n_0 ),
        .I4(\bit_count[2]_i_5_n_0 ),
        .I5(bit_count_reg__0[2]),
        .O(p_0_in__0[2]));
  LUT5 #(
    .INIT(32'h0000008F)) 
    \bit_count[2]_i_2 
       (.I0(bit_count_load_en0),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[3]),
        .O(\bit_count[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0200)) 
    \bit_count[2]_i_3 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .O(\bit_count[2]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \bit_count[2]_i_4 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[1]),
        .O(\bit_count[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \bit_count[2]_i_5 
       (.I0(bit_count_reg__0[0]),
        .I1(bit_count_reg__0[1]),
        .O(\bit_count[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBB88888888B)) 
    \bit_count[3]_i_1 
       (.I0(bit_count_load_value),
        .I1(bit_count_load_en),
        .I2(bit_count_reg__0[2]),
        .I3(bit_count_reg__0[1]),
        .I4(bit_count_reg__0[0]),
        .I5(bit_count_reg__0[3]),
        .O(p_0_in__0[3]));
  LUT5 #(
    .INIT(32'h02004141)) 
    \bit_count[3]_i_2 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(bit_count_load_en0),
        .I4(state[1]),
        .O(bit_count_load_value));
  LUT3 #(
    .INIT(8'hA8)) 
    \bit_count[4]_i_1 
       (.I0(mdc_rising),
        .I1(mdio_out_i_3_n_0),
        .I2(bit_count_load_en),
        .O(\bit_count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h10FF1000100010FF)) 
    \bit_count[4]_i_2 
       (.I0(state[3]),
        .I1(state[0]),
        .I2(\bit_count[4]_i_4_n_0 ),
        .I3(bit_count_load_en),
        .I4(\bit_count[4]_i_5_n_0 ),
        .I5(bit_count_reg__0[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h0000220000CC3F33)) 
    \bit_count[4]_i_3 
       (.I0(bit_count_load_en0),
        .I1(state[0]),
        .I2(mdio_out_i_3_n_0),
        .I3(state[2]),
        .I4(state[3]),
        .I5(state[1]),
        .O(bit_count_load_en));
  LUT2 #(
    .INIT(4'h1)) 
    \bit_count[4]_i_4 
       (.I0(state[1]),
        .I1(state[2]),
        .O(\bit_count[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_count[4]_i_5 
       (.I0(bit_count_reg__0[3]),
        .I1(bit_count_reg__0[0]),
        .I2(bit_count_reg__0[1]),
        .I3(bit_count_reg__0[2]),
        .O(\bit_count[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \bit_count[4]_i_6 
       (.I0(mdio_out_i_3_n_0),
        .I1(new_state1),
        .I2(rd_i_2_n_0),
        .O(bit_count_load_en0));
  FDRE \bit_count_reg[0] 
       (.C(coreclk),
        .CE(\bit_count[4]_i_1_n_0 ),
        .D(p_0_in__0[0]),
        .Q(bit_count_reg__0[0]),
        .R(1'b0));
  FDRE \bit_count_reg[1] 
       (.C(coreclk),
        .CE(\bit_count[4]_i_1_n_0 ),
        .D(p_0_in__0[1]),
        .Q(bit_count_reg__0[1]),
        .R(1'b0));
  FDRE \bit_count_reg[2] 
       (.C(coreclk),
        .CE(\bit_count[4]_i_1_n_0 ),
        .D(p_0_in__0[2]),
        .Q(bit_count_reg__0[2]),
        .R(1'b0));
  FDRE \bit_count_reg[3] 
       (.C(coreclk),
        .CE(\bit_count[4]_i_1_n_0 ),
        .D(p_0_in__0[3]),
        .Q(bit_count_reg__0[3]),
        .R(1'b0));
  FDRE \bit_count_reg[4] 
       (.C(coreclk),
        .CE(\bit_count[4]_i_1_n_0 ),
        .D(p_0_in__0[4]),
        .Q(bit_count_reg__0[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000044400040)) 
    \data_captured[15]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(regs_rdack),
        .I3(mgmt_drp_cs),
        .I4(drp_ack),
        .I5(devad_match),
        .O(\data_captured[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44400040)) 
    \data_captured[15]_i_2 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(regs_rdack),
        .I3(mgmt_drp_cs),
        .I4(drp_ack),
        .O(data_captured_0));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[0] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[0]),
        .Q(data_captured[0]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[10] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[10]),
        .Q(data_captured[10]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[11] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[11]),
        .Q(data_captured[11]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[12] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[12]),
        .Q(data_captured[12]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[13] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[13]),
        .Q(data_captured[13]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[14] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[14]),
        .Q(data_captured[14]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[15] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[15]),
        .Q(data_captured[15]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[1] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[1]),
        .Q(data_captured[1]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[2] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[2]),
        .Q(data_captured[2]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[3] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[3]),
        .Q(data_captured[3]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[4] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[4]),
        .Q(data_captured[4]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[5] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[5]),
        .Q(data_captured[5]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[6] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[6]),
        .Q(data_captured[6]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[7] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[7]),
        .Q(data_captured[7]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[8] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[8]),
        .Q(data_captured[8]),
        .R(\data_captured[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_captured_reg[9] 
       (.C(coreclk),
        .CE(data_captured_0),
        .D(D[9]),
        .Q(data_captured[9]),
        .R(\data_captured[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000B8FCBBFF)) 
    devad_match_i_1
       (.I0(devad_reg[1]),
        .I1(devad_match_i_2_n_0),
        .I2(Q[0]),
        .I3(devad_reg[2]),
        .I4(Q[1]),
        .I5(devad_match_i_3_n_0),
        .O(devad_match0));
  LUT5 #(
    .INIT(32'hFFFFFFBF)) 
    devad_match_i_2
       (.I0(mdio_out_i_3_n_0),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[0]),
        .O(devad_match_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFEFEFFFFAEFEA)) 
    devad_match_i_3
       (.I0(devad_match_i_4_n_0),
        .I1(devad_reg[4]),
        .I2(devad_match_i_2_n_0),
        .I3(Q[3]),
        .I4(devad_reg[3]),
        .I5(Q[2]),
        .O(devad_match_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h47)) 
    devad_match_i_4
       (.I0(devad_reg[0]),
        .I1(devad_match_i_2_n_0),
        .I2(devad_comb),
        .O(devad_match_i_4_n_0));
  FDRE devad_match_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(devad_match0),
        .Q(devad_match),
        .R(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    \devad_reg[4]_i_1 
       (.I0(mdc_rising),
        .I1(devad_match_i_2_n_0),
        .O(devad_reg0));
  FDRE \devad_reg_reg[0] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(devad_comb),
        .Q(devad_reg[0]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[1] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[0]),
        .Q(devad_reg[1]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[2] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[1]),
        .Q(devad_reg[2]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[3] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[2]),
        .Q(devad_reg[3]),
        .R(areset_coreclk));
  FDRE \devad_reg_reg[4] 
       (.C(coreclk),
        .CE(devad_reg0),
        .D(Q[3]),
        .Q(devad_reg[4]),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    indirect_read_i_1
       (.I0(\q_reg[2] ),
        .I1(pcs_addr[4]),
        .I2(pcs_addr[2]),
        .I3(indirect_read_i_3_n_0),
        .I4(indirect_read_i_4_n_0),
        .I5(indirect_read_i_5_n_0),
        .O(p_0_in));
  LUT4 #(
    .INIT(16'h0001)) 
    indirect_read_i_3
       (.I0(pcs_addr[14]),
        .I1(pcs_addr[8]),
        .I2(pcs_addr[13]),
        .I3(pcs_addr[11]),
        .O(indirect_read_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    indirect_read_i_4
       (.I0(pcs_addr[7]),
        .I1(pcs_addr[15]),
        .I2(pcs_addr[6]),
        .I3(pcs_addr[12]),
        .I4(pcs_addr[3]),
        .I5(indirect_read_i_6_n_0),
        .O(indirect_read_i_4_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    indirect_read_i_5
       (.I0(pcs_addr[1]),
        .I1(pcs_addr[5]),
        .I2(pcs_addr[0]),
        .O(indirect_read_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'hE)) 
    indirect_read_i_6
       (.I0(pcs_addr[9]),
        .I1(pcs_addr[10]),
        .O(indirect_read_i_6_n_0));
  FDRE mdc_just_rose_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising_reg__0),
        .Q(mdc_just_rose),
        .R(areset_coreclk));
  FDRE mdc_rising_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mdc_rising),
        .Q(mdc_rising_reg__0),
        .R(1'b0));
  FDRE mdio_in_reg_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(mdio_in_reg5_reg),
        .Q(devad_comb),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hEFEFFFFFFFAFFFFF)) 
    mdio_out_i_1
       (.I0(mdio_out_i_2_n_0),
        .I1(Q[15]),
        .I2(state[1]),
        .I3(mdio_out_i_3_n_0),
        .I4(new_state1),
        .I5(state[0]),
        .O(mdio_out_int));
  LUT2 #(
    .INIT(4'hB)) 
    mdio_out_i_2
       (.I0(state[3]),
        .I1(state[2]),
        .O(mdio_out_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    mdio_out_i_3
       (.I0(bit_count_reg__0[4]),
        .I1(bit_count_reg__0[2]),
        .I2(bit_count_reg__0[1]),
        .I3(bit_count_reg__0[0]),
        .I4(bit_count_reg__0[3]),
        .O(mdio_out_i_3_n_0));
  FDRE mdio_out_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(mdio_out_int),
        .Q(mdio_out),
        .R(areset_coreclk));
  LUT6 #(
    .INIT(64'hBFBFFFFFFFBFFFFF)) 
    mdio_tri_i_1
       (.I0(state[3]),
        .I1(state[2]),
        .I2(state[1]),
        .I3(mdio_out_i_3_n_0),
        .I4(new_state1),
        .I5(state[0]),
        .O(mdio_tri_int));
  FDSE mdio_tri_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(mdio_tri_int),
        .Q(mdio_tri),
        .S(areset_coreclk));
  LUT2 #(
    .INIT(4'h2)) 
    mdio_we_rising_i_1
       (.I0(mdio_we),
        .I1(mdio_we_reg),
        .O(mdio_we_rising_reg));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[0]_i_1 
       (.I0(Q[0]),
        .I1(opcode0),
        .I2(\opcode_reg_n_0_[0] ),
        .O(\opcode[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \opcode[1]_i_1 
       (.I0(Q[1]),
        .I1(opcode0),
        .I2(new_state1),
        .O(\opcode[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \opcode[1]_i_2 
       (.I0(bit_count_reg__0[4]),
        .I1(mdc_rising),
        .I2(bit_count_reg__0[2]),
        .I3(\opcode[1]_i_3_n_0 ),
        .I4(bit_count_reg__0[0]),
        .I5(bit_count_reg__0[1]),
        .O(opcode0));
  LUT5 #(
    .INIT(32'hFFFFFFBF)) 
    \opcode[1]_i_3 
       (.I0(bit_count_reg__0[3]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[1]),
        .O(\opcode[1]_i_3_n_0 ));
  FDRE \opcode_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\opcode[0]_i_1_n_0 ),
        .Q(\opcode_reg_n_0_[0] ),
        .R(areset_coreclk));
  FDRE \opcode_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\opcode[1]_i_1_n_0 ),
        .Q(new_state1),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[0]_i_1 
       (.I0(\pcs_addr_int_reg[3]_i_2_n_7 ),
        .I1(new_state1),
        .I2(devad_comb),
        .O(\pcs_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[10]_i_1 
       (.I0(\pcs_addr_int_reg[11]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[9]),
        .O(\pcs_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[11]_i_1 
       (.I0(\pcs_addr_int_reg[11]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[10]),
        .O(\pcs_addr_int[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[11]_i_3 
       (.I0(pcs_addr[11]),
        .O(\pcs_addr_int[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[11]_i_4 
       (.I0(pcs_addr[10]),
        .O(\pcs_addr_int[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[11]_i_5 
       (.I0(pcs_addr[9]),
        .O(\pcs_addr_int[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[11]_i_6 
       (.I0(pcs_addr[8]),
        .O(\pcs_addr_int[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[12]_i_1 
       (.I0(\pcs_addr_int_reg[15]_i_6_n_7 ),
        .I1(new_state1),
        .I2(Q[11]),
        .O(\pcs_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[13]_i_1 
       (.I0(\pcs_addr_int_reg[15]_i_6_n_6 ),
        .I1(new_state1),
        .I2(Q[12]),
        .O(\pcs_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[14]_i_1 
       (.I0(\pcs_addr_int_reg[15]_i_6_n_5 ),
        .I1(new_state1),
        .I2(Q[13]),
        .O(\pcs_addr_int[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2202)) 
    \pcs_addr_int[15]_i_1 
       (.I0(\an_addr_int[15]_i_3_n_0 ),
        .I1(\pcs_addr_int[15]_i_3_n_0 ),
        .I2(\pcs_addr_int[15]_i_4_n_0 ),
        .I3(\pcs_addr_int[15]_i_5_n_0 ),
        .O(pcs_addr_int));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[15]_i_10 
       (.I0(pcs_addr[13]),
        .O(\pcs_addr_int[15]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[15]_i_11 
       (.I0(pcs_addr[12]),
        .O(\pcs_addr_int[15]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[15]_i_2 
       (.I0(\pcs_addr_int_reg[15]_i_6_n_4 ),
        .I1(new_state1),
        .I2(Q[14]),
        .O(\pcs_addr_int[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    \pcs_addr_int[15]_i_3 
       (.I0(devad_reg[4]),
        .I1(devad_reg[3]),
        .I2(devad_reg[2]),
        .I3(devad_reg[1]),
        .I4(\opcode_reg_n_0_[0] ),
        .I5(devad_reg[0]),
        .O(\pcs_addr_int[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pcs_addr_int[15]_i_4 
       (.I0(pcs_addr[6]),
        .I1(new_state1),
        .I2(pcs_addr[8]),
        .I3(pcs_addr[3]),
        .I4(pcs_addr[7]),
        .I5(pcs_addr[10]),
        .O(\pcs_addr_int[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFFF)) 
    \pcs_addr_int[15]_i_5 
       (.I0(indirect_read_i_5_n_0),
        .I1(\pcs_addr_int[15]_i_7_n_0 ),
        .I2(pcs_addr[14]),
        .I3(pcs_addr[11]),
        .I4(pcs_addr[12]),
        .I5(pcs_addr[2]),
        .O(\pcs_addr_int[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pcs_addr_int[15]_i_7 
       (.I0(pcs_addr[4]),
        .I1(pcs_addr[13]),
        .I2(pcs_addr[15]),
        .I3(pcs_addr[9]),
        .O(\pcs_addr_int[15]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[15]_i_8 
       (.I0(pcs_addr[15]),
        .O(\pcs_addr_int[15]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[15]_i_9 
       (.I0(pcs_addr[14]),
        .O(\pcs_addr_int[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[1]_i_1 
       (.I0(\pcs_addr_int_reg[3]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[0]),
        .O(\pcs_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[2]_i_1 
       (.I0(\pcs_addr_int_reg[3]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[1]),
        .O(\pcs_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[3]_i_1 
       (.I0(\pcs_addr_int_reg[3]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[2]),
        .O(\pcs_addr_int[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[3]_i_3 
       (.I0(pcs_addr[3]),
        .O(\pcs_addr_int[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[3]_i_4 
       (.I0(pcs_addr[2]),
        .O(\pcs_addr_int[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[3]_i_5 
       (.I0(pcs_addr[1]),
        .O(\pcs_addr_int[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \pcs_addr_int[3]_i_6 
       (.I0(pcs_addr[0]),
        .O(\pcs_addr_int[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[4]_i_1 
       (.I0(\pcs_addr_int_reg[7]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[3]),
        .O(\pcs_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[5]_i_1 
       (.I0(\pcs_addr_int_reg[7]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[4]),
        .O(\pcs_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[6]_i_1 
       (.I0(\pcs_addr_int_reg[7]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[5]),
        .O(\pcs_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[7]_i_1 
       (.I0(\pcs_addr_int_reg[7]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[6]),
        .O(\pcs_addr_int[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[7]_i_3 
       (.I0(pcs_addr[7]),
        .O(\pcs_addr_int[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[7]_i_4 
       (.I0(pcs_addr[6]),
        .O(\pcs_addr_int[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[7]_i_5 
       (.I0(pcs_addr[5]),
        .O(\pcs_addr_int[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pcs_addr_int[7]_i_6 
       (.I0(pcs_addr[4]),
        .O(\pcs_addr_int[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[8]_i_1 
       (.I0(\pcs_addr_int_reg[11]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[7]),
        .O(\pcs_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pcs_addr_int[9]_i_1 
       (.I0(\pcs_addr_int_reg[11]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[8]),
        .O(\pcs_addr_int[9]_i_1_n_0 ));
  FDRE \pcs_addr_int_reg[0] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[0]_i_1_n_0 ),
        .Q(pcs_addr[0]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[10] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[10]_i_1_n_0 ),
        .Q(pcs_addr[10]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[11] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[11]_i_1_n_0 ),
        .Q(pcs_addr[11]),
        .R(areset_coreclk));
  CARRY4 \pcs_addr_int_reg[11]_i_2 
       (.CI(\pcs_addr_int_reg[7]_i_2_n_0 ),
        .CO({\pcs_addr_int_reg[11]_i_2_n_0 ,\pcs_addr_int_reg[11]_i_2_n_1 ,\pcs_addr_int_reg[11]_i_2_n_2 ,\pcs_addr_int_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_addr_int_reg[11]_i_2_n_4 ,\pcs_addr_int_reg[11]_i_2_n_5 ,\pcs_addr_int_reg[11]_i_2_n_6 ,\pcs_addr_int_reg[11]_i_2_n_7 }),
        .S({\pcs_addr_int[11]_i_3_n_0 ,\pcs_addr_int[11]_i_4_n_0 ,\pcs_addr_int[11]_i_5_n_0 ,\pcs_addr_int[11]_i_6_n_0 }));
  FDRE \pcs_addr_int_reg[12] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[12]_i_1_n_0 ),
        .Q(pcs_addr[12]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[13] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[13]_i_1_n_0 ),
        .Q(pcs_addr[13]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[14] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[14]_i_1_n_0 ),
        .Q(pcs_addr[14]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[15] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[15]_i_2_n_0 ),
        .Q(pcs_addr[15]),
        .R(areset_coreclk));
  CARRY4 \pcs_addr_int_reg[15]_i_6 
       (.CI(\pcs_addr_int_reg[11]_i_2_n_0 ),
        .CO({\NLW_pcs_addr_int_reg[15]_i_6_CO_UNCONNECTED [3],\pcs_addr_int_reg[15]_i_6_n_1 ,\pcs_addr_int_reg[15]_i_6_n_2 ,\pcs_addr_int_reg[15]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_addr_int_reg[15]_i_6_n_4 ,\pcs_addr_int_reg[15]_i_6_n_5 ,\pcs_addr_int_reg[15]_i_6_n_6 ,\pcs_addr_int_reg[15]_i_6_n_7 }),
        .S({\pcs_addr_int[15]_i_8_n_0 ,\pcs_addr_int[15]_i_9_n_0 ,\pcs_addr_int[15]_i_10_n_0 ,\pcs_addr_int[15]_i_11_n_0 }));
  FDRE \pcs_addr_int_reg[1] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[1]_i_1_n_0 ),
        .Q(pcs_addr[1]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[2] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[2]_i_1_n_0 ),
        .Q(pcs_addr[2]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[3] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[3]_i_1_n_0 ),
        .Q(pcs_addr[3]),
        .R(areset_coreclk));
  CARRY4 \pcs_addr_int_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\pcs_addr_int_reg[3]_i_2_n_0 ,\pcs_addr_int_reg[3]_i_2_n_1 ,\pcs_addr_int_reg[3]_i_2_n_2 ,\pcs_addr_int_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,pcs_addr[0]}),
        .O({\pcs_addr_int_reg[3]_i_2_n_4 ,\pcs_addr_int_reg[3]_i_2_n_5 ,\pcs_addr_int_reg[3]_i_2_n_6 ,\pcs_addr_int_reg[3]_i_2_n_7 }),
        .S({\pcs_addr_int[3]_i_3_n_0 ,\pcs_addr_int[3]_i_4_n_0 ,\pcs_addr_int[3]_i_5_n_0 ,\pcs_addr_int[3]_i_6_n_0 }));
  FDRE \pcs_addr_int_reg[4] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[4]_i_1_n_0 ),
        .Q(pcs_addr[4]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[5] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[5]_i_1_n_0 ),
        .Q(pcs_addr[5]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[6] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[6]_i_1_n_0 ),
        .Q(pcs_addr[6]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[7] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[7]_i_1_n_0 ),
        .Q(pcs_addr[7]),
        .R(areset_coreclk));
  CARRY4 \pcs_addr_int_reg[7]_i_2 
       (.CI(\pcs_addr_int_reg[3]_i_2_n_0 ),
        .CO({\pcs_addr_int_reg[7]_i_2_n_0 ,\pcs_addr_int_reg[7]_i_2_n_1 ,\pcs_addr_int_reg[7]_i_2_n_2 ,\pcs_addr_int_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pcs_addr_int_reg[7]_i_2_n_4 ,\pcs_addr_int_reg[7]_i_2_n_5 ,\pcs_addr_int_reg[7]_i_2_n_6 ,\pcs_addr_int_reg[7]_i_2_n_7 }),
        .S({\pcs_addr_int[7]_i_3_n_0 ,\pcs_addr_int[7]_i_4_n_0 ,\pcs_addr_int[7]_i_5_n_0 ,\pcs_addr_int[7]_i_6_n_0 }));
  FDRE \pcs_addr_int_reg[8] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[8]_i_1_n_0 ),
        .Q(pcs_addr[8]),
        .R(areset_coreclk));
  FDRE \pcs_addr_int_reg[9] 
       (.C(coreclk),
        .CE(pcs_addr_int),
        .D(\pcs_addr_int[9]_i_1_n_0 ),
        .Q(pcs_addr[9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[0]_i_1 
       (.I0(\pma_addr_int_reg[3]_i_2_n_7 ),
        .I1(new_state1),
        .I2(devad_comb),
        .O(\pma_addr_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[10]_i_1 
       (.I0(\pma_addr_int_reg[11]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[9]),
        .O(\pma_addr_int[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[11]_i_1 
       (.I0(\pma_addr_int_reg[11]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[10]),
        .O(\pma_addr_int[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[11]_i_3 
       (.I0(pma_addr_int[11]),
        .O(\pma_addr_int[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[11]_i_4 
       (.I0(pma_addr_int[10]),
        .O(\pma_addr_int[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[11]_i_5 
       (.I0(pma_addr_int[9]),
        .O(\pma_addr_int[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[11]_i_6 
       (.I0(pma_addr_int[8]),
        .O(\pma_addr_int[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[12]_i_1 
       (.I0(\pma_addr_int_reg[15]_i_5_n_7 ),
        .I1(new_state1),
        .I2(Q[11]),
        .O(\pma_addr_int[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[13]_i_1 
       (.I0(\pma_addr_int_reg[15]_i_5_n_6 ),
        .I1(new_state1),
        .I2(Q[12]),
        .O(\pma_addr_int[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[14]_i_1 
       (.I0(\pma_addr_int_reg[15]_i_5_n_5 ),
        .I1(new_state1),
        .I2(Q[13]),
        .O(\pma_addr_int[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \pma_addr_int[15]_i_1 
       (.I0(\an_addr_int[15]_i_3_n_0 ),
        .I1(\pma_addr_int[15]_i_3_n_0 ),
        .I2(\opcode_reg_n_0_[0] ),
        .I3(devad_reg[0]),
        .I4(devad_reg[1]),
        .I5(\pma_addr_int[15]_i_4_n_0 ),
        .O(pma_addr_int_1));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[15]_i_10 
       (.I0(pma_addr_int[14]),
        .O(\pma_addr_int[15]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[15]_i_11 
       (.I0(pma_addr_int[13]),
        .O(\pma_addr_int[15]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[15]_i_12 
       (.I0(pma_addr_int[12]),
        .O(\pma_addr_int[15]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[15]_i_2 
       (.I0(\pma_addr_int_reg[15]_i_5_n_4 ),
        .I1(new_state1),
        .I2(Q[14]),
        .O(\pma_addr_int[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \pma_addr_int[15]_i_3 
       (.I0(devad_reg[2]),
        .I1(devad_reg[3]),
        .I2(devad_reg[4]),
        .O(\pma_addr_int[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \pma_addr_int[15]_i_4 
       (.I0(\pma_addr_int[15]_i_6_n_0 ),
        .I1(\pma_addr_int[15]_i_7_n_0 ),
        .I2(\pma_addr_int[15]_i_8_n_0 ),
        .I3(pma_addr_int[10]),
        .I4(pma_addr_int[9]),
        .I5(pma_addr_int[6]),
        .O(\pma_addr_int[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pma_addr_int[15]_i_6 
       (.I0(pma_addr_int[3]),
        .I1(pma_addr_int[1]),
        .I2(pma_addr_int[0]),
        .I3(pma_addr_int[2]),
        .I4(pma_addr_int[11]),
        .I5(pma_addr_int[15]),
        .O(\pma_addr_int[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pma_addr_int[15]_i_7 
       (.I0(pma_addr_int[14]),
        .I1(pma_addr_int[7]),
        .I2(pma_addr_int[8]),
        .I3(pma_addr_int[5]),
        .O(\pma_addr_int[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \pma_addr_int[15]_i_8 
       (.I0(pma_addr_int[12]),
        .I1(new_state1),
        .I2(pma_addr_int[13]),
        .I3(pma_addr_int[4]),
        .O(\pma_addr_int[15]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[15]_i_9 
       (.I0(pma_addr_int[15]),
        .O(\pma_addr_int[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[1]_i_1 
       (.I0(\pma_addr_int_reg[3]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[0]),
        .O(\pma_addr_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[2]_i_1 
       (.I0(\pma_addr_int_reg[3]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[1]),
        .O(\pma_addr_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[3]_i_1 
       (.I0(\pma_addr_int_reg[3]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[2]),
        .O(\pma_addr_int[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[3]_i_3 
       (.I0(pma_addr_int[3]),
        .O(\pma_addr_int[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[3]_i_4 
       (.I0(pma_addr_int[2]),
        .O(\pma_addr_int[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[3]_i_5 
       (.I0(pma_addr_int[1]),
        .O(\pma_addr_int[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \pma_addr_int[3]_i_6 
       (.I0(pma_addr_int[0]),
        .O(\pma_addr_int[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[4]_i_1 
       (.I0(\pma_addr_int_reg[7]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[3]),
        .O(\pma_addr_int[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[5]_i_1 
       (.I0(\pma_addr_int_reg[7]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[4]),
        .O(\pma_addr_int[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[6]_i_1 
       (.I0(\pma_addr_int_reg[7]_i_2_n_5 ),
        .I1(new_state1),
        .I2(Q[5]),
        .O(\pma_addr_int[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[7]_i_1 
       (.I0(\pma_addr_int_reg[7]_i_2_n_4 ),
        .I1(new_state1),
        .I2(Q[6]),
        .O(\pma_addr_int[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[7]_i_3 
       (.I0(pma_addr_int[7]),
        .O(\pma_addr_int[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[7]_i_4 
       (.I0(pma_addr_int[6]),
        .O(\pma_addr_int[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[7]_i_5 
       (.I0(pma_addr_int[5]),
        .O(\pma_addr_int[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \pma_addr_int[7]_i_6 
       (.I0(pma_addr_int[4]),
        .O(\pma_addr_int[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[8]_i_1 
       (.I0(\pma_addr_int_reg[11]_i_2_n_7 ),
        .I1(new_state1),
        .I2(Q[7]),
        .O(\pma_addr_int[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pma_addr_int[9]_i_1 
       (.I0(\pma_addr_int_reg[11]_i_2_n_6 ),
        .I1(new_state1),
        .I2(Q[8]),
        .O(\pma_addr_int[9]_i_1_n_0 ));
  FDRE \pma_addr_int_reg[0] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[0]_i_1_n_0 ),
        .Q(pma_addr_int[0]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[10] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[10]_i_1_n_0 ),
        .Q(pma_addr_int[10]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[11] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[11]_i_1_n_0 ),
        .Q(pma_addr_int[11]),
        .R(areset_coreclk));
  CARRY4 \pma_addr_int_reg[11]_i_2 
       (.CI(\pma_addr_int_reg[7]_i_2_n_0 ),
        .CO({\pma_addr_int_reg[11]_i_2_n_0 ,\pma_addr_int_reg[11]_i_2_n_1 ,\pma_addr_int_reg[11]_i_2_n_2 ,\pma_addr_int_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pma_addr_int_reg[11]_i_2_n_4 ,\pma_addr_int_reg[11]_i_2_n_5 ,\pma_addr_int_reg[11]_i_2_n_6 ,\pma_addr_int_reg[11]_i_2_n_7 }),
        .S({\pma_addr_int[11]_i_3_n_0 ,\pma_addr_int[11]_i_4_n_0 ,\pma_addr_int[11]_i_5_n_0 ,\pma_addr_int[11]_i_6_n_0 }));
  FDRE \pma_addr_int_reg[12] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[12]_i_1_n_0 ),
        .Q(pma_addr_int[12]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[13] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[13]_i_1_n_0 ),
        .Q(pma_addr_int[13]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[14] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[14]_i_1_n_0 ),
        .Q(pma_addr_int[14]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[15] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[15]_i_2_n_0 ),
        .Q(pma_addr_int[15]),
        .R(areset_coreclk));
  CARRY4 \pma_addr_int_reg[15]_i_5 
       (.CI(\pma_addr_int_reg[11]_i_2_n_0 ),
        .CO({\NLW_pma_addr_int_reg[15]_i_5_CO_UNCONNECTED [3],\pma_addr_int_reg[15]_i_5_n_1 ,\pma_addr_int_reg[15]_i_5_n_2 ,\pma_addr_int_reg[15]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pma_addr_int_reg[15]_i_5_n_4 ,\pma_addr_int_reg[15]_i_5_n_5 ,\pma_addr_int_reg[15]_i_5_n_6 ,\pma_addr_int_reg[15]_i_5_n_7 }),
        .S({\pma_addr_int[15]_i_9_n_0 ,\pma_addr_int[15]_i_10_n_0 ,\pma_addr_int[15]_i_11_n_0 ,\pma_addr_int[15]_i_12_n_0 }));
  FDRE \pma_addr_int_reg[1] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[1]_i_1_n_0 ),
        .Q(pma_addr_int[1]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[2] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[2]_i_1_n_0 ),
        .Q(pma_addr_int[2]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[3] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[3]_i_1_n_0 ),
        .Q(pma_addr_int[3]),
        .R(areset_coreclk));
  CARRY4 \pma_addr_int_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\pma_addr_int_reg[3]_i_2_n_0 ,\pma_addr_int_reg[3]_i_2_n_1 ,\pma_addr_int_reg[3]_i_2_n_2 ,\pma_addr_int_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,pma_addr_int[0]}),
        .O({\pma_addr_int_reg[3]_i_2_n_4 ,\pma_addr_int_reg[3]_i_2_n_5 ,\pma_addr_int_reg[3]_i_2_n_6 ,\pma_addr_int_reg[3]_i_2_n_7 }),
        .S({\pma_addr_int[3]_i_3_n_0 ,\pma_addr_int[3]_i_4_n_0 ,\pma_addr_int[3]_i_5_n_0 ,\pma_addr_int[3]_i_6_n_0 }));
  FDRE \pma_addr_int_reg[4] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[4]_i_1_n_0 ),
        .Q(pma_addr_int[4]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[5] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[5]_i_1_n_0 ),
        .Q(pma_addr_int[5]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[6] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[6]_i_1_n_0 ),
        .Q(pma_addr_int[6]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[7] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[7]_i_1_n_0 ),
        .Q(pma_addr_int[7]),
        .R(areset_coreclk));
  CARRY4 \pma_addr_int_reg[7]_i_2 
       (.CI(\pma_addr_int_reg[3]_i_2_n_0 ),
        .CO({\pma_addr_int_reg[7]_i_2_n_0 ,\pma_addr_int_reg[7]_i_2_n_1 ,\pma_addr_int_reg[7]_i_2_n_2 ,\pma_addr_int_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pma_addr_int_reg[7]_i_2_n_4 ,\pma_addr_int_reg[7]_i_2_n_5 ,\pma_addr_int_reg[7]_i_2_n_6 ,\pma_addr_int_reg[7]_i_2_n_7 }),
        .S({\pma_addr_int[7]_i_3_n_0 ,\pma_addr_int[7]_i_4_n_0 ,\pma_addr_int[7]_i_5_n_0 ,\pma_addr_int[7]_i_6_n_0 }));
  FDRE \pma_addr_int_reg[8] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[8]_i_1_n_0 ),
        .Q(pma_addr_int[8]),
        .R(areset_coreclk));
  FDRE \pma_addr_int_reg[9] 
       (.C(coreclk),
        .CE(pma_addr_int_1),
        .D(\pma_addr_int[9]_i_1_n_0 ),
        .Q(pma_addr_int[9]),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[0]_i_1 
       (.I0(Q[0]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [0]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1 
       (.I0(Q[10]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [9]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1__0 
       (.I0(Q[10]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [9]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1__1 
       (.I0(Q[10]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [9]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1__2 
       (.I0(Q[10]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [9]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1__3 
       (.I0(Q[10]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [9]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[10]_i_1__4 
       (.I0(Q[10]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [9]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[10]_i_1__5 
       (.I0(Q[10]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [10]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1 
       (.I0(Q[11]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [10]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1__0 
       (.I0(Q[11]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [10]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1__1 
       (.I0(Q[11]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [10]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1__2 
       (.I0(Q[11]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [10]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1__3 
       (.I0(Q[11]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [10]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[11]_i_1__4 
       (.I0(Q[11]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [10]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[11]_i_1__5 
       (.I0(Q[11]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [11]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1 
       (.I0(Q[12]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [11]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1__0 
       (.I0(Q[12]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1__1 
       (.I0(Q[12]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [11]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1__2 
       (.I0(Q[12]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [11]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1__3 
       (.I0(Q[12]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [11]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[12]_i_1__4 
       (.I0(Q[12]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [11]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[12]_i_1__5 
       (.I0(Q[12]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [12]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1 
       (.I0(Q[13]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [12]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1__0 
       (.I0(Q[13]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1__1 
       (.I0(Q[13]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [12]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1__2 
       (.I0(Q[13]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [12]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1__3 
       (.I0(Q[13]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [12]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[13]_i_1__4 
       (.I0(Q[13]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [12]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[13]_i_1__5 
       (.I0(Q[13]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [13]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1 
       (.I0(Q[14]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [13]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1__0 
       (.I0(Q[14]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1__1 
       (.I0(Q[14]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [13]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1__2 
       (.I0(Q[14]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [13]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1__3 
       (.I0(Q[14]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [13]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[14]_i_1__4 
       (.I0(Q[14]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [13]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[14]_i_1__5 
       (.I0(Q[14]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [14]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2 
       (.I0(Q[15]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [14]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2__0 
       (.I0(Q[15]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2__1 
       (.I0(Q[15]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [14]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2__2 
       (.I0(Q[15]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [14]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2__3 
       (.I0(Q[15]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [14]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[15]_i_2__4 
       (.I0(Q[15]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [14]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[15]_i_2__5 
       (.I0(Q[15]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [15]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1 
       (.I0(Q[1]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [0]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__0 
       (.I0(Q[1]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [0]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__1 
       (.I0(Q[1]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__2 
       (.I0(Q[1]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__3 
       (.I0(Q[1]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [0]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__4 
       (.I0(Q[1]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__5 
       (.I0(Q[1]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [0]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[1]_i_1__6 
       (.I0(Q[1]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [0]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[1]_i_1__7 
       (.I0(Q[1]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [1]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1 
       (.I0(Q[2]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [1]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__0 
       (.I0(Q[2]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [1]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__1 
       (.I0(Q[2]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__2 
       (.I0(Q[2]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [1]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__3 
       (.I0(Q[2]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [1]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__4 
       (.I0(Q[2]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__5 
       (.I0(Q[2]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [1]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[2]_i_1__6 
       (.I0(Q[2]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [1]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[2]_i_1__7 
       (.I0(Q[2]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [2]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1 
       (.I0(Q[3]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [2]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__0 
       (.I0(Q[3]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [2]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__1 
       (.I0(Q[3]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__2 
       (.I0(Q[3]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [2]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__3 
       (.I0(Q[3]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [2]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__4 
       (.I0(Q[3]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__5 
       (.I0(Q[3]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [2]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[3]_i_1__6 
       (.I0(Q[3]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [2]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[3]_i_1__7 
       (.I0(Q[3]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [3]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1 
       (.I0(Q[4]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [3]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__0 
       (.I0(Q[4]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [3]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__1 
       (.I0(Q[4]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__2 
       (.I0(Q[4]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [3]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__3 
       (.I0(Q[4]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [3]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__4 
       (.I0(Q[4]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__5 
       (.I0(Q[4]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [3]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[4]_i_1__6 
       (.I0(Q[4]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [3]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[4]_i_1__7 
       (.I0(Q[4]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [4]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1 
       (.I0(Q[5]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [4]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__1 
       (.I0(Q[5]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__2 
       (.I0(Q[5]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__3 
       (.I0(Q[5]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [4]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__4 
       (.I0(Q[5]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__5 
       (.I0(Q[5]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__6 
       (.I0(Q[5]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [4]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[5]_i_1__7 
       (.I0(Q[5]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [4]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[5]_i_1__8 
       (.I0(Q[5]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [5]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1 
       (.I0(Q[6]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [5]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__0 
       (.I0(Q[6]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [5]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__1 
       (.I0(Q[6]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__2 
       (.I0(Q[6]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [5]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__3 
       (.I0(Q[6]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [5]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__4 
       (.I0(Q[6]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__5 
       (.I0(Q[6]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [5]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[6]_i_1__6 
       (.I0(Q[6]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [5]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[6]_i_1__7 
       (.I0(Q[6]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [6]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1 
       (.I0(Q[7]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__0 
       (.I0(Q[7]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [6]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__1 
       (.I0(Q[7]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__2 
       (.I0(Q[7]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [6]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__3 
       (.I0(Q[7]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [6]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__4 
       (.I0(Q[7]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__5 
       (.I0(Q[7]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [6]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[7]_i_1__6 
       (.I0(Q[7]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [6]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[7]_i_1__7 
       (.I0(Q[7]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [7]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1 
       (.I0(Q[8]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [7]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__0 
       (.I0(Q[8]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [7]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__1 
       (.I0(Q[8]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__2 
       (.I0(Q[8]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [7]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__3 
       (.I0(Q[8]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [7]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__4 
       (.I0(Q[8]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__5 
       (.I0(Q[8]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [7]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[8]_i_1__6 
       (.I0(Q[8]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [7]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[8]_i_1__7 
       (.I0(Q[8]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [8]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1 
       (.I0(Q[9]),
        .I1(reg_3_36_we),
        .O(\q_reg[15] [8]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1__1 
       (.I0(Q[9]),
        .I1(reg_3_38_we),
        .O(\q_reg[15]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1__2 
       (.I0(Q[9]),
        .I1(reg_3_35_we),
        .O(\q_reg[15]_1 [8]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1__3 
       (.I0(Q[9]),
        .I1(reg_3_34_we),
        .O(\q_reg[15]_2 [8]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1__5 
       (.I0(Q[9]),
        .I1(reg_3_65535_we),
        .O(\q_reg[15]_3 [8]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_1__6 
       (.I0(Q[9]),
        .I1(reg_3_40_we),
        .O(\q_reg[15]_4 [8]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \q[9]_i_1__7 
       (.I0(Q[9]),
        .I1(\addr_reg_reg[4] ),
        .O(\q_reg[15]_5 [9]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_2 
       (.I0(Q[9]),
        .I1(reg_3_41_we),
        .O(\q_reg[9] [8]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \q[9]_i_2__0 
       (.I0(Q[9]),
        .I1(reg_3_37_we),
        .O(\q_reg[9]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    rd_i_1
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(rd_i_2_n_0),
        .I3(mdc_just_rose),
        .O(rd0));
  LUT6 #(
    .INIT(64'hFFFFBAFFFFFFFFFF)) 
    rd_i_2
       (.I0(rd_i_3_n_0),
        .I1(prtad[4]),
        .I2(Q[8]),
        .I3(devad_match),
        .I4(rd_i_4_n_0),
        .I5(rd_i_5_n_0),
        .O(rd_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    rd_i_3
       (.I0(prtad[2]),
        .I1(Q[6]),
        .I2(prtad[3]),
        .I3(Q[7]),
        .O(rd_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    rd_i_4
       (.I0(prtad[1]),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(prtad[0]),
        .O(rd_i_4_n_0));
  LUT6 #(
    .INIT(64'hBB0BBB0B0000BB0B)) 
    rd_i_5
       (.I0(prtad[0]),
        .I1(Q[4]),
        .I2(prtad[4]),
        .I3(Q[8]),
        .I4(prtad[1]),
        .I5(Q[5]),
        .O(rd_i_5_n_0));
  FDRE rd_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(rd0),
        .Q(mdio_rd),
        .R(areset_coreclk));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[0]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(devad_comb),
        .I3(data_captured[0]),
        .O(\shift_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[10]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[9]),
        .I3(data_captured[10]),
        .O(\shift_reg[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[11]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[10]),
        .I3(data_captured[11]),
        .O(\shift_reg[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[12]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[11]),
        .I3(data_captured[12]),
        .O(\shift_reg[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[13]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[12]),
        .I3(data_captured[13]),
        .O(\shift_reg[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[14]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[13]),
        .I3(data_captured[14]),
        .O(\shift_reg[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[15]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[14]),
        .I3(data_captured[15]),
        .O(\shift_reg[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[1]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[0]),
        .I3(data_captured[1]),
        .O(\shift_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[2]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[1]),
        .I3(data_captured[2]),
        .O(\shift_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[3]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[2]),
        .I3(data_captured[3]),
        .O(\shift_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[4]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[3]),
        .I3(data_captured[4]),
        .O(\shift_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[5]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[4]),
        .I3(data_captured[5]),
        .O(\shift_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[6]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[5]),
        .I3(data_captured[6]),
        .O(\shift_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[7]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[6]),
        .I3(data_captured[7]),
        .O(\shift_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[8]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[7]),
        .I3(data_captured[8]),
        .O(\shift_reg[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'hF4B0)) 
    \shift_reg[9]_i_1 
       (.I0(devad_match_i_2_n_0),
        .I1(new_state1),
        .I2(Q[8]),
        .I3(data_captured[9]),
        .O(\shift_reg[9]_i_1_n_0 ));
  FDRE \shift_reg_reg[0] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \shift_reg_reg[10] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[10]_i_1_n_0 ),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \shift_reg_reg[11] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[11]_i_1_n_0 ),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \shift_reg_reg[12] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[12]_i_1_n_0 ),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \shift_reg_reg[13] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[13]_i_1_n_0 ),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \shift_reg_reg[14] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[14]_i_1_n_0 ),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \shift_reg_reg[15] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[15]_i_1_n_0 ),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \shift_reg_reg[1] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \shift_reg_reg[2] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \shift_reg_reg[3] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \shift_reg_reg[4] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \shift_reg_reg[5] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \shift_reg_reg[6] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \shift_reg_reg[7] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \shift_reg_reg[8] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \shift_reg_reg[9] 
       (.C(coreclk),
        .CE(mdc_rising),
        .D(\shift_reg[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    we_i_1
       (.I0(new_state1),
        .I1(\opcode_reg_n_0_[0] ),
        .I2(state[1]),
        .I3(state[0]),
        .I4(mdio_out_i_2_n_0),
        .I5(mdio_out_i_3_n_0),
        .O(we0_out));
  FDRE we_reg
       (.C(coreclk),
        .CE(mdc_rising),
        .D(we0_out),
        .Q(mdio_we),
        .R(areset_coreclk));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pcs_descramble" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_descramble
   (rx_66_enc,
    \mcp1_rx_66_raw_reg[65] ,
    SR,
    rxusrclk2_en156_reg,
    rxusrclk2);
  output [57:0]rx_66_enc;
  input [63:0]\mcp1_rx_66_raw_reg[65] ;
  input [0:0]SR;
  input [1:0]rxusrclk2_en156_reg;
  input rxusrclk2;

  wire [0:0]SR;
  wire \mcp1_descr_reg_reg_n_0_[0] ;
  wire [63:0]\mcp1_rx_66_raw_reg[65] ;
  wire p_0_in;
  wire p_0_in102_in;
  wire p_0_in105_in;
  wire p_0_in108_in;
  wire p_0_in111_in;
  wire p_0_in114_in;
  wire p_0_in117_in;
  wire p_0_in120_in;
  wire p_0_in123_in;
  wire p_0_in126_in;
  wire p_0_in12_in;
  wire p_0_in16_in;
  wire p_0_in1_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in48_in;
  wire p_0_in4_in;
  wire p_0_in52_in;
  wire p_0_in56_in;
  wire p_0_in60_in;
  wire p_0_in64_in;
  wire p_0_in68_in;
  wire p_0_in72_in;
  wire p_0_in75_in;
  wire p_0_in78_in;
  wire p_0_in81_in;
  wire p_0_in84_in;
  wire p_0_in87_in;
  wire p_0_in8_in;
  wire p_0_in90_in;
  wire p_0_in93_in;
  wire p_0_in96_in;
  wire p_0_in99_in;
  wire p_2_in;
  wire p_2_in13_in;
  wire p_2_in17_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in2_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in49_in;
  wire p_2_in53_in;
  wire p_2_in57_in;
  wire p_2_in5_in;
  wire p_2_in61_in;
  wire p_2_in65_in;
  wire p_2_in69_in;
  wire p_2_in9_in;
  wire [57:0]rx_66_enc;
  wire rxusrclk2;
  wire [1:0]rxusrclk2_en156_reg;

  FDRE \mcp1_descr_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [63]),
        .Q(\mcp1_descr_reg_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [53]),
        .Q(p_0_in99_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [52]),
        .Q(p_0_in96_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [51]),
        .Q(p_0_in93_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [50]),
        .Q(p_0_in90_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [49]),
        .Q(p_0_in87_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [48]),
        .Q(p_0_in84_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [47]),
        .Q(p_0_in81_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [46]),
        .Q(p_0_in78_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [45]),
        .Q(p_0_in75_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [44]),
        .Q(p_0_in72_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [62]),
        .Q(p_0_in126_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [43]),
        .Q(p_0_in68_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [42]),
        .Q(p_0_in64_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [41]),
        .Q(p_0_in60_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [40]),
        .Q(p_0_in56_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [39]),
        .Q(p_0_in52_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [38]),
        .Q(p_0_in48_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [37]),
        .Q(p_0_in44_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [36]),
        .Q(p_0_in40_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [35]),
        .Q(p_0_in36_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [34]),
        .Q(p_0_in32_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [61]),
        .Q(p_0_in123_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [33]),
        .Q(p_0_in28_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [32]),
        .Q(p_0_in24_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [31]),
        .Q(p_0_in20_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [30]),
        .Q(p_0_in16_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [29]),
        .Q(p_0_in12_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [28]),
        .Q(p_0_in8_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [27]),
        .Q(p_0_in4_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [26]),
        .Q(p_0_in1_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [25]),
        .Q(p_0_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [24]),
        .Q(p_2_in69_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [60]),
        .Q(p_0_in120_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [23]),
        .Q(p_2_in65_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [22]),
        .Q(p_2_in61_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [21]),
        .Q(p_2_in57_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [20]),
        .Q(p_2_in53_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [19]),
        .Q(p_2_in49_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [18]),
        .Q(p_2_in45_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [17]),
        .Q(p_2_in41_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [16]),
        .Q(p_2_in37_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [15]),
        .Q(p_2_in33_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [14]),
        .Q(p_2_in29_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [59]),
        .Q(p_0_in117_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [13]),
        .Q(p_2_in25_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [12]),
        .Q(p_2_in21_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [11]),
        .Q(p_2_in17_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [10]),
        .Q(p_2_in13_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [9]),
        .Q(p_2_in9_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [8]),
        .Q(p_2_in5_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [7]),
        .Q(p_2_in2_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[1]),
        .D(\mcp1_rx_66_raw_reg[65] [6]),
        .Q(p_2_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [58]),
        .Q(p_0_in114_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [57]),
        .Q(p_0_in111_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [56]),
        .Q(p_0_in108_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [55]),
        .Q(p_0_in105_in),
        .R(SR));
  FDRE \mcp1_descr_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg[0]),
        .D(\mcp1_rx_66_raw_reg[65] [54]),
        .Q(p_0_in102_in),
        .R(SR));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[10]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [8]),
        .I1(p_0_in28_in),
        .I2(p_2_in29_in),
        .O(rx_66_enc[8]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[11]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [9]),
        .I1(p_0_in32_in),
        .I2(p_2_in33_in),
        .O(rx_66_enc[9]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[12]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [10]),
        .I1(p_0_in36_in),
        .I2(p_2_in37_in),
        .O(rx_66_enc[10]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[13]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [11]),
        .I1(p_0_in40_in),
        .I2(p_2_in41_in),
        .O(rx_66_enc[11]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[14]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [12]),
        .I1(p_0_in44_in),
        .I2(p_2_in45_in),
        .O(rx_66_enc[12]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[15]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [13]),
        .I1(p_0_in48_in),
        .I2(p_2_in49_in),
        .O(rx_66_enc[13]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[16]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [14]),
        .I1(p_0_in52_in),
        .I2(p_2_in53_in),
        .O(rx_66_enc[14]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[17]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [15]),
        .I1(p_0_in56_in),
        .I2(p_2_in57_in),
        .O(rx_66_enc[15]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[18]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [16]),
        .I1(p_0_in60_in),
        .I2(p_2_in61_in),
        .O(rx_66_enc[16]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[19]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [17]),
        .I1(p_0_in64_in),
        .I2(p_2_in65_in),
        .O(rx_66_enc[17]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[20]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [18]),
        .I1(p_0_in68_in),
        .I2(p_2_in69_in),
        .O(rx_66_enc[18]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[21]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [19]),
        .I1(p_0_in72_in),
        .I2(p_0_in),
        .O(rx_66_enc[19]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[22]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [20]),
        .I1(p_0_in75_in),
        .I2(p_0_in1_in),
        .O(rx_66_enc[20]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[23]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [21]),
        .I1(p_0_in78_in),
        .I2(p_0_in4_in),
        .O(rx_66_enc[21]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[24]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [22]),
        .I1(p_0_in81_in),
        .I2(p_0_in8_in),
        .O(rx_66_enc[22]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[25]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [23]),
        .I1(p_0_in84_in),
        .I2(p_0_in12_in),
        .O(rx_66_enc[23]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[26]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [24]),
        .I1(p_0_in87_in),
        .I2(p_0_in16_in),
        .O(rx_66_enc[24]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[27]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [25]),
        .I1(p_0_in90_in),
        .I2(p_0_in20_in),
        .O(rx_66_enc[25]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[28]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [26]),
        .I1(p_0_in93_in),
        .I2(p_0_in24_in),
        .O(rx_66_enc[26]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[29]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [27]),
        .I1(p_0_in96_in),
        .I2(p_0_in28_in),
        .O(rx_66_enc[27]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[2]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [0]),
        .I1(p_0_in),
        .I2(p_2_in),
        .O(rx_66_enc[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[30]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [28]),
        .I1(p_0_in99_in),
        .I2(p_0_in32_in),
        .O(rx_66_enc[28]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[31]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [29]),
        .I1(p_0_in102_in),
        .I2(p_0_in36_in),
        .O(rx_66_enc[29]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[32]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [30]),
        .I1(p_0_in105_in),
        .I2(p_0_in40_in),
        .O(rx_66_enc[30]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[33]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [31]),
        .I1(p_0_in108_in),
        .I2(p_0_in44_in),
        .O(rx_66_enc[31]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[34]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [32]),
        .I1(p_0_in111_in),
        .I2(p_0_in48_in),
        .O(rx_66_enc[32]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[35]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [33]),
        .I1(p_0_in114_in),
        .I2(p_0_in52_in),
        .O(rx_66_enc[33]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[36]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [34]),
        .I1(p_0_in117_in),
        .I2(p_0_in56_in),
        .O(rx_66_enc[34]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[37]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [35]),
        .I1(p_0_in120_in),
        .I2(p_0_in60_in),
        .O(rx_66_enc[35]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[38]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [36]),
        .I1(p_0_in123_in),
        .I2(p_0_in64_in),
        .O(rx_66_enc[36]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[39]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [37]),
        .I1(p_0_in126_in),
        .I2(p_0_in68_in),
        .O(rx_66_enc[37]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[3]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [1]),
        .I1(p_0_in1_in),
        .I2(p_2_in2_in),
        .O(rx_66_enc[1]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[40]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [38]),
        .I1(\mcp1_descr_reg_reg_n_0_[0] ),
        .I2(p_0_in72_in),
        .O(rx_66_enc[38]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[41]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [39]),
        .I1(\mcp1_rx_66_raw_reg[65] [0]),
        .I2(p_0_in75_in),
        .O(rx_66_enc[39]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[42]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [40]),
        .I1(\mcp1_rx_66_raw_reg[65] [1]),
        .I2(p_0_in78_in),
        .O(rx_66_enc[40]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[43]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [41]),
        .I1(\mcp1_rx_66_raw_reg[65] [2]),
        .I2(p_0_in81_in),
        .O(rx_66_enc[41]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[44]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [42]),
        .I1(\mcp1_rx_66_raw_reg[65] [3]),
        .I2(p_0_in84_in),
        .O(rx_66_enc[42]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[45]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [43]),
        .I1(\mcp1_rx_66_raw_reg[65] [4]),
        .I2(p_0_in87_in),
        .O(rx_66_enc[43]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[46]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [44]),
        .I1(\mcp1_rx_66_raw_reg[65] [5]),
        .I2(p_0_in90_in),
        .O(rx_66_enc[44]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[47]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [45]),
        .I1(\mcp1_rx_66_raw_reg[65] [6]),
        .I2(p_0_in93_in),
        .O(rx_66_enc[45]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[48]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [46]),
        .I1(\mcp1_rx_66_raw_reg[65] [7]),
        .I2(p_0_in96_in),
        .O(rx_66_enc[46]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[49]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [47]),
        .I1(\mcp1_rx_66_raw_reg[65] [8]),
        .I2(p_0_in99_in),
        .O(rx_66_enc[47]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[4]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [2]),
        .I1(p_0_in4_in),
        .I2(p_2_in5_in),
        .O(rx_66_enc[2]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[50]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [48]),
        .I1(\mcp1_rx_66_raw_reg[65] [9]),
        .I2(p_0_in102_in),
        .O(rx_66_enc[48]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[51]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [49]),
        .I1(\mcp1_rx_66_raw_reg[65] [10]),
        .I2(p_0_in105_in),
        .O(rx_66_enc[49]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[52]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [50]),
        .I1(\mcp1_rx_66_raw_reg[65] [11]),
        .I2(p_0_in108_in),
        .O(rx_66_enc[50]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[53]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [51]),
        .I1(\mcp1_rx_66_raw_reg[65] [12]),
        .I2(p_0_in111_in),
        .O(rx_66_enc[51]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[54]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [52]),
        .I1(\mcp1_rx_66_raw_reg[65] [13]),
        .I2(p_0_in114_in),
        .O(rx_66_enc[52]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[55]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [53]),
        .I1(\mcp1_rx_66_raw_reg[65] [14]),
        .I2(p_0_in117_in),
        .O(rx_66_enc[53]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[56]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [54]),
        .I1(\mcp1_rx_66_raw_reg[65] [15]),
        .I2(p_0_in120_in),
        .O(rx_66_enc[54]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[57]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [55]),
        .I1(\mcp1_rx_66_raw_reg[65] [16]),
        .I2(p_0_in123_in),
        .O(rx_66_enc[55]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[58]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [56]),
        .I1(\mcp1_rx_66_raw_reg[65] [17]),
        .I2(p_0_in126_in),
        .O(rx_66_enc[56]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[59]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [57]),
        .I1(\mcp1_rx_66_raw_reg[65] [18]),
        .I2(\mcp1_descr_reg_reg_n_0_[0] ),
        .O(rx_66_enc[57]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[5]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [3]),
        .I1(p_0_in8_in),
        .I2(p_2_in9_in),
        .O(rx_66_enc[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[6]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [4]),
        .I1(p_0_in12_in),
        .I2(p_2_in13_in),
        .O(rx_66_enc[4]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[7]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [5]),
        .I1(p_0_in16_in),
        .I2(p_2_in17_in),
        .O(rx_66_enc[5]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[8]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [6]),
        .I1(p_0_in20_in),
        .I2(p_2_in21_in),
        .O(rx_66_enc[6]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[9]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [7]),
        .I1(p_0_in24_in),
        .I2(p_2_in25_in),
        .O(rx_66_enc[7]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pcs_scramble" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_scramble
   (new_tx_test_seed,
    Q,
    tx_66_fifo,
    coreclk,
    SR,
    \q_reg[3] ,
    pseudo_rand_seeds_int,
    \q_reg[3]_0 ,
    \tx_66_enc_out_reg[65] ,
    \q_reg[1] );
  output new_tx_test_seed;
  output [0:0]Q;
  output [63:0]tx_66_fifo;
  input coreclk;
  input [0:0]SR;
  input [1:0]\q_reg[3] ;
  input [115:0]pseudo_rand_seeds_int;
  input \q_reg[3]_0 ;
  input [63:0]\tx_66_enc_out_reg[65] ;
  input \q_reg[1] ;

  wire [0:0]Q;
  wire [0:0]SR;
  wire asynch_fifo_i_i_67_n_0;
  wire asynch_fifo_i_i_68_n_0;
  wire asynch_fifo_i_i_69_n_0;
  wire asynch_fifo_i_i_70_n_0;
  wire asynch_fifo_i_i_71_n_0;
  wire asynch_fifo_i_i_72_n_0;
  wire asynch_fifo_i_i_73_n_0;
  wire asynch_fifo_i_i_74_n_0;
  wire asynch_fifo_i_i_75_n_0;
  wire asynch_fifo_i_i_76_n_0;
  wire asynch_fifo_i_i_77_n_0;
  wire asynch_fifo_i_i_78_n_0;
  wire asynch_fifo_i_i_79_n_0;
  wire asynch_fifo_i_i_81_n_0;
  wire asynch_fifo_i_i_82_n_0;
  wire asynch_fifo_i_i_83_n_0;
  wire asynch_fifo_i_i_84_n_0;
  wire asynch_fifo_i_i_85_n_0;
  wire asynch_fifo_i_i_86_n_0;
  wire asynch_fifo_i_i_87_n_0;
  wire asynch_fifo_i_i_88_n_0;
  wire asynch_fifo_i_i_89_n_0;
  wire asynch_fifo_i_i_90_n_0;
  wire asynch_fifo_i_i_91_n_0;
  wire asynch_fifo_i_i_92_n_0;
  wire \block_count[4]_i_1_n_0 ;
  wire [6:0]block_count_reg__0;
  wire coreclk;
  wire new_tx_test_seed;
  wire new_tx_test_seed_i_1_n_0;
  wire [6:0]p_0_in;
  wire p_0_in0_in;
  wire p_0_in12_in;
  wire p_0_in151_in;
  wire p_0_in160_in;
  wire p_0_in16_in;
  wire p_0_in170_in;
  wire p_0_in180_in;
  wire p_0_in190_in;
  wire p_0_in200_in;
  wire p_0_in20_in;
  wire p_0_in24_in;
  wire p_0_in28_in;
  wire p_0_in32_in;
  wire p_0_in36_in;
  wire p_0_in40_in;
  wire p_0_in44_in;
  wire p_0_in4_in;
  wire p_0_in8_in;
  wire p_0_in_0;
  wire p_2_in;
  wire p_2_in103_in;
  wire p_2_in109_in;
  wire p_2_in115_in;
  wire p_2_in121_in;
  wire p_2_in127_in;
  wire p_2_in133_in;
  wire p_2_in139_in;
  wire p_2_in13_in;
  wire p_2_in145_in;
  wire p_2_in152_in;
  wire p_2_in161_in;
  wire p_2_in171_in;
  wire p_2_in17_in;
  wire p_2_in181_in;
  wire p_2_in191_in;
  wire p_2_in1_in;
  wire p_2_in201_in;
  wire p_2_in21_in;
  wire p_2_in25_in;
  wire p_2_in29_in;
  wire p_2_in33_in;
  wire p_2_in37_in;
  wire p_2_in41_in;
  wire p_2_in45_in;
  wire p_2_in48_in;
  wire p_2_in52_in;
  wire p_2_in56_in;
  wire p_2_in5_in;
  wire p_2_in60_in;
  wire p_2_in64_in;
  wire p_2_in68_in;
  wire p_2_in74_in;
  wire p_2_in79_in;
  wire p_2_in85_in;
  wire p_2_in91_in;
  wire p_2_in97_in;
  wire p_2_in9_in;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[1] ;
  wire [1:0]\q_reg[3] ;
  wire \q_reg[3]_0 ;
  wire \scr_reg[0]_i_1_n_0 ;
  wire \scr_reg[0]_i_2_n_0 ;
  wire \scr_reg[10]_i_1_n_0 ;
  wire \scr_reg[10]_i_2_n_0 ;
  wire \scr_reg[11]_i_1_n_0 ;
  wire \scr_reg[11]_i_2_n_0 ;
  wire \scr_reg[12]_i_1_n_0 ;
  wire \scr_reg[12]_i_2_n_0 ;
  wire \scr_reg[13]_i_1_n_0 ;
  wire \scr_reg[13]_i_2_n_0 ;
  wire \scr_reg[14]_i_1_n_0 ;
  wire \scr_reg[14]_i_2_n_0 ;
  wire \scr_reg[15]_i_1_n_0 ;
  wire \scr_reg[15]_i_2_n_0 ;
  wire \scr_reg[16]_i_1_n_0 ;
  wire \scr_reg[16]_i_2_n_0 ;
  wire \scr_reg[17]_i_1_n_0 ;
  wire \scr_reg[17]_i_2_n_0 ;
  wire \scr_reg[18]_i_1_n_0 ;
  wire \scr_reg[18]_i_2_n_0 ;
  wire \scr_reg[19]_i_1_n_0 ;
  wire \scr_reg[19]_i_2_n_0 ;
  wire \scr_reg[1]_i_1_n_0 ;
  wire \scr_reg[1]_i_2_n_0 ;
  wire \scr_reg[20]_i_1_n_0 ;
  wire \scr_reg[20]_i_2_n_0 ;
  wire \scr_reg[21]_i_1_n_0 ;
  wire \scr_reg[21]_i_2_n_0 ;
  wire \scr_reg[22]_i_1_n_0 ;
  wire \scr_reg[22]_i_2_n_0 ;
  wire \scr_reg[23]_i_1_n_0 ;
  wire \scr_reg[23]_i_2_n_0 ;
  wire \scr_reg[24]_i_1_n_0 ;
  wire \scr_reg[24]_i_2_n_0 ;
  wire \scr_reg[25]_i_1_n_0 ;
  wire \scr_reg[25]_i_2_n_0 ;
  wire \scr_reg[26]_i_1_n_0 ;
  wire \scr_reg[26]_i_2_n_0 ;
  wire \scr_reg[27]_i_1_n_0 ;
  wire \scr_reg[27]_i_2_n_0 ;
  wire \scr_reg[28]_i_1_n_0 ;
  wire \scr_reg[28]_i_2_n_0 ;
  wire \scr_reg[29]_i_1_n_0 ;
  wire \scr_reg[29]_i_2_n_0 ;
  wire \scr_reg[2]_i_1_n_0 ;
  wire \scr_reg[2]_i_2_n_0 ;
  wire \scr_reg[30]_i_1_n_0 ;
  wire \scr_reg[30]_i_2_n_0 ;
  wire \scr_reg[31]_i_1_n_0 ;
  wire \scr_reg[31]_i_2_n_0 ;
  wire \scr_reg[32]_i_1_n_0 ;
  wire \scr_reg[32]_i_2_n_0 ;
  wire \scr_reg[33]_i_1_n_0 ;
  wire \scr_reg[33]_i_2_n_0 ;
  wire \scr_reg[34]_i_1_n_0 ;
  wire \scr_reg[34]_i_2_n_0 ;
  wire \scr_reg[35]_i_1_n_0 ;
  wire \scr_reg[35]_i_2_n_0 ;
  wire \scr_reg[36]_i_1_n_0 ;
  wire \scr_reg[36]_i_2_n_0 ;
  wire \scr_reg[37]_i_1_n_0 ;
  wire \scr_reg[37]_i_2_n_0 ;
  wire \scr_reg[38]_i_1_n_0 ;
  wire \scr_reg[38]_i_2_n_0 ;
  wire \scr_reg[39]_i_1_n_0 ;
  wire \scr_reg[3]_i_1_n_0 ;
  wire \scr_reg[3]_i_2_n_0 ;
  wire \scr_reg[40]_i_1_n_0 ;
  wire \scr_reg[41]_i_1_n_0 ;
  wire \scr_reg[42]_i_1_n_0 ;
  wire \scr_reg[43]_i_1_n_0 ;
  wire \scr_reg[44]_i_1_n_0 ;
  wire \scr_reg[45]_i_1_n_0 ;
  wire \scr_reg[46]_i_1_n_0 ;
  wire \scr_reg[47]_i_1_n_0 ;
  wire \scr_reg[48]_i_1_n_0 ;
  wire \scr_reg[49]_i_1_n_0 ;
  wire \scr_reg[4]_i_1_n_0 ;
  wire \scr_reg[4]_i_2_n_0 ;
  wire \scr_reg[50]_i_1_n_0 ;
  wire \scr_reg[51]_i_1_n_0 ;
  wire \scr_reg[52]_i_1_n_0 ;
  wire \scr_reg[53]_i_1_n_0 ;
  wire \scr_reg[54]_i_1_n_0 ;
  wire \scr_reg[55]_i_1_n_0 ;
  wire \scr_reg[56]_i_1_n_0 ;
  wire \scr_reg[57]_i_1_n_0 ;
  wire \scr_reg[5]_i_1_n_0 ;
  wire \scr_reg[5]_i_2_n_0 ;
  wire \scr_reg[6]_i_1_n_0 ;
  wire \scr_reg[6]_i_2_n_0 ;
  wire \scr_reg[7]_i_1_n_0 ;
  wire \scr_reg[7]_i_2_n_0 ;
  wire \scr_reg[8]_i_1_n_0 ;
  wire \scr_reg[8]_i_2_n_0 ;
  wire \scr_reg[9]_i_1_n_0 ;
  wire \scr_reg[9]_i_2_n_0 ;
  wire \scr_reg_reg_n_0_[0] ;
  wire [63:0]\tx_66_enc_out_reg[65] ;
  wire [63:0]tx_66_fifo;
  wire [1:1]tx_test_patt_seed_sel;
  wire \tx_test_patt_seed_sel[0]_i_1_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_1_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_2_n_0 ;
  wire \tx_test_patt_seed_sel[1]_i_3_n_0 ;

  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_1
       (.I0(asynch_fifo_i_i_67_n_0),
        .I1(asynch_fifo_i_i_68_n_0),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [63]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[63]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_10
       (.I0(p_0_in36_in),
        .I1(\tx_66_enc_out_reg[65] [54]),
        .I2(Q),
        .I3(asynch_fifo_i_i_83_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[54]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_11
       (.I0(p_0_in32_in),
        .I1(\tx_66_enc_out_reg[65] [53]),
        .I2(Q),
        .I3(asynch_fifo_i_i_84_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[53]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_12
       (.I0(p_0_in28_in),
        .I1(\tx_66_enc_out_reg[65] [52]),
        .I2(Q),
        .I3(asynch_fifo_i_i_85_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[52]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_13
       (.I0(p_0_in24_in),
        .I1(\tx_66_enc_out_reg[65] [51]),
        .I2(Q),
        .I3(asynch_fifo_i_i_86_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[51]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_14
       (.I0(p_0_in20_in),
        .I1(\tx_66_enc_out_reg[65] [50]),
        .I2(Q),
        .I3(asynch_fifo_i_i_87_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[50]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_15
       (.I0(p_0_in16_in),
        .I1(\tx_66_enc_out_reg[65] [49]),
        .I2(Q),
        .I3(asynch_fifo_i_i_88_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[49]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_16
       (.I0(p_0_in12_in),
        .I1(\tx_66_enc_out_reg[65] [48]),
        .I2(Q),
        .I3(asynch_fifo_i_i_89_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[48]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_17
       (.I0(p_0_in8_in),
        .I1(\tx_66_enc_out_reg[65] [47]),
        .I2(Q),
        .I3(asynch_fifo_i_i_90_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[47]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_18
       (.I0(p_0_in4_in),
        .I1(\tx_66_enc_out_reg[65] [46]),
        .I2(Q),
        .I3(asynch_fifo_i_i_91_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[46]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_19
       (.I0(p_0_in0_in),
        .I1(\tx_66_enc_out_reg[65] [45]),
        .I2(Q),
        .I3(asynch_fifo_i_i_92_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[45]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_20
       (.I0(p_0_in_0),
        .I1(\tx_66_enc_out_reg[65] [44]),
        .I2(Q),
        .I3(asynch_fifo_i_i_68_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[44]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_21
       (.I0(p_2_in68_in),
        .I1(\tx_66_enc_out_reg[65] [43]),
        .I2(Q),
        .I3(asynch_fifo_i_i_70_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[43]));
  LUT6 #(
    .INIT(64'h00009966A55A9966)) 
    asynch_fifo_i_i_22
       (.I0(p_2_in64_in),
        .I1(\tx_66_enc_out_reg[65] [42]),
        .I2(Q),
        .I3(asynch_fifo_i_i_72_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[42]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_23
       (.I0(p_2_in60_in),
        .I1(\tx_66_enc_out_reg[65] [41]),
        .I2(Q),
        .I3(asynch_fifo_i_i_74_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[41]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_24
       (.I0(p_2_in56_in),
        .I1(\tx_66_enc_out_reg[65] [40]),
        .I2(Q),
        .I3(asynch_fifo_i_i_76_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[40]));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_25
       (.I0(p_2_in52_in),
        .I1(\tx_66_enc_out_reg[65] [39]),
        .I2(Q),
        .I3(asynch_fifo_i_i_78_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[39]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_26
       (.I0(p_2_in48_in),
        .I1(\scr_reg_reg_n_0_[0] ),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [38]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[38]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_27
       (.I0(p_2_in45_in),
        .I1(p_0_in44_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [37]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[37]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_28
       (.I0(p_2_in41_in),
        .I1(p_0_in40_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [36]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[36]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_29
       (.I0(p_2_in37_in),
        .I1(p_0_in36_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [35]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[35]));
  LUT6 #(
    .INIT(64'hFFFF66995AA56699)) 
    asynch_fifo_i_i_2__0
       (.I0(asynch_fifo_i_i_69_n_0),
        .I1(\tx_66_enc_out_reg[65] [62]),
        .I2(Q),
        .I3(asynch_fifo_i_i_70_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[62]));
  LUT6 #(
    .INIT(64'hFFFF669969696699)) 
    asynch_fifo_i_i_3
       (.I0(asynch_fifo_i_i_71_n_0),
        .I1(asynch_fifo_i_i_72_n_0),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [61]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[61]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_30
       (.I0(p_2_in33_in),
        .I1(p_0_in32_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [34]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[34]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_31
       (.I0(p_2_in29_in),
        .I1(p_0_in28_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [33]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[33]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_32
       (.I0(p_2_in25_in),
        .I1(p_0_in24_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [32]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[32]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_33
       (.I0(p_2_in21_in),
        .I1(p_0_in20_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [31]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[31]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_34
       (.I0(p_2_in17_in),
        .I1(p_0_in16_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [30]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[30]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_35
       (.I0(p_2_in13_in),
        .I1(p_0_in12_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [29]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[29]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_36
       (.I0(p_2_in9_in),
        .I1(p_0_in8_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [28]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[28]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_37
       (.I0(p_2_in5_in),
        .I1(p_0_in4_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [27]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[27]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_38
       (.I0(p_2_in1_in),
        .I1(p_0_in0_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [26]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[26]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_39
       (.I0(p_2_in),
        .I1(p_0_in_0),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [25]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[25]));
  LUT6 #(
    .INIT(64'hFFFF66995AA56699)) 
    asynch_fifo_i_i_4
       (.I0(asynch_fifo_i_i_73_n_0),
        .I1(\tx_66_enc_out_reg[65] [60]),
        .I2(Q),
        .I3(asynch_fifo_i_i_74_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[60]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_40
       (.I0(p_0_in200_in),
        .I1(p_2_in68_in),
        .I2(\q_reg[1] ),
        .I3(\tx_66_enc_out_reg[65] [24]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[24]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_41
       (.I0(p_0_in190_in),
        .I1(p_2_in64_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [23]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[23]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_42
       (.I0(p_0_in180_in),
        .I1(p_2_in60_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [22]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[22]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_43
       (.I0(p_0_in170_in),
        .I1(p_2_in56_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [21]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[21]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_44
       (.I0(p_0_in160_in),
        .I1(p_2_in52_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [20]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[20]));
  LUT6 #(
    .INIT(64'hFF969999FF966666)) 
    asynch_fifo_i_i_45
       (.I0(p_2_in48_in),
        .I1(p_0_in151_in),
        .I2(Q),
        .I3(\q_reg[3] [0]),
        .I4(\q_reg[3] [1]),
        .I5(\tx_66_enc_out_reg[65] [19]),
        .O(tx_66_fifo[19]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_46
       (.I0(p_2_in45_in),
        .I1(p_2_in145_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [18]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[18]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_47
       (.I0(p_2_in41_in),
        .I1(p_2_in139_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [17]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[17]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_48
       (.I0(p_2_in37_in),
        .I1(p_2_in133_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [16]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[16]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_49
       (.I0(p_2_in33_in),
        .I1(p_2_in127_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [15]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[15]));
  LUT6 #(
    .INIT(64'hFFFF669969696699)) 
    asynch_fifo_i_i_5
       (.I0(asynch_fifo_i_i_75_n_0),
        .I1(asynch_fifo_i_i_76_n_0),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [59]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[59]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_50
       (.I0(p_2_in29_in),
        .I1(p_2_in121_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [14]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[14]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_51
       (.I0(p_2_in25_in),
        .I1(p_2_in115_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [13]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[13]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_52
       (.I0(p_2_in21_in),
        .I1(p_2_in109_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [12]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[12]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_53
       (.I0(p_2_in17_in),
        .I1(p_2_in103_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [11]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[11]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_54
       (.I0(p_2_in13_in),
        .I1(p_2_in97_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [10]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[10]));
  LUT6 #(
    .INIT(64'hFFFF996696969966)) 
    asynch_fifo_i_i_55
       (.I0(p_2_in9_in),
        .I1(p_2_in91_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [9]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[9]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_56
       (.I0(p_2_in5_in),
        .I1(p_2_in85_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [8]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[8]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_57
       (.I0(p_2_in1_in),
        .I1(p_2_in79_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [7]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[7]));
  LUT6 #(
    .INIT(64'h0000999699669996)) 
    asynch_fifo_i_i_58
       (.I0(p_2_in),
        .I1(p_2_in74_in),
        .I2(\tx_66_enc_out_reg[65] [6]),
        .I3(\q_reg[1] ),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[6]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_59
       (.I0(p_0_in200_in),
        .I1(p_2_in201_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [5]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[5]));
  LUT6 #(
    .INIT(64'hFFFF66995AA56699)) 
    asynch_fifo_i_i_6
       (.I0(asynch_fifo_i_i_77_n_0),
        .I1(\tx_66_enc_out_reg[65] [58]),
        .I2(Q),
        .I3(asynch_fifo_i_i_78_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[58]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_60
       (.I0(p_0_in190_in),
        .I1(p_2_in191_in),
        .I2(\q_reg[1] ),
        .I3(\tx_66_enc_out_reg[65] [4]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[4]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_61
       (.I0(p_0_in180_in),
        .I1(p_2_in181_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [3]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[3]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_62
       (.I0(p_0_in170_in),
        .I1(p_2_in171_in),
        .I2(\q_reg[1] ),
        .I3(\tx_66_enc_out_reg[65] [2]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[2]));
  LUT6 #(
    .INIT(64'h0000996696969966)) 
    asynch_fifo_i_i_63
       (.I0(p_0_in160_in),
        .I1(p_2_in161_in),
        .I2(Q),
        .I3(\tx_66_enc_out_reg[65] [1]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[1]));
  LUT6 #(
    .INIT(64'h0000999696969996)) 
    asynch_fifo_i_i_64
       (.I0(p_0_in151_in),
        .I1(p_2_in152_in),
        .I2(\q_reg[1] ),
        .I3(\tx_66_enc_out_reg[65] [0]),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[0]));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_67
       (.I0(\tx_66_enc_out_reg[65] [24]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[1] ),
        .I3(p_2_in68_in),
        .I4(p_0_in200_in),
        .O(asynch_fifo_i_i_67_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_68
       (.I0(\tx_66_enc_out_reg[65] [5]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in201_in),
        .I5(p_0_in200_in),
        .O(asynch_fifo_i_i_68_n_0));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_69
       (.I0(\tx_66_enc_out_reg[65] [23]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in64_in),
        .I5(p_0_in190_in),
        .O(asynch_fifo_i_i_69_n_0));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_7
       (.I0(\scr_reg_reg_n_0_[0] ),
        .I1(\tx_66_enc_out_reg[65] [57]),
        .I2(Q),
        .I3(asynch_fifo_i_i_79_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[57]));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_70
       (.I0(\tx_66_enc_out_reg[65] [4]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[1] ),
        .I3(p_2_in191_in),
        .I4(p_0_in190_in),
        .O(asynch_fifo_i_i_70_n_0));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_71
       (.I0(\tx_66_enc_out_reg[65] [22]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in60_in),
        .I5(p_0_in180_in),
        .O(asynch_fifo_i_i_71_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_72
       (.I0(\tx_66_enc_out_reg[65] [3]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in181_in),
        .I5(p_0_in180_in),
        .O(asynch_fifo_i_i_72_n_0));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_73
       (.I0(\tx_66_enc_out_reg[65] [21]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in56_in),
        .I5(p_0_in170_in),
        .O(asynch_fifo_i_i_73_n_0));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_74
       (.I0(\tx_66_enc_out_reg[65] [2]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[1] ),
        .I3(p_2_in171_in),
        .I4(p_0_in170_in),
        .O(asynch_fifo_i_i_74_n_0));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_75
       (.I0(\tx_66_enc_out_reg[65] [20]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in52_in),
        .I5(p_0_in160_in),
        .O(asynch_fifo_i_i_75_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_76
       (.I0(\tx_66_enc_out_reg[65] [1]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in161_in),
        .I5(p_0_in160_in),
        .O(asynch_fifo_i_i_76_n_0));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    asynch_fifo_i_i_77
       (.I0(\tx_66_enc_out_reg[65] [19]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in151_in),
        .I5(p_2_in48_in),
        .O(asynch_fifo_i_i_77_n_0));
  LUT5 #(
    .INIT(32'hF20D0DF2)) 
    asynch_fifo_i_i_78
       (.I0(\tx_66_enc_out_reg[65] [0]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[1] ),
        .I3(p_2_in152_in),
        .I4(p_0_in151_in),
        .O(asynch_fifo_i_i_78_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_79
       (.I0(\tx_66_enc_out_reg[65] [18]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in145_in),
        .I5(p_2_in45_in),
        .O(asynch_fifo_i_i_79_n_0));
  LUT6 #(
    .INIT(64'hFFFFA956A55AA956)) 
    asynch_fifo_i_i_8
       (.I0(p_0_in44_in),
        .I1(\tx_66_enc_out_reg[65] [56]),
        .I2(\q_reg[1] ),
        .I3(asynch_fifo_i_i_81_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[56]));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_81
       (.I0(\tx_66_enc_out_reg[65] [17]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in139_in),
        .I5(p_2_in41_in),
        .O(asynch_fifo_i_i_81_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_82
       (.I0(\tx_66_enc_out_reg[65] [16]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in133_in),
        .I5(p_2_in37_in),
        .O(asynch_fifo_i_i_82_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_83
       (.I0(\tx_66_enc_out_reg[65] [15]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in127_in),
        .I5(p_2_in33_in),
        .O(asynch_fifo_i_i_83_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_84
       (.I0(\tx_66_enc_out_reg[65] [14]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in121_in),
        .I5(p_2_in29_in),
        .O(asynch_fifo_i_i_84_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_85
       (.I0(\tx_66_enc_out_reg[65] [13]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in115_in),
        .I5(p_2_in25_in),
        .O(asynch_fifo_i_i_85_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_86
       (.I0(\tx_66_enc_out_reg[65] [12]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in109_in),
        .I5(p_2_in21_in),
        .O(asynch_fifo_i_i_86_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_87
       (.I0(\tx_66_enc_out_reg[65] [11]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in103_in),
        .I5(p_2_in17_in),
        .O(asynch_fifo_i_i_87_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_88
       (.I0(\tx_66_enc_out_reg[65] [10]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in97_in),
        .I5(p_2_in13_in),
        .O(asynch_fifo_i_i_88_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_89
       (.I0(\tx_66_enc_out_reg[65] [9]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in91_in),
        .I5(p_2_in9_in),
        .O(asynch_fifo_i_i_89_n_0));
  LUT6 #(
    .INIT(64'hFFFF9966A55A9966)) 
    asynch_fifo_i_i_9
       (.I0(p_0_in40_in),
        .I1(\tx_66_enc_out_reg[65] [55]),
        .I2(Q),
        .I3(asynch_fifo_i_i_82_n_0),
        .I4(\q_reg[3] [1]),
        .I5(\q_reg[3] [0]),
        .O(tx_66_fifo[55]));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_90
       (.I0(\tx_66_enc_out_reg[65] [8]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in85_in),
        .I5(p_2_in5_in),
        .O(asynch_fifo_i_i_90_n_0));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    asynch_fifo_i_i_91
       (.I0(\tx_66_enc_out_reg[65] [7]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_2_in79_in),
        .I5(p_2_in1_in),
        .O(asynch_fifo_i_i_91_n_0));
  LUT5 #(
    .INIT(32'hAE5151AE)) 
    asynch_fifo_i_i_92
       (.I0(\q_reg[1] ),
        .I1(\tx_66_enc_out_reg[65] [6]),
        .I2(\q_reg[3] [1]),
        .I3(p_2_in74_in),
        .I4(p_2_in),
        .O(asynch_fifo_i_i_92_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \block_count[0]_i_1 
       (.I0(block_count_reg__0[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \block_count[1]_i_1 
       (.I0(block_count_reg__0[0]),
        .I1(block_count_reg__0[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \block_count[2]_i_1 
       (.I0(block_count_reg__0[2]),
        .I1(block_count_reg__0[0]),
        .I2(block_count_reg__0[1]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \block_count[3]_i_1 
       (.I0(block_count_reg__0[3]),
        .I1(block_count_reg__0[1]),
        .I2(block_count_reg__0[0]),
        .I3(block_count_reg__0[2]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \block_count[4]_i_1 
       (.I0(block_count_reg__0[4]),
        .I1(block_count_reg__0[3]),
        .I2(block_count_reg__0[1]),
        .I3(block_count_reg__0[0]),
        .I4(block_count_reg__0[2]),
        .O(\block_count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \block_count[5]_i_1 
       (.I0(block_count_reg__0[5]),
        .I1(block_count_reg__0[3]),
        .I2(block_count_reg__0[1]),
        .I3(block_count_reg__0[0]),
        .I4(block_count_reg__0[2]),
        .I5(block_count_reg__0[4]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \block_count[6]_i_1 
       (.I0(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I1(block_count_reg__0[6]),
        .O(p_0_in[6]));
  FDRE \block_count_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(block_count_reg__0[0]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(block_count_reg__0[1]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .Q(block_count_reg__0[2]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(block_count_reg__0[3]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_count[4]_i_1_n_0 ),
        .Q(block_count_reg__0[4]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(block_count_reg__0[5]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \block_count_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(block_count_reg__0[6]),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'h2)) 
    new_tx_test_seed_i_1
       (.I0(block_count_reg__0[6]),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .O(new_tx_test_seed_i_1_n_0));
  FDRE new_tx_test_seed_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(new_tx_test_seed_i_1_n_0),
        .Q(new_tx_test_seed),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[0]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[0]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[58]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[0]_i_2_n_0 ),
        .O(\scr_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[0]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [63]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(asynch_fifo_i_i_68_n_0),
        .I5(asynch_fifo_i_i_67_n_0),
        .O(\scr_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[10]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[10]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[68]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[10]_i_2_n_0 ),
        .O(\scr_reg[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[10]_i_2 
       (.I0(asynch_fifo_i_i_84_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [53]),
        .I5(p_0_in32_in),
        .O(\scr_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[11]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[11]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[69]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[11]_i_2_n_0 ),
        .O(\scr_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[11]_i_2 
       (.I0(asynch_fifo_i_i_85_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [52]),
        .I5(p_0_in28_in),
        .O(\scr_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[12]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[12]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[70]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[12]_i_2_n_0 ),
        .O(\scr_reg[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[12]_i_2 
       (.I0(asynch_fifo_i_i_86_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [51]),
        .I5(p_0_in24_in),
        .O(\scr_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[13]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[13]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[71]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[13]_i_2_n_0 ),
        .O(\scr_reg[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[13]_i_2 
       (.I0(asynch_fifo_i_i_87_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [50]),
        .I5(p_0_in20_in),
        .O(\scr_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[14]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[14]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[72]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[14]_i_2_n_0 ),
        .O(\scr_reg[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[14]_i_2 
       (.I0(asynch_fifo_i_i_88_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [49]),
        .I5(p_0_in16_in),
        .O(\scr_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[15]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[15]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[73]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[15]_i_2_n_0 ),
        .O(\scr_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[15]_i_2 
       (.I0(asynch_fifo_i_i_89_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [48]),
        .I5(p_0_in12_in),
        .O(\scr_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[16]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[16]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[74]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[16]_i_2_n_0 ),
        .O(\scr_reg[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[16]_i_2 
       (.I0(asynch_fifo_i_i_90_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [47]),
        .I5(p_0_in8_in),
        .O(\scr_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[17]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[17]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[75]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[17]_i_2_n_0 ),
        .O(\scr_reg[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[17]_i_2 
       (.I0(asynch_fifo_i_i_91_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [46]),
        .I5(p_0_in4_in),
        .O(\scr_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[18]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[18]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[76]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[18]_i_2_n_0 ),
        .O(\scr_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[18]_i_2 
       (.I0(asynch_fifo_i_i_92_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [45]),
        .I5(p_0_in0_in),
        .O(\scr_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[19]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[19]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[77]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[19]_i_2_n_0 ),
        .O(\scr_reg[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[19]_i_2 
       (.I0(asynch_fifo_i_i_68_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [44]),
        .I5(p_0_in_0),
        .O(\scr_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[1]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[1]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[59]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[1]_i_2_n_0 ),
        .O(\scr_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[1]_i_2 
       (.I0(asynch_fifo_i_i_70_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [62]),
        .I5(asynch_fifo_i_i_69_n_0),
        .O(\scr_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[20]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[20]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[78]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[20]_i_2_n_0 ),
        .O(\scr_reg[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[20]_i_2 
       (.I0(asynch_fifo_i_i_70_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [43]),
        .I5(p_2_in68_in),
        .O(\scr_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[21]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[21]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[79]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[21]_i_2_n_0 ),
        .O(\scr_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[21]_i_2 
       (.I0(asynch_fifo_i_i_72_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [42]),
        .I5(p_2_in64_in),
        .O(\scr_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[22]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[22]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[80]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[22]_i_2_n_0 ),
        .O(\scr_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[22]_i_2 
       (.I0(asynch_fifo_i_i_74_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [41]),
        .I5(p_2_in60_in),
        .O(\scr_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[23]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[23]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[81]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[23]_i_2_n_0 ),
        .O(\scr_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[23]_i_2 
       (.I0(asynch_fifo_i_i_76_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [40]),
        .I5(p_2_in56_in),
        .O(\scr_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[24]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[24]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[82]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[24]_i_2_n_0 ),
        .O(\scr_reg[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[24]_i_2 
       (.I0(asynch_fifo_i_i_78_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [39]),
        .I5(p_2_in52_in),
        .O(\scr_reg[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[25]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[25]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[83]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[25]_i_2_n_0 ),
        .O(\scr_reg[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[25]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [38]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(\scr_reg_reg_n_0_[0] ),
        .I5(p_2_in48_in),
        .O(\scr_reg[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[26]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[26]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[84]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[26]_i_2_n_0 ),
        .O(\scr_reg[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[26]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [37]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in44_in),
        .I5(p_2_in45_in),
        .O(\scr_reg[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[27]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[27]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[85]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[27]_i_2_n_0 ),
        .O(\scr_reg[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[27]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [36]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in40_in),
        .I5(p_2_in41_in),
        .O(\scr_reg[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[28]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[28]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[86]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[28]_i_2_n_0 ),
        .O(\scr_reg[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[28]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [35]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in36_in),
        .I5(p_2_in37_in),
        .O(\scr_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[29]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[29]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[87]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[29]_i_2_n_0 ),
        .O(\scr_reg[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[29]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [34]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in32_in),
        .I5(p_2_in33_in),
        .O(\scr_reg[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[2]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[2]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[60]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[2]_i_2_n_0 ),
        .O(\scr_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    \scr_reg[2]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [61]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(asynch_fifo_i_i_72_n_0),
        .I5(asynch_fifo_i_i_71_n_0),
        .O(\scr_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[30]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[30]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[88]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[30]_i_2_n_0 ),
        .O(\scr_reg[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[30]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [33]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in28_in),
        .I5(p_2_in29_in),
        .O(\scr_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[31]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[31]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[89]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[31]_i_2_n_0 ),
        .O(\scr_reg[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[31]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [32]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in24_in),
        .I5(p_2_in25_in),
        .O(\scr_reg[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[32]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[32]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[90]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[32]_i_2_n_0 ),
        .O(\scr_reg[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[32]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [31]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in20_in),
        .I5(p_2_in21_in),
        .O(\scr_reg[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[33]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[33]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[91]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[33]_i_2_n_0 ),
        .O(\scr_reg[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[33]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [30]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in16_in),
        .I5(p_2_in17_in),
        .O(\scr_reg[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[34]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[34]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[92]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[34]_i_2_n_0 ),
        .O(\scr_reg[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[34]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [29]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in12_in),
        .I5(p_2_in13_in),
        .O(\scr_reg[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[35]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[35]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[93]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[35]_i_2_n_0 ),
        .O(\scr_reg[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[35]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [28]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in8_in),
        .I5(p_2_in9_in),
        .O(\scr_reg[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[36]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[36]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[94]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[36]_i_2_n_0 ),
        .O(\scr_reg[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[36]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [27]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in4_in),
        .I5(p_2_in5_in),
        .O(\scr_reg[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[37]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[37]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[95]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[37]_i_2_n_0 ),
        .O(\scr_reg[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[37]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [26]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in0_in),
        .I5(p_2_in1_in),
        .O(\scr_reg[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[38]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[38]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[96]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[38]_i_2_n_0 ),
        .O(\scr_reg[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22D1DDD1DD2E22)) 
    \scr_reg[38]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [25]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(p_0_in_0),
        .I5(p_2_in),
        .O(\scr_reg[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[39]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[39]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[97]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_67_n_0),
        .O(\scr_reg[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[3]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[3]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[61]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[3]_i_2_n_0 ),
        .O(\scr_reg[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[3]_i_2 
       (.I0(asynch_fifo_i_i_74_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [60]),
        .I5(asynch_fifo_i_i_73_n_0),
        .O(\scr_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333CCC3C55555555)) 
    \scr_reg[40]_i_1 
       (.I0(asynch_fifo_i_i_69_n_0),
        .I1(Q),
        .I2(pseudo_rand_seeds_int[40]),
        .I3(tx_test_patt_seed_sel),
        .I4(pseudo_rand_seeds_int[98]),
        .I5(\q_reg[3]_0 ),
        .O(\scr_reg[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[41]_i_1 
       (.I0(asynch_fifo_i_i_71_n_0),
        .I1(\q_reg[3]_0 ),
        .I2(Q),
        .I3(pseudo_rand_seeds_int[41]),
        .I4(tx_test_patt_seed_sel),
        .I5(pseudo_rand_seeds_int[99]),
        .O(\scr_reg[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6000056A6FFFF)) 
    \scr_reg[42]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[42]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[100]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_73_n_0),
        .O(\scr_reg[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[43]_i_1 
       (.I0(asynch_fifo_i_i_75_n_0),
        .I1(\q_reg[3]_0 ),
        .I2(Q),
        .I3(pseudo_rand_seeds_int[43]),
        .I4(tx_test_patt_seed_sel),
        .I5(pseudo_rand_seeds_int[101]),
        .O(\scr_reg[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1D1D1DD1D1D11DD1)) 
    \scr_reg[44]_i_1 
       (.I0(asynch_fifo_i_i_77_n_0),
        .I1(\q_reg[3]_0 ),
        .I2(Q),
        .I3(pseudo_rand_seeds_int[44]),
        .I4(tx_test_patt_seed_sel),
        .I5(pseudo_rand_seeds_int[102]),
        .O(\scr_reg[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[45]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[45]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[103]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_79_n_0),
        .O(\scr_reg[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[46]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[46]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[104]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_81_n_0),
        .O(\scr_reg[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[47]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[47]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[105]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_82_n_0),
        .O(\scr_reg[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[48]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[48]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[106]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_83_n_0),
        .O(\scr_reg[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[49]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[49]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[107]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_84_n_0),
        .O(\scr_reg[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[4]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[4]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[62]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[4]_i_2_n_0 ),
        .O(\scr_reg[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD1DD2E222E22D1DD)) 
    \scr_reg[4]_i_2 
       (.I0(\tx_66_enc_out_reg[65] [59]),
        .I1(\q_reg[3] [1]),
        .I2(\q_reg[3] [0]),
        .I3(Q),
        .I4(asynch_fifo_i_i_76_n_0),
        .I5(asynch_fifo_i_i_75_n_0),
        .O(\scr_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[50]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[50]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[108]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_85_n_0),
        .O(\scr_reg[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[51]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[51]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[109]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_86_n_0),
        .O(\scr_reg[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[52]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[52]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[110]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_87_n_0),
        .O(\scr_reg[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[53]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[53]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[111]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_88_n_0),
        .O(\scr_reg[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[54]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[54]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[112]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_89_n_0),
        .O(\scr_reg[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[55]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[55]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[113]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_90_n_0),
        .O(\scr_reg[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[56]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[56]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[114]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_91_n_0),
        .O(\scr_reg[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[57]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[57]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[115]),
        .I4(\q_reg[3]_0 ),
        .I5(asynch_fifo_i_i_92_n_0),
        .O(\scr_reg[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[5]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[5]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[63]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[5]_i_2_n_0 ),
        .O(\scr_reg[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA655A6AA59AA5955)) 
    \scr_reg[5]_i_2 
       (.I0(asynch_fifo_i_i_78_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [58]),
        .I5(asynch_fifo_i_i_77_n_0),
        .O(\scr_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[6]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[6]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[64]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[6]_i_2_n_0 ),
        .O(\scr_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[6]_i_2 
       (.I0(asynch_fifo_i_i_79_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [57]),
        .I5(\scr_reg_reg_n_0_[0] ),
        .O(\scr_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[7]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[7]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[65]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[7]_i_2_n_0 ),
        .O(\scr_reg[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h9A996566)) 
    \scr_reg[7]_i_2 
       (.I0(asynch_fifo_i_i_81_n_0),
        .I1(\q_reg[1] ),
        .I2(\q_reg[3] [1]),
        .I3(\tx_66_enc_out_reg[65] [56]),
        .I4(p_0_in44_in),
        .O(\scr_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[8]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[8]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[66]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[8]_i_2_n_0 ),
        .O(\scr_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[8]_i_2 
       (.I0(asynch_fifo_i_i_82_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [55]),
        .I5(p_0_in40_in),
        .O(\scr_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h56A6FFFF56A60000)) 
    \scr_reg[9]_i_1 
       (.I0(Q),
        .I1(pseudo_rand_seeds_int[9]),
        .I2(tx_test_patt_seed_sel),
        .I3(pseudo_rand_seeds_int[67]),
        .I4(\q_reg[3]_0 ),
        .I5(\scr_reg[9]_i_2_n_0 ),
        .O(\scr_reg[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h59AA5955A655A6AA)) 
    \scr_reg[9]_i_2 
       (.I0(asynch_fifo_i_i_83_n_0),
        .I1(Q),
        .I2(\q_reg[3] [0]),
        .I3(\q_reg[3] [1]),
        .I4(\tx_66_enc_out_reg[65] [54]),
        .I5(p_0_in36_in),
        .O(\scr_reg[9]_i_2_n_0 ));
  FDRE \scr_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[0]_i_1_n_0 ),
        .Q(\scr_reg_reg_n_0_[0] ),
        .R(SR));
  FDRE \scr_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[10]_i_1_n_0 ),
        .Q(p_0_in8_in),
        .R(SR));
  FDRE \scr_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[11]_i_1_n_0 ),
        .Q(p_0_in4_in),
        .R(SR));
  FDRE \scr_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[12]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \scr_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[13]_i_1_n_0 ),
        .Q(p_0_in_0),
        .R(SR));
  FDRE \scr_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[14]_i_1_n_0 ),
        .Q(p_2_in68_in),
        .R(SR));
  FDRE \scr_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[15]_i_1_n_0 ),
        .Q(p_2_in64_in),
        .R(SR));
  FDRE \scr_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[16]_i_1_n_0 ),
        .Q(p_2_in60_in),
        .R(SR));
  FDRE \scr_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[17]_i_1_n_0 ),
        .Q(p_2_in56_in),
        .R(SR));
  FDRE \scr_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[18]_i_1_n_0 ),
        .Q(p_2_in52_in),
        .R(SR));
  FDRE \scr_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[19]_i_1_n_0 ),
        .Q(p_2_in48_in),
        .R(SR));
  FDRE \scr_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[1]_i_1_n_0 ),
        .Q(p_0_in44_in),
        .R(SR));
  FDRE \scr_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[20]_i_1_n_0 ),
        .Q(p_2_in45_in),
        .R(SR));
  FDRE \scr_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[21]_i_1_n_0 ),
        .Q(p_2_in41_in),
        .R(SR));
  FDRE \scr_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[22]_i_1_n_0 ),
        .Q(p_2_in37_in),
        .R(SR));
  FDRE \scr_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[23]_i_1_n_0 ),
        .Q(p_2_in33_in),
        .R(SR));
  FDRE \scr_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[24]_i_1_n_0 ),
        .Q(p_2_in29_in),
        .R(SR));
  FDRE \scr_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[25]_i_1_n_0 ),
        .Q(p_2_in25_in),
        .R(SR));
  FDRE \scr_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[26]_i_1_n_0 ),
        .Q(p_2_in21_in),
        .R(SR));
  FDRE \scr_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[27]_i_1_n_0 ),
        .Q(p_2_in17_in),
        .R(SR));
  FDRE \scr_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[28]_i_1_n_0 ),
        .Q(p_2_in13_in),
        .R(SR));
  FDRE \scr_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[29]_i_1_n_0 ),
        .Q(p_2_in9_in),
        .R(SR));
  FDRE \scr_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[2]_i_1_n_0 ),
        .Q(p_0_in40_in),
        .R(SR));
  FDRE \scr_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[30]_i_1_n_0 ),
        .Q(p_2_in5_in),
        .R(SR));
  FDRE \scr_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[31]_i_1_n_0 ),
        .Q(p_2_in1_in),
        .R(SR));
  FDRE \scr_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[32]_i_1_n_0 ),
        .Q(p_2_in),
        .R(SR));
  FDRE \scr_reg_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[33]_i_1_n_0 ),
        .Q(p_0_in200_in),
        .R(SR));
  FDRE \scr_reg_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[34]_i_1_n_0 ),
        .Q(p_0_in190_in),
        .R(SR));
  FDRE \scr_reg_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[35]_i_1_n_0 ),
        .Q(p_0_in180_in),
        .R(SR));
  FDRE \scr_reg_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[36]_i_1_n_0 ),
        .Q(p_0_in170_in),
        .R(SR));
  FDRE \scr_reg_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[37]_i_1_n_0 ),
        .Q(p_0_in160_in),
        .R(SR));
  FDRE \scr_reg_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[38]_i_1_n_0 ),
        .Q(p_0_in151_in),
        .R(SR));
  FDRE \scr_reg_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[39]_i_1_n_0 ),
        .Q(p_2_in145_in),
        .R(SR));
  FDRE \scr_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[3]_i_1_n_0 ),
        .Q(p_0_in36_in),
        .R(SR));
  FDRE \scr_reg_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[40]_i_1_n_0 ),
        .Q(p_2_in139_in),
        .R(SR));
  FDRE \scr_reg_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[41]_i_1_n_0 ),
        .Q(p_2_in133_in),
        .R(SR));
  FDRE \scr_reg_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[42]_i_1_n_0 ),
        .Q(p_2_in127_in),
        .R(SR));
  FDRE \scr_reg_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[43]_i_1_n_0 ),
        .Q(p_2_in121_in),
        .R(SR));
  FDRE \scr_reg_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[44]_i_1_n_0 ),
        .Q(p_2_in115_in),
        .R(SR));
  FDRE \scr_reg_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[45]_i_1_n_0 ),
        .Q(p_2_in109_in),
        .R(SR));
  FDRE \scr_reg_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[46]_i_1_n_0 ),
        .Q(p_2_in103_in),
        .R(SR));
  FDRE \scr_reg_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[47]_i_1_n_0 ),
        .Q(p_2_in97_in),
        .R(SR));
  FDRE \scr_reg_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[48]_i_1_n_0 ),
        .Q(p_2_in91_in),
        .R(SR));
  FDRE \scr_reg_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[49]_i_1_n_0 ),
        .Q(p_2_in85_in),
        .R(SR));
  FDRE \scr_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[4]_i_1_n_0 ),
        .Q(p_0_in32_in),
        .R(SR));
  FDRE \scr_reg_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[50]_i_1_n_0 ),
        .Q(p_2_in79_in),
        .R(SR));
  FDRE \scr_reg_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[51]_i_1_n_0 ),
        .Q(p_2_in74_in),
        .R(SR));
  FDRE \scr_reg_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[52]_i_1_n_0 ),
        .Q(p_2_in201_in),
        .R(SR));
  FDRE \scr_reg_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[53]_i_1_n_0 ),
        .Q(p_2_in191_in),
        .R(SR));
  FDRE \scr_reg_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[54]_i_1_n_0 ),
        .Q(p_2_in181_in),
        .R(SR));
  FDRE \scr_reg_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[55]_i_1_n_0 ),
        .Q(p_2_in171_in),
        .R(SR));
  FDRE \scr_reg_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[56]_i_1_n_0 ),
        .Q(p_2_in161_in),
        .R(SR));
  FDRE \scr_reg_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[57]_i_1_n_0 ),
        .Q(p_2_in152_in),
        .R(SR));
  FDRE \scr_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[5]_i_1_n_0 ),
        .Q(p_0_in28_in),
        .R(SR));
  FDRE \scr_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[6]_i_1_n_0 ),
        .Q(p_0_in24_in),
        .R(SR));
  FDRE \scr_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[7]_i_1_n_0 ),
        .Q(p_0_in20_in),
        .R(SR));
  FDRE \scr_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[8]_i_1_n_0 ),
        .Q(p_0_in16_in),
        .R(SR));
  FDRE \scr_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\scr_reg[9]_i_1_n_0 ),
        .Q(p_0_in12_in),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \tx_test_patt_seed_sel[0]_i_1 
       (.I0(Q),
        .I1(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I2(block_count_reg__0[6]),
        .O(\tx_test_patt_seed_sel[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \tx_test_patt_seed_sel[1]_i_1 
       (.I0(SR),
        .I1(\q_reg[3] [1]),
        .O(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT4 #(
    .INIT(16'hA6AA)) 
    \tx_test_patt_seed_sel[1]_i_2 
       (.I0(tx_test_patt_seed_sel),
        .I1(block_count_reg__0[6]),
        .I2(\tx_test_patt_seed_sel[1]_i_3_n_0 ),
        .I3(Q),
        .O(\tx_test_patt_seed_sel[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \tx_test_patt_seed_sel[1]_i_3 
       (.I0(block_count_reg__0[4]),
        .I1(block_count_reg__0[2]),
        .I2(block_count_reg__0[0]),
        .I3(block_count_reg__0[1]),
        .I4(block_count_reg__0[3]),
        .I5(block_count_reg__0[5]),
        .O(\tx_test_patt_seed_sel[1]_i_3_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_test_patt_seed_sel[0]_i_1_n_0 ),
        .Q(Q),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
  FDRE \tx_test_patt_seed_sel_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_test_patt_seed_sel[1]_i_2_n_0 ),
        .Q(tx_test_patt_seed_sel),
        .R(\tx_test_patt_seed_sel[1]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pcs_top" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_top
   (new_tx_test_seed,
    \mcp1_rx_64_ctrl_out_reg[4] ,
    b_lock,
    gt_slip_int,
    ber_count_inc,
    hiber,
    err_block_count_inc,
    \mcp1_dec_c5_reg[2] ,
    \mcp1_dec_c7_reg[2] ,
    \mcp1_dec_c6_reg[2] ,
    pcs_rx_link_up_core_reg_reg,
    comp_7,
    \mcp1_data_pipe_reg[63] ,
    comp_6,
    comp_5,
    comp_4,
    comp_3,
    comp_2,
    comp_7_0,
    comp_6_1,
    comp_5_2,
    comp_4_3,
    comp_3_4,
    comp_2_5,
    \tx_test_patt_seed_sel_reg[1] ,
    tx_66_fifo,
    \rd_data_reg[1] ,
    \mcp1_state_reg[1] ,
    \mcp1_dec_c4_reg[2] ,
    \mcp1_dec_c1_reg[2] ,
    \mcp1_dec_c2_reg[2] ,
    \mcp1_dec_c3_reg[2] ,
    \mcp1_dec_c0_reg[2] ,
    \mcp1_ctrl_pipe_reg[7] ,
    comp_8,
    comp_2_6,
    comp_1,
    comp_1_7,
    comp_0,
    comp_0_8,
    comp_8_9,
    comp_2_10,
    comp_1_11,
    comp_1_12,
    comp_0_13,
    comp_0_14,
    rxusrclk2,
    Q,
    E,
    coreclk,
    signal_detect,
    \mcp1_rx_66_raw_reg[65] ,
    \q_reg[3] ,
    pseudo_rand_seeds_int,
    \q_reg[3]_0 ,
    \q_reg[1] ,
    rxusrclk2_en156_reg_rep__11,
    out,
    rxusrclk2_en156_reg_rep__10,
    rxusrclk2_en156_reg_rep__6,
    rxusrclk2_en156_reg_rep__2,
    D,
    \xgmii_txd_reg_reg[63] ,
    mcp1_state,
    rxusrclk2_en156_reg_rep__3,
    rxusrclk2_en156_reg_rep__10_0,
    rxusrclk2_en156_reg_rep__5,
    SR,
    rxusrclk2_en156_reg_rep__10_1,
    rxusrclk2_en156_reg_rep__10_2,
    rxusrclk2_en156_reg_rep__10_3,
    rxusrclk2_en156_reg_rep__10_4,
    rxusrclk2_en156_reg_rep__10_5,
    rxusrclk2_en156_reg_rep__10_6,
    rxusrclk2_en156_reg_rep__10_7,
    rxusrclk2_en156_reg_rep__7,
    rxusrclk2_en156_reg_rep__1,
    rxreset,
    data_out_reg,
    reset);
  output new_tx_test_seed;
  output \mcp1_rx_64_ctrl_out_reg[4] ;
  output b_lock;
  output gt_slip_int;
  output ber_count_inc;
  output hiber;
  output err_block_count_inc;
  output \mcp1_dec_c5_reg[2] ;
  output [0:0]\mcp1_dec_c7_reg[2] ;
  output [0:0]\mcp1_dec_c6_reg[2] ;
  output pcs_rx_link_up_core_reg_reg;
  output comp_7;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  output comp_6;
  output comp_5;
  output comp_4;
  output comp_3;
  output comp_2;
  output comp_7_0;
  output comp_6_1;
  output comp_5_2;
  output comp_4_3;
  output comp_3_4;
  output comp_2_5;
  output [0:0]\tx_test_patt_seed_sel_reg[1] ;
  output [64:0]tx_66_fifo;
  output [0:0]\rd_data_reg[1] ;
  output \mcp1_state_reg[1] ;
  output [0:0]\mcp1_dec_c4_reg[2] ;
  output [0:0]\mcp1_dec_c1_reg[2] ;
  output [0:0]\mcp1_dec_c2_reg[2] ;
  output [0:0]\mcp1_dec_c3_reg[2] ;
  output \mcp1_dec_c0_reg[2] ;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output comp_8;
  output comp_2_6;
  output comp_1;
  output comp_1_7;
  output comp_0;
  output comp_0_8;
  output comp_8_9;
  output comp_2_10;
  output comp_1_11;
  output comp_1_12;
  output comp_0_13;
  output comp_0_14;
  input rxusrclk2;
  input [15:0]Q;
  input [1:0]E;
  input coreclk;
  input signal_detect;
  input [65:0]\mcp1_rx_66_raw_reg[65] ;
  input [1:0]\q_reg[3] ;
  input [115:0]pseudo_rand_seeds_int;
  input \q_reg[3]_0 ;
  input \q_reg[1] ;
  input rxusrclk2_en156_reg_rep__11;
  input [2:0]out;
  input rxusrclk2_en156_reg_rep__10;
  input [1:0]rxusrclk2_en156_reg_rep__6;
  input [1:0]rxusrclk2_en156_reg_rep__2;
  input [7:0]D;
  input [63:0]\xgmii_txd_reg_reg[63] ;
  input mcp1_state;
  input [0:0]rxusrclk2_en156_reg_rep__3;
  input rxusrclk2_en156_reg_rep__10_0;
  input [0:0]rxusrclk2_en156_reg_rep__5;
  input [0:0]SR;
  input [0:0]rxusrclk2_en156_reg_rep__10_1;
  input [0:0]rxusrclk2_en156_reg_rep__10_2;
  input [0:0]rxusrclk2_en156_reg_rep__10_3;
  input [0:0]rxusrclk2_en156_reg_rep__10_4;
  input [0:0]rxusrclk2_en156_reg_rep__10_5;
  input [0:0]rxusrclk2_en156_reg_rep__10_6;
  input [0:0]rxusrclk2_en156_reg_rep__10_7;
  input [1:0]rxusrclk2_en156_reg_rep__7;
  input [0:0]rxusrclk2_en156_reg_rep__1;
  input rxreset;
  input data_out_reg;
  input reset;

  wire [7:0]D;
  wire [1:0]E;
  wire [15:0]Q;
  wire [0:0]SR;
  wire b_lock;
  wire ber_count_inc;
  wire comp_0;
  wire comp_0_13;
  wire comp_0_14;
  wire comp_0_8;
  wire comp_1;
  wire comp_1_11;
  wire comp_1_12;
  wire comp_1_7;
  wire comp_2;
  wire comp_2_10;
  wire comp_2_5;
  wire comp_2_6;
  wire comp_3;
  wire comp_3_4;
  wire comp_4;
  wire comp_4_3;
  wire comp_5;
  wire comp_5_2;
  wire comp_6;
  wire comp_6_1;
  wire comp_7;
  wire comp_7_0;
  wire comp_8;
  wire comp_8_9;
  wire coreclk;
  wire data_out_reg;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire hiber;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire \mcp1_dec_c0_reg[2] ;
  wire [0:0]\mcp1_dec_c1_reg[2] ;
  wire [0:0]\mcp1_dec_c2_reg[2] ;
  wire [0:0]\mcp1_dec_c3_reg[2] ;
  wire [0:0]\mcp1_dec_c4_reg[2] ;
  wire \mcp1_dec_c5_reg[2] ;
  wire [0:0]\mcp1_dec_c6_reg[2] ;
  wire [0:0]\mcp1_dec_c7_reg[2] ;
  wire \mcp1_rx_64_ctrl_out_reg[4] ;
  wire [65:0]\mcp1_rx_66_raw_reg[65] ;
  wire mcp1_state;
  wire \mcp1_state_reg[1] ;
  wire [15:0]mcp1_timer_125us_cycles_sync;
  wire new_tx_test_seed;
  wire [2:0]out;
  wire pcs_rx_link_up_core_reg_reg;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[1] ;
  wire [1:0]\q_reg[3] ;
  wire \q_reg[3]_0 ;
  wire [0:0]\rd_data_reg[1] ;
  wire reset;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire reset_local;
  wire rxreset;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_local;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg_rep__1;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__10_0;
  wire [0:0]rxusrclk2_en156_reg_rep__10_1;
  wire [0:0]rxusrclk2_en156_reg_rep__10_2;
  wire [0:0]rxusrclk2_en156_reg_rep__10_3;
  wire [0:0]rxusrclk2_en156_reg_rep__10_4;
  wire [0:0]rxusrclk2_en156_reg_rep__10_5;
  wire [0:0]rxusrclk2_en156_reg_rep__10_6;
  wire [0:0]rxusrclk2_en156_reg_rep__10_7;
  wire rxusrclk2_en156_reg_rep__11;
  wire [1:0]rxusrclk2_en156_reg_rep__2;
  wire [0:0]rxusrclk2_en156_reg_rep__3;
  wire [0:0]rxusrclk2_en156_reg_rep__5;
  wire [1:0]rxusrclk2_en156_reg_rep__6;
  wire [1:0]rxusrclk2_en156_reg_rep__7;
  wire signal_detect;
  wire [64:0]tx_66_fifo;
  wire [0:0]\tx_test_patt_seed_sel_reg[1] ;
  wire [63:0]\xgmii_txd_reg_reg[63] ;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_coherent_resyncs_en coreclk_rxusrclk2_timer_125us_resync
       (.E(E[1]),
        .Q(Q),
        .out(mcp1_timer_125us_cycles_sync),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__2(rxusrclk2_en156_reg_rep__2[1]),
        .rxusrclk2_en156_reg_rep__4(rxusrclk2_en156_reg_rep__6[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE reset_local_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(reset),
        .Q(reset_local),
        .S(data_out_reg));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs rx_pcs_i
       (.D(\mcp1_dec_c7_reg[2] ),
        .E({rxusrclk2_en156_reg_rep__5,rxusrclk2_en156_reg_rep__6[1]}),
        .SR(\mcp1_rx_64_ctrl_out_reg[4] ),
        .ber_count_inc(ber_count_inc),
        .comp_0(comp_0),
        .comp_0_13(comp_0_13),
        .comp_0_14(comp_0_14),
        .comp_0_8(comp_0_8),
        .comp_1(comp_1),
        .comp_1_11(comp_1_11),
        .comp_1_12(comp_1_12),
        .comp_1_7(comp_1_7),
        .comp_2(comp_2),
        .comp_2_10(comp_2_10),
        .comp_2_5(comp_2_5),
        .comp_2_6(comp_2_6),
        .comp_3(comp_3),
        .comp_3_4(comp_3_4),
        .comp_4(comp_4),
        .comp_4_3(comp_4_3),
        .comp_5(comp_5),
        .comp_5_2(comp_5_2),
        .comp_6(comp_6),
        .comp_6_1(comp_6_1),
        .comp_7(comp_7),
        .comp_7_0(comp_7_0),
        .comp_8(comp_8),
        .comp_8_9(comp_8_9),
        .d1_reg(b_lock),
        .d1_reg_0(hiber),
        .err_block_count_inc(err_block_count_inc),
        .gt_slip_int(gt_slip_int),
        .\mcp1_ctrl_pipe_reg[7] (\mcp1_ctrl_pipe_reg[7] ),
        .\mcp1_data_pipe_reg[63] (\mcp1_data_pipe_reg[63] ),
        .\mcp1_dec_c0_reg[2] (\mcp1_dec_c0_reg[2] ),
        .\mcp1_dec_c1_reg[2] (\mcp1_dec_c1_reg[2] ),
        .\mcp1_dec_c2_reg[2] (\mcp1_dec_c2_reg[2] ),
        .\mcp1_dec_c3_reg[2] (\mcp1_dec_c3_reg[2] ),
        .\mcp1_dec_c4_reg[2] (\mcp1_dec_c4_reg[2] ),
        .\mcp1_dec_c5_reg[2] (\mcp1_dec_c5_reg[2] ),
        .\mcp1_dec_c6_reg[2] (\mcp1_dec_c6_reg[2] ),
        .\mcp1_rx_66_raw_reg[65] (\mcp1_rx_66_raw_reg[65] ),
        .mcp1_state(mcp1_state),
        .\mcp1_state_reg[1] (\mcp1_state_reg[1] ),
        .out(mcp1_timer_125us_cycles_sync),
        .\outreg_reg[2] (out),
        .pcs_rx_link_up_core_reg_reg(pcs_rx_link_up_core_reg_reg),
        .rxreset_local_reg(rxreset_local),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg(E),
        .rxusrclk2_en156_reg_rep__1(rxusrclk2_en156_reg_rep__1),
        .rxusrclk2_en156_reg_rep__10(rxusrclk2_en156_reg_rep__10),
        .rxusrclk2_en156_reg_rep__10_0(rxusrclk2_en156_reg_rep__10_0),
        .rxusrclk2_en156_reg_rep__10_1(SR),
        .rxusrclk2_en156_reg_rep__10_2(rxusrclk2_en156_reg_rep__10_1),
        .rxusrclk2_en156_reg_rep__10_3(rxusrclk2_en156_reg_rep__10_2),
        .rxusrclk2_en156_reg_rep__10_4(rxusrclk2_en156_reg_rep__10_3),
        .rxusrclk2_en156_reg_rep__10_5(rxusrclk2_en156_reg_rep__10_4),
        .rxusrclk2_en156_reg_rep__10_6(rxusrclk2_en156_reg_rep__10_5),
        .rxusrclk2_en156_reg_rep__10_7(rxusrclk2_en156_reg_rep__10_6),
        .rxusrclk2_en156_reg_rep__10_8(rxusrclk2_en156_reg_rep__10_7),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11),
        .rxusrclk2_en156_reg_rep__2(rxusrclk2_en156_reg_rep__2),
        .rxusrclk2_en156_reg_rep__3(rxusrclk2_en156_reg_rep__3),
        .rxusrclk2_en156_reg_rep__4(rxusrclk2_en156_reg_rep__6[0]),
        .rxusrclk2_en156_reg_rep__7(rxusrclk2_en156_reg_rep__7),
        .signal_detect(signal_detect));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_local_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset),
        .Q(rxreset_local),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_pcs tx_pcs_i
       (.D(D),
        .Q(\tx_test_patt_seed_sel_reg[1] ),
        .SR(reset_local),
        .coreclk(coreclk),
        .new_tx_test_seed(new_tx_test_seed),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[1] (\q_reg[1] ),
        .\q_reg[3] (\q_reg[3] ),
        .\q_reg[3]_0 (\q_reg[3]_0 ),
        .\rd_data_reg[1] (\rd_data_reg[1] ),
        .tx_66_fifo(tx_66_fifo),
        .\xgmii_txd_reg_reg[63] (\xgmii_txd_reg_reg[63] ));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer
   (counter_sync_1,
    counter_sync_extra_reg,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1__5_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1__1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__5
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__5_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__5
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_24
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__6_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__1
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__6
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__6_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__6
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_25
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__7_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__7
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__7_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__7
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_30
   (counter_sync_1,
    counter_sync_extra_reg,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_31
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__0_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__0
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__0_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__0
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_32
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__1_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__1
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__1_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__1
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_33
   (counter_sync_1,
    counter_sync_extra_reg,
    mcp1_counter_1_reg,
    rxusrclk2,
    coreclk,
    counter_sync_extra,
    counter_sync_3,
    counter_sync_2);
  output counter_sync_1;
  output counter_sync_extra_reg;
  input mcp1_counter_1_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_extra;
  input counter_sync_3;
  input counter_sync_2;

  wire coreclk;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire counter_sync_extra_reg;
  wire dcapture;
  wire mcp1_counter_1_reg;
  wire newedge;
  wire newedge_i_1__2_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFEE8)) 
    counter_sync_extra_i_1__0
       (.I0(counter_sync_extra),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_2),
        .O(counter_sync_extra_reg));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__2
       (.I0(newedge),
        .I1(mcp1_counter_1_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__2_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__2
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_1),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_34
   (counter_sync_2,
    counter_out0,
    mcp1_counter_2_reg,
    rxusrclk2,
    coreclk,
    counter_sync_1,
    counter_sync_3,
    counter_sync_extra);
  output counter_sync_2;
  output counter_out0;
  input mcp1_counter_2_reg;
  input rxusrclk2;
  input coreclk;
  input counter_sync_1;
  input counter_sync_3;
  input counter_sync_extra;

  wire coreclk;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire dcapture;
  wire mcp1_counter_2_reg;
  wire newedge;
  wire newedge_i_1__3_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  LUT4 #(
    .INIT(16'hFFFE)) 
    counter_out_i_1__0
       (.I0(counter_sync_2),
        .I1(counter_sync_1),
        .I2(counter_sync_3),
        .I3(counter_sync_extra),
        .O(counter_out0));
  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__3
       (.I0(newedge),
        .I1(mcp1_counter_2_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__3_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__3
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_35
   (counter_sync_3,
    mcp1_counter_3_reg,
    rxusrclk2,
    coreclk);
  output counter_sync_3;
  input mcp1_counter_3_reg;
  input rxusrclk2;
  input coreclk;

  wire coreclk;
  wire counter_sync_3;
  wire dcapture;
  wire mcp1_counter_3_reg;
  wire newedge;
  wire newedge_i_1__4_n_0;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg4;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire newedge_reg__0;
  wire out_comb;
  wire rxusrclk2;

  FDRE #(
    .INIT(1'b0)) 
    dcapture_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_reg),
        .Q(dcapture),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF704)) 
    newedge_i_1__4
       (.I0(newedge),
        .I1(mcp1_counter_3_reg),
        .I2(dcapture),
        .I3(newedge),
        .O(newedge_i_1__4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(newedge_i_1__4_n_0),
        .Q(newedge),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg__0),
        .Q(newedge_reg1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg1),
        .Q(newedge_reg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg2),
        .Q(newedge_reg3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge_reg3),
        .Q(newedge_reg4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    newedge_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(newedge),
        .Q(newedge_reg__0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    q_i_1__4
       (.I0(newedge_reg4),
        .I1(newedge_reg3),
        .O(out_comb));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(out_comb),
        .Q(counter_sync_3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_ber_mon_fsm" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_ber_mon_fsm
   (ber_count_inc,
    d1_reg,
    rxreset_2_reg,
    rxusrclk2,
    \mcp1_rx_66_raw_reg[1] ,
    rxusrclk2_en156_reg_rep__11,
    out,
    rxusrclk2_en156_reg_rep__10,
    rxreset_2_reg_0,
    sh_valid);
  output ber_count_inc;
  output d1_reg;
  input rxreset_2_reg;
  input rxusrclk2;
  input [1:0]\mcp1_rx_66_raw_reg[1] ;
  input rxusrclk2_en156_reg_rep__11;
  input [15:0]out;
  input rxusrclk2_en156_reg_rep__10;
  input rxreset_2_reg_0;
  input sh_valid;

  wire \FSM_sequential_mcp1_state[0]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[0]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_2_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_1_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_4_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_6_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_7_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_8_n_0 ;
  wire ber_count_inc;
  wire d1_reg;
  wire \mcp1_ber_cnt[0]_i_1_n_0 ;
  wire \mcp1_ber_cnt[1]_i_1_n_0 ;
  wire \mcp1_ber_cnt[2]_i_1_n_0 ;
  wire \mcp1_ber_cnt[3]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_1_n_0 ;
  wire \mcp1_ber_cnt[4]_i_2_n_0 ;
  wire \mcp1_ber_cnt[4]_i_3_n_0 ;
  wire \mcp1_ber_cnt_reg_n_0_[0] ;
  wire \mcp1_ber_cnt_reg_n_0_[1] ;
  wire \mcp1_ber_cnt_reg_n_0_[2] ;
  wire \mcp1_ber_cnt_reg_n_0_[3] ;
  wire \mcp1_ber_cnt_reg_n_0_[4] ;
  wire mcp1_ber_count_inc_i_1_n_0;
  wire mcp1_ber_test_sh_i_1_n_0;
  wire mcp1_ber_test_sh_reg_n_0;
  wire mcp1_hiber_i_1_n_0;
  wire [1:0]\mcp1_rx_66_raw_reg[1] ;
  (* RTL_KEEP = "yes" *) wire [2:0]mcp1_state;
  wire [15:0]mcp1_timer_125us;
  wire \mcp1_timer_125us[0]_i_1_n_0 ;
  wire \mcp1_timer_125us[10]_i_1_n_0 ;
  wire \mcp1_timer_125us[11]_i_1_n_0 ;
  wire \mcp1_timer_125us[11]_i_3_n_0 ;
  wire \mcp1_timer_125us[11]_i_4_n_0 ;
  wire \mcp1_timer_125us[11]_i_5_n_0 ;
  wire \mcp1_timer_125us[11]_i_6_n_0 ;
  wire \mcp1_timer_125us[12]_i_1_n_0 ;
  wire \mcp1_timer_125us[13]_i_1_n_0 ;
  wire \mcp1_timer_125us[14]_i_1_n_0 ;
  wire \mcp1_timer_125us[15]_i_10_n_0 ;
  wire \mcp1_timer_125us[15]_i_11_n_0 ;
  wire \mcp1_timer_125us[15]_i_1_n_0 ;
  wire \mcp1_timer_125us[15]_i_2_n_0 ;
  wire \mcp1_timer_125us[15]_i_5_n_0 ;
  wire \mcp1_timer_125us[15]_i_6_n_0 ;
  wire \mcp1_timer_125us[15]_i_7_n_0 ;
  wire \mcp1_timer_125us[15]_i_8_n_0 ;
  wire \mcp1_timer_125us[15]_i_9_n_0 ;
  wire \mcp1_timer_125us[1]_i_1_n_0 ;
  wire \mcp1_timer_125us[2]_i_1_n_0 ;
  wire \mcp1_timer_125us[3]_i_1_n_0 ;
  wire \mcp1_timer_125us[3]_i_3_n_0 ;
  wire \mcp1_timer_125us[3]_i_4_n_0 ;
  wire \mcp1_timer_125us[3]_i_5_n_0 ;
  wire \mcp1_timer_125us[3]_i_6_n_0 ;
  wire \mcp1_timer_125us[4]_i_1_n_0 ;
  wire \mcp1_timer_125us[5]_i_1_n_0 ;
  wire \mcp1_timer_125us[6]_i_1_n_0 ;
  wire \mcp1_timer_125us[7]_i_1_n_0 ;
  wire \mcp1_timer_125us[7]_i_3_n_0 ;
  wire \mcp1_timer_125us[7]_i_4_n_0 ;
  wire \mcp1_timer_125us[7]_i_5_n_0 ;
  wire \mcp1_timer_125us[7]_i_6_n_0 ;
  wire \mcp1_timer_125us[8]_i_1_n_0 ;
  wire \mcp1_timer_125us[9]_i_1_n_0 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_0 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_1 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_2 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_3 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_4 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_5 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_6 ;
  wire \mcp1_timer_125us_reg[11]_i_2_n_7 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_1 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_2 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_3 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_4 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_5 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_6 ;
  wire \mcp1_timer_125us_reg[15]_i_4_n_7 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_0 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_1 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_2 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_3 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_4 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_5 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_6 ;
  wire \mcp1_timer_125us_reg[3]_i_2_n_7 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_0 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_1 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_2 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_3 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_4 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_5 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_6 ;
  wire \mcp1_timer_125us_reg[7]_i_2_n_7 ;
  wire [15:0]out;
  wire rxreset_2_reg;
  wire rxreset_2_reg_0;
  wire rxusrclk2;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__11;
  wire sh_valid;
  wire timer_done;
  wire [3:3]\NLW_mcp1_timer_125us_reg[15]_i_4_CO_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00000000FEAA02AA)) 
    \FSM_sequential_mcp1_state[0]_i_1 
       (.I0(mcp1_state[0]),
        .I1(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ),
        .I2(\FSM_sequential_mcp1_state[2]_i_3_n_0 ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(\FSM_sequential_mcp1_state[0]_i_2_n_0 ),
        .I5(rxreset_2_reg_0),
        .O(\FSM_sequential_mcp1_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FF510000FFFFFF)) 
    \FSM_sequential_mcp1_state[0]_i_2 
       (.I0(\FSM_sequential_mcp1_state[2]_i_7_n_0 ),
        .I1(sh_valid),
        .I2(timer_done),
        .I3(mcp1_state[1]),
        .I4(mcp1_state[2]),
        .I5(mcp1_state[0]),
        .O(\FSM_sequential_mcp1_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEAA02AA)) 
    \FSM_sequential_mcp1_state[1]_i_1 
       (.I0(mcp1_state[1]),
        .I1(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ),
        .I2(\FSM_sequential_mcp1_state[2]_i_3_n_0 ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(\FSM_sequential_mcp1_state[1]_i_2_n_0 ),
        .I5(rxreset_2_reg_0),
        .O(\FSM_sequential_mcp1_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAFF0000C300)) 
    \FSM_sequential_mcp1_state[1]_i_2 
       (.I0(\FSM_sequential_mcp1_state[2]_i_8_n_0 ),
        .I1(\mcp1_rx_66_raw_reg[1] [1]),
        .I2(\mcp1_rx_66_raw_reg[1] [0]),
        .I3(mcp1_state[1]),
        .I4(mcp1_state[2]),
        .I5(mcp1_state[0]),
        .O(\FSM_sequential_mcp1_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FEAA02AA)) 
    \FSM_sequential_mcp1_state[2]_i_1 
       (.I0(mcp1_state[2]),
        .I1(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ),
        .I2(\FSM_sequential_mcp1_state[2]_i_3_n_0 ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(\FSM_sequential_mcp1_state[2]_i_4_n_0 ),
        .I5(rxreset_2_reg_0),
        .O(\FSM_sequential_mcp1_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55455045)) 
    \FSM_sequential_mcp1_state[2]_i_2__0 
       (.I0(mcp1_state[1]),
        .I1(mcp1_ber_test_sh_reg_n_0),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(timer_done),
        .O(\FSM_sequential_mcp1_state[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0D080D080D080D00)) 
    \FSM_sequential_mcp1_state[2]_i_3 
       (.I0(mcp1_state[0]),
        .I1(mcp1_state[1]),
        .I2(mcp1_state[2]),
        .I3(\FSM_sequential_mcp1_state[2]_i_6_n_0 ),
        .I4(\FSM_sequential_mcp1_state[2]_i_7_n_0 ),
        .I5(mcp1_ber_test_sh_reg_n_0),
        .O(\FSM_sequential_mcp1_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000022022220220)) 
    \FSM_sequential_mcp1_state[2]_i_4 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[2]),
        .I2(\mcp1_rx_66_raw_reg[1] [0]),
        .I3(\mcp1_rx_66_raw_reg[1] [1]),
        .I4(mcp1_state[0]),
        .I5(\FSM_sequential_mcp1_state[2]_i_8_n_0 ),
        .O(\FSM_sequential_mcp1_state[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEB)) 
    \FSM_sequential_mcp1_state[2]_i_6 
       (.I0(timer_done),
        .I1(\mcp1_rx_66_raw_reg[1] [1]),
        .I2(\mcp1_rx_66_raw_reg[1] [0]),
        .O(\FSM_sequential_mcp1_state[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_mcp1_state[2]_i_7 
       (.I0(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .O(\FSM_sequential_mcp1_state[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT5 #(
    .INIT(32'h15555555)) 
    \FSM_sequential_mcp1_state[2]_i_8 
       (.I0(timer_done),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\FSM_sequential_mcp1_state[2]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1_n_0 ),
        .Q(mcp1_state[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_1_n_0 ),
        .Q(mcp1_state[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[2]_i_1_n_0 ),
        .Q(mcp1_state[2]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_ber_cnt[0]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[0] ),
        .O(\mcp1_ber_cnt[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_ber_cnt[1]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .O(\mcp1_ber_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_ber_cnt[2]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[1] ),
        .O(\mcp1_ber_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_ber_cnt[3]_i_1 
       (.I0(\mcp1_ber_cnt_reg_n_0_[3] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[2] ),
        .O(\mcp1_ber_cnt[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \mcp1_ber_cnt[4]_i_1 
       (.I0(rxreset_2_reg),
        .I1(rxusrclk2_en156_reg_rep__10),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .O(\mcp1_ber_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010300000)) 
    \mcp1_ber_cnt[4]_i_2 
       (.I0(mcp1_state[1]),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[0]),
        .I3(\mcp1_ber_cnt_reg_n_0_[4] ),
        .I4(rxusrclk2_en156_reg_rep__11),
        .I5(rxreset_2_reg),
        .O(\mcp1_ber_cnt[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_ber_cnt[4]_i_3 
       (.I0(\mcp1_ber_cnt_reg_n_0_[4] ),
        .I1(\mcp1_ber_cnt_reg_n_0_[2] ),
        .I2(\mcp1_ber_cnt_reg_n_0_[0] ),
        .I3(\mcp1_ber_cnt_reg_n_0_[1] ),
        .I4(\mcp1_ber_cnt_reg_n_0_[3] ),
        .O(\mcp1_ber_cnt[4]_i_3_n_0 ));
  FDRE \mcp1_ber_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .D(\mcp1_ber_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[0] ),
        .R(\mcp1_ber_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_ber_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .D(\mcp1_ber_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[1] ),
        .R(\mcp1_ber_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_ber_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .D(\mcp1_ber_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[2] ),
        .R(\mcp1_ber_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_ber_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .D(\mcp1_ber_cnt[3]_i_1_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[3] ),
        .R(\mcp1_ber_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_ber_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_ber_cnt[4]_i_2_n_0 ),
        .D(\mcp1_ber_cnt[4]_i_3_n_0 ),
        .Q(\mcp1_ber_cnt_reg_n_0_[4] ),
        .R(\mcp1_ber_cnt[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h08FF0800)) 
    mcp1_ber_count_inc_i_1
       (.I0(mcp1_state[0]),
        .I1(mcp1_state[1]),
        .I2(mcp1_state[2]),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(ber_count_inc),
        .O(mcp1_ber_count_inc_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_ber_count_inc_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_count_inc_i_1_n_0),
        .Q(ber_count_inc),
        .R(rxreset_2_reg));
  LUT5 #(
    .INIT(32'h3EFF3E00)) 
    mcp1_ber_test_sh_i_1
       (.I0(mcp1_state[0]),
        .I1(mcp1_state[2]),
        .I2(mcp1_state[1]),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(mcp1_ber_test_sh_reg_n_0),
        .O(mcp1_ber_test_sh_i_1_n_0));
  FDRE mcp1_ber_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ber_test_sh_i_1_n_0),
        .Q(mcp1_ber_test_sh_reg_n_0),
        .R(rxreset_2_reg));
  LUT5 #(
    .INIT(32'hDFFD0020)) 
    mcp1_hiber_i_1
       (.I0(rxusrclk2_en156_reg_rep__11),
        .I1(mcp1_state[1]),
        .I2(mcp1_state[2]),
        .I3(mcp1_state[0]),
        .I4(d1_reg),
        .O(mcp1_hiber_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_hiber_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_hiber_i_1_n_0),
        .Q(d1_reg),
        .R(rxreset_2_reg));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[0]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[0]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[3]_i_2_n_7 ),
        .O(\mcp1_timer_125us[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[10]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[10]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[11]_i_2_n_5 ),
        .O(\mcp1_timer_125us[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[11]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[11]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[11]_i_2_n_4 ),
        .O(\mcp1_timer_125us[11]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[11]_i_3 
       (.I0(mcp1_timer_125us[11]),
        .O(\mcp1_timer_125us[11]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[11]_i_4 
       (.I0(mcp1_timer_125us[10]),
        .O(\mcp1_timer_125us[11]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[11]_i_5 
       (.I0(mcp1_timer_125us[9]),
        .O(\mcp1_timer_125us[11]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[11]_i_6 
       (.I0(mcp1_timer_125us[8]),
        .O(\mcp1_timer_125us[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[12]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[12]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[15]_i_4_n_7 ),
        .O(\mcp1_timer_125us[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[13]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[13]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[15]_i_4_n_6 ),
        .O(\mcp1_timer_125us[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[14]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[14]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[15]_i_4_n_5 ),
        .O(\mcp1_timer_125us[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAABBBBFBAAAAAAAA)) 
    \mcp1_timer_125us[15]_i_1 
       (.I0(rxreset_2_reg),
        .I1(timer_done),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(rxusrclk2_en156_reg_rep__11),
        .O(\mcp1_timer_125us[15]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[15]_i_10 
       (.I0(mcp1_timer_125us[12]),
        .O(\mcp1_timer_125us[15]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mcp1_timer_125us[15]_i_11 
       (.I0(mcp1_timer_125us[2]),
        .I1(mcp1_timer_125us[4]),
        .I2(mcp1_timer_125us[15]),
        .I3(mcp1_timer_125us[7]),
        .O(\mcp1_timer_125us[15]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[15]_i_2 
       (.I0(rxreset_2_reg),
        .I1(out[15]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[15]_i_4_n_4 ),
        .O(\mcp1_timer_125us[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \mcp1_timer_125us[15]_i_3 
       (.I0(\mcp1_timer_125us[15]_i_5_n_0 ),
        .I1(mcp1_timer_125us[11]),
        .I2(mcp1_timer_125us[5]),
        .I3(mcp1_timer_125us[12]),
        .I4(mcp1_timer_125us[6]),
        .I5(\mcp1_timer_125us[15]_i_6_n_0 ),
        .O(timer_done));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \mcp1_timer_125us[15]_i_5 
       (.I0(mcp1_timer_125us[13]),
        .I1(mcp1_timer_125us[9]),
        .I2(mcp1_timer_125us[14]),
        .I3(mcp1_timer_125us[3]),
        .O(\mcp1_timer_125us[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_timer_125us[15]_i_6 
       (.I0(mcp1_timer_125us[0]),
        .I1(mcp1_timer_125us[8]),
        .I2(mcp1_timer_125us[1]),
        .I3(mcp1_timer_125us[10]),
        .I4(\mcp1_timer_125us[15]_i_11_n_0 ),
        .O(\mcp1_timer_125us[15]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[15]_i_7 
       (.I0(mcp1_timer_125us[15]),
        .O(\mcp1_timer_125us[15]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[15]_i_8 
       (.I0(mcp1_timer_125us[14]),
        .O(\mcp1_timer_125us[15]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[15]_i_9 
       (.I0(mcp1_timer_125us[13]),
        .O(\mcp1_timer_125us[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[1]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[1]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[3]_i_2_n_6 ),
        .O(\mcp1_timer_125us[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[2]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[2]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[3]_i_2_n_5 ),
        .O(\mcp1_timer_125us[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[3]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[3]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[3]_i_2_n_4 ),
        .O(\mcp1_timer_125us[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[3]_i_3 
       (.I0(mcp1_timer_125us[3]),
        .O(\mcp1_timer_125us[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[3]_i_4 
       (.I0(mcp1_timer_125us[2]),
        .O(\mcp1_timer_125us[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[3]_i_5 
       (.I0(mcp1_timer_125us[1]),
        .O(\mcp1_timer_125us[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[3]_i_6 
       (.I0(mcp1_timer_125us[0]),
        .O(\mcp1_timer_125us[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[4]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[4]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[7]_i_2_n_7 ),
        .O(\mcp1_timer_125us[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[5]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[5]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[7]_i_2_n_6 ),
        .O(\mcp1_timer_125us[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[6]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[6]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[7]_i_2_n_5 ),
        .O(\mcp1_timer_125us[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[7]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[7]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[7]_i_2_n_4 ),
        .O(\mcp1_timer_125us[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[7]_i_3 
       (.I0(mcp1_timer_125us[7]),
        .O(\mcp1_timer_125us[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[7]_i_4 
       (.I0(mcp1_timer_125us[6]),
        .O(\mcp1_timer_125us[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[7]_i_5 
       (.I0(mcp1_timer_125us[5]),
        .O(\mcp1_timer_125us[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_timer_125us[7]_i_6 
       (.I0(mcp1_timer_125us[4]),
        .O(\mcp1_timer_125us[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[8]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[8]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[11]_i_2_n_7 ),
        .O(\mcp1_timer_125us[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88DDDDCD888888C8)) 
    \mcp1_timer_125us[9]_i_1 
       (.I0(rxreset_2_reg),
        .I1(out[9]),
        .I2(mcp1_state[0]),
        .I3(mcp1_state[2]),
        .I4(mcp1_state[1]),
        .I5(\mcp1_timer_125us_reg[11]_i_2_n_6 ),
        .O(\mcp1_timer_125us[9]_i_1_n_0 ));
  FDRE \mcp1_timer_125us_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[0]_i_1_n_0 ),
        .Q(mcp1_timer_125us[0]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[10] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[10]_i_1_n_0 ),
        .Q(mcp1_timer_125us[10]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[11] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[11]_i_1_n_0 ),
        .Q(mcp1_timer_125us[11]),
        .R(1'b0));
  CARRY4 \mcp1_timer_125us_reg[11]_i_2 
       (.CI(\mcp1_timer_125us_reg[7]_i_2_n_0 ),
        .CO({\mcp1_timer_125us_reg[11]_i_2_n_0 ,\mcp1_timer_125us_reg[11]_i_2_n_1 ,\mcp1_timer_125us_reg[11]_i_2_n_2 ,\mcp1_timer_125us_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(mcp1_timer_125us[11:8]),
        .O({\mcp1_timer_125us_reg[11]_i_2_n_4 ,\mcp1_timer_125us_reg[11]_i_2_n_5 ,\mcp1_timer_125us_reg[11]_i_2_n_6 ,\mcp1_timer_125us_reg[11]_i_2_n_7 }),
        .S({\mcp1_timer_125us[11]_i_3_n_0 ,\mcp1_timer_125us[11]_i_4_n_0 ,\mcp1_timer_125us[11]_i_5_n_0 ,\mcp1_timer_125us[11]_i_6_n_0 }));
  FDRE \mcp1_timer_125us_reg[12] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[12]_i_1_n_0 ),
        .Q(mcp1_timer_125us[12]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[13] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[13]_i_1_n_0 ),
        .Q(mcp1_timer_125us[13]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[14] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[14]_i_1_n_0 ),
        .Q(mcp1_timer_125us[14]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[15] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[15]_i_2_n_0 ),
        .Q(mcp1_timer_125us[15]),
        .R(1'b0));
  CARRY4 \mcp1_timer_125us_reg[15]_i_4 
       (.CI(\mcp1_timer_125us_reg[11]_i_2_n_0 ),
        .CO({\NLW_mcp1_timer_125us_reg[15]_i_4_CO_UNCONNECTED [3],\mcp1_timer_125us_reg[15]_i_4_n_1 ,\mcp1_timer_125us_reg[15]_i_4_n_2 ,\mcp1_timer_125us_reg[15]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,mcp1_timer_125us[14:12]}),
        .O({\mcp1_timer_125us_reg[15]_i_4_n_4 ,\mcp1_timer_125us_reg[15]_i_4_n_5 ,\mcp1_timer_125us_reg[15]_i_4_n_6 ,\mcp1_timer_125us_reg[15]_i_4_n_7 }),
        .S({\mcp1_timer_125us[15]_i_7_n_0 ,\mcp1_timer_125us[15]_i_8_n_0 ,\mcp1_timer_125us[15]_i_9_n_0 ,\mcp1_timer_125us[15]_i_10_n_0 }));
  FDRE \mcp1_timer_125us_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[1]_i_1_n_0 ),
        .Q(mcp1_timer_125us[1]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[2]_i_1_n_0 ),
        .Q(mcp1_timer_125us[2]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[3]_i_1_n_0 ),
        .Q(mcp1_timer_125us[3]),
        .R(1'b0));
  CARRY4 \mcp1_timer_125us_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\mcp1_timer_125us_reg[3]_i_2_n_0 ,\mcp1_timer_125us_reg[3]_i_2_n_1 ,\mcp1_timer_125us_reg[3]_i_2_n_2 ,\mcp1_timer_125us_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(mcp1_timer_125us[3:0]),
        .O({\mcp1_timer_125us_reg[3]_i_2_n_4 ,\mcp1_timer_125us_reg[3]_i_2_n_5 ,\mcp1_timer_125us_reg[3]_i_2_n_6 ,\mcp1_timer_125us_reg[3]_i_2_n_7 }),
        .S({\mcp1_timer_125us[3]_i_3_n_0 ,\mcp1_timer_125us[3]_i_4_n_0 ,\mcp1_timer_125us[3]_i_5_n_0 ,\mcp1_timer_125us[3]_i_6_n_0 }));
  FDRE \mcp1_timer_125us_reg[4] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[4]_i_1_n_0 ),
        .Q(mcp1_timer_125us[4]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[5] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[5]_i_1_n_0 ),
        .Q(mcp1_timer_125us[5]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[6] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[6]_i_1_n_0 ),
        .Q(mcp1_timer_125us[6]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[7] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[7]_i_1_n_0 ),
        .Q(mcp1_timer_125us[7]),
        .R(1'b0));
  CARRY4 \mcp1_timer_125us_reg[7]_i_2 
       (.CI(\mcp1_timer_125us_reg[3]_i_2_n_0 ),
        .CO({\mcp1_timer_125us_reg[7]_i_2_n_0 ,\mcp1_timer_125us_reg[7]_i_2_n_1 ,\mcp1_timer_125us_reg[7]_i_2_n_2 ,\mcp1_timer_125us_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(mcp1_timer_125us[7:4]),
        .O({\mcp1_timer_125us_reg[7]_i_2_n_4 ,\mcp1_timer_125us_reg[7]_i_2_n_5 ,\mcp1_timer_125us_reg[7]_i_2_n_6 ,\mcp1_timer_125us_reg[7]_i_2_n_7 }),
        .S({\mcp1_timer_125us[7]_i_3_n_0 ,\mcp1_timer_125us[7]_i_4_n_0 ,\mcp1_timer_125us[7]_i_5_n_0 ,\mcp1_timer_125us[7]_i_6_n_0 }));
  FDRE \mcp1_timer_125us_reg[8] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[8]_i_1_n_0 ),
        .Q(mcp1_timer_125us[8]),
        .R(1'b0));
  FDRE \mcp1_timer_125us_reg[9] 
       (.C(rxusrclk2),
        .CE(\mcp1_timer_125us[15]_i_1_n_0 ),
        .D(\mcp1_timer_125us[9]_i_1_n_0 ),
        .Q(mcp1_timer_125us[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_block_lock_fsm" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_block_lock_fsm
   (d1_reg,
    gt_slip_int,
    sh_valid,
    pcs_rx_link_up_core_reg_reg,
    \mcp1_state_reg[1]_0 ,
    \FSM_sequential_mcp1_state_reg[2] ,
    \FSM_sequential_mcp1_state_reg[2]_0 ,
    mcp1_err_block_count_inc_out_reg,
    SR,
    rxusrclk2,
    \mcp1_rx_66_raw_reg[1] ,
    mcp1_hiber_reg,
    rxusrclk2_en156_reg_rep__11,
    signal_ok_reg,
    rxreset_1_reg,
    rxusrclk2_en156_reg_rep__10,
    \outreg_reg[2] ,
    rxreset_6_reg,
    rxreset_2_reg,
    CO,
    \rx_66_enc_reg_reg[65] ,
    mcp1_ignore_next_mismatch,
    mcp1_state,
    rxusrclk2_en156_reg_rep__0);
  output d1_reg;
  output gt_slip_int;
  output sh_valid;
  output pcs_rx_link_up_core_reg_reg;
  output \mcp1_state_reg[1]_0 ;
  output \FSM_sequential_mcp1_state_reg[2] ;
  output \FSM_sequential_mcp1_state_reg[2]_0 ;
  output mcp1_err_block_count_inc_out_reg;
  input [0:0]SR;
  input rxusrclk2;
  input [1:0]\mcp1_rx_66_raw_reg[1] ;
  input mcp1_hiber_reg;
  input rxusrclk2_en156_reg_rep__11;
  input signal_ok_reg;
  input rxreset_1_reg;
  input rxusrclk2_en156_reg_rep__10;
  input [0:0]\outreg_reg[2] ;
  input rxreset_6_reg;
  input rxreset_2_reg;
  input [0:0]CO;
  input [0:0]\rx_66_enc_reg_reg[65] ;
  input mcp1_ignore_next_mismatch;
  input mcp1_state;
  input [0:0]rxusrclk2_en156_reg_rep__0;

  wire [0:0]CO;
  wire \FSM_sequential_mcp1_state_reg[2] ;
  wire \FSM_sequential_mcp1_state_reg[2]_0 ;
  wire [0:0]SR;
  wire d1_reg;
  wire gt_slip_int;
  wire mcp1_b_lock_i_1_n_0;
  wire mcp1_b_lock_i_2_n_0;
  wire mcp1_b_lock_i_3_n_0;
  wire mcp1_err_block_count_inc_out_reg;
  wire mcp1_hiber_reg;
  wire mcp1_ignore_next_mismatch;
  wire [1:0]\mcp1_rx_66_raw_reg[1] ;
  wire mcp1_sh_cnt;
  wire \mcp1_sh_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_cnt[4]_i_1_n_0 ;
  wire \mcp1_sh_cnt[5]_i_3_n_0 ;
  wire \mcp1_sh_cnt[5]_i_4_n_0 ;
  wire \mcp1_sh_cnt[5]_i_5_n_0 ;
  wire \mcp1_sh_cnt[5]_i_6_n_0 ;
  wire \mcp1_sh_cnt_reg_n_0_[0] ;
  wire \mcp1_sh_cnt_reg_n_0_[1] ;
  wire \mcp1_sh_cnt_reg_n_0_[2] ;
  wire \mcp1_sh_cnt_reg_n_0_[3] ;
  wire \mcp1_sh_cnt_reg_n_0_[4] ;
  wire \mcp1_sh_cnt_reg_n_0_[5] ;
  wire \mcp1_sh_invalid_cnt[0]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[1]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[2]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_1_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_2_n_0 ;
  wire \mcp1_sh_invalid_cnt[3]_i_4_n_0 ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[0] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[1] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[2] ;
  wire \mcp1_sh_invalid_cnt_reg_n_0_[3] ;
  wire \mcp1_slip_done_cnt[4]_i_1_n_0 ;
  wire [4:0]mcp1_slip_done_cnt_reg__0;
  wire mcp1_slip_done_i_1_n_0;
  wire mcp1_slip_done_i_3_n_0;
  wire mcp1_slip_done_reg_n_0;
  wire mcp1_slip_i_1_n_0;
  wire mcp1_state;
  wire \mcp1_state[0]_i_1_n_0 ;
  wire \mcp1_state[0]_i_2_n_0 ;
  wire \mcp1_state[1]_i_1_n_0 ;
  wire \mcp1_state[1]_i_2__0_n_0 ;
  wire \mcp1_state[1]_i_3_n_0 ;
  wire \mcp1_state_reg[1]_0 ;
  wire \mcp1_state_reg_n_0_[0] ;
  wire \mcp1_state_reg_n_0_[1] ;
  wire mcp1_test_sh;
  wire mcp1_test_sh_i_1_n_0;
  wire [0:0]\outreg_reg[2] ;
  wire [4:0]p_0_in__0;
  wire p_1_in;
  wire pcs_rx_link_up_core_reg_reg;
  wire [0:0]\rx_66_enc_reg_reg[65] ;
  wire rxreset_1_reg;
  wire rxreset_2_reg;
  wire rxreset_6_reg;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg_rep__0;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__11;
  wire sh_valid;
  wire signal_ok_reg;

  LUT5 #(
    .INIT(32'hFFFFF0D0)) 
    \FSM_sequential_mcp1_state[2]_i_4__0 
       (.I0(d1_reg),
        .I1(\outreg_reg[2] ),
        .I2(rxusrclk2_en156_reg_rep__10),
        .I3(mcp1_hiber_reg),
        .I4(rxreset_6_reg),
        .O(\FSM_sequential_mcp1_state_reg[2] ));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \FSM_sequential_mcp1_state[2]_i_5 
       (.I0(rxreset_2_reg),
        .I1(d1_reg),
        .I2(\outreg_reg[2] ),
        .I3(rxusrclk2_en156_reg_rep__10),
        .O(\FSM_sequential_mcp1_state_reg[2]_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    mcp1_b_lock_i_1
       (.I0(mcp1_b_lock_i_2_n_0),
        .I1(signal_ok_reg),
        .I2(rxreset_1_reg),
        .O(mcp1_b_lock_i_1_n_0));
  LUT6 #(
    .INIT(64'h55F7FF5F0000080A)) 
    mcp1_b_lock_i_2
       (.I0(rxusrclk2_en156_reg_rep__11),
        .I1(sh_valid),
        .I2(mcp1_b_lock_i_3_n_0),
        .I3(\mcp1_state_reg_n_0_[1] ),
        .I4(\mcp1_state_reg_n_0_[0] ),
        .I5(d1_reg),
        .O(mcp1_b_lock_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
    mcp1_b_lock_i_3
       (.I0(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I3(\mcp1_state_reg_n_0_[1] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I5(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .O(mcp1_b_lock_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_b_lock_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_b_lock_i_1_n_0),
        .Q(d1_reg),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    mcp1_ignore_next_mismatch_i_2
       (.I0(CO),
        .I1(\rx_66_enc_reg_reg[65] ),
        .I2(d1_reg),
        .I3(\outreg_reg[2] ),
        .I4(mcp1_ignore_next_mismatch),
        .I5(rxusrclk2_en156_reg_rep__10),
        .O(mcp1_err_block_count_inc_out_reg));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_sh_cnt[0]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .O(\mcp1_sh_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \mcp1_sh_cnt[1]_i_1 
       (.I0(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_sh_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \mcp1_sh_cnt[2]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .O(\mcp1_sh_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \mcp1_sh_cnt[3]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[3] ),
        .O(\mcp1_sh_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \mcp1_sh_cnt[4]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[3] ),
        .I5(\mcp1_sh_cnt_reg_n_0_[4] ),
        .O(\mcp1_sh_cnt[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h20282828)) 
    \mcp1_sh_cnt[5]_i_2 
       (.I0(rxusrclk2_en156_reg_rep__11),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_state_reg_n_0_[0] ),
        .I3(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I4(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .O(mcp1_sh_cnt));
  LUT3 #(
    .INIT(8'h28)) 
    \mcp1_sh_cnt[5]_i_3 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_sh_cnt[5]_i_6_n_0 ),
        .I2(\mcp1_sh_cnt_reg_n_0_[5] ),
        .O(\mcp1_sh_cnt[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \mcp1_sh_cnt[5]_i_4 
       (.I0(\mcp1_sh_cnt_reg_n_0_[4] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[3] ),
        .I5(\mcp1_sh_cnt_reg_n_0_[5] ),
        .O(\mcp1_sh_cnt[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h4000000055555555)) 
    \mcp1_sh_cnt[5]_i_5 
       (.I0(sh_valid),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I5(d1_reg),
        .O(\mcp1_sh_cnt[5]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_sh_cnt[5]_i_6 
       (.I0(\mcp1_sh_cnt_reg_n_0_[3] ),
        .I1(\mcp1_sh_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt_reg_n_0_[2] ),
        .I4(\mcp1_sh_cnt_reg_n_0_[4] ),
        .O(\mcp1_sh_cnt[5]_i_6_n_0 ));
  FDRE \mcp1_sh_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[3]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[3] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[4]_i_1_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[4] ),
        .R(SR));
  FDRE \mcp1_sh_cnt_reg[5] 
       (.C(rxusrclk2),
        .CE(mcp1_sh_cnt),
        .D(\mcp1_sh_cnt[5]_i_3_n_0 ),
        .Q(\mcp1_sh_cnt_reg_n_0_[5] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_sh_invalid_cnt[0]_i_1 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .O(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \mcp1_sh_invalid_cnt[1]_i_1 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I2(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .O(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \mcp1_sh_invalid_cnt[2]_i_1 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .O(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FFEA0000000000)) 
    \mcp1_sh_invalid_cnt[3]_i_1 
       (.I0(\mcp1_state[1]_i_2__0_n_0 ),
        .I1(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I2(sh_valid),
        .I3(\mcp1_state_reg_n_0_[1] ),
        .I4(\mcp1_state_reg_n_0_[0] ),
        .I5(rxusrclk2_en156_reg_rep__11),
        .O(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \mcp1_sh_invalid_cnt[3]_i_2 
       (.I0(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .I4(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ),
        .O(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_sh_invalid_cnt[3]_i_3 
       (.I0(\mcp1_rx_66_raw_reg[1] [0]),
        .I1(\mcp1_rx_66_raw_reg[1] [1]),
        .O(sh_valid));
  LUT5 #(
    .INIT(32'h8FF8FFFF)) 
    \mcp1_sh_invalid_cnt[3]_i_4 
       (.I0(\mcp1_state[0]_i_2_n_0 ),
        .I1(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I2(\mcp1_rx_66_raw_reg[1] [0]),
        .I3(\mcp1_rx_66_raw_reg[1] [1]),
        .I4(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_sh_invalid_cnt[3]_i_4_n_0 ));
  FDRE \mcp1_sh_invalid_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[0]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[1]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[2]_i_1_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .R(SR));
  FDRE \mcp1_sh_invalid_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(\mcp1_sh_invalid_cnt[3]_i_1_n_0 ),
        .D(\mcp1_sh_invalid_cnt[3]_i_2_n_0 ),
        .Q(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_slip_done_cnt[0]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_slip_done_cnt[1]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[0]),
        .I1(mcp1_slip_done_cnt_reg__0[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_slip_done_cnt[2]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[2]),
        .I1(mcp1_slip_done_cnt_reg__0[1]),
        .I2(mcp1_slip_done_cnt_reg__0[0]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_slip_done_cnt[3]_i_1 
       (.I0(mcp1_slip_done_cnt_reg__0[3]),
        .I1(mcp1_slip_done_cnt_reg__0[0]),
        .I2(mcp1_slip_done_cnt_reg__0[1]),
        .I3(mcp1_slip_done_cnt_reg__0[2]),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFF0800FFFF)) 
    \mcp1_slip_done_cnt[4]_i_1 
       (.I0(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_state_reg_n_0_[0] ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(signal_ok_reg),
        .I5(rxreset_1_reg),
        .O(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_slip_done_cnt[4]_i_2 
       (.I0(mcp1_slip_done_cnt_reg__0[4]),
        .I1(mcp1_slip_done_cnt_reg__0[2]),
        .I2(mcp1_slip_done_cnt_reg__0[3]),
        .I3(mcp1_slip_done_cnt_reg__0[0]),
        .I4(mcp1_slip_done_cnt_reg__0[1]),
        .O(p_0_in__0[4]));
  FDRE \mcp1_slip_done_cnt_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__0),
        .D(p_0_in__0[0]),
        .Q(mcp1_slip_done_cnt_reg__0[0]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__0),
        .D(p_0_in__0[1]),
        .Q(mcp1_slip_done_cnt_reg__0[1]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__0),
        .D(p_0_in__0[2]),
        .Q(mcp1_slip_done_cnt_reg__0[2]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__0),
        .D(p_0_in__0[3]),
        .Q(mcp1_slip_done_cnt_reg__0[3]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  FDRE \mcp1_slip_done_cnt_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__0),
        .D(p_0_in__0[4]),
        .Q(mcp1_slip_done_cnt_reg__0[4]),
        .R(\mcp1_slip_done_cnt[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000E20000)) 
    mcp1_slip_done_i_1
       (.I0(mcp1_slip_done_reg_n_0),
        .I1(rxusrclk2_en156_reg_rep__11),
        .I2(p_1_in),
        .I3(rxreset_1_reg),
        .I4(signal_ok_reg),
        .I5(mcp1_slip_done_i_3_n_0),
        .O(mcp1_slip_done_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    mcp1_slip_done_i_2
       (.I0(mcp1_slip_done_cnt_reg__0[1]),
        .I1(mcp1_slip_done_cnt_reg__0[0]),
        .I2(mcp1_slip_done_cnt_reg__0[4]),
        .I3(mcp1_slip_done_cnt_reg__0[2]),
        .I4(mcp1_slip_done_cnt_reg__0[3]),
        .O(p_1_in));
  LUT6 #(
    .INIT(64'h0000000020000020)) 
    mcp1_slip_done_i_3
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(\mcp1_state_reg_n_0_[0] ),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .I3(\mcp1_rx_66_raw_reg[1] [1]),
        .I4(\mcp1_rx_66_raw_reg[1] [0]),
        .I5(\mcp1_state[0]_i_2_n_0 ),
        .O(mcp1_slip_done_i_3_n_0));
  FDRE mcp1_slip_done_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_slip_done_i_1_n_0),
        .Q(mcp1_slip_done_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0800)) 
    mcp1_slip_i_1
       (.I0(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I1(\mcp1_state_reg_n_0_[1] ),
        .I2(\mcp1_state_reg_n_0_[0] ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(gt_slip_int),
        .O(mcp1_slip_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mcp1_slip_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_slip_i_1_n_0),
        .Q(gt_slip_int),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAFFFF55D70000)) 
    \mcp1_state[0]_i_1 
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_rx_66_raw_reg[1] [1]),
        .I2(\mcp1_rx_66_raw_reg[1] [0]),
        .I3(\mcp1_state[0]_i_2_n_0 ),
        .I4(mcp1_state),
        .I5(\mcp1_state_reg_n_0_[0] ),
        .O(\mcp1_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h2AAAAAAA)) 
    \mcp1_state[0]_i_2 
       (.I0(d1_reg),
        .I1(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(\mcp1_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1333FFFFCCCC0000)) 
    \mcp1_state[1]_i_1 
       (.I0(\mcp1_state[1]_i_2__0_n_0 ),
        .I1(\mcp1_state_reg_n_0_[0] ),
        .I2(d1_reg),
        .I3(\mcp1_state[1]_i_3_n_0 ),
        .I4(mcp1_state),
        .I5(\mcp1_state_reg_n_0_[1] ),
        .O(\mcp1_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0999999999999999)) 
    \mcp1_state[1]_i_2__0 
       (.I0(\mcp1_rx_66_raw_reg[1] [1]),
        .I1(\mcp1_rx_66_raw_reg[1] [0]),
        .I2(\mcp1_sh_invalid_cnt_reg_n_0_[2] ),
        .I3(\mcp1_sh_invalid_cnt_reg_n_0_[0] ),
        .I4(\mcp1_sh_invalid_cnt_reg_n_0_[1] ),
        .I5(\mcp1_sh_invalid_cnt_reg_n_0_[3] ),
        .O(\mcp1_state[1]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_state[1]_i_3 
       (.I0(mcp1_test_sh),
        .I1(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .O(\mcp1_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h202020202A2A2A7A)) 
    \mcp1_state[1]_i_5 
       (.I0(\mcp1_state_reg_n_0_[0] ),
        .I1(mcp1_slip_done_reg_n_0),
        .I2(\mcp1_state_reg_n_0_[1] ),
        .I3(\mcp1_sh_cnt[5]_i_5_n_0 ),
        .I4(\mcp1_sh_cnt[5]_i_4_n_0 ),
        .I5(mcp1_test_sh),
        .O(\mcp1_state_reg[1]_0 ));
  FDRE \mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_state[0]_i_1_n_0 ),
        .Q(\mcp1_state_reg_n_0_[0] ),
        .R(SR));
  FDRE \mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_state[1]_i_1_n_0 ),
        .Q(\mcp1_state_reg_n_0_[1] ),
        .R(SR));
  LUT4 #(
    .INIT(16'hEFE0)) 
    mcp1_test_sh_i_1
       (.I0(\mcp1_state_reg_n_0_[1] ),
        .I1(\mcp1_state_reg_n_0_[0] ),
        .I2(rxusrclk2_en156_reg_rep__11),
        .I3(mcp1_test_sh),
        .O(mcp1_test_sh_i_1_n_0));
  FDRE mcp1_test_sh_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_test_sh_i_1_n_0),
        .Q(mcp1_test_sh),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    pcs_rx_link_up_core_reg_i_1
       (.I0(d1_reg),
        .I1(mcp1_hiber_reg),
        .O(pcs_rx_link_up_core_reg_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_decoder" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_decoder
   (\mcp1_dec_c5_reg[2]_0 ,
    D,
    \mcp1_dec_c6_reg[2]_0 ,
    \mcp1_rx_ebuff_ctrl_reg[7] ,
    next_state,
    \mcp1_rx_ebuff_data_reg[63] ,
    \mcp1_rx_ebuff_data_reg[56] ,
    \mcp1_dec_c4_reg[2]_0 ,
    \mcp1_dec_c1_reg[2]_0 ,
    \mcp1_dec_c2_reg[2]_0 ,
    \mcp1_dec_c3_reg[2]_0 ,
    \mcp1_dec_c0_reg[2]_0 ,
    \FSM_sequential_mcp1_state_reg[0] ,
    \mcp1_rx_ebuff_data_reg[56]_0 ,
    \FSM_sequential_mcp1_state_reg[0]_0 ,
    \FSM_sequential_mcp1_state_reg[2] ,
    \FSM_sequential_mcp1_state_reg[0]_1 ,
    \FSM_sequential_mcp1_state_reg[2]_0 ,
    \FSM_sequential_mcp1_state_reg[1] ,
    Q,
    \FSM_sequential_mcp1_state_reg[1]_0 ,
    rxreset_5_reg,
    rxusrclk2_en156_reg_rep__10,
    out,
    rxusrclk2_en156_reg_rep__11,
    rxusrclk2_en156_reg_rep__10_0,
    rxusrclk2,
    rxusrclk2_en156_reg_rep__2,
    E,
    rxusrclk2_en156_reg,
    rxusrclk2_en156_reg_rep__10_1,
    rxusrclk2_en156_reg_rep__4,
    rxusrclk2_en156_reg_rep__10_2,
    rxusrclk2_en156_reg_rep__10_3,
    rxusrclk2_en156_reg_rep__10_4,
    rxusrclk2_en156_reg_rep__10_5,
    rxusrclk2_en156_reg_rep__10_6,
    rxusrclk2_en156_reg_rep__10_7,
    rxusrclk2_en156_reg_rep__10_8,
    rxusrclk2_en156_reg_rep__7);
  output \mcp1_dec_c5_reg[2]_0 ;
  output [0:0]D;
  output [0:0]\mcp1_dec_c6_reg[2]_0 ;
  output [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  output [1:0]next_state;
  output [61:0]\mcp1_rx_ebuff_data_reg[63] ;
  output [1:0]\mcp1_rx_ebuff_data_reg[56] ;
  output \mcp1_dec_c4_reg[2]_0 ;
  output [0:0]\mcp1_dec_c1_reg[2]_0 ;
  output [0:0]\mcp1_dec_c2_reg[2]_0 ;
  output [0:0]\mcp1_dec_c3_reg[2]_0 ;
  output \mcp1_dec_c0_reg[2]_0 ;
  output \FSM_sequential_mcp1_state_reg[0] ;
  output \mcp1_rx_ebuff_data_reg[56]_0 ;
  output \FSM_sequential_mcp1_state_reg[0]_0 ;
  output \FSM_sequential_mcp1_state_reg[2] ;
  output \FSM_sequential_mcp1_state_reg[0]_1 ;
  output \FSM_sequential_mcp1_state_reg[2]_0 ;
  output \FSM_sequential_mcp1_state_reg[1] ;
  input [65:0]Q;
  input [0:0]\FSM_sequential_mcp1_state_reg[1]_0 ;
  input rxreset_5_reg;
  input rxusrclk2_en156_reg_rep__10;
  input [2:0]out;
  input rxusrclk2_en156_reg_rep__11;
  input rxusrclk2_en156_reg_rep__10_0;
  input rxusrclk2;
  input [1:0]rxusrclk2_en156_reg_rep__2;
  input [1:0]E;
  input [0:0]rxusrclk2_en156_reg;
  input [0:0]rxusrclk2_en156_reg_rep__10_1;
  input [0:0]rxusrclk2_en156_reg_rep__4;
  input [0:0]rxusrclk2_en156_reg_rep__10_2;
  input [0:0]rxusrclk2_en156_reg_rep__10_3;
  input [0:0]rxusrclk2_en156_reg_rep__10_4;
  input [0:0]rxusrclk2_en156_reg_rep__10_5;
  input [0:0]rxusrclk2_en156_reg_rep__10_6;
  input [0:0]rxusrclk2_en156_reg_rep__10_7;
  input [0:0]rxusrclk2_en156_reg_rep__10_8;
  input [1:0]rxusrclk2_en156_reg_rep__7;

  wire [0:0]D;
  wire [7:0]DecodeWord;
  wire [7:0]DecodeWord0;
  wire [7:0]DecodeWord1;
  wire [7:0]DecodeWord2;
  wire [7:0]DecodeWord3;
  wire [7:0]DecodeWord4;
  wire [7:0]DecodeWord5;
  wire [7:0]DecodeWord6;
  wire [1:0]E;
  wire \FSM_sequential_mcp1_state_reg[0] ;
  wire \FSM_sequential_mcp1_state_reg[0]_0 ;
  wire \FSM_sequential_mcp1_state_reg[0]_1 ;
  wire \FSM_sequential_mcp1_state_reg[1] ;
  wire [0:0]\FSM_sequential_mcp1_state_reg[1]_0 ;
  wire \FSM_sequential_mcp1_state_reg[2] ;
  wire \FSM_sequential_mcp1_state_reg[2]_0 ;
  wire [65:0]Q;
  wire [31:0]data10;
  wire [33:33]data12;
  wire [63:32]data13;
  wire [63:8]data14;
  wire [1:1]data14__0;
  wire [7:0]mcp1_block_field_reg;
  wire \mcp1_dec_c0[0]_i_2_n_0 ;
  wire \mcp1_dec_c0[3]_i_2_n_0 ;
  wire \mcp1_dec_c0[4]_i_2_n_0 ;
  wire \mcp1_dec_c0[4]_i_3_n_0 ;
  wire \mcp1_dec_c0[4]_i_4_n_0 ;
  wire \mcp1_dec_c0[5]_i_2_n_0 ;
  wire \mcp1_dec_c0[5]_i_3_n_0 ;
  wire \mcp1_dec_c0[6]_i_2_n_0 ;
  wire \mcp1_dec_c0[7]_i_4_n_0 ;
  wire \mcp1_dec_c0[7]_i_5_n_0 ;
  wire \mcp1_dec_c0[7]_i_6_n_0 ;
  wire \mcp1_dec_c0[7]_i_7_n_0 ;
  wire \mcp1_dec_c0[7]_i_8_n_0 ;
  wire \mcp1_dec_c0[7]_i_9_n_0 ;
  wire \mcp1_dec_c0_reg[2]_0 ;
  wire \mcp1_dec_c1[0]_i_2_n_0 ;
  wire \mcp1_dec_c1[2]_i_2_n_0 ;
  wire \mcp1_dec_c1[2]_i_3_n_0 ;
  wire \mcp1_dec_c1[2]_i_4_n_0 ;
  wire \mcp1_dec_c1[3]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_2_n_0 ;
  wire \mcp1_dec_c1[4]_i_3_n_0 ;
  wire \mcp1_dec_c1[4]_i_4_n_0 ;
  wire \mcp1_dec_c1[5]_i_2_n_0 ;
  wire \mcp1_dec_c1[5]_i_3_n_0 ;
  wire \mcp1_dec_c1[6]_i_2_n_0 ;
  wire \mcp1_dec_c1[7]_i_3_n_0 ;
  wire \mcp1_dec_c1[7]_i_4_n_0 ;
  wire \mcp1_dec_c1[7]_i_5_n_0 ;
  wire [0:0]\mcp1_dec_c1_reg[2]_0 ;
  wire \mcp1_dec_c2[0]_i_2_n_0 ;
  wire \mcp1_dec_c2[2]_i_2_n_0 ;
  wire \mcp1_dec_c2[2]_i_3_n_0 ;
  wire \mcp1_dec_c2[2]_i_4_n_0 ;
  wire \mcp1_dec_c2[3]_i_2_n_0 ;
  wire \mcp1_dec_c2[4]_i_2_n_0 ;
  wire \mcp1_dec_c2[4]_i_3_n_0 ;
  wire \mcp1_dec_c2[5]_i_2_n_0 ;
  wire \mcp1_dec_c2[5]_i_3_n_0 ;
  wire \mcp1_dec_c2[5]_i_4_n_0 ;
  wire \mcp1_dec_c2[6]_i_2_n_0 ;
  wire \mcp1_dec_c2[7]_i_3_n_0 ;
  wire \mcp1_dec_c2[7]_i_4_n_0 ;
  wire \mcp1_dec_c2[7]_i_5_n_0 ;
  wire [0:0]\mcp1_dec_c2_reg[2]_0 ;
  wire \mcp1_dec_c3[0]_i_2_n_0 ;
  wire \mcp1_dec_c3[3]_i_2_n_0 ;
  wire \mcp1_dec_c3[3]_i_3_n_0 ;
  wire \mcp1_dec_c3[4]_i_2_n_0 ;
  wire \mcp1_dec_c3[5]_i_2_n_0 ;
  wire \mcp1_dec_c3[5]_i_3_n_0 ;
  wire \mcp1_dec_c3[6]_i_2_n_0 ;
  wire \mcp1_dec_c3[6]_i_3_n_0 ;
  wire \mcp1_dec_c3[7]_i_3_n_0 ;
  wire \mcp1_dec_c3[7]_i_4_n_0 ;
  wire \mcp1_dec_c3[7]_i_5_n_0 ;
  wire [0:0]\mcp1_dec_c3_reg[2]_0 ;
  wire \mcp1_dec_c4[0]_i_2_n_0 ;
  wire \mcp1_dec_c4[2]_i_2_n_0 ;
  wire \mcp1_dec_c4[2]_i_3_n_0 ;
  wire \mcp1_dec_c4[2]_i_4_n_0 ;
  wire \mcp1_dec_c4[3]_i_2_n_0 ;
  wire \mcp1_dec_c4[4]_i_2_n_0 ;
  wire \mcp1_dec_c4[4]_i_3_n_0 ;
  wire \mcp1_dec_c4[4]_i_4_n_0 ;
  wire \mcp1_dec_c4[5]_i_2_n_0 ;
  wire \mcp1_dec_c4[5]_i_3_n_0 ;
  wire \mcp1_dec_c4[6]_i_2_n_0 ;
  wire \mcp1_dec_c4[7]_i_3_n_0 ;
  wire \mcp1_dec_c4[7]_i_4_n_0 ;
  wire \mcp1_dec_c4[7]_i_5_n_0 ;
  wire \mcp1_dec_c4_reg[2]_0 ;
  wire \mcp1_dec_c5[0]_i_2_n_0 ;
  wire \mcp1_dec_c5[1]_i_2_n_0 ;
  wire \mcp1_dec_c5[3]_i_2_n_0 ;
  wire \mcp1_dec_c5[4]_i_2_n_0 ;
  wire \mcp1_dec_c5[5]_i_2_n_0 ;
  wire \mcp1_dec_c5[5]_i_3_n_0 ;
  wire \mcp1_dec_c5[6]_i_2_n_0 ;
  wire \mcp1_dec_c5[6]_i_3_n_0 ;
  wire \mcp1_dec_c5[7]_i_4_n_0 ;
  wire \mcp1_dec_c5[7]_i_5_n_0 ;
  wire \mcp1_dec_c5[7]_i_6_n_0 ;
  wire \mcp1_dec_c5[7]_i_7_n_0 ;
  wire \mcp1_dec_c5[7]_i_8_n_0 ;
  wire \mcp1_dec_c5[7]_i_9_n_0 ;
  wire \mcp1_dec_c5_reg[2]_0 ;
  wire \mcp1_dec_c6[0]_i_2_n_0 ;
  wire \mcp1_dec_c6[2]_i_2_n_0 ;
  wire \mcp1_dec_c6[2]_i_3_n_0 ;
  wire \mcp1_dec_c6[2]_i_4_n_0 ;
  wire \mcp1_dec_c6[3]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_2_n_0 ;
  wire \mcp1_dec_c6[4]_i_3_n_0 ;
  wire \mcp1_dec_c6[4]_i_4_n_0 ;
  wire \mcp1_dec_c6[5]_i_2_n_0 ;
  wire \mcp1_dec_c6[5]_i_3_n_0 ;
  wire \mcp1_dec_c6[6]_i_2_n_0 ;
  wire \mcp1_dec_c6[7]_i_3_n_0 ;
  wire \mcp1_dec_c6[7]_i_4_n_0 ;
  wire \mcp1_dec_c6[7]_i_5_n_0 ;
  wire [0:0]\mcp1_dec_c6_reg[2]_0 ;
  wire \mcp1_dec_c7[0]_i_2_n_0 ;
  wire \mcp1_dec_c7[2]_i_2_n_0 ;
  wire \mcp1_dec_c7[2]_i_3_n_0 ;
  wire \mcp1_dec_c7[2]_i_4_n_0 ;
  wire \mcp1_dec_c7[3]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_2_n_0 ;
  wire \mcp1_dec_c7[4]_i_3_n_0 ;
  wire \mcp1_dec_c7[4]_i_4_n_0 ;
  wire \mcp1_dec_c7[5]_i_2_n_0 ;
  wire \mcp1_dec_c7[5]_i_3_n_0 ;
  wire \mcp1_dec_c7[6]_i_2_n_0 ;
  wire \mcp1_dec_c7[7]_i_3_n_0 ;
  wire \mcp1_dec_c7[7]_i_4_n_0 ;
  wire \mcp1_dec_c7[7]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_10_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_11_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_12_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_13_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_14_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_15_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_16_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_17_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_18_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_6_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_7_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_8_n_0 ;
  wire \mcp1_r_type_next_reg[0]_i_9_n_0 ;
  wire \mcp1_r_type_next_reg[1]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_10_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_11_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_12_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_13_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_14_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_15_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_16_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_17_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_18_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_19_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_1_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_20_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_21_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_22_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_23_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_24_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_25_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_26_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_27_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_28_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_29_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_2_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_30_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_31_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_32_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_33_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_34_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_35_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_36_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_37_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_38_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_39_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_3_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_4_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_5_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_7_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_8_n_0 ;
  wire \mcp1_r_type_next_reg[2]_i_9_n_0 ;
  wire [7:1]mcp1_rx_64_ctrl_out;
  wire \mcp1_rx_64_ctrl_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[0]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[1]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out[3]_i_6_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[4]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[5]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_ctrl_out[6]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_ctrl_out[7]_i_5_n_0 ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[0] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[1] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[2] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[3] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[4] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[5] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[6] ;
  wire \mcp1_rx_64_ctrl_out_reg_n_0_[7] ;
  wire [63:0]mcp1_rx_64_data_out;
  wire \mcp1_rx_64_data_out[0]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[0]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[0]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[10]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[11]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[12]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[13]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[14]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[15]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[16]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[17]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[18]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[19]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[1]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[20]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[21]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[22]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[23]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[24]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[25]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[26]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[27]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[28]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[29]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[2]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[30]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[31]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[32]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[33]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[34]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[35]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[36]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[37]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[38]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[39]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[3]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[40]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[41]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[42]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[43]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[44]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[45]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[46]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[47]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[48]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[49]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[4]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[50]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[51]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[52]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[53]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[54]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[55]_i_7_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[56]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[57]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[58]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[59]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[5]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[60]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[61]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[62]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_10_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_11_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_12_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_13_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_6_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_7_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_8_n_0 ;
  wire \mcp1_rx_64_data_out[63]_i_9_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[6]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[7]_i_5_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[8]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_1_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_2_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_3_n_0 ;
  wire \mcp1_rx_64_data_out[9]_i_4_n_0 ;
  wire \mcp1_rx_64_data_out_reg[1]_i_3_n_0 ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[0] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[1] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[2] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[3] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[4] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[5] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[6] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[7] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[8] ;
  wire \mcp1_rx_66_enc_reg_reg_n_0_[9] ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_10_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ;
  wire [7:0]\mcp1_rx_ebuff_ctrl_reg[7] ;
  wire [1:0]\mcp1_rx_ebuff_data_reg[56] ;
  wire \mcp1_rx_ebuff_data_reg[56]_0 ;
  wire [61:0]\mcp1_rx_ebuff_data_reg[63] ;
  wire [1:0]next_state;
  wire [2:0]out;
  wire [2:0]r_type;
  wire [2:0]r_type_next;
  wire rxreset_5_reg;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__10_0;
  wire [0:0]rxusrclk2_en156_reg_rep__10_1;
  wire [0:0]rxusrclk2_en156_reg_rep__10_2;
  wire [0:0]rxusrclk2_en156_reg_rep__10_3;
  wire [0:0]rxusrclk2_en156_reg_rep__10_4;
  wire [0:0]rxusrclk2_en156_reg_rep__10_5;
  wire [0:0]rxusrclk2_en156_reg_rep__10_6;
  wire [0:0]rxusrclk2_en156_reg_rep__10_7;
  wire [0:0]rxusrclk2_en156_reg_rep__10_8;
  wire rxusrclk2_en156_reg_rep__11;
  wire [1:0]rxusrclk2_en156_reg_rep__2;
  wire [0:0]rxusrclk2_en156_reg_rep__4;
  wire [1:0]rxusrclk2_en156_reg_rep__7;

  LUT6 #(
    .INIT(64'hFE04FEFEFEEFFEFE)) 
    \FSM_sequential_mcp1_state[0]_i_2__0 
       (.I0(r_type[2]),
        .I1(r_type[1]),
        .I2(r_type[0]),
        .I3(out[1]),
        .I4(out[0]),
        .I5(\FSM_sequential_mcp1_state_reg[0] ),
        .O(\FSM_sequential_mcp1_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000E0000000F)) 
    \FSM_sequential_mcp1_state[0]_i_3 
       (.I0(r_type[2]),
        .I1(r_type[1]),
        .I2(\FSM_sequential_mcp1_state_reg[0] ),
        .I3(out[1]),
        .I4(out[0]),
        .I5(r_type[0]),
        .O(\FSM_sequential_mcp1_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000E0004444F444)) 
    \FSM_sequential_mcp1_state[1]_i_2__0 
       (.I0(r_type[2]),
        .I1(r_type[1]),
        .I2(\FSM_sequential_mcp1_state_reg[0] ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(r_type[0]),
        .O(\FSM_sequential_mcp1_state_reg[1] ));
  LUT5 #(
    .INIT(32'h00001411)) 
    \FSM_sequential_mcp1_state[2]_i_2 
       (.I0(r_type[1]),
        .I1(r_type[0]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(r_type[2]),
        .O(\FSM_sequential_mcp1_state_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \FSM_sequential_mcp1_state[2]_i_3__0 
       (.I0(r_type[1]),
        .I1(\FSM_sequential_mcp1_state_reg[0] ),
        .I2(out[1]),
        .I3(out[0]),
        .I4(r_type[0]),
        .I5(r_type[2]),
        .O(\FSM_sequential_mcp1_state_reg[2] ));
  LUT5 #(
    .INIT(32'h00020000)) 
    \FSM_sequential_mcp1_state[2]_i_5__0 
       (.I0(r_type[0]),
        .I1(r_type[2]),
        .I2(r_type_next[0]),
        .I3(r_type_next[2]),
        .I4(r_type[1]),
        .O(\FSM_sequential_mcp1_state_reg[0] ));
  FDRE \mcp1_block_field_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[2]),
        .Q(mcp1_block_field_reg[0]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[3]),
        .Q(mcp1_block_field_reg[1]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[4]),
        .Q(mcp1_block_field_reg[2]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[5]),
        .Q(mcp1_block_field_reg[3]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[6]),
        .Q(mcp1_block_field_reg[4]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[7]),
        .Q(mcp1_block_field_reg[5]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[8]),
        .Q(mcp1_block_field_reg[6]),
        .R(rxreset_5_reg));
  FDRE \mcp1_block_field_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(Q[9]),
        .Q(mcp1_block_field_reg[7]),
        .R(rxreset_5_reg));
  LUT6 #(
    .INIT(64'h2000000000010000)) 
    \mcp1_dec_c0[0]_i_1 
       (.I0(Q[16]),
        .I1(Q[10]),
        .I2(Q[13]),
        .I3(Q[15]),
        .I4(\mcp1_dec_c0[0]_i_2_n_0 ),
        .I5(Q[14]),
        .O(DecodeWord[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c0[0]_i_2 
       (.I0(Q[12]),
        .I1(Q[11]),
        .O(\mcp1_dec_c0[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h01004001)) 
    \mcp1_dec_c0[1]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_3_n_0 ),
        .I1(Q[11]),
        .I2(Q[12]),
        .I3(Q[13]),
        .I4(Q[15]),
        .O(DecodeWord[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_dec_c0[2]_i_1 
       (.I0(\mcp1_dec_c0_reg[2]_0 ),
        .O(DecodeWord[2]));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c0[3]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(Q[16]),
        .I2(Q[15]),
        .I3(\mcp1_dec_c0[3]_i_2_n_0 ),
        .I4(Q[13]),
        .I5(Q[14]),
        .O(DecodeWord[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c0[3]_i_2 
       (.I0(Q[11]),
        .I1(Q[12]),
        .I2(Q[10]),
        .O(\mcp1_dec_c0[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c0[4]_i_1 
       (.I0(\mcp1_dec_c0[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c0[4]_i_3_n_0 ),
        .I2(Q[11]),
        .I3(Q[12]),
        .I4(Q[13]),
        .I5(Q[15]),
        .O(DecodeWord[4]));
  LUT6 #(
    .INIT(64'h0000000004102008)) 
    \mcp1_dec_c0[4]_i_2 
       (.I0(Q[12]),
        .I1(Q[14]),
        .I2(Q[13]),
        .I3(Q[15]),
        .I4(Q[11]),
        .I5(\mcp1_dec_c0[4]_i_4_n_0 ),
        .O(\mcp1_dec_c0[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c0[4]_i_3 
       (.I0(Q[14]),
        .I1(Q[13]),
        .I2(Q[15]),
        .I3(Q[16]),
        .I4(Q[10]),
        .O(\mcp1_dec_c0[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \mcp1_dec_c0[4]_i_4 
       (.I0(Q[10]),
        .I1(Q[16]),
        .I2(Q[15]),
        .O(\mcp1_dec_c0[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h2CC22002)) 
    \mcp1_dec_c0[5]_i_1 
       (.I0(\mcp1_dec_c0[5]_i_2_n_0 ),
        .I1(Q[10]),
        .I2(Q[16]),
        .I3(Q[15]),
        .I4(\mcp1_dec_c0[5]_i_3_n_0 ),
        .O(DecodeWord[5]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c0[5]_i_2 
       (.I0(Q[15]),
        .I1(Q[11]),
        .I2(Q[12]),
        .I3(Q[13]),
        .I4(Q[14]),
        .O(\mcp1_dec_c0[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h02000420)) 
    \mcp1_dec_c0[5]_i_3 
       (.I0(Q[11]),
        .I1(Q[12]),
        .I2(Q[13]),
        .I3(Q[14]),
        .I4(Q[15]),
        .O(\mcp1_dec_c0[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c0[6]_i_1 
       (.I0(\mcp1_dec_c0[7]_i_4_n_0 ),
        .I1(\mcp1_dec_c0[6]_i_2_n_0 ),
        .I2(Q[15]),
        .I3(Q[10]),
        .I4(Q[16]),
        .O(DecodeWord[6]));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c0[6]_i_2 
       (.I0(Q[13]),
        .I1(Q[14]),
        .I2(Q[11]),
        .I3(Q[12]),
        .O(\mcp1_dec_c0[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \mcp1_dec_c0[7]_i_2 
       (.I0(\mcp1_dec_c0[7]_i_4_n_0 ),
        .I1(\mcp1_dec_c0[7]_i_5_n_0 ),
        .I2(Q[14]),
        .I3(\mcp1_dec_c0[7]_i_6_n_0 ),
        .I4(Q[12]),
        .I5(Q[11]),
        .O(DecodeWord[7]));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c0[7]_i_3 
       (.I0(\mcp1_dec_c0[7]_i_7_n_0 ),
        .I1(\mcp1_dec_c0[7]_i_8_n_0 ),
        .I2(Q[10]),
        .I3(\mcp1_dec_c0[7]_i_9_n_0 ),
        .I4(Q[12]),
        .I5(Q[11]),
        .O(\mcp1_dec_c0_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c0[7]_i_4 
       (.I0(Q[15]),
        .I1(Q[13]),
        .I2(Q[12]),
        .I3(Q[11]),
        .I4(\mcp1_dec_c0[4]_i_3_n_0 ),
        .O(\mcp1_dec_c0[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c0[7]_i_5 
       (.I0(Q[16]),
        .I1(Q[10]),
        .O(\mcp1_dec_c0[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c0[7]_i_6 
       (.I0(Q[15]),
        .I1(Q[13]),
        .O(\mcp1_dec_c0[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_7 
       (.I0(Q[13]),
        .I1(Q[14]),
        .O(\mcp1_dec_c0[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_8 
       (.I0(Q[15]),
        .I1(Q[16]),
        .O(\mcp1_dec_c0[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c0[7]_i_9 
       (.I0(Q[15]),
        .I1(Q[13]),
        .O(\mcp1_dec_c0[7]_i_9_n_0 ));
  FDRE \mcp1_dec_c0_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord[0]),
        .Q(data10[0]),
        .R(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[1]),
        .Q(data10[1]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[2]),
        .Q(data10[2]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[3]),
        .Q(data10[3]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[4]),
        .Q(data10[4]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[5]),
        .Q(data10[5]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[6]),
        .Q(data10[6]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  FDSE \mcp1_dec_c0_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord[7]),
        .Q(data10[7]),
        .S(rxusrclk2_en156_reg_rep__10_1));
  LUT6 #(
    .INIT(64'h2000000000010000)) 
    \mcp1_dec_c1[0]_i_1 
       (.I0(Q[23]),
        .I1(Q[17]),
        .I2(Q[20]),
        .I3(Q[22]),
        .I4(\mcp1_dec_c1[0]_i_2_n_0 ),
        .I5(Q[21]),
        .O(DecodeWord0[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[0]_i_2 
       (.I0(Q[19]),
        .I1(Q[18]),
        .O(\mcp1_dec_c1[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h01004001)) 
    \mcp1_dec_c1[1]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_3_n_0 ),
        .I1(Q[18]),
        .I2(Q[19]),
        .I3(Q[20]),
        .I4(Q[22]),
        .O(DecodeWord0[1]));
  LUT6 #(
    .INIT(64'h2400000000000081)) 
    \mcp1_dec_c1[2]_i_1 
       (.I0(\mcp1_dec_c1[2]_i_2_n_0 ),
        .I1(Q[19]),
        .I2(Q[18]),
        .I3(\mcp1_dec_c1[2]_i_3_n_0 ),
        .I4(Q[17]),
        .I5(\mcp1_dec_c1[2]_i_4_n_0 ),
        .O(\mcp1_dec_c1_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_2 
       (.I0(Q[22]),
        .I1(Q[20]),
        .O(\mcp1_dec_c1[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_3 
       (.I0(Q[22]),
        .I1(Q[23]),
        .O(\mcp1_dec_c1[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c1[2]_i_4 
       (.I0(Q[20]),
        .I1(Q[21]),
        .O(\mcp1_dec_c1[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAABAAAAAAAAAAEA)) 
    \mcp1_dec_c1[3]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(Q[23]),
        .I2(Q[22]),
        .I3(\mcp1_dec_c1[3]_i_2_n_0 ),
        .I4(Q[21]),
        .I5(Q[20]),
        .O(DecodeWord0[3]));
  LUT3 #(
    .INIT(8'hBF)) 
    \mcp1_dec_c1[3]_i_2 
       (.I0(Q[17]),
        .I1(Q[18]),
        .I2(Q[19]),
        .O(\mcp1_dec_c1[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c1[4]_i_1 
       (.I0(\mcp1_dec_c1[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c1[4]_i_3_n_0 ),
        .I2(Q[18]),
        .I3(Q[19]),
        .I4(Q[20]),
        .I5(Q[22]),
        .O(DecodeWord0[4]));
  LUT6 #(
    .INIT(64'h0000000004102008)) 
    \mcp1_dec_c1[4]_i_2 
       (.I0(Q[19]),
        .I1(Q[21]),
        .I2(Q[20]),
        .I3(Q[22]),
        .I4(Q[18]),
        .I5(\mcp1_dec_c1[4]_i_4_n_0 ),
        .O(\mcp1_dec_c1[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF6FFFFF6)) 
    \mcp1_dec_c1[4]_i_3 
       (.I0(Q[22]),
        .I1(Q[23]),
        .I2(Q[17]),
        .I3(Q[21]),
        .I4(Q[20]),
        .O(\mcp1_dec_c1[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \mcp1_dec_c1[4]_i_4 
       (.I0(Q[17]),
        .I1(Q[23]),
        .I2(Q[22]),
        .O(\mcp1_dec_c1[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h2CC22002)) 
    \mcp1_dec_c1[5]_i_1 
       (.I0(\mcp1_dec_c1[5]_i_2_n_0 ),
        .I1(Q[17]),
        .I2(Q[23]),
        .I3(Q[22]),
        .I4(\mcp1_dec_c1[5]_i_3_n_0 ),
        .O(DecodeWord0[5]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c1[5]_i_2 
       (.I0(Q[22]),
        .I1(Q[18]),
        .I2(Q[19]),
        .I3(Q[20]),
        .I4(Q[21]),
        .O(\mcp1_dec_c1[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h02000420)) 
    \mcp1_dec_c1[5]_i_3 
       (.I0(Q[18]),
        .I1(Q[19]),
        .I2(Q[20]),
        .I3(Q[21]),
        .I4(Q[22]),
        .O(\mcp1_dec_c1[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c1[6]_i_1 
       (.I0(\mcp1_dec_c1[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c1[6]_i_2_n_0 ),
        .I2(Q[22]),
        .I3(Q[17]),
        .I4(Q[23]),
        .O(DecodeWord0[6]));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c1[6]_i_2 
       (.I0(Q[20]),
        .I1(Q[21]),
        .I2(Q[18]),
        .I3(Q[19]),
        .O(\mcp1_dec_c1[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \mcp1_dec_c1[7]_i_2 
       (.I0(\mcp1_dec_c1[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c1[7]_i_4_n_0 ),
        .I2(Q[21]),
        .I3(\mcp1_dec_c1[7]_i_5_n_0 ),
        .I4(Q[19]),
        .I5(Q[18]),
        .O(DecodeWord0[7]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c1[7]_i_3 
       (.I0(Q[22]),
        .I1(Q[20]),
        .I2(Q[19]),
        .I3(Q[18]),
        .I4(\mcp1_dec_c1[4]_i_3_n_0 ),
        .O(\mcp1_dec_c1[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c1[7]_i_4 
       (.I0(Q[23]),
        .I1(Q[17]),
        .O(\mcp1_dec_c1[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c1[7]_i_5 
       (.I0(Q[22]),
        .I1(Q[20]),
        .O(\mcp1_dec_c1[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c1_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord0[0]),
        .Q(data10[8]),
        .R(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[1]),
        .Q(data10[9]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(\mcp1_dec_c1_reg[2]_0 ),
        .Q(data10[10]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[3]),
        .Q(data10[11]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[4]),
        .Q(data10[12]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[5]),
        .Q(data10[13]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[6]),
        .Q(data10[14]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  FDSE \mcp1_dec_c1_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord0[7]),
        .Q(data10[15]),
        .S(rxusrclk2_en156_reg_rep__10_2));
  LUT6 #(
    .INIT(64'h2000000000010000)) 
    \mcp1_dec_c2[0]_i_1 
       (.I0(Q[30]),
        .I1(Q[24]),
        .I2(Q[27]),
        .I3(Q[29]),
        .I4(\mcp1_dec_c2[0]_i_2_n_0 ),
        .I5(Q[28]),
        .O(DecodeWord1[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c2[0]_i_2 
       (.I0(Q[26]),
        .I1(Q[25]),
        .O(\mcp1_dec_c2[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h01004001)) 
    \mcp1_dec_c2[1]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_3_n_0 ),
        .I1(Q[25]),
        .I2(Q[26]),
        .I3(Q[27]),
        .I4(Q[29]),
        .O(DecodeWord1[1]));
  LUT6 #(
    .INIT(64'h0100800000800001)) 
    \mcp1_dec_c2[2]_i_1 
       (.I0(\mcp1_dec_c2[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c2[2]_i_3_n_0 ),
        .I2(Q[24]),
        .I3(\mcp1_dec_c2[2]_i_4_n_0 ),
        .I4(Q[26]),
        .I5(Q[25]),
        .O(\mcp1_dec_c2_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[2]_i_2 
       (.I0(Q[27]),
        .I1(Q[28]),
        .O(\mcp1_dec_c2[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[2]_i_3 
       (.I0(Q[29]),
        .I1(Q[30]),
        .O(\mcp1_dec_c2[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c2[2]_i_4 
       (.I0(Q[29]),
        .I1(Q[27]),
        .O(\mcp1_dec_c2[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c2[3]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I1(Q[30]),
        .I2(Q[29]),
        .I3(\mcp1_dec_c2[3]_i_2_n_0 ),
        .I4(Q[27]),
        .I5(Q[28]),
        .O(DecodeWord1[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c2[3]_i_2 
       (.I0(Q[25]),
        .I1(Q[26]),
        .I2(Q[24]),
        .O(\mcp1_dec_c2[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c2[4]_i_1 
       (.I0(\mcp1_dec_c2[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c2[4]_i_3_n_0 ),
        .I2(Q[25]),
        .I3(Q[26]),
        .I4(Q[27]),
        .I5(Q[29]),
        .O(DecodeWord1[4]));
  LUT6 #(
    .INIT(64'h0000000004102008)) 
    \mcp1_dec_c2[4]_i_2 
       (.I0(Q[26]),
        .I1(Q[28]),
        .I2(Q[27]),
        .I3(Q[29]),
        .I4(Q[25]),
        .I5(\mcp1_dec_c2[5]_i_4_n_0 ),
        .O(\mcp1_dec_c2[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c2[4]_i_3 
       (.I0(Q[28]),
        .I1(Q[27]),
        .I2(Q[29]),
        .I3(Q[30]),
        .I4(Q[24]),
        .O(\mcp1_dec_c2[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'hFFFF4100)) 
    \mcp1_dec_c2[5]_i_1 
       (.I0(Q[24]),
        .I1(Q[30]),
        .I2(Q[29]),
        .I3(\mcp1_dec_c2[5]_i_2_n_0 ),
        .I4(\mcp1_dec_c2[5]_i_3_n_0 ),
        .O(DecodeWord1[5]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c2[5]_i_2 
       (.I0(Q[29]),
        .I1(Q[25]),
        .I2(Q[26]),
        .I3(Q[27]),
        .I4(Q[28]),
        .O(\mcp1_dec_c2[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000044200)) 
    \mcp1_dec_c2[5]_i_3 
       (.I0(Q[26]),
        .I1(Q[25]),
        .I2(Q[29]),
        .I3(Q[28]),
        .I4(Q[27]),
        .I5(\mcp1_dec_c2[5]_i_4_n_0 ),
        .O(\mcp1_dec_c2[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \mcp1_dec_c2[5]_i_4 
       (.I0(Q[24]),
        .I1(Q[30]),
        .I2(Q[29]),
        .O(\mcp1_dec_c2[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c2[6]_i_1 
       (.I0(\mcp1_dec_c2[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c2[6]_i_2_n_0 ),
        .I2(Q[29]),
        .I3(Q[24]),
        .I4(Q[30]),
        .O(DecodeWord1[6]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    \mcp1_dec_c2[6]_i_2 
       (.I0(Q[28]),
        .I1(Q[27]),
        .I2(Q[26]),
        .I3(Q[25]),
        .O(\mcp1_dec_c2[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAABAAAAAAAAAAA)) 
    \mcp1_dec_c2[7]_i_2 
       (.I0(\mcp1_dec_c2[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c2[7]_i_4_n_0 ),
        .I2(Q[28]),
        .I3(\mcp1_dec_c2[7]_i_5_n_0 ),
        .I4(Q[25]),
        .I5(Q[26]),
        .O(DecodeWord1[7]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c2[7]_i_3 
       (.I0(Q[29]),
        .I1(Q[27]),
        .I2(Q[26]),
        .I3(Q[25]),
        .I4(\mcp1_dec_c2[4]_i_3_n_0 ),
        .O(\mcp1_dec_c2[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c2[7]_i_4 
       (.I0(Q[30]),
        .I1(Q[24]),
        .O(\mcp1_dec_c2[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c2[7]_i_5 
       (.I0(Q[29]),
        .I1(Q[27]),
        .O(\mcp1_dec_c2[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c2_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(DecodeWord1[0]),
        .Q(data10[16]),
        .R(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[1]),
        .Q(data10[17]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(\mcp1_dec_c2_reg[2]_0 ),
        .Q(data10[18]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[3]),
        .Q(data10[19]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[4]),
        .Q(data10[20]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[5]),
        .Q(data10[21]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[6]),
        .Q(data10[22]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  FDSE \mcp1_dec_c2_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord1[7]),
        .Q(data10[23]),
        .S(rxusrclk2_en156_reg_rep__10_3));
  LUT6 #(
    .INIT(64'h0000000080000010)) 
    \mcp1_dec_c3[0]_i_1 
       (.I0(Q[34]),
        .I1(Q[35]),
        .I2(\mcp1_dec_c3[0]_i_2_n_0 ),
        .I3(Q[37]),
        .I4(Q[36]),
        .I5(Q[31]),
        .O(DecodeWord2[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c3[0]_i_2 
       (.I0(Q[33]),
        .I1(Q[32]),
        .O(\mcp1_dec_c3[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h00001081)) 
    \mcp1_dec_c3[1]_i_1 
       (.I0(Q[33]),
        .I1(Q[32]),
        .I2(Q[34]),
        .I3(Q[36]),
        .I4(\mcp1_dec_c3[4]_i_2_n_0 ),
        .O(DecodeWord2[1]));
  LUT6 #(
    .INIT(64'h0503305030500503)) 
    \mcp1_dec_c3[2]_i_1 
       (.I0(\mcp1_dec_c3[5]_i_2_n_0 ),
        .I1(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I2(Q[32]),
        .I3(Q[33]),
        .I4(Q[36]),
        .I5(Q[34]),
        .O(\mcp1_dec_c3_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c3[3]_i_1 
       (.I0(\mcp1_dec_c3[3]_i_2_n_0 ),
        .I1(Q[36]),
        .I2(Q[37]),
        .I3(\mcp1_dec_c3[3]_i_3_n_0 ),
        .I4(Q[35]),
        .I5(Q[34]),
        .O(DecodeWord2[3]));
  LUT5 #(
    .INIT(32'h00004224)) 
    \mcp1_dec_c3[3]_i_2 
       (.I0(Q[32]),
        .I1(Q[33]),
        .I2(Q[36]),
        .I3(Q[34]),
        .I4(\mcp1_dec_c3[5]_i_2_n_0 ),
        .O(\mcp1_dec_c3[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \mcp1_dec_c3[3]_i_3 
       (.I0(Q[31]),
        .I1(Q[32]),
        .I2(Q[33]),
        .O(\mcp1_dec_c3[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0503305030500500)) 
    \mcp1_dec_c3[4]_i_1 
       (.I0(\mcp1_dec_c3[5]_i_2_n_0 ),
        .I1(\mcp1_dec_c3[4]_i_2_n_0 ),
        .I2(Q[32]),
        .I3(Q[33]),
        .I4(Q[36]),
        .I5(Q[34]),
        .O(DecodeWord2[4]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c3[4]_i_2 
       (.I0(Q[35]),
        .I1(Q[34]),
        .I2(Q[37]),
        .I3(Q[36]),
        .I4(Q[31]),
        .O(\mcp1_dec_c3[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0011000F0F221100)) 
    \mcp1_dec_c3[5]_i_1 
       (.I0(Q[34]),
        .I1(\mcp1_dec_c3[5]_i_2_n_0 ),
        .I2(\mcp1_dec_c3[5]_i_3_n_0 ),
        .I3(Q[33]),
        .I4(Q[32]),
        .I5(Q[36]),
        .O(DecodeWord2[5]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'hFF9F9FFF)) 
    \mcp1_dec_c3[5]_i_2 
       (.I0(Q[34]),
        .I1(Q[35]),
        .I2(Q[31]),
        .I3(Q[36]),
        .I4(Q[37]),
        .O(\mcp1_dec_c3[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'hFFFF7FF7)) 
    \mcp1_dec_c3[5]_i_3 
       (.I0(Q[35]),
        .I1(Q[34]),
        .I2(Q[37]),
        .I3(Q[36]),
        .I4(Q[31]),
        .O(\mcp1_dec_c3[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAAAAAAAAAA)) 
    \mcp1_dec_c3[6]_i_1 
       (.I0(\mcp1_dec_c3[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c3[6]_i_2_n_0 ),
        .I2(\mcp1_dec_c3[6]_i_3_n_0 ),
        .I3(Q[35]),
        .I4(Q[31]),
        .I5(Q[37]),
        .O(DecodeWord2[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c3[6]_i_2 
       (.I0(Q[34]),
        .I1(Q[36]),
        .O(\mcp1_dec_c3[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c3[6]_i_3 
       (.I0(Q[32]),
        .I1(Q[33]),
        .O(\mcp1_dec_c3[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAEAAAAAAA)) 
    \mcp1_dec_c3[7]_i_2 
       (.I0(\mcp1_dec_c3[7]_i_3_n_0 ),
        .I1(Q[31]),
        .I2(Q[37]),
        .I3(Q[35]),
        .I4(\mcp1_dec_c3[7]_i_4_n_0 ),
        .I5(\mcp1_dec_c3[7]_i_5_n_0 ),
        .O(DecodeWord2[7]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c3[7]_i_3 
       (.I0(Q[34]),
        .I1(Q[36]),
        .I2(Q[33]),
        .I3(Q[32]),
        .I4(\mcp1_dec_c3[4]_i_2_n_0 ),
        .O(\mcp1_dec_c3[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c3[7]_i_4 
       (.I0(Q[33]),
        .I1(Q[32]),
        .O(\mcp1_dec_c3[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c3[7]_i_5 
       (.I0(Q[34]),
        .I1(Q[36]),
        .O(\mcp1_dec_c3[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c3_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[0]),
        .Q(data10[24]),
        .R(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[1]),
        .Q(data10[25]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_dec_c3_reg[2]_0 ),
        .Q(data10[26]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[3]),
        .Q(data10[27]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[4]),
        .Q(data10[28]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[5]),
        .Q(data10[29]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[6]),
        .Q(data10[30]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  FDSE \mcp1_dec_c3_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord2[7]),
        .Q(data10[31]),
        .S(rxusrclk2_en156_reg_rep__10_4));
  LUT6 #(
    .INIT(64'h4000000000000010)) 
    \mcp1_dec_c4[0]_i_1 
       (.I0(Q[38]),
        .I1(Q[44]),
        .I2(\mcp1_dec_c4[0]_i_2_n_0 ),
        .I3(Q[41]),
        .I4(Q[42]),
        .I5(Q[43]),
        .O(DecodeWord3[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c4[0]_i_2 
       (.I0(Q[40]),
        .I1(Q[39]),
        .O(\mcp1_dec_c4[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h10000041)) 
    \mcp1_dec_c4[1]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_3_n_0 ),
        .I1(Q[43]),
        .I2(Q[41]),
        .I3(Q[40]),
        .I4(Q[39]),
        .O(DecodeWord3[1]));
  LUT6 #(
    .INIT(64'h0100800000800001)) 
    \mcp1_dec_c4[2]_i_1 
       (.I0(\mcp1_dec_c4[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c4[2]_i_3_n_0 ),
        .I2(Q[38]),
        .I3(\mcp1_dec_c4[2]_i_4_n_0 ),
        .I4(Q[40]),
        .I5(Q[39]),
        .O(\mcp1_dec_c4_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[2]_i_2 
       (.I0(Q[41]),
        .I1(Q[42]),
        .O(\mcp1_dec_c4[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[2]_i_3 
       (.I0(Q[43]),
        .I1(Q[44]),
        .O(\mcp1_dec_c4[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c4[2]_i_4 
       (.I0(Q[43]),
        .I1(Q[41]),
        .O(\mcp1_dec_c4[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c4[3]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(Q[44]),
        .I2(Q[43]),
        .I3(\mcp1_dec_c4[3]_i_2_n_0 ),
        .I4(Q[42]),
        .I5(Q[41]),
        .O(DecodeWord3[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c4[3]_i_2 
       (.I0(Q[39]),
        .I1(Q[40]),
        .I2(Q[38]),
        .O(\mcp1_dec_c4[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c4[4]_i_1 
       (.I0(\mcp1_dec_c4[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c4[4]_i_3_n_0 ),
        .I2(Q[39]),
        .I3(Q[40]),
        .I4(Q[41]),
        .I5(Q[43]),
        .O(DecodeWord3[4]));
  LUT6 #(
    .INIT(64'h0008040040000080)) 
    \mcp1_dec_c4[4]_i_2 
       (.I0(Q[42]),
        .I1(\mcp1_dec_c4[4]_i_4_n_0 ),
        .I2(Q[40]),
        .I3(Q[41]),
        .I4(Q[43]),
        .I5(Q[39]),
        .O(\mcp1_dec_c4[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c4[4]_i_3 
       (.I0(Q[42]),
        .I1(Q[41]),
        .I2(Q[43]),
        .I3(Q[44]),
        .I4(Q[38]),
        .O(\mcp1_dec_c4[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \mcp1_dec_c4[4]_i_4 
       (.I0(Q[44]),
        .I1(Q[43]),
        .I2(Q[38]),
        .O(\mcp1_dec_c4[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0330A00A)) 
    \mcp1_dec_c4[5]_i_1 
       (.I0(\mcp1_dec_c4[5]_i_2_n_0 ),
        .I1(\mcp1_dec_c4[5]_i_3_n_0 ),
        .I2(Q[44]),
        .I3(Q[43]),
        .I4(Q[38]),
        .O(DecodeWord3[5]));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c4[5]_i_2 
       (.I0(Q[43]),
        .I1(Q[39]),
        .I2(Q[40]),
        .I3(Q[41]),
        .I4(Q[42]),
        .O(\mcp1_dec_c4[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hFDFFFBDF)) 
    \mcp1_dec_c4[5]_i_3 
       (.I0(Q[39]),
        .I1(Q[40]),
        .I2(Q[41]),
        .I3(Q[42]),
        .I4(Q[43]),
        .O(\mcp1_dec_c4[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c4[6]_i_1 
       (.I0(\mcp1_dec_c4[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c4[6]_i_2_n_0 ),
        .I2(Q[43]),
        .I3(Q[38]),
        .I4(Q[44]),
        .O(DecodeWord3[6]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c4[6]_i_2 
       (.I0(Q[41]),
        .I1(Q[42]),
        .I2(Q[39]),
        .I3(Q[40]),
        .O(\mcp1_dec_c4[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \mcp1_dec_c4[7]_i_2 
       (.I0(\mcp1_dec_c4[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c4[7]_i_4_n_0 ),
        .I2(Q[42]),
        .I3(\mcp1_dec_c4[7]_i_5_n_0 ),
        .I4(Q[40]),
        .I5(Q[39]),
        .O(DecodeWord3[7]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c4[7]_i_3 
       (.I0(Q[43]),
        .I1(Q[41]),
        .I2(Q[40]),
        .I3(Q[39]),
        .I4(\mcp1_dec_c4[4]_i_3_n_0 ),
        .O(\mcp1_dec_c4[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c4[7]_i_4 
       (.I0(Q[44]),
        .I1(Q[38]),
        .O(\mcp1_dec_c4[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c4[7]_i_5 
       (.I0(Q[43]),
        .I1(Q[41]),
        .O(\mcp1_dec_c4[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c4_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__4),
        .D(DecodeWord3[0]),
        .Q(data14[32]),
        .R(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[1] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[1]),
        .Q(data14[33]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[2] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_dec_c4_reg[2]_0 ),
        .Q(data14[34]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[3] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[3]),
        .Q(data14[35]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[4] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[4]),
        .Q(data14[36]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[5] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[5]),
        .Q(data14[37]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[6] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[6]),
        .Q(data14[38]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  FDSE \mcp1_dec_c4_reg[7] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord3[7]),
        .Q(data14[39]),
        .S(rxusrclk2_en156_reg_rep__10_5));
  LUT6 #(
    .INIT(64'h4000000100000000)) 
    \mcp1_dec_c5[0]_i_1 
       (.I0(Q[45]),
        .I1(Q[51]),
        .I2(Q[49]),
        .I3(Q[50]),
        .I4(Q[48]),
        .I5(\mcp1_dec_c5[0]_i_2_n_0 ),
        .O(DecodeWord4[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c5[0]_i_2 
       (.I0(Q[47]),
        .I1(Q[46]),
        .O(\mcp1_dec_c5[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000010800001)) 
    \mcp1_dec_c5[1]_i_1 
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[49]),
        .I3(Q[50]),
        .I4(Q[48]),
        .I5(\mcp1_dec_c5[1]_i_2_n_0 ),
        .O(DecodeWord4[1]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hBE)) 
    \mcp1_dec_c5[1]_i_2 
       (.I0(Q[45]),
        .I1(Q[51]),
        .I2(Q[50]),
        .O(\mcp1_dec_c5[1]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_dec_c5[2]_i_1 
       (.I0(\mcp1_dec_c5_reg[2]_0 ),
        .O(DecodeWord4[2]));
  LUT6 #(
    .INIT(64'hAAAEAAAAAAAAEAAA)) 
    \mcp1_dec_c5[3]_i_1 
       (.I0(\mcp1_dec_c5[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c5[3]_i_2_n_0 ),
        .I2(Q[49]),
        .I3(Q[48]),
        .I4(Q[50]),
        .I5(Q[51]),
        .O(DecodeWord4[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c5[3]_i_2 
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[45]),
        .O(\mcp1_dec_c5[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_dec_c5[4]_i_1 
       (.I0(\mcp1_dec_c5[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c5[7]_i_4_n_0 ),
        .O(DecodeWord4[4]));
  LUT5 #(
    .INIT(32'h00004224)) 
    \mcp1_dec_c5[4]_i_2 
       (.I0(Q[46]),
        .I1(Q[47]),
        .I2(Q[48]),
        .I3(Q[50]),
        .I4(\mcp1_dec_c5[5]_i_2_n_0 ),
        .O(\mcp1_dec_c5[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000442)) 
    \mcp1_dec_c5[5]_i_1 
       (.I0(Q[47]),
        .I1(Q[46]),
        .I2(Q[48]),
        .I3(Q[50]),
        .I4(\mcp1_dec_c5[5]_i_2_n_0 ),
        .I5(\mcp1_dec_c5[5]_i_3_n_0 ),
        .O(DecodeWord4[5]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'hFF9F9FFF)) 
    \mcp1_dec_c5[5]_i_2 
       (.I0(Q[48]),
        .I1(Q[49]),
        .I2(Q[45]),
        .I3(Q[51]),
        .I4(Q[50]),
        .O(\mcp1_dec_c5[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000004040000000)) 
    \mcp1_dec_c5[5]_i_3 
       (.I0(\mcp1_dec_c5[1]_i_2_n_0 ),
        .I1(Q[49]),
        .I2(Q[48]),
        .I3(Q[47]),
        .I4(Q[46]),
        .I5(Q[50]),
        .O(\mcp1_dec_c5[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \mcp1_dec_c5[6]_i_1 
       (.I0(\mcp1_dec_c5[7]_i_4_n_0 ),
        .I1(\mcp1_dec_c5[6]_i_2_n_0 ),
        .I2(Q[49]),
        .I3(Q[48]),
        .I4(Q[50]),
        .I5(\mcp1_dec_c5[6]_i_3_n_0 ),
        .O(DecodeWord4[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c5[6]_i_2 
       (.I0(Q[46]),
        .I1(Q[47]),
        .O(\mcp1_dec_c5[6]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c5[6]_i_3 
       (.I0(Q[51]),
        .I1(Q[45]),
        .O(\mcp1_dec_c5[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \mcp1_dec_c5[7]_i_2 
       (.I0(\mcp1_dec_c5[7]_i_4_n_0 ),
        .I1(Q[45]),
        .I2(Q[51]),
        .I3(Q[49]),
        .I4(\mcp1_dec_c5[7]_i_5_n_0 ),
        .I5(\mcp1_dec_c5[7]_i_6_n_0 ),
        .O(DecodeWord4[7]));
  LUT6 #(
    .INIT(64'hFEFF7FFFFF7FFFFE)) 
    \mcp1_dec_c5[7]_i_3 
       (.I0(\mcp1_dec_c5[7]_i_7_n_0 ),
        .I1(\mcp1_dec_c5[7]_i_8_n_0 ),
        .I2(Q[45]),
        .I3(\mcp1_dec_c5[7]_i_9_n_0 ),
        .I4(Q[47]),
        .I5(Q[46]),
        .O(\mcp1_dec_c5_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h1000004004000000)) 
    \mcp1_dec_c5[7]_i_4 
       (.I0(\mcp1_dec_c5[1]_i_2_n_0 ),
        .I1(Q[50]),
        .I2(Q[48]),
        .I3(Q[47]),
        .I4(Q[46]),
        .I5(Q[49]),
        .O(\mcp1_dec_c5[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c5[7]_i_5 
       (.I0(Q[47]),
        .I1(Q[46]),
        .O(\mcp1_dec_c5[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c5[7]_i_6 
       (.I0(Q[50]),
        .I1(Q[48]),
        .O(\mcp1_dec_c5[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_7 
       (.I0(Q[48]),
        .I1(Q[49]),
        .O(\mcp1_dec_c5[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_8 
       (.I0(Q[50]),
        .I1(Q[51]),
        .O(\mcp1_dec_c5[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c5[7]_i_9 
       (.I0(Q[50]),
        .I1(Q[48]),
        .O(\mcp1_dec_c5[7]_i_9_n_0 ));
  FDRE \mcp1_dec_c5_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(DecodeWord4[0]),
        .Q(data14[40]),
        .R(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[1]),
        .Q(data14[41]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[2]),
        .Q(data14[42]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[3]),
        .Q(data14[43]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[4]),
        .Q(data14[44]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[5]),
        .Q(data14[45]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[6]),
        .Q(data14[46]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  FDSE \mcp1_dec_c5_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord4[7]),
        .Q(data14[47]),
        .S(rxusrclk2_en156_reg_rep__10_6));
  LUT6 #(
    .INIT(64'h2000000000010000)) 
    \mcp1_dec_c6[0]_i_1 
       (.I0(Q[58]),
        .I1(Q[52]),
        .I2(Q[55]),
        .I3(Q[57]),
        .I4(\mcp1_dec_c6[0]_i_2_n_0 ),
        .I5(Q[56]),
        .O(DecodeWord5[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c6[0]_i_2 
       (.I0(Q[54]),
        .I1(Q[53]),
        .O(\mcp1_dec_c6[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h01004001)) 
    \mcp1_dec_c6[1]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I1(Q[53]),
        .I2(Q[54]),
        .I3(Q[55]),
        .I4(Q[57]),
        .O(DecodeWord5[1]));
  LUT6 #(
    .INIT(64'h0100800000800001)) 
    \mcp1_dec_c6[2]_i_1 
       (.I0(\mcp1_dec_c6[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c6[2]_i_3_n_0 ),
        .I2(Q[52]),
        .I3(\mcp1_dec_c6[2]_i_4_n_0 ),
        .I4(Q[54]),
        .I5(Q[53]),
        .O(\mcp1_dec_c6_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[2]_i_2 
       (.I0(Q[55]),
        .I1(Q[56]),
        .O(\mcp1_dec_c6[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[2]_i_3 
       (.I0(Q[58]),
        .I1(Q[57]),
        .O(\mcp1_dec_c6[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c6[2]_i_4 
       (.I0(Q[57]),
        .I1(Q[55]),
        .O(\mcp1_dec_c6[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c6[3]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(Q[57]),
        .I2(Q[58]),
        .I3(\mcp1_dec_c6[3]_i_2_n_0 ),
        .I4(Q[55]),
        .I5(Q[56]),
        .O(DecodeWord5[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c6[3]_i_2 
       (.I0(Q[53]),
        .I1(Q[54]),
        .I2(Q[52]),
        .O(\mcp1_dec_c6[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c6[4]_i_1 
       (.I0(\mcp1_dec_c6[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c6[4]_i_3_n_0 ),
        .I2(Q[53]),
        .I3(Q[54]),
        .I4(Q[55]),
        .I5(Q[57]),
        .O(DecodeWord5[4]));
  LUT6 #(
    .INIT(64'h0000000004102008)) 
    \mcp1_dec_c6[4]_i_2 
       (.I0(Q[54]),
        .I1(Q[56]),
        .I2(Q[55]),
        .I3(Q[57]),
        .I4(Q[53]),
        .I5(\mcp1_dec_c6[4]_i_4_n_0 ),
        .O(\mcp1_dec_c6[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c6[4]_i_3 
       (.I0(Q[56]),
        .I1(Q[55]),
        .I2(Q[58]),
        .I3(Q[57]),
        .I4(Q[52]),
        .O(\mcp1_dec_c6[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \mcp1_dec_c6[4]_i_4 
       (.I0(Q[52]),
        .I1(Q[57]),
        .I2(Q[58]),
        .O(\mcp1_dec_c6[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h2CC22002)) 
    \mcp1_dec_c6[5]_i_1 
       (.I0(\mcp1_dec_c6[5]_i_2_n_0 ),
        .I1(Q[52]),
        .I2(Q[57]),
        .I3(Q[58]),
        .I4(\mcp1_dec_c6[5]_i_3_n_0 ),
        .O(DecodeWord5[5]));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c6[5]_i_2 
       (.I0(Q[57]),
        .I1(Q[53]),
        .I2(Q[54]),
        .I3(Q[55]),
        .I4(Q[56]),
        .O(\mcp1_dec_c6[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h02000420)) 
    \mcp1_dec_c6[5]_i_3 
       (.I0(Q[53]),
        .I1(Q[54]),
        .I2(Q[55]),
        .I3(Q[56]),
        .I4(Q[57]),
        .O(\mcp1_dec_c6[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c6[6]_i_1 
       (.I0(\mcp1_dec_c6[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c6[6]_i_2_n_0 ),
        .I2(Q[57]),
        .I3(Q[52]),
        .I4(Q[58]),
        .O(DecodeWord5[6]));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c6[6]_i_2 
       (.I0(Q[55]),
        .I1(Q[56]),
        .I2(Q[53]),
        .I3(Q[54]),
        .O(\mcp1_dec_c6[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \mcp1_dec_c6[7]_i_2 
       (.I0(\mcp1_dec_c6[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c6[7]_i_4_n_0 ),
        .I2(Q[56]),
        .I3(\mcp1_dec_c6[7]_i_5_n_0 ),
        .I4(Q[54]),
        .I5(Q[53]),
        .O(DecodeWord5[7]));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c6[7]_i_3 
       (.I0(Q[57]),
        .I1(Q[55]),
        .I2(Q[54]),
        .I3(Q[53]),
        .I4(\mcp1_dec_c6[4]_i_3_n_0 ),
        .O(\mcp1_dec_c6[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c6[7]_i_4 
       (.I0(Q[58]),
        .I1(Q[52]),
        .O(\mcp1_dec_c6[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c6[7]_i_5 
       (.I0(Q[57]),
        .I1(Q[55]),
        .O(\mcp1_dec_c6[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c6_reg[0] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[0]),
        .Q(data14[48]),
        .R(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[1] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[1]),
        .Q(data14[49]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[2] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_dec_c6_reg[2]_0 ),
        .Q(data14[50]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[3] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[3]),
        .Q(data14[51]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[4] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[4]),
        .Q(data14[52]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[5] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[5]),
        .Q(data14[53]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[6] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[6]),
        .Q(data14[54]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  FDSE \mcp1_dec_c6_reg[7] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(DecodeWord5[7]),
        .Q(data14[55]),
        .S(rxusrclk2_en156_reg_rep__10_7));
  LUT6 #(
    .INIT(64'h2000000000010000)) 
    \mcp1_dec_c7[0]_i_1 
       (.I0(Q[65]),
        .I1(Q[59]),
        .I2(Q[64]),
        .I3(Q[62]),
        .I4(\mcp1_dec_c7[0]_i_2_n_0 ),
        .I5(Q[63]),
        .O(DecodeWord6[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c7[0]_i_2 
       (.I0(Q[61]),
        .I1(Q[60]),
        .O(\mcp1_dec_c7[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h01400001)) 
    \mcp1_dec_c7[1]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_3_n_0 ),
        .I1(Q[60]),
        .I2(Q[61]),
        .I3(Q[64]),
        .I4(Q[62]),
        .O(DecodeWord6[1]));
  LUT6 #(
    .INIT(64'h0100800000800001)) 
    \mcp1_dec_c7[2]_i_1 
       (.I0(\mcp1_dec_c7[2]_i_2_n_0 ),
        .I1(\mcp1_dec_c7[2]_i_3_n_0 ),
        .I2(Q[59]),
        .I3(\mcp1_dec_c7[2]_i_4_n_0 ),
        .I4(Q[61]),
        .I5(Q[60]),
        .O(D));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[2]_i_2 
       (.I0(Q[62]),
        .I1(Q[63]),
        .O(\mcp1_dec_c7[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[2]_i_3 
       (.I0(Q[64]),
        .I1(Q[65]),
        .O(\mcp1_dec_c7[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_dec_c7[2]_i_4 
       (.I0(Q[64]),
        .I1(Q[62]),
        .O(\mcp1_dec_c7[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABAAAAAAAAAAEAAA)) 
    \mcp1_dec_c7[3]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(Q[65]),
        .I2(Q[64]),
        .I3(\mcp1_dec_c7[3]_i_2_n_0 ),
        .I4(Q[63]),
        .I5(Q[62]),
        .O(DecodeWord6[3]));
  LUT3 #(
    .INIT(8'h08)) 
    \mcp1_dec_c7[3]_i_2 
       (.I0(Q[60]),
        .I1(Q[61]),
        .I2(Q[59]),
        .O(\mcp1_dec_c7[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAABBAAABAAAAAAA)) 
    \mcp1_dec_c7[4]_i_1 
       (.I0(\mcp1_dec_c7[4]_i_2_n_0 ),
        .I1(\mcp1_dec_c7[4]_i_3_n_0 ),
        .I2(Q[60]),
        .I3(Q[61]),
        .I4(Q[62]),
        .I5(Q[64]),
        .O(DecodeWord6[4]));
  LUT6 #(
    .INIT(64'h0000000004102008)) 
    \mcp1_dec_c7[4]_i_2 
       (.I0(Q[61]),
        .I1(Q[63]),
        .I2(Q[62]),
        .I3(Q[64]),
        .I4(Q[60]),
        .I5(\mcp1_dec_c7[4]_i_4_n_0 ),
        .O(\mcp1_dec_c7[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'hFFFF6FF6)) 
    \mcp1_dec_c7[4]_i_3 
       (.I0(Q[63]),
        .I1(Q[62]),
        .I2(Q[64]),
        .I3(Q[65]),
        .I4(Q[59]),
        .O(\mcp1_dec_c7[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \mcp1_dec_c7[4]_i_4 
       (.I0(Q[59]),
        .I1(Q[65]),
        .I2(Q[64]),
        .O(\mcp1_dec_c7[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h2CC22002)) 
    \mcp1_dec_c7[5]_i_1 
       (.I0(\mcp1_dec_c7[5]_i_2_n_0 ),
        .I1(Q[59]),
        .I2(Q[65]),
        .I3(Q[64]),
        .I4(\mcp1_dec_c7[5]_i_3_n_0 ),
        .O(DecodeWord6[5]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h42000000)) 
    \mcp1_dec_c7[5]_i_2 
       (.I0(Q[64]),
        .I1(Q[60]),
        .I2(Q[61]),
        .I3(Q[62]),
        .I4(Q[63]),
        .O(\mcp1_dec_c7[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h02000420)) 
    \mcp1_dec_c7[5]_i_3 
       (.I0(Q[60]),
        .I1(Q[61]),
        .I2(Q[62]),
        .I3(Q[63]),
        .I4(Q[64]),
        .O(\mcp1_dec_c7[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hABAAAAAA)) 
    \mcp1_dec_c7[6]_i_1 
       (.I0(\mcp1_dec_c7[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c7[6]_i_2_n_0 ),
        .I2(Q[64]),
        .I3(Q[59]),
        .I4(Q[65]),
        .O(DecodeWord6[6]));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_dec_c7[6]_i_2 
       (.I0(Q[62]),
        .I1(Q[63]),
        .I2(Q[60]),
        .I3(Q[61]),
        .O(\mcp1_dec_c7[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \mcp1_dec_c7[7]_i_2 
       (.I0(\mcp1_dec_c7[7]_i_3_n_0 ),
        .I1(\mcp1_dec_c7[7]_i_4_n_0 ),
        .I2(Q[63]),
        .I3(\mcp1_dec_c7[7]_i_5_n_0 ),
        .I4(Q[61]),
        .I5(Q[60]),
        .O(DecodeWord6[7]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00006008)) 
    \mcp1_dec_c7[7]_i_3 
       (.I0(Q[64]),
        .I1(Q[62]),
        .I2(Q[61]),
        .I3(Q[60]),
        .I4(\mcp1_dec_c7[4]_i_3_n_0 ),
        .O(\mcp1_dec_c7[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_dec_c7[7]_i_4 
       (.I0(Q[65]),
        .I1(Q[59]),
        .O(\mcp1_dec_c7[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_dec_c7[7]_i_5 
       (.I0(Q[64]),
        .I1(Q[62]),
        .O(\mcp1_dec_c7[7]_i_5_n_0 ));
  FDRE \mcp1_dec_c7_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(DecodeWord6[0]),
        .Q(data14[56]),
        .R(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[1]),
        .Q(data14[57]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(D),
        .Q(data14[58]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[3]),
        .Q(data14[59]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[4]),
        .Q(data14[60]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[5]),
        .Q(data14[61]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[6]),
        .Q(data14[62]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  FDSE \mcp1_dec_c7_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(DecodeWord6[7]),
        .Q(data14[63]),
        .S(rxusrclk2_en156_reg_rep__10_8));
  LUT6 #(
    .INIT(64'h00000000FF0CAAAA)) 
    \mcp1_r_type_next_reg[0]_i_1 
       (.I0(r_type_next[0]),
        .I1(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .I2(\mcp1_r_type_next_reg[0]_i_3_n_0 ),
        .I3(\mcp1_r_type_next_reg[0]_i_4_n_0 ),
        .I4(rxusrclk2_en156_reg_rep__11),
        .I5(rxreset_5_reg),
        .O(\mcp1_r_type_next_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \mcp1_r_type_next_reg[0]_i_10 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[8]),
        .I3(Q[7]),
        .I4(\mcp1_r_type_next_reg[0]_i_16_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \mcp1_r_type_next_reg[0]_i_11 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'hFBFFFFFF)) 
    \mcp1_r_type_next_reg[0]_i_12 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[9]),
        .I4(\mcp1_r_type_next_reg[0]_i_17_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    \mcp1_r_type_next_reg[0]_i_13 
       (.I0(Q[2]),
        .I1(Q[9]),
        .I2(Q[4]),
        .I3(Q[3]),
        .I4(\mcp1_r_type_next_reg[2]_i_28_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \mcp1_r_type_next_reg[0]_i_14 
       (.I0(\mcp1_r_type_next_reg[0]_i_16_n_0 ),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(Q[5]),
        .O(\mcp1_r_type_next_reg[0]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'hFBFFFFFF)) 
    \mcp1_r_type_next_reg[0]_i_15 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[9]),
        .I4(\mcp1_r_type_next_reg[0]_i_18_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \mcp1_r_type_next_reg[0]_i_16 
       (.I0(Q[9]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .O(\mcp1_r_type_next_reg[0]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \mcp1_r_type_next_reg[0]_i_17 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(\mcp1_r_type_next_reg[0]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \mcp1_r_type_next_reg[0]_i_18 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(Q[7]),
        .I3(Q[8]),
        .O(\mcp1_r_type_next_reg[0]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEFFAEAE)) 
    \mcp1_r_type_next_reg[0]_i_2 
       (.I0(\mcp1_r_type_next_reg[0]_i_5_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_6_n_0 ),
        .I2(\mcp1_r_type_next_reg[0]_i_7_n_0 ),
        .I3(\mcp1_r_type_next_reg[0]_i_8_n_0 ),
        .I4(\mcp1_dec_c4_reg[2]_0 ),
        .I5(\mcp1_r_type_next_reg[0]_i_9_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \mcp1_r_type_next_reg[0]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_r_type_next_reg[0]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\mcp1_r_type_next_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hABFFABABAAAAAAAA)) 
    \mcp1_r_type_next_reg[0]_i_5 
       (.I0(\mcp1_r_type_next_reg[0]_i_10_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_24_n_0 ),
        .I2(\mcp1_r_type_next_reg[0]_i_11_n_0 ),
        .I3(\mcp1_r_type_next_reg[0]_i_12_n_0 ),
        .I4(\mcp1_dec_c6_reg[2]_0 ),
        .I5(D),
        .O(\mcp1_r_type_next_reg[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'h000C2000)) 
    \mcp1_r_type_next_reg[0]_i_6 
       (.I0(\mcp1_dec_c4_reg[2]_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\mcp1_r_type_next_reg[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[0]_i_7 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h8AFF0000FFFFFFFF)) 
    \mcp1_r_type_next_reg[0]_i_8 
       (.I0(\mcp1_r_type_next_reg[0]_i_13_n_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_14_n_0 ),
        .I2(\mcp1_dec_c1_reg[2]_0 ),
        .I3(\mcp1_dec_c2_reg[2]_0 ),
        .I4(\mcp1_r_type_next_reg[0]_i_15_n_0 ),
        .I5(\mcp1_dec_c3_reg[2]_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \mcp1_r_type_next_reg[0]_i_9 
       (.I0(\mcp1_dec_c5_reg[2]_0 ),
        .I1(D),
        .I2(\mcp1_dec_c6_reg[2]_0 ),
        .O(\mcp1_r_type_next_reg[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF30AA)) 
    \mcp1_r_type_next_reg[1]_i_1 
       (.I0(r_type_next[1]),
        .I1(\mcp1_r_type_next_reg[0]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_2_n_0 ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(rxreset_5_reg),
        .O(\mcp1_r_type_next_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00F1FFFF00F10000)) 
    \mcp1_r_type_next_reg[2]_i_1 
       (.I0(\mcp1_r_type_next_reg[2]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_3_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_4_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_5_n_0 ),
        .I4(rxusrclk2_en156_reg_rep__10_0),
        .I5(r_type_next[2]),
        .O(\mcp1_r_type_next_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000500C000000)) 
    \mcp1_r_type_next_reg[2]_i_10 
       (.I0(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_14_n_0 ),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(Q[7]),
        .I5(Q[8]),
        .O(\mcp1_r_type_next_reg[2]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \mcp1_r_type_next_reg[2]_i_11 
       (.I0(Q[9]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(\mcp1_r_type_next_reg[2]_i_22_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_12 
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[6]),
        .I3(Q[5]),
        .O(\mcp1_r_type_next_reg[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \mcp1_r_type_next_reg[2]_i_13 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[9]),
        .O(\mcp1_r_type_next_reg[2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \mcp1_r_type_next_reg[2]_i_14 
       (.I0(\mcp1_dec_c2_reg[2]_0 ),
        .I1(\mcp1_dec_c3_reg[2]_0 ),
        .I2(\mcp1_dec_c1_reg[2]_0 ),
        .I3(\mcp1_dec_c0_reg[2]_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000A0300000A)) 
    \mcp1_r_type_next_reg[2]_i_15 
       (.I0(\mcp1_r_type_next_reg[2]_i_23_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_24_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_25_n_0 ),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \mcp1_r_type_next_reg[2]_i_16 
       (.I0(\mcp1_r_type_next_reg[2]_i_26_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_27_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_28_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_29_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_30_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_31_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \mcp1_r_type_next_reg[2]_i_17 
       (.I0(Q[22]),
        .I1(Q[20]),
        .I2(Q[21]),
        .I3(Q[17]),
        .I4(\mcp1_r_type_next_reg[2]_i_32_n_0 ),
        .I5(Q[23]),
        .O(\mcp1_r_type_next_reg[2]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mcp1_r_type_next_reg[2]_i_18 
       (.I0(Q[52]),
        .I1(\mcp1_r_type_next_reg[2]_i_33_n_0 ),
        .I2(Q[55]),
        .I3(Q[57]),
        .I4(Q[56]),
        .I5(Q[58]),
        .O(\mcp1_r_type_next_reg[2]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mcp1_r_type_next_reg[2]_i_19 
       (.I0(Q[38]),
        .I1(\mcp1_r_type_next_reg[2]_i_34_n_0 ),
        .I2(Q[41]),
        .I3(Q[42]),
        .I4(Q[43]),
        .I5(Q[44]),
        .O(\mcp1_r_type_next_reg[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hEAEEEAEEFFFFEAEE)) 
    \mcp1_r_type_next_reg[2]_i_2 
       (.I0(\mcp1_r_type_next_reg[0]_i_2_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_7_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_8_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_9_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_10_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_11_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mcp1_r_type_next_reg[2]_i_20 
       (.I0(Q[10]),
        .I1(\mcp1_r_type_next_reg[2]_i_35_n_0 ),
        .I2(Q[13]),
        .I3(Q[15]),
        .I4(Q[14]),
        .I5(Q[16]),
        .O(\mcp1_r_type_next_reg[2]_i_20_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_r_type_next_reg[2]_i_21 
       (.I0(Q[37]),
        .I1(Q[35]),
        .I2(Q[36]),
        .I3(Q[34]),
        .O(\mcp1_r_type_next_reg[2]_i_21_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_r_type_next_reg[2]_i_22 
       (.I0(Q[41]),
        .I1(Q[38]),
        .I2(Q[39]),
        .I3(Q[40]),
        .O(\mcp1_r_type_next_reg[2]_i_22_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_r_type_next_reg[2]_i_23 
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[5]),
        .I3(Q[6]),
        .O(\mcp1_r_type_next_reg[2]_i_23_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_24 
       (.I0(Q[7]),
        .I1(Q[8]),
        .I2(Q[5]),
        .I3(Q[6]),
        .O(\mcp1_r_type_next_reg[2]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[2]_i_25 
       (.I0(Q[2]),
        .I1(Q[9]),
        .O(\mcp1_r_type_next_reg[2]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mcp1_r_type_next_reg[2]_i_26 
       (.I0(Q[45]),
        .I1(\mcp1_r_type_next_reg[2]_i_36_n_0 ),
        .I2(Q[48]),
        .I3(Q[49]),
        .I4(Q[50]),
        .I5(Q[51]),
        .O(\mcp1_r_type_next_reg[2]_i_26_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_27 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[9]),
        .I3(Q[2]),
        .O(\mcp1_r_type_next_reg[2]_i_27_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \mcp1_r_type_next_reg[2]_i_28 
       (.I0(Q[5]),
        .I1(Q[6]),
        .I2(Q[7]),
        .I3(Q[8]),
        .O(\mcp1_r_type_next_reg[2]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \mcp1_r_type_next_reg[2]_i_29 
       (.I0(\mcp1_r_type_next_reg[2]_i_37_n_0 ),
        .I1(Q[31]),
        .I2(Q[34]),
        .I3(Q[35]),
        .I4(Q[37]),
        .I5(Q[36]),
        .O(\mcp1_r_type_next_reg[2]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_r_type_next_reg[2]_i_3 
       (.I0(\mcp1_r_type_next_reg[2]_i_12_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_13_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_14_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_15_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mcp1_r_type_next_reg[2]_i_30 
       (.I0(Q[24]),
        .I1(\mcp1_r_type_next_reg[2]_i_38_n_0 ),
        .I2(Q[27]),
        .I3(Q[29]),
        .I4(Q[28]),
        .I5(Q[30]),
        .O(\mcp1_r_type_next_reg[2]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mcp1_r_type_next_reg[2]_i_31 
       (.I0(Q[59]),
        .I1(\mcp1_r_type_next_reg[2]_i_39_n_0 ),
        .I2(Q[62]),
        .I3(Q[63]),
        .I4(Q[64]),
        .I5(Q[65]),
        .O(\mcp1_r_type_next_reg[2]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_32 
       (.I0(Q[19]),
        .I1(Q[18]),
        .O(\mcp1_r_type_next_reg[2]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_33 
       (.I0(Q[54]),
        .I1(Q[53]),
        .O(\mcp1_r_type_next_reg[2]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_34 
       (.I0(Q[40]),
        .I1(Q[39]),
        .O(\mcp1_r_type_next_reg[2]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_35 
       (.I0(Q[12]),
        .I1(Q[11]),
        .O(\mcp1_r_type_next_reg[2]_i_35_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_36 
       (.I0(Q[47]),
        .I1(Q[46]),
        .O(\mcp1_r_type_next_reg[2]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \mcp1_r_type_next_reg[2]_i_37 
       (.I0(Q[33]),
        .I1(Q[32]),
        .O(\mcp1_r_type_next_reg[2]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_38 
       (.I0(Q[26]),
        .I1(Q[25]),
        .O(\mcp1_r_type_next_reg[2]_i_38_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_r_type_next_reg[2]_i_39 
       (.I0(Q[61]),
        .I1(Q[60]),
        .O(\mcp1_r_type_next_reg[2]_i_39_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_r_type_next_reg[2]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\mcp1_r_type_next_reg[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \mcp1_r_type_next_reg[2]_i_5 
       (.I0(rxreset_5_reg),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\mcp1_r_type_next_reg[2]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_r_type_next_reg[2]_i_7 
       (.I0(\mcp1_dec_c4_reg[2]_0 ),
        .I1(\mcp1_r_type_next_reg[0]_i_9_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \mcp1_r_type_next_reg[2]_i_8 
       (.I0(\mcp1_r_type_next_reg[2]_i_14_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_16_n_0 ),
        .I2(\mcp1_r_type_next_reg[2]_i_17_n_0 ),
        .I3(\mcp1_r_type_next_reg[2]_i_18_n_0 ),
        .I4(\mcp1_r_type_next_reg[2]_i_19_n_0 ),
        .I5(\mcp1_r_type_next_reg[2]_i_20_n_0 ),
        .O(\mcp1_r_type_next_reg[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \mcp1_r_type_next_reg[2]_i_9 
       (.I0(\mcp1_r_type_next_reg[2]_i_21_n_0 ),
        .I1(\mcp1_r_type_next_reg[2]_i_13_n_0 ),
        .I2(Q[8]),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Q[5]),
        .O(\mcp1_r_type_next_reg[2]_i_9_n_0 ));
  FDRE \mcp1_r_type_next_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[0]_i_1_n_0 ),
        .Q(r_type_next[0]),
        .R(1'b0));
  FDRE \mcp1_r_type_next_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[1]_i_1_n_0 ),
        .Q(r_type_next[1]),
        .R(1'b0));
  FDRE \mcp1_r_type_next_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_r_type_next_reg[2]_i_1_n_0 ),
        .Q(r_type_next[2]),
        .R(1'b0));
  FDRE \mcp1_r_type_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(r_type_next[0]),
        .Q(r_type[0]),
        .R(rxreset_5_reg));
  FDSE \mcp1_r_type_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(r_type_next[1]),
        .Q(r_type[1]),
        .S(rxreset_5_reg));
  FDRE \mcp1_r_type_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(r_type_next[2]),
        .Q(r_type[2]),
        .R(rxreset_5_reg));
  LUT6 #(
    .INIT(64'hEE0EFFFFEE0E0000)) 
    \mcp1_rx_64_ctrl_out[0]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I3(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I4(rxusrclk2_en156_reg_rep__11),
        .I5(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .O(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FF7FDDFFDDF7FF7)) 
    \mcp1_rx_64_ctrl_out[0]_i_2 
       (.I0(mcp1_block_field_reg[7]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[0]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h7EDFE7BD)) 
    \mcp1_rx_64_ctrl_out[0]_i_3 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[1]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .O(mcp1_rx_64_ctrl_out[1]));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \mcp1_rx_64_ctrl_out[1]_i_2 
       (.I0(mcp1_block_field_reg[6]),
        .I1(mcp1_block_field_reg[2]),
        .I2(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ),
        .I3(\mcp1_rx_64_ctrl_out[1]_i_4_n_0 ),
        .I4(mcp1_block_field_reg[0]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_ctrl_out[1]_i_3 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_ctrl_out[1]_i_4 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002282880)) 
    \mcp1_rx_64_ctrl_out[2]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[6]),
        .O(mcp1_rx_64_ctrl_out[2]));
  LUT6 #(
    .INIT(64'h6808204040200868)) 
    \mcp1_rx_64_ctrl_out[2]_i_2 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[3]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ),
        .I5(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ),
        .O(mcp1_rx_64_ctrl_out[3]));
  LUT6 #(
    .INIT(64'h0000021001200000)) 
    \mcp1_rx_64_ctrl_out[3]_i_2 
       (.I0(mcp1_block_field_reg[3]),
        .I1(\mcp1_rx_64_ctrl_out[3]_i_6_n_0 ),
        .I2(mcp1_block_field_reg[2]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_ctrl_out[3]_i_3 
       (.I0(mcp1_block_field_reg[7]),
        .I1(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \mcp1_rx_64_ctrl_out[3]_i_4 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h10B00800)) 
    \mcp1_rx_64_ctrl_out[3]_i_5 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'hF9FF)) 
    \mcp1_rx_64_ctrl_out[3]_i_6 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_ctrl_out[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hA2FFA200)) 
    \mcp1_rx_64_ctrl_out[4]_i_1 
       (.I0(mcp1_rx_64_ctrl_out[4]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(rxusrclk2_en156_reg_rep__11),
        .I4(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .O(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBFEFFBBF)) 
    \mcp1_rx_64_ctrl_out[4]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[1]),
        .I5(\mcp1_rx_64_ctrl_out[4]_i_4_n_0 ),
        .O(mcp1_rx_64_ctrl_out[4]));
  LUT5 #(
    .INIT(32'h66FFAFFA)) 
    \mcp1_rx_64_ctrl_out[4]_i_3 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'h69FF)) 
    \mcp1_rx_64_ctrl_out[4]_i_4 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[0]),
        .I3(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_ctrl_out[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[5]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ),
        .O(mcp1_rx_64_ctrl_out[5]));
  LUT6 #(
    .INIT(64'hAABEAAAAAAAAAAAA)) 
    \mcp1_rx_64_ctrl_out[5]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[1]_i_2_n_0 ),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[5]),
        .I3(mcp1_block_field_reg[0]),
        .I4(mcp1_block_field_reg[7]),
        .I5(\mcp1_rx_64_ctrl_out[5]_i_4_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1310000800000000)) 
    \mcp1_rx_64_ctrl_out[5]_i_3 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[2]),
        .I3(mcp1_block_field_reg[6]),
        .I4(mcp1_block_field_reg[1]),
        .I5(\mcp1_rx_64_ctrl_out[6]_i_3_n_0 ),
        .O(\mcp1_rx_64_ctrl_out[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h02044020)) 
    \mcp1_rx_64_ctrl_out[5]_i_4 
       (.I0(mcp1_block_field_reg[1]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[5]),
        .I4(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_ctrl_out[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_rx_64_ctrl_out[6]_i_1 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ),
        .O(mcp1_rx_64_ctrl_out[6]));
  LUT6 #(
    .INIT(64'h0020002020200000)) 
    \mcp1_rx_64_ctrl_out[6]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[6]_i_3_n_0 ),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[6]),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_ctrl_out[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00444000)) 
    \mcp1_rx_64_ctrl_out[6]_i_3 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[0]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[6]),
        .I4(mcp1_block_field_reg[7]),
        .O(\mcp1_rx_64_ctrl_out[6]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hAEAA)) 
    \mcp1_rx_64_ctrl_out[7]_i_1 
       (.I0(rxreset_5_reg),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(rxusrclk2_en156_reg_rep__10),
        .O(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \mcp1_rx_64_ctrl_out[7]_i_2 
       (.I0(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[0]),
        .I3(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ),
        .O(mcp1_rx_64_ctrl_out[7]));
  LUT5 #(
    .INIT(32'hBAAAAABA)) 
    \mcp1_rx_64_ctrl_out[7]_i_3 
       (.I0(\mcp1_rx_64_ctrl_out[5]_i_2_n_0 ),
        .I1(\mcp1_rx_64_ctrl_out[7]_i_5_n_0 ),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[6]),
        .I4(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000240)) 
    \mcp1_rx_64_ctrl_out[7]_i_4 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[6]),
        .I3(mcp1_block_field_reg[7]),
        .I4(mcp1_block_field_reg[4]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFBFFFFF)) 
    \mcp1_rx_64_ctrl_out[7]_i_5 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[3]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[1]),
        .I4(mcp1_block_field_reg[0]),
        .I5(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_ctrl_out[7]_i_5_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[0]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_ctrl_out_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[1]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[2]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[3]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDSE \mcp1_rx_64_ctrl_out_reg[4] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\mcp1_rx_64_ctrl_out[4]_i_1_n_0 ),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_ctrl_out_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[5]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[6]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  FDRE \mcp1_rx_64_ctrl_out_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(mcp1_rx_64_ctrl_out[7]),
        .Q(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .R(\mcp1_rx_64_ctrl_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFB08FB08FB08)) 
    \mcp1_rx_64_data_out[0]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[2] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[0]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[0]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    \mcp1_rx_64_data_out[0]_i_2 
       (.I0(data14[8]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data10[0]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8FF0000B800F000)) 
    \mcp1_rx_64_data_out[0]_i_3 
       (.I0(data14[8]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[0]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[10]_i_1 
       (.I0(data14[10]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[10]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[10]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[10]_i_2 
       (.I0(\mcp1_rx_64_data_out[10]_i_4_n_0 ),
        .I1(data10[10]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[10]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[10]_i_3 
       (.I0(data10[10]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[18]),
        .O(\mcp1_rx_64_data_out[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[10]_i_4 
       (.I0(data14[18]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[10]),
        .O(\mcp1_rx_64_data_out[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[11]_i_1 
       (.I0(data14[11]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[11]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[11]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[11]_i_2 
       (.I0(\mcp1_rx_64_data_out[11]_i_4_n_0 ),
        .I1(data10[11]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[11]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[11]_i_3 
       (.I0(data10[11]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[19]),
        .O(\mcp1_rx_64_data_out[11]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[11]_i_4 
       (.I0(data14[19]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[11]),
        .O(\mcp1_rx_64_data_out[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[12]_i_1 
       (.I0(data14[12]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[12]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[12]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[12]_i_2 
       (.I0(\mcp1_rx_64_data_out[12]_i_4_n_0 ),
        .I1(data10[12]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[12]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[12]_i_3 
       (.I0(data10[12]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[20]),
        .O(\mcp1_rx_64_data_out[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[12]_i_4 
       (.I0(data14[20]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[12]),
        .O(\mcp1_rx_64_data_out[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[13]_i_1 
       (.I0(data14[13]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[13]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[13]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[13]_i_2 
       (.I0(\mcp1_rx_64_data_out[13]_i_4_n_0 ),
        .I1(data10[13]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[13]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[13]_i_3 
       (.I0(data10[13]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[21]),
        .O(\mcp1_rx_64_data_out[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[13]_i_4 
       (.I0(data14[21]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[13]),
        .O(\mcp1_rx_64_data_out[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[14]_i_1 
       (.I0(data14[14]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[14]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[14]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[14]_i_2 
       (.I0(\mcp1_rx_64_data_out[14]_i_4_n_0 ),
        .I1(data10[14]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[14]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[14]_i_3 
       (.I0(data10[14]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[22]),
        .O(\mcp1_rx_64_data_out[14]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[14]_i_4 
       (.I0(data14[22]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[14]),
        .O(\mcp1_rx_64_data_out[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[15]_i_1 
       (.I0(data14[15]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[15]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[15]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[15]_i_2 
       (.I0(\mcp1_rx_64_data_out[15]_i_4_n_0 ),
        .I1(data10[15]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[15]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[15]_i_3 
       (.I0(data10[15]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[23]),
        .O(\mcp1_rx_64_data_out[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[15]_i_4 
       (.I0(data14[23]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[15]),
        .O(\mcp1_rx_64_data_out[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[16]_i_1 
       (.I0(data14[16]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[16]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[16]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[16]_i_2 
       (.I0(\mcp1_rx_64_data_out[16]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[16]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[16]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[16]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[16]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[24]),
        .O(\mcp1_rx_64_data_out[16]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[16]_i_4 
       (.I0(data14[24]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[16]),
        .O(\mcp1_rx_64_data_out[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[17]_i_1 
       (.I0(data14[17]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[17]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[17]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[17]_i_2 
       (.I0(\mcp1_rx_64_data_out[17]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[17]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[17]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8CFF8C00)) 
    \mcp1_rx_64_data_out[17]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(data10[17]),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[25]),
        .O(\mcp1_rx_64_data_out[17]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[17]_i_4 
       (.I0(data14[25]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[17]),
        .O(\mcp1_rx_64_data_out[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[18]_i_1 
       (.I0(data14[18]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[18]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[18]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[18]_i_2 
       (.I0(\mcp1_rx_64_data_out[18]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[18]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[18]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[18]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[18]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[26]),
        .O(\mcp1_rx_64_data_out[18]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[18]_i_4 
       (.I0(data14[26]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[18]),
        .O(\mcp1_rx_64_data_out[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[19]_i_1 
       (.I0(data14[19]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[19]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[19]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[19]_i_2 
       (.I0(\mcp1_rx_64_data_out[19]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[19]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[19]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[19]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[19]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[27]),
        .O(\mcp1_rx_64_data_out[19]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[19]_i_4 
       (.I0(data14[27]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[19]),
        .O(\mcp1_rx_64_data_out[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFB08FB08FB08)) 
    \mcp1_rx_64_data_out[1]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[3] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[1]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out_reg[1]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022F0F0F0)) 
    \mcp1_rx_64_data_out[1]_i_2 
       (.I0(data10[1]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[9]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA3FFFFFFC)) 
    \mcp1_rx_64_data_out[1]_i_4 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(data13[32]),
        .I2(data13[34]),
        .I3(data13[33]),
        .I4(data13[35]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8F3B8C0)) 
    \mcp1_rx_64_data_out[1]_i_5 
       (.I0(data14[9]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data10[1]),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(data14__0),
        .O(\mcp1_rx_64_data_out[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[20]_i_1 
       (.I0(data14[20]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[20]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[20]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[20]_i_2 
       (.I0(\mcp1_rx_64_data_out[20]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[20]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[20]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[20]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[20]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[28]),
        .O(\mcp1_rx_64_data_out[20]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[20]_i_4 
       (.I0(data14[28]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[20]),
        .O(\mcp1_rx_64_data_out[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[21]_i_1 
       (.I0(data14[21]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[21]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[21]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[21]_i_2 
       (.I0(\mcp1_rx_64_data_out[21]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[21]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[21]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[21]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[21]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[29]),
        .O(\mcp1_rx_64_data_out[21]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[21]_i_4 
       (.I0(data14[29]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[21]),
        .O(\mcp1_rx_64_data_out[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[22]_i_1 
       (.I0(data14[22]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[22]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[22]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[22]_i_2 
       (.I0(\mcp1_rx_64_data_out[22]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[22]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[22]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[22]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[22]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[30]),
        .O(\mcp1_rx_64_data_out[22]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[22]_i_4 
       (.I0(data14[30]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[22]),
        .O(\mcp1_rx_64_data_out[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[23]_i_1 
       (.I0(data14[23]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[23]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[23]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h74777444C0F0C0F0)) 
    \mcp1_rx_64_data_out[23]_i_2 
       (.I0(\mcp1_rx_64_data_out[23]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[23]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data10[23]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4FFF400)) 
    \mcp1_rx_64_data_out[23]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data10[23]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[31]),
        .O(\mcp1_rx_64_data_out[23]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[23]_i_4 
       (.I0(data14[31]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[23]),
        .O(\mcp1_rx_64_data_out[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h08FB08FBFBFB0808)) 
    \mcp1_rx_64_data_out[24]_i_1 
       (.I0(data14[24]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[24]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[24]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA000A030AFF0AF3F)) 
    \mcp1_rx_64_data_out[24]_i_2 
       (.I0(\mcp1_rx_64_data_out[24]_i_4_n_0 ),
        .I1(data10[24]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(data14[24]),
        .O(\mcp1_rx_64_data_out[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \mcp1_rx_64_data_out[24]_i_3 
       (.I0(data10[24]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[32]),
        .O(\mcp1_rx_64_data_out[24]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'hD0DD)) 
    \mcp1_rx_64_data_out[24]_i_4 
       (.I0(data10[24]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data13[32]),
        .O(\mcp1_rx_64_data_out[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[25]_i_1 
       (.I0(data14[25]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[25]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[25]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44747777)) 
    \mcp1_rx_64_data_out[25]_i_2 
       (.I0(data10[25]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data13[33]),
        .O(\mcp1_rx_64_data_out[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[25]_i_3 
       (.I0(\mcp1_rx_64_data_out[25]_i_4_n_0 ),
        .I1(data10[25]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[25]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[25]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[25]_i_4 
       (.I0(data13[33]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[25]),
        .O(\mcp1_rx_64_data_out[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[26]_i_1 
       (.I0(data14[26]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[26]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[26]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[26]_i_2 
       (.I0(data10[26]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[34]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[26]_i_3 
       (.I0(\mcp1_rx_64_data_out[26]_i_4_n_0 ),
        .I1(data10[26]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[26]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[26]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[26]_i_4 
       (.I0(data13[34]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[26]),
        .O(\mcp1_rx_64_data_out[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[27]_i_1 
       (.I0(data14[27]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[27]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[27]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[27]_i_2 
       (.I0(data10[27]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[35]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[27]_i_3 
       (.I0(\mcp1_rx_64_data_out[27]_i_4_n_0 ),
        .I1(data10[27]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[27]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[27]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[27]_i_4 
       (.I0(data13[35]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[27]),
        .O(\mcp1_rx_64_data_out[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[28]_i_1 
       (.I0(data14[28]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[28]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[28]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[28]_i_2 
       (.I0(data10[28]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[36]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[28]_i_3 
       (.I0(\mcp1_rx_64_data_out[28]_i_4_n_0 ),
        .I1(data10[28]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[28]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[28]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[28]_i_4 
       (.I0(data13[36]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[28]),
        .O(\mcp1_rx_64_data_out[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[29]_i_1 
       (.I0(data14[29]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[29]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[29]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[29]_i_2 
       (.I0(data10[29]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[37]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[29]_i_3 
       (.I0(\mcp1_rx_64_data_out[29]_i_4_n_0 ),
        .I1(data10[29]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[29]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[29]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[29]_i_4 
       (.I0(data13[37]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[29]),
        .O(\mcp1_rx_64_data_out[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFB08FB08FB08)) 
    \mcp1_rx_64_data_out[2]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[4] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[2]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[2]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    \mcp1_rx_64_data_out[2]_i_2 
       (.I0(data14[10]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data10[2]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB800FFFFB8FFF0FF)) 
    \mcp1_rx_64_data_out[2]_i_3 
       (.I0(data14[10]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[2]),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[30]_i_1 
       (.I0(data14[30]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[30]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[30]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[30]_i_2 
       (.I0(data10[30]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[38]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[30]_i_3 
       (.I0(\mcp1_rx_64_data_out[30]_i_4_n_0 ),
        .I1(data10[30]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[30]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[30]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[30]_i_4 
       (.I0(data13[38]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[30]),
        .O(\mcp1_rx_64_data_out[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808FBFBFB08FB)) 
    \mcp1_rx_64_data_out[31]_i_1 
       (.I0(data14[31]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[31]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[31]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44774447)) 
    \mcp1_rx_64_data_out[31]_i_2 
       (.I0(data10[31]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[39]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA00FAFFFA030AF3F)) 
    \mcp1_rx_64_data_out[31]_i_3 
       (.I0(\mcp1_rx_64_data_out[31]_i_4_n_0 ),
        .I1(data10[31]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[31]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[31]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h47)) 
    \mcp1_rx_64_data_out[31]_i_4 
       (.I0(data13[39]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[31]),
        .O(\mcp1_rx_64_data_out[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[32]_i_1 
       (.I0(data13[32]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[32]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[32]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFA0FFA0F00C000C)) 
    \mcp1_rx_64_data_out[32]_i_2 
       (.I0(data13[40]),
        .I1(data14[32]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data13[32]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[32]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[32]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[32]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[40]),
        .O(\mcp1_rx_64_data_out[32]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0808FB08FBFBFB08)) 
    \mcp1_rx_64_data_out[33]_i_1 
       (.I0(data13[33]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[33]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[33]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAE04FE04)) 
    \mcp1_rx_64_data_out[33]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[41]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data14[33]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0407FFFF04070000)) 
    \mcp1_rx_64_data_out[33]_i_3 
       (.I0(data13[41]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data12),
        .I4(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[33]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h5F5F303F)) 
    \mcp1_rx_64_data_out[33]_i_4 
       (.I0(data13[33]),
        .I1(data12),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data14[33]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[33]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[34]_i_1 
       (.I0(data13[34]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[34]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[34]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000AFAFFF0FFCFC)) 
    \mcp1_rx_64_data_out[34]_i_2 
       (.I0(data13[42]),
        .I1(data14[34]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[34]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[34]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[34]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[34]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[42]),
        .O(\mcp1_rx_64_data_out[34]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[35]_i_1 
       (.I0(data13[35]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[35]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[35]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAFFF0FFCFC)) 
    \mcp1_rx_64_data_out[35]_i_2 
       (.I0(data13[43]),
        .I1(data14[35]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[35]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[35]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[35]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[35]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[43]),
        .O(\mcp1_rx_64_data_out[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[36]_i_1 
       (.I0(data13[36]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[36]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[36]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFAFAFFF0FFCFC)) 
    \mcp1_rx_64_data_out[36]_i_2 
       (.I0(data13[44]),
        .I1(data14[36]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[36]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[36]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[36]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[36]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[44]),
        .O(\mcp1_rx_64_data_out[36]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0808FB08FBFBFB08)) 
    \mcp1_rx_64_data_out[37]_i_1 
       (.I0(data13[37]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[37]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[37]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFE5404)) 
    \mcp1_rx_64_data_out[37]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[45]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data14[37]),
        .O(\mcp1_rx_64_data_out[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0407FFFF04070000)) 
    \mcp1_rx_64_data_out[37]_i_3 
       (.I0(data13[45]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data12),
        .I4(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[37]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_rx_64_data_out[37]_i_4 
       (.I0(data13[39]),
        .I1(data13[37]),
        .I2(data13[38]),
        .I3(data13[36]),
        .O(data12));
  LUT5 #(
    .INIT(32'h5F5F303F)) 
    \mcp1_rx_64_data_out[37]_i_5 
       (.I0(data13[37]),
        .I1(data12),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data14[37]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[37]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0808FB08FBFBFB08)) 
    \mcp1_rx_64_data_out[38]_i_1 
       (.I0(data13[38]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[38]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[38]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[38]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[38]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[46]),
        .O(\mcp1_rx_64_data_out[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCACACACACAC0CACA)) 
    \mcp1_rx_64_data_out[38]_i_3 
       (.I0(\mcp1_rx_64_data_out[38]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[38]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[38]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h337733773377337F)) 
    \mcp1_rx_64_data_out[38]_i_4 
       (.I0(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data13[36]),
        .I3(data13[38]),
        .I4(data13[37]),
        .I5(data13[39]),
        .O(\mcp1_rx_64_data_out[38]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT4 #(
    .INIT(16'h0704)) 
    \mcp1_rx_64_data_out[38]_i_5 
       (.I0(data13[46]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[38]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[38]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[38]_i_6 
       (.I0(data13[36]),
        .I1(data13[38]),
        .I2(data13[37]),
        .I3(data13[39]),
        .O(\mcp1_rx_64_data_out[38]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0808FB08FBFBFB08)) 
    \mcp1_rx_64_data_out[39]_i_1 
       (.I0(data13[39]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[39]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[39]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF4F5F4A0)) 
    \mcp1_rx_64_data_out[39]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(data14[39]),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data13[47]),
        .O(\mcp1_rx_64_data_out[39]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA8A8A8AA)) 
    \mcp1_rx_64_data_out[39]_i_3 
       (.I0(\mcp1_rx_64_data_out[39]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data14[39]),
        .O(\mcp1_rx_64_data_out[39]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0074337433F333F3)) 
    \mcp1_rx_64_data_out[39]_i_4 
       (.I0(data13[47]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[39]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data13[39]),
        .I5(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[39]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_rx_64_data_out[39]_i_5 
       (.I0(data13[36]),
        .I1(data13[38]),
        .I2(data13[37]),
        .I3(data13[39]),
        .O(\mcp1_rx_64_data_out[39]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFB08FB08FB08)) 
    \mcp1_rx_64_data_out[3]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[5] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[3]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[3]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    \mcp1_rx_64_data_out[3]_i_2 
       (.I0(data14[11]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data10[3]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0EAEFFFFFFFF)) 
    \mcp1_rx_64_data_out[3]_i_3 
       (.I0(data10[3]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(data14[11]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[40]_i_1 
       (.I0(data13[40]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[40]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[40]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[40]_i_2 
       (.I0(data13[48]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[40]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[40]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[40]_i_3 
       (.I0(data14[40]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[48]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[40]_i_4 
       (.I0(data14[40]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[40]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[41]_i_1 
       (.I0(data13[41]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[41]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[41]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[41]_i_2 
       (.I0(data13[49]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[41]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[41]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[41]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'hABA8A8A8)) 
    \mcp1_rx_64_data_out[41]_i_3 
       (.I0(data14[41]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(data13[49]),
        .O(\mcp1_rx_64_data_out[41]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[41]_i_4 
       (.I0(data14[41]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[41]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[42]_i_1 
       (.I0(data13[42]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[42]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[42]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[42]_i_2 
       (.I0(data13[50]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[42]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[42]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[42]_i_3 
       (.I0(data14[42]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[50]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[42]_i_4 
       (.I0(data14[42]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[42]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[43]_i_1 
       (.I0(data13[43]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[43]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[43]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[43]_i_2 
       (.I0(data13[51]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[43]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[43]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[43]_i_3 
       (.I0(data14[43]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[51]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[43]_i_4 
       (.I0(data14[43]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[43]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[44]_i_1 
       (.I0(data13[44]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[44]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[44]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[44]_i_2 
       (.I0(data13[52]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[44]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[44]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[44]_i_3 
       (.I0(data14[44]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[52]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[44]_i_4 
       (.I0(data14[44]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[44]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[45]_i_1 
       (.I0(data13[45]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[45]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[45]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[45]_i_2 
       (.I0(data13[53]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[45]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[45]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[45]_i_3 
       (.I0(data14[45]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[53]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[45]_i_4 
       (.I0(data14[45]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[45]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[46]_i_1 
       (.I0(data13[46]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[46]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[46]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[46]_i_2 
       (.I0(data13[54]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[46]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[46]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[46]_i_3 
       (.I0(data14[46]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[54]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[46]_i_4 
       (.I0(data14[46]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[46]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[47]_i_1 
       (.I0(data13[47]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[47]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[47]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[47]_i_2 
       (.I0(data13[55]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[47]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[47]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'hABA8ABAB)) 
    \mcp1_rx_64_data_out[47]_i_3 
       (.I0(data14[47]),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data13[55]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[47]_i_4 
       (.I0(data14[47]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[47]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[48]_i_1 
       (.I0(data13[48]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[48]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[48]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[48]_i_2 
       (.I0(data13[56]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[48]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[48]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[48]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[48]),
        .O(\mcp1_rx_64_data_out[48]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[48]_i_4 
       (.I0(data14[48]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[48]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[49]_i_1 
       (.I0(data13[49]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[49]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[49]_i_2 
       (.I0(data13[57]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[49]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[49]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'hE0F0)) 
    \mcp1_rx_64_data_out[49]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data14[49]),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[49]_i_4 
       (.I0(data14[49]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[49]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFBFBFB08FB08FB08)) 
    \mcp1_rx_64_data_out[4]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[6] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[4]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[4]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EAEAEA2A)) 
    \mcp1_rx_64_data_out[4]_i_2 
       (.I0(data14[12]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data10[4]),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEAE0EAEFFFFFFFF)) 
    \mcp1_rx_64_data_out[4]_i_3 
       (.I0(data10[4]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(data14[12]),
        .I5(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[50]_i_1 
       (.I0(data13[50]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[50]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[50]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[50]_i_2 
       (.I0(data13[58]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[50]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[50]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[50]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[50]),
        .O(\mcp1_rx_64_data_out[50]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[50]_i_4 
       (.I0(data14[50]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[50]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[51]_i_1 
       (.I0(data13[51]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[51]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[51]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[51]_i_2 
       (.I0(data13[59]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[51]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[51]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[51]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[51]),
        .O(\mcp1_rx_64_data_out[51]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[51]_i_4 
       (.I0(data14[51]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[51]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[52]_i_1 
       (.I0(data13[52]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[52]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[52]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[52]_i_2 
       (.I0(data13[60]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[52]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[52]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[52]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[52]),
        .O(\mcp1_rx_64_data_out[52]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[52]_i_4 
       (.I0(data14[52]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[52]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[53]_i_1 
       (.I0(data13[53]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[53]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[53]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[53]_i_2 
       (.I0(data13[61]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[53]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[53]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[53]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[53]),
        .O(\mcp1_rx_64_data_out[53]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[53]_i_4 
       (.I0(data14[53]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[53]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[54]_i_1 
       (.I0(data13[54]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[54]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[54]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[54]_i_2 
       (.I0(data13[62]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[54]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[54]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[54]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[54]),
        .O(\mcp1_rx_64_data_out[54]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[54]_i_4 
       (.I0(data14[54]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[54]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[55]_i_1 
       (.I0(data13[55]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[55]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_4_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBF80FF0FBF80F000)) 
    \mcp1_rx_64_data_out[55]_i_2 
       (.I0(data13[63]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(data13[55]),
        .I4(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I5(\mcp1_rx_64_data_out[55]_i_6_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEEFEFBFBFEFEFBF)) 
    \mcp1_rx_64_data_out[55]_i_3 
       (.I0(\mcp1_rx_64_data_out[55]_i_7_n_0 ),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[55]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \mcp1_rx_64_data_out[55]_i_4 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(data14[55]),
        .O(\mcp1_rx_64_data_out[55]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h8A20208A)) 
    \mcp1_rx_64_data_out[55]_i_5 
       (.I0(\mcp1_rx_64_data_out[63]_i_11_n_0 ),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[2]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[0]),
        .O(\mcp1_rx_64_data_out[55]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_rx_64_data_out[55]_i_6 
       (.I0(data14[55]),
        .I1(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[55]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEFFDFBEFFEBFDFF7)) 
    \mcp1_rx_64_data_out[55]_i_7 
       (.I0(mcp1_block_field_reg[0]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[2]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_data_out[55]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[56]_i_1 
       (.I0(data13[56]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[56]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCDEDFFFFCDE80000)) 
    \mcp1_rx_64_data_out[56]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[56]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[56]),
        .O(\mcp1_rx_64_data_out[56]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[57]_i_1 
       (.I0(data13[57]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[57]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC84DFFFFC8480000)) 
    \mcp1_rx_64_data_out[57]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[57]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[57]),
        .O(\mcp1_rx_64_data_out[57]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[58]_i_1 
       (.I0(data13[58]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[58]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[58]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[58]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[58]),
        .O(\mcp1_rx_64_data_out[58]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[59]_i_1 
       (.I0(data13[59]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[59]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[59]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[59]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[59]),
        .O(\mcp1_rx_64_data_out[59]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[5]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[7] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[5]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[5]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8BB88)) 
    \mcp1_rx_64_data_out[5]_i_2 
       (.I0(\mcp1_rx_64_data_out[5]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(data14__0),
        .I4(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFE000)) 
    \mcp1_rx_64_data_out[5]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(data10[5]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[13]),
        .O(\mcp1_rx_64_data_out[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8F3B8C0)) 
    \mcp1_rx_64_data_out[5]_i_4 
       (.I0(data14[13]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data10[5]),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(data14__0),
        .O(\mcp1_rx_64_data_out[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \mcp1_rx_64_data_out[5]_i_5 
       (.I0(data13[35]),
        .I1(data13[33]),
        .I2(data13[34]),
        .I3(data13[32]),
        .O(data14__0));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[60]_i_1 
       (.I0(data13[60]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[60]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[60]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[60]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[60]),
        .O(\mcp1_rx_64_data_out[60]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[61]_i_1 
       (.I0(data13[61]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[61]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[61]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[61]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[61]),
        .O(\mcp1_rx_64_data_out[61]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[62]_i_1 
       (.I0(data13[62]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[62]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[62]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[62]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[62]),
        .O(\mcp1_rx_64_data_out[62]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \mcp1_rx_64_data_out[63]_i_1 
       (.I0(data13[63]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[63]_i_2_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \mcp1_rx_64_data_out[63]_i_10 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[3]),
        .O(\mcp1_rx_64_data_out[63]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h00008641)) 
    \mcp1_rx_64_data_out[63]_i_11 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[4]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[2]),
        .I4(\mcp1_rx_64_data_out[63]_i_13_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'h68)) 
    \mcp1_rx_64_data_out[63]_i_12 
       (.I0(mcp1_block_field_reg[4]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[5]),
        .O(\mcp1_rx_64_data_out[63]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6F99FF99FFFFF)) 
    \mcp1_rx_64_data_out[63]_i_13 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[6]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[4]),
        .O(\mcp1_rx_64_data_out[63]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hC8EDFFFFC8E80000)) 
    \mcp1_rx_64_data_out[63]_i_2 
       (.I0(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I1(data13[63]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(data14[63]),
        .O(\mcp1_rx_64_data_out[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000040041554)) 
    \mcp1_rx_64_data_out[63]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_6_n_0 ),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[7]),
        .I3(mcp1_block_field_reg[4]),
        .I4(mcp1_block_field_reg[6]),
        .I5(\mcp1_rx_64_data_out[63]_i_7_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000208A208A0000)) 
    \mcp1_rx_64_data_out[63]_i_4 
       (.I0(\mcp1_rx_64_data_out[63]_i_8_n_0 ),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[4]),
        .I3(\mcp1_rx_64_data_out[63]_i_9_n_0 ),
        .I4(mcp1_block_field_reg[0]),
        .I5(\mcp1_rx_64_data_out[63]_i_10_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h4BB4FFFF)) 
    \mcp1_rx_64_data_out[63]_i_5 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[2]),
        .I2(mcp1_block_field_reg[3]),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_data_out[63]_i_11_n_0 ),
        .O(\mcp1_rx_64_data_out[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6FF36FF3F93F6FF3)) 
    \mcp1_rx_64_data_out[63]_i_6 
       (.I0(mcp1_block_field_reg[2]),
        .I1(mcp1_block_field_reg[1]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[3]),
        .I4(mcp1_block_field_reg[5]),
        .I5(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_data_out[63]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF609FA05FFFFF)) 
    \mcp1_rx_64_data_out[63]_i_7 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[5]),
        .I2(mcp1_block_field_reg[1]),
        .I3(mcp1_block_field_reg[0]),
        .I4(\mcp1_rx_64_data_out[63]_i_12_n_0 ),
        .I5(mcp1_block_field_reg[2]),
        .O(\mcp1_rx_64_data_out[63]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9000042004209000)) 
    \mcp1_rx_64_data_out[63]_i_8 
       (.I0(mcp1_block_field_reg[5]),
        .I1(mcp1_block_field_reg[7]),
        .I2(mcp1_block_field_reg[4]),
        .I3(mcp1_block_field_reg[2]),
        .I4(mcp1_block_field_reg[3]),
        .I5(mcp1_block_field_reg[1]),
        .O(\mcp1_rx_64_data_out[63]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_rx_64_data_out[63]_i_9 
       (.I0(mcp1_block_field_reg[3]),
        .I1(mcp1_block_field_reg[6]),
        .O(\mcp1_rx_64_data_out[63]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[6]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[8] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[6]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[6]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB888B8BB)) 
    \mcp1_rx_64_data_out[6]_i_2 
       (.I0(\mcp1_rx_64_data_out[6]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[6]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFE000)) 
    \mcp1_rx_64_data_out[6]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(data10[6]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[14]),
        .O(\mcp1_rx_64_data_out[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8C0B8F3)) 
    \mcp1_rx_64_data_out[6]_i_4 
       (.I0(data14[14]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data10[6]),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[6]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[6]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \mcp1_rx_64_data_out[6]_i_5 
       (.I0(data13[32]),
        .I1(data13[34]),
        .I2(data13[33]),
        .I3(data13[35]),
        .O(\mcp1_rx_64_data_out[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[7]_i_1 
       (.I0(\mcp1_rx_66_enc_reg_reg_n_0_[9] ),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[7]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[7]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'hB8BB)) 
    \mcp1_rx_64_data_out[7]_i_2 
       (.I0(\mcp1_rx_64_data_out[7]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFE000)) 
    \mcp1_rx_64_data_out[7]_i_3 
       (.I0(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I1(data10[7]),
        .I2(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[15]),
        .O(\mcp1_rx_64_data_out[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8C0B8F3)) 
    \mcp1_rx_64_data_out[7]_i_4 
       (.I0(data14[15]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(data10[7]),
        .I3(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I4(\mcp1_rx_64_data_out[7]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \mcp1_rx_64_data_out[7]_i_5 
       (.I0(data13[32]),
        .I1(data13[34]),
        .I2(data13[33]),
        .I3(data13[35]),
        .O(\mcp1_rx_64_data_out[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[8]_i_1 
       (.I0(data14[8]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[8]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[8]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[8]_i_2 
       (.I0(\mcp1_rx_64_data_out[8]_i_4_n_0 ),
        .I1(data10[8]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[8]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBFF8B00)) 
    \mcp1_rx_64_data_out[8]_i_3 
       (.I0(data10[8]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[16]),
        .O(\mcp1_rx_64_data_out[8]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[8]_i_4 
       (.I0(data14[16]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[8]),
        .O(\mcp1_rx_64_data_out[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FBFBFB080808)) 
    \mcp1_rx_64_data_out[9]_i_1 
       (.I0(data14[9]),
        .I1(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .I2(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .I3(\mcp1_rx_64_data_out[9]_i_2_n_0 ),
        .I4(\mcp1_rx_64_data_out[55]_i_3_n_0 ),
        .I5(\mcp1_rx_64_data_out[9]_i_3_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFF0A000AFCFA0C0)) 
    \mcp1_rx_64_data_out[9]_i_2 
       (.I0(\mcp1_rx_64_data_out[9]_i_4_n_0 ),
        .I1(data10[9]),
        .I2(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I4(data14[9]),
        .I5(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8FF8800)) 
    \mcp1_rx_64_data_out[9]_i_3 
       (.I0(data10[9]),
        .I1(\mcp1_rx_64_data_out[63]_i_4_n_0 ),
        .I2(\mcp1_rx_64_data_out[63]_i_5_n_0 ),
        .I3(\mcp1_rx_64_data_out[63]_i_3_n_0 ),
        .I4(data14[17]),
        .O(\mcp1_rx_64_data_out[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \mcp1_rx_64_data_out[9]_i_4 
       (.I0(data14[17]),
        .I1(\mcp1_rx_64_data_out[55]_i_5_n_0 ),
        .I2(data10[9]),
        .O(\mcp1_rx_64_data_out[9]_i_4_n_0 ));
  FDRE \mcp1_rx_64_data_out_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[0]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[0]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[10]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[10]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[11]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[11]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[12]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[12]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[13]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[13]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[14]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[14]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[15]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[15]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[16] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[16]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[16]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[17] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[17]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[17]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[18] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[18]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[18]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[19] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[19]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[19]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[1]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[1]),
        .R(rxreset_5_reg));
  MUXF7 \mcp1_rx_64_data_out_reg[1]_i_3 
       (.I0(\mcp1_rx_64_data_out[1]_i_4_n_0 ),
        .I1(\mcp1_rx_64_data_out[1]_i_5_n_0 ),
        .O(\mcp1_rx_64_data_out_reg[1]_i_3_n_0 ),
        .S(\mcp1_rx_64_data_out[63]_i_3_n_0 ));
  FDRE \mcp1_rx_64_data_out_reg[20] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[20]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[20]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[21] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[21]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[21]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[22] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[22]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[22]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[23] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[23]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[23]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[24] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[24]_i_1_n_0 ),
        .Q(\mcp1_rx_ebuff_data_reg[56] [0]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[25] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[25]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[25]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[26] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[26]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[26]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[27] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[27]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[27]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[28] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[28]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[28]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[29] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[29]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[29]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[2] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[2]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[2]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[30] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[30]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[30]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[31] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[31]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[31]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[32] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[32]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[32]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[33] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[33]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[33]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[34] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[34]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[34]),
        .S(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[35] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[35]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[35]),
        .S(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[36] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[36]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[36]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[37]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[37]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[38]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[38]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[39] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[39]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[39]),
        .S(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[3] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[3]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[3]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[40]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[40]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[41]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[41]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[42]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[42]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[43]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[43]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[44]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[44]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[45]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[45]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[46]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[46]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[47]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[47]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[48]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[48]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[49]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[49]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[4] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[4]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[4]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[50]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[50]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[51]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[51]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[52]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[52]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[53]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[53]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[54]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[54]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[55]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[55]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[56] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[56]_i_1_n_0 ),
        .Q(\mcp1_rx_ebuff_data_reg[56] [1]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[57]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[57]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[58] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[58]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[58]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[59] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[59]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[59]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[5]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[5]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[60] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[60]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[60]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[61] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[61]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[61]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[62] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[62]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[62]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[63] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[1]),
        .D(\mcp1_rx_64_data_out[63]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[63]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[6]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[6]),
        .R(rxreset_5_reg));
  FDSE \mcp1_rx_64_data_out_reg[7] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(\mcp1_rx_64_data_out[7]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[7]),
        .S(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[8]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[8]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_64_data_out_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__7[0]),
        .D(\mcp1_rx_64_data_out[9]_i_1_n_0 ),
        .Q(mcp1_rx_64_data_out[9]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[0]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[0] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[10]),
        .Q(data14[8]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[11]),
        .Q(data14[9]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[12]),
        .Q(data14[10]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[13]),
        .Q(data14[11]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[14]),
        .Q(data14[12]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[15]),
        .Q(data14[13]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[16]),
        .Q(data14[14]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[17]),
        .Q(data14[15]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[18]),
        .Q(data14[16]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[19]),
        .Q(data14[17]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[1]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[1] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[20]),
        .Q(data14[18]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[21]),
        .Q(data14[19]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[22]),
        .Q(data14[20]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[23]),
        .Q(data14[21]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[24]),
        .Q(data14[22]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[25]),
        .Q(data14[23]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[26]),
        .Q(data14[24]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[27]),
        .Q(data14[25]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[28]),
        .Q(data14[26]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[29]),
        .Q(data14[27]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[2]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[2] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[30]),
        .Q(data14[28]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[31]),
        .Q(data14[29]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[32]),
        .Q(data14[30]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[33]),
        .Q(data14[31]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[34]),
        .Q(data13[32]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[35]),
        .Q(data13[33]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[36]),
        .Q(data13[34]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[37]),
        .Q(data13[35]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[38]),
        .Q(data13[36]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[39]),
        .Q(data13[37]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[3]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[3] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[40]),
        .Q(data13[38]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[41]),
        .Q(data13[39]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[42]),
        .Q(data13[40]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[43]),
        .Q(data13[41]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[44]),
        .Q(data13[42]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[45]),
        .Q(data13[43]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[46]),
        .Q(data13[44]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[47]),
        .Q(data13[45]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[48]),
        .Q(data13[46]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[49]),
        .Q(data13[47]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[4]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[4] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[50]),
        .Q(data13[48]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[51]),
        .Q(data13[49]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[52]),
        .Q(data13[50]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[53]),
        .Q(data13[51]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[54]),
        .Q(data13[52]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[55]),
        .Q(data13[53]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[56]),
        .Q(data13[54]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[57]),
        .Q(data13[55]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[58]),
        .Q(data13[56]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[59]),
        .Q(data13[57]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[5]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[5] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[60]),
        .Q(data13[58]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[61]),
        .Q(data13[59]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[62]),
        .Q(data13[60]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[63]),
        .Q(data13[61]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[64]),
        .Q(data13[62]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(E[1]),
        .D(Q[65]),
        .Q(data13[63]),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[6]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[6] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[7]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[7] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[8]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[8] ),
        .R(rxreset_5_reg));
  FDRE \mcp1_rx_66_enc_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(E[0]),
        .D(Q[9]),
        .Q(\mcp1_rx_66_enc_reg_reg_n_0_[9] ),
        .R(rxreset_5_reg));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_ctrl[0]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(\mcp1_rx_64_ctrl_out_reg_n_0_[0] ),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [0]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[1]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[1] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [1]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[2]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[2] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [2]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[3]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[3] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [3]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_ctrl[4]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(\mcp1_rx_64_ctrl_out_reg_n_0_[4] ),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [4]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[5]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[5] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [5]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[6]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[6] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [6]));
  LUT6 #(
    .INIT(64'h0000000011101111)) 
    \mcp1_rx_ebuff_ctrl[7]_i_10 
       (.I0(out[1]),
        .I1(\FSM_sequential_mcp1_state_reg[0] ),
        .I2(r_type[1]),
        .I3(r_type[2]),
        .I4(r_type[0]),
        .I5(out[0]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_ctrl[7]_i_2 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(\mcp1_rx_64_ctrl_out_reg_n_0_[7] ),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_ctrl_reg[7] [7]));
  LUT6 #(
    .INIT(64'h0808080008080CFB)) 
    \mcp1_rx_ebuff_ctrl[7]_i_6 
       (.I0(\FSM_sequential_mcp1_state_reg[0] ),
        .I1(out[0]),
        .I2(out[1]),
        .I3(r_type[0]),
        .I4(r_type[2]),
        .I5(r_type[1]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044454444)) 
    \mcp1_rx_ebuff_ctrl[7]_i_7 
       (.I0(out[1]),
        .I1(\FSM_sequential_mcp1_state_reg[0] ),
        .I2(r_type[1]),
        .I3(r_type[2]),
        .I4(r_type[0]),
        .I5(out[0]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h080808000808FF08)) 
    \mcp1_rx_ebuff_ctrl[7]_i_8 
       (.I0(\FSM_sequential_mcp1_state_reg[0] ),
        .I1(out[0]),
        .I2(out[1]),
        .I3(r_type[1]),
        .I4(r_type[2]),
        .I5(r_type[0]),
        .O(\mcp1_rx_ebuff_data_reg[56]_0 ));
  LUT6 #(
    .INIT(64'hFF5FFF4FFF5F0010)) 
    \mcp1_rx_ebuff_ctrl[7]_i_9 
       (.I0(\FSM_sequential_mcp1_state_reg[0] ),
        .I1(r_type[1]),
        .I2(out[0]),
        .I3(out[1]),
        .I4(r_type[2]),
        .I5(r_type[0]),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ));
  MUXF7 \mcp1_rx_ebuff_ctrl_reg[7]_i_3 
       (.I0(\mcp1_rx_ebuff_ctrl[7]_i_6_n_0 ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_7_n_0 ),
        .O(next_state[0]),
        .S(out[2]));
  MUXF7 \mcp1_rx_ebuff_ctrl_reg[7]_i_5 
       (.I0(\mcp1_rx_ebuff_ctrl[7]_i_9_n_0 ),
        .I1(\mcp1_rx_ebuff_ctrl[7]_i_10_n_0 ),
        .O(next_state[1]),
        .S(out[2]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[0]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[0]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [0]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[10]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[10]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [10]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[11]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[11]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [11]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[12]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[12]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [12]));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[13]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[13]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [13]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[14]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[14]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [14]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[15]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[15]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [15]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[16]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[16]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [16]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[17]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[17]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [17]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[18]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[18]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [18]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[19]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[19]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [19]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[1]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[1]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [1]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[20]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[20]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [20]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[21]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[21]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [21]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[22]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[22]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [22]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[23]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[23]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [23]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[25]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[25]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [24]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[26]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[26]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [25]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[27]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[27]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [26]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[28]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[28]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [27]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[29]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[29]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [28]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[2]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[2]),
        .O(\mcp1_rx_ebuff_data_reg[63] [2]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[30]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[30]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [29]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[31]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[31]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [30]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[32]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[32]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [31]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[33]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[33]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [32]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[34]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[34]),
        .O(\mcp1_rx_ebuff_data_reg[63] [33]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[35]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[35]),
        .O(\mcp1_rx_ebuff_data_reg[63] [34]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[36]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[36]),
        .O(\mcp1_rx_ebuff_data_reg[63] [35]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[37]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[37]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [36]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[38]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[38]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [37]));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[39]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[39]),
        .O(\mcp1_rx_ebuff_data_reg[63] [38]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[3]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[3]),
        .O(\mcp1_rx_ebuff_data_reg[63] [3]));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[40]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[40]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [39]));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[41]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[41]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [40]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[42]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[42]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [41]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[43]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[43]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [42]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[44]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[44]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [43]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[45]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[45]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [44]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[46]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[46]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [45]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[47]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[47]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [46]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[48]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[48]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [47]));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[49]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[49]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [48]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[4]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[4]),
        .O(\mcp1_rx_ebuff_data_reg[63] [4]));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[50]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[50]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [49]));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[51]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[51]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [50]));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[52]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[52]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [51]));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[53]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[53]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [52]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[54]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[54]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [53]));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[55]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[55]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [54]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[57]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[57]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [55]));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[58]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[58]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [56]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[59]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[59]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [57]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[5]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[5]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [5]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[60]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[60]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [58]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[61]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[61]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [59]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[62]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[62]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [60]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[63]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[63]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [61]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[6]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[6]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [6]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hFFF1)) 
    \mcp1_rx_ebuff_data[7]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(next_state[1]),
        .I3(mcp1_rx_64_data_out[7]),
        .O(\mcp1_rx_ebuff_data_reg[63] [7]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'h00E0)) 
    \mcp1_rx_ebuff_data[8]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[8]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [8]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'h11E0)) 
    \mcp1_rx_ebuff_data[9]_i_1 
       (.I0(next_state[0]),
        .I1(\FSM_sequential_mcp1_state_reg[1]_0 ),
        .I2(mcp1_rx_64_data_out[9]),
        .I3(next_state[1]),
        .O(\mcp1_rx_ebuff_data_reg[63] [9]));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_pcs" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs
   (SR,
    d1_reg,
    gt_slip_int,
    ber_count_inc,
    d1_reg_0,
    err_block_count_inc,
    \mcp1_dec_c5_reg[2] ,
    D,
    \mcp1_dec_c6_reg[2] ,
    pcs_rx_link_up_core_reg_reg,
    comp_7,
    \mcp1_data_pipe_reg[63] ,
    comp_6,
    comp_5,
    comp_4,
    comp_3,
    comp_2,
    comp_7_0,
    comp_6_1,
    comp_5_2,
    comp_4_3,
    comp_3_4,
    comp_2_5,
    \mcp1_state_reg[1] ,
    \mcp1_dec_c4_reg[2] ,
    \mcp1_dec_c1_reg[2] ,
    \mcp1_dec_c2_reg[2] ,
    \mcp1_dec_c3_reg[2] ,
    \mcp1_dec_c0_reg[2] ,
    \mcp1_ctrl_pipe_reg[7] ,
    comp_8,
    comp_2_6,
    comp_1,
    comp_1_7,
    comp_0,
    comp_0_8,
    comp_8_9,
    comp_2_10,
    comp_1_11,
    comp_1_12,
    comp_0_13,
    comp_0_14,
    signal_detect,
    rxusrclk2,
    rxreset_local_reg,
    \mcp1_rx_66_raw_reg[65] ,
    rxusrclk2_en156_reg_rep__11,
    out,
    \outreg_reg[2] ,
    rxusrclk2_en156_reg_rep__10,
    mcp1_state,
    rxusrclk2_en156_reg_rep__2,
    rxusrclk2_en156_reg_rep__3,
    rxusrclk2_en156_reg_rep__10_0,
    E,
    rxusrclk2_en156_reg,
    rxusrclk2_en156_reg_rep__10_1,
    rxusrclk2_en156_reg_rep__4,
    rxusrclk2_en156_reg_rep__10_2,
    rxusrclk2_en156_reg_rep__10_3,
    rxusrclk2_en156_reg_rep__10_4,
    rxusrclk2_en156_reg_rep__10_5,
    rxusrclk2_en156_reg_rep__10_6,
    rxusrclk2_en156_reg_rep__10_7,
    rxusrclk2_en156_reg_rep__10_8,
    rxusrclk2_en156_reg_rep__7,
    rxusrclk2_en156_reg_rep__1);
  output [0:0]SR;
  output d1_reg;
  output gt_slip_int;
  output ber_count_inc;
  output d1_reg_0;
  output err_block_count_inc;
  output \mcp1_dec_c5_reg[2] ;
  output [0:0]D;
  output [0:0]\mcp1_dec_c6_reg[2] ;
  output pcs_rx_link_up_core_reg_reg;
  output comp_7;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  output comp_6;
  output comp_5;
  output comp_4;
  output comp_3;
  output comp_2;
  output comp_7_0;
  output comp_6_1;
  output comp_5_2;
  output comp_4_3;
  output comp_3_4;
  output comp_2_5;
  output \mcp1_state_reg[1] ;
  output [0:0]\mcp1_dec_c4_reg[2] ;
  output [0:0]\mcp1_dec_c1_reg[2] ;
  output [0:0]\mcp1_dec_c2_reg[2] ;
  output [0:0]\mcp1_dec_c3_reg[2] ;
  output \mcp1_dec_c0_reg[2] ;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output comp_8;
  output comp_2_6;
  output comp_1;
  output comp_1_7;
  output comp_0;
  output comp_0_8;
  output comp_8_9;
  output comp_2_10;
  output comp_1_11;
  output comp_1_12;
  output comp_0_13;
  output comp_0_14;
  input signal_detect;
  input rxusrclk2;
  input rxreset_local_reg;
  input [65:0]\mcp1_rx_66_raw_reg[65] ;
  input rxusrclk2_en156_reg_rep__11;
  input [15:0]out;
  input [2:0]\outreg_reg[2] ;
  input rxusrclk2_en156_reg_rep__10;
  input mcp1_state;
  input [1:0]rxusrclk2_en156_reg_rep__2;
  input [0:0]rxusrclk2_en156_reg_rep__3;
  input rxusrclk2_en156_reg_rep__10_0;
  input [1:0]E;
  input [1:0]rxusrclk2_en156_reg;
  input [0:0]rxusrclk2_en156_reg_rep__10_1;
  input [0:0]rxusrclk2_en156_reg_rep__4;
  input [0:0]rxusrclk2_en156_reg_rep__10_2;
  input [0:0]rxusrclk2_en156_reg_rep__10_3;
  input [0:0]rxusrclk2_en156_reg_rep__10_4;
  input [0:0]rxusrclk2_en156_reg_rep__10_5;
  input [0:0]rxusrclk2_en156_reg_rep__10_6;
  input [0:0]rxusrclk2_en156_reg_rep__10_7;
  input [0:0]rxusrclk2_en156_reg_rep__10_8;
  input [1:0]rxusrclk2_en156_reg_rep__7;
  input [0:0]rxusrclk2_en156_reg_rep__1;

  wire [0:0]D;
  wire [1:0]E;
  wire ber_count_inc;
  wire [7:0]block_field;
  wire comp_0;
  wire comp_0_13;
  wire comp_0_14;
  wire comp_0_8;
  wire comp_1;
  wire comp_1_11;
  wire comp_1_12;
  wire comp_1_7;
  wire comp_2;
  wire comp_2_10;
  wire comp_2_5;
  wire comp_2_6;
  wire comp_3;
  wire comp_3_4;
  wire comp_4;
  wire comp_4_3;
  wire comp_5;
  wire comp_5_2;
  wire comp_6;
  wire comp_6_1;
  wire comp_7;
  wire comp_7_0;
  wire comp_8;
  wire comp_8_9;
  wire d1_reg;
  wire d1_reg_0;
  wire err_block_count_inc;
  wire gt_slip_int;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire \mcp1_dec_c0_reg[2] ;
  wire [0:0]\mcp1_dec_c1_reg[2] ;
  wire [0:0]\mcp1_dec_c2_reg[2] ;
  wire [0:0]\mcp1_dec_c3_reg[2] ;
  wire [0:0]\mcp1_dec_c4_reg[2] ;
  wire \mcp1_dec_c5_reg[2] ;
  wire [0:0]\mcp1_dec_c6_reg[2] ;
  wire mcp1_err_block_count_inc_out1;
  wire mcp1_err_block_count_inc_out10_out;
  wire mcp1_ignore_next_mismatch;
  wire mcp1_ignore_next_mismatch_i_11_n_0;
  wire mcp1_ignore_next_mismatch_i_12_n_0;
  wire mcp1_ignore_next_mismatch_i_14_n_0;
  wire mcp1_ignore_next_mismatch_i_15_n_0;
  wire mcp1_ignore_next_mismatch_i_16_n_0;
  wire mcp1_ignore_next_mismatch_i_17_n_0;
  wire mcp1_ignore_next_mismatch_i_19_n_0;
  wire mcp1_ignore_next_mismatch_i_20_n_0;
  wire mcp1_ignore_next_mismatch_i_21_n_0;
  wire mcp1_ignore_next_mismatch_i_22_n_0;
  wire mcp1_ignore_next_mismatch_i_24_n_0;
  wire mcp1_ignore_next_mismatch_i_25_n_0;
  wire mcp1_ignore_next_mismatch_i_26_n_0;
  wire mcp1_ignore_next_mismatch_i_27_n_0;
  wire mcp1_ignore_next_mismatch_i_29_n_0;
  wire mcp1_ignore_next_mismatch_i_30_n_0;
  wire mcp1_ignore_next_mismatch_i_31_n_0;
  wire mcp1_ignore_next_mismatch_i_32_n_0;
  wire mcp1_ignore_next_mismatch_i_34_n_0;
  wire mcp1_ignore_next_mismatch_i_35_n_0;
  wire mcp1_ignore_next_mismatch_i_36_n_0;
  wire mcp1_ignore_next_mismatch_i_37_n_0;
  wire mcp1_ignore_next_mismatch_i_39_n_0;
  wire mcp1_ignore_next_mismatch_i_40_n_0;
  wire mcp1_ignore_next_mismatch_i_41_n_0;
  wire mcp1_ignore_next_mismatch_i_42_n_0;
  wire mcp1_ignore_next_mismatch_i_44_n_0;
  wire mcp1_ignore_next_mismatch_i_45_n_0;
  wire mcp1_ignore_next_mismatch_i_46_n_0;
  wire mcp1_ignore_next_mismatch_i_47_n_0;
  wire mcp1_ignore_next_mismatch_i_49_n_0;
  wire mcp1_ignore_next_mismatch_i_50_n_0;
  wire mcp1_ignore_next_mismatch_i_51_n_0;
  wire mcp1_ignore_next_mismatch_i_52_n_0;
  wire mcp1_ignore_next_mismatch_i_53_n_0;
  wire mcp1_ignore_next_mismatch_i_54_n_0;
  wire mcp1_ignore_next_mismatch_i_55_n_0;
  wire mcp1_ignore_next_mismatch_i_56_n_0;
  wire mcp1_ignore_next_mismatch_i_57_n_0;
  wire mcp1_ignore_next_mismatch_i_58_n_0;
  wire mcp1_ignore_next_mismatch_i_59_n_0;
  wire mcp1_ignore_next_mismatch_i_60_n_0;
  wire mcp1_ignore_next_mismatch_i_8_n_0;
  wire mcp1_ignore_next_mismatch_i_9_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_10_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_10_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_10_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_10_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_13_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_13_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_13_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_13_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_18_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_18_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_18_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_18_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_23_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_23_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_23_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_23_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_28_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_28_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_28_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_28_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_33_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_33_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_33_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_33_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_38_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_38_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_38_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_38_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_43_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_43_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_43_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_43_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_48_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_48_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_48_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_48_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_5_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_6_n_3;
  wire mcp1_ignore_next_mismatch_reg_i_7_n_0;
  wire mcp1_ignore_next_mismatch_reg_i_7_n_1;
  wire mcp1_ignore_next_mismatch_reg_i_7_n_2;
  wire mcp1_ignore_next_mismatch_reg_i_7_n_3;
  wire [56:24]mcp1_rx_64_data_out;
  wire [65:0]\mcp1_rx_66_raw_reg[65] ;
  wire mcp1_state;
  wire mcp1_state0;
  wire \mcp1_state_reg[1] ;
  wire [2:0]next_state;
  wire [15:0]out;
  wire [2:0]\outreg_reg[2] ;
  wire pcs_rx_link_up_core_reg_reg;
  wire [65:2]rx_66_enc;
  wire [65:0]rx_66_enc_reg;
  wire rx_block_lock_fsm_i_n_5;
  wire rx_block_lock_fsm_i_n_6;
  wire rx_block_lock_fsm_i_n_7;
  wire rx_decoder_i_n_82;
  wire rx_decoder_i_n_83;
  wire rx_decoder_i_n_84;
  wire rx_decoder_i_n_85;
  wire rx_decoder_i_n_86;
  wire rx_decoder_i_n_87;
  wire rx_decoder_i_n_88;
  wire [7:0]rx_ebuff_ctrl_t;
  wire [63:0]rx_ebuff_data_t;
  wire rx_pcs_fsm_i_n_0;
  wire rx_pcs_fsm_i_n_1;
  wire rx_pcs_fsm_i_n_2;
  wire rx_pcs_fsm_i_n_79;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_2;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire rxreset_3;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_4;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_5;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire rxreset_6;
  wire rxreset_local_reg;
  wire rxusrclk2;
  wire [1:0]rxusrclk2_en156_reg;
  wire [0:0]rxusrclk2_en156_reg_rep__1;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__10_0;
  wire [0:0]rxusrclk2_en156_reg_rep__10_1;
  wire [0:0]rxusrclk2_en156_reg_rep__10_2;
  wire [0:0]rxusrclk2_en156_reg_rep__10_3;
  wire [0:0]rxusrclk2_en156_reg_rep__10_4;
  wire [0:0]rxusrclk2_en156_reg_rep__10_5;
  wire [0:0]rxusrclk2_en156_reg_rep__10_6;
  wire [0:0]rxusrclk2_en156_reg_rep__10_7;
  wire [0:0]rxusrclk2_en156_reg_rep__10_8;
  wire rxusrclk2_en156_reg_rep__11;
  wire [1:0]rxusrclk2_en156_reg_rep__2;
  wire [0:0]rxusrclk2_en156_reg_rep__3;
  wire [0:0]rxusrclk2_en156_reg_rep__4;
  wire [1:0]rxusrclk2_en156_reg_rep__7;
  wire sh_valid;
  wire signal_detect;
  wire signal_ok_reg;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_10_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_13_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_18_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_23_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_28_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_33_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_38_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_43_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_48_O_UNCONNECTED;
  wire [3:2]NLW_mcp1_ignore_next_mismatch_reg_i_5_CO_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_5_O_UNCONNECTED;
  wire [3:2]NLW_mcp1_ignore_next_mismatch_reg_i_6_CO_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_6_O_UNCONNECTED;
  wire [3:0]NLW_mcp1_ignore_next_mismatch_reg_i_7_O_UNCONNECTED;

  assign SR[0] = rxreset_5;
  LUT1 #(
    .INIT(2'h1)) 
    mcp1_ignore_next_mismatch_i_11
       (.I0(rx_66_enc_reg[65]),
        .O(mcp1_ignore_next_mismatch_i_11_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_12
       (.I0(rx_66_enc_reg[62]),
        .I1(rx_66_enc_reg[63]),
        .I2(rx_66_enc_reg[64]),
        .O(mcp1_ignore_next_mismatch_i_12_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_14
       (.I0(rx_66_enc_reg[59]),
        .I1(rx_66_enc_reg[60]),
        .I2(rx_66_enc_reg[61]),
        .O(mcp1_ignore_next_mismatch_i_14_n_0));
  LUT5 #(
    .INIT(32'hE1000000)) 
    mcp1_ignore_next_mismatch_i_15
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(rx_66_enc_reg[58]),
        .I3(rx_66_enc_reg[56]),
        .I4(rx_66_enc_reg[57]),
        .O(mcp1_ignore_next_mismatch_i_15_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_16
       (.I0(rx_66_enc_reg[53]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[55]),
        .O(mcp1_ignore_next_mismatch_i_16_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_17
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[51]),
        .I2(rx_66_enc_reg[52]),
        .O(mcp1_ignore_next_mismatch_i_17_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_19
       (.I0(rx_66_enc_reg[59]),
        .I1(rx_66_enc_reg[60]),
        .I2(rx_66_enc_reg[61]),
        .O(mcp1_ignore_next_mismatch_i_19_n_0));
  LUT5 #(
    .INIT(32'h00011110)) 
    mcp1_ignore_next_mismatch_i_20
       (.I0(rx_66_enc_reg[56]),
        .I1(rx_66_enc_reg[57]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(rx_66_enc_reg[58]),
        .O(mcp1_ignore_next_mismatch_i_20_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_21
       (.I0(rx_66_enc_reg[53]),
        .I1(rx_66_enc_reg[54]),
        .I2(rx_66_enc_reg[55]),
        .O(mcp1_ignore_next_mismatch_i_21_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_22
       (.I0(rx_66_enc_reg[50]),
        .I1(rx_66_enc_reg[51]),
        .I2(rx_66_enc_reg[52]),
        .O(mcp1_ignore_next_mismatch_i_22_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_24
       (.I0(rx_66_enc_reg[47]),
        .I1(rx_66_enc_reg[48]),
        .I2(rx_66_enc_reg[49]),
        .O(mcp1_ignore_next_mismatch_i_24_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_25
       (.I0(rx_66_enc_reg[44]),
        .I1(rx_66_enc_reg[45]),
        .I2(rx_66_enc_reg[46]),
        .O(mcp1_ignore_next_mismatch_i_25_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_26
       (.I0(rx_66_enc_reg[41]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[43]),
        .O(mcp1_ignore_next_mismatch_i_26_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_27
       (.I0(rx_66_enc_reg[38]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[40]),
        .O(mcp1_ignore_next_mismatch_i_27_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_29
       (.I0(rx_66_enc_reg[47]),
        .I1(rx_66_enc_reg[48]),
        .I2(rx_66_enc_reg[49]),
        .O(mcp1_ignore_next_mismatch_i_29_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_30
       (.I0(rx_66_enc_reg[44]),
        .I1(rx_66_enc_reg[45]),
        .I2(rx_66_enc_reg[46]),
        .O(mcp1_ignore_next_mismatch_i_30_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_31
       (.I0(rx_66_enc_reg[41]),
        .I1(rx_66_enc_reg[42]),
        .I2(rx_66_enc_reg[43]),
        .O(mcp1_ignore_next_mismatch_i_31_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_32
       (.I0(rx_66_enc_reg[38]),
        .I1(rx_66_enc_reg[39]),
        .I2(rx_66_enc_reg[40]),
        .O(mcp1_ignore_next_mismatch_i_32_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_34
       (.I0(rx_66_enc_reg[35]),
        .I1(rx_66_enc_reg[36]),
        .I2(rx_66_enc_reg[37]),
        .O(mcp1_ignore_next_mismatch_i_34_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_35
       (.I0(rx_66_enc_reg[32]),
        .I1(rx_66_enc_reg[33]),
        .I2(rx_66_enc_reg[34]),
        .O(mcp1_ignore_next_mismatch_i_35_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_36
       (.I0(rx_66_enc_reg[29]),
        .I1(rx_66_enc_reg[30]),
        .I2(rx_66_enc_reg[31]),
        .O(mcp1_ignore_next_mismatch_i_36_n_0));
  LUT5 #(
    .INIT(32'h88800008)) 
    mcp1_ignore_next_mismatch_i_37
       (.I0(rx_66_enc_reg[27]),
        .I1(rx_66_enc_reg[28]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(rx_66_enc_reg[26]),
        .O(mcp1_ignore_next_mismatch_i_37_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_39
       (.I0(rx_66_enc_reg[35]),
        .I1(rx_66_enc_reg[36]),
        .I2(rx_66_enc_reg[37]),
        .O(mcp1_ignore_next_mismatch_i_39_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_40
       (.I0(rx_66_enc_reg[32]),
        .I1(rx_66_enc_reg[33]),
        .I2(rx_66_enc_reg[34]),
        .O(mcp1_ignore_next_mismatch_i_40_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_41
       (.I0(rx_66_enc_reg[29]),
        .I1(rx_66_enc_reg[30]),
        .I2(rx_66_enc_reg[31]),
        .O(mcp1_ignore_next_mismatch_i_41_n_0));
  LUT5 #(
    .INIT(32'h0000001E)) 
    mcp1_ignore_next_mismatch_i_42
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(rx_66_enc_reg[26]),
        .I3(rx_66_enc_reg[27]),
        .I4(rx_66_enc_reg[28]),
        .O(mcp1_ignore_next_mismatch_i_42_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_44
       (.I0(rx_66_enc_reg[23]),
        .I1(rx_66_enc_reg[24]),
        .I2(rx_66_enc_reg[25]),
        .O(mcp1_ignore_next_mismatch_i_44_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_45
       (.I0(rx_66_enc_reg[20]),
        .I1(rx_66_enc_reg[21]),
        .I2(rx_66_enc_reg[22]),
        .O(mcp1_ignore_next_mismatch_i_45_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_46
       (.I0(rx_66_enc_reg[17]),
        .I1(rx_66_enc_reg[18]),
        .I2(rx_66_enc_reg[19]),
        .O(mcp1_ignore_next_mismatch_i_46_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_47
       (.I0(rx_66_enc_reg[14]),
        .I1(rx_66_enc_reg[15]),
        .I2(rx_66_enc_reg[16]),
        .O(mcp1_ignore_next_mismatch_i_47_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_49
       (.I0(rx_66_enc_reg[23]),
        .I1(rx_66_enc_reg[24]),
        .I2(rx_66_enc_reg[25]),
        .O(mcp1_ignore_next_mismatch_i_49_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_50
       (.I0(rx_66_enc_reg[20]),
        .I1(rx_66_enc_reg[21]),
        .I2(rx_66_enc_reg[22]),
        .O(mcp1_ignore_next_mismatch_i_50_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_51
       (.I0(rx_66_enc_reg[17]),
        .I1(rx_66_enc_reg[18]),
        .I2(rx_66_enc_reg[19]),
        .O(mcp1_ignore_next_mismatch_i_51_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_52
       (.I0(rx_66_enc_reg[14]),
        .I1(rx_66_enc_reg[15]),
        .I2(rx_66_enc_reg[16]),
        .O(mcp1_ignore_next_mismatch_i_52_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_53
       (.I0(rx_66_enc_reg[11]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[13]),
        .O(mcp1_ignore_next_mismatch_i_53_n_0));
  LUT5 #(
    .INIT(32'hE1000000)) 
    mcp1_ignore_next_mismatch_i_54
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(block_field[6]),
        .I3(block_field[7]),
        .I4(rx_66_enc_reg[10]),
        .O(mcp1_ignore_next_mismatch_i_54_n_0));
  LUT5 #(
    .INIT(32'hE1000000)) 
    mcp1_ignore_next_mismatch_i_55
       (.I0(\outreg_reg[2] [0]),
        .I1(\outreg_reg[2] [1]),
        .I2(block_field[4]),
        .I3(block_field[3]),
        .I4(block_field[5]),
        .O(mcp1_ignore_next_mismatch_i_55_n_0));
  LUT5 #(
    .INIT(32'h88810000)) 
    mcp1_ignore_next_mismatch_i_56
       (.I0(block_field[2]),
        .I1(block_field[0]),
        .I2(\outreg_reg[2] [1]),
        .I3(\outreg_reg[2] [0]),
        .I4(block_field[1]),
        .O(mcp1_ignore_next_mismatch_i_56_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    mcp1_ignore_next_mismatch_i_57
       (.I0(rx_66_enc_reg[11]),
        .I1(rx_66_enc_reg[12]),
        .I2(rx_66_enc_reg[13]),
        .O(mcp1_ignore_next_mismatch_i_57_n_0));
  LUT5 #(
    .INIT(32'h00011110)) 
    mcp1_ignore_next_mismatch_i_58
       (.I0(block_field[7]),
        .I1(rx_66_enc_reg[10]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(block_field[6]),
        .O(mcp1_ignore_next_mismatch_i_58_n_0));
  LUT5 #(
    .INIT(32'h00011110)) 
    mcp1_ignore_next_mismatch_i_59
       (.I0(block_field[3]),
        .I1(block_field[5]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(block_field[4]),
        .O(mcp1_ignore_next_mismatch_i_59_n_0));
  LUT5 #(
    .INIT(32'h00021110)) 
    mcp1_ignore_next_mismatch_i_60
       (.I0(block_field[0]),
        .I1(block_field[1]),
        .I2(\outreg_reg[2] [0]),
        .I3(\outreg_reg[2] [1]),
        .I4(block_field[2]),
        .O(mcp1_ignore_next_mismatch_i_60_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    mcp1_ignore_next_mismatch_i_8
       (.I0(rx_66_enc_reg[65]),
        .O(mcp1_ignore_next_mismatch_i_8_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    mcp1_ignore_next_mismatch_i_9
       (.I0(rx_66_enc_reg[62]),
        .I1(rx_66_enc_reg[63]),
        .I2(rx_66_enc_reg[64]),
        .O(mcp1_ignore_next_mismatch_i_9_n_0));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_10
       (.CI(mcp1_ignore_next_mismatch_reg_i_18_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_10_n_0,mcp1_ignore_next_mismatch_reg_i_10_n_1,mcp1_ignore_next_mismatch_reg_i_10_n_2,mcp1_ignore_next_mismatch_reg_i_10_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_10_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_19_n_0,mcp1_ignore_next_mismatch_i_20_n_0,mcp1_ignore_next_mismatch_i_21_n_0,mcp1_ignore_next_mismatch_i_22_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_13
       (.CI(mcp1_ignore_next_mismatch_reg_i_23_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_13_n_0,mcp1_ignore_next_mismatch_reg_i_13_n_1,mcp1_ignore_next_mismatch_reg_i_13_n_2,mcp1_ignore_next_mismatch_reg_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_13_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_24_n_0,mcp1_ignore_next_mismatch_i_25_n_0,mcp1_ignore_next_mismatch_i_26_n_0,mcp1_ignore_next_mismatch_i_27_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_18
       (.CI(mcp1_ignore_next_mismatch_reg_i_28_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_18_n_0,mcp1_ignore_next_mismatch_reg_i_18_n_1,mcp1_ignore_next_mismatch_reg_i_18_n_2,mcp1_ignore_next_mismatch_reg_i_18_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_18_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_29_n_0,mcp1_ignore_next_mismatch_i_30_n_0,mcp1_ignore_next_mismatch_i_31_n_0,mcp1_ignore_next_mismatch_i_32_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_23
       (.CI(mcp1_ignore_next_mismatch_reg_i_33_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_23_n_0,mcp1_ignore_next_mismatch_reg_i_23_n_1,mcp1_ignore_next_mismatch_reg_i_23_n_2,mcp1_ignore_next_mismatch_reg_i_23_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_23_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_34_n_0,mcp1_ignore_next_mismatch_i_35_n_0,mcp1_ignore_next_mismatch_i_36_n_0,mcp1_ignore_next_mismatch_i_37_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_28
       (.CI(mcp1_ignore_next_mismatch_reg_i_38_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_28_n_0,mcp1_ignore_next_mismatch_reg_i_28_n_1,mcp1_ignore_next_mismatch_reg_i_28_n_2,mcp1_ignore_next_mismatch_reg_i_28_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_28_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_39_n_0,mcp1_ignore_next_mismatch_i_40_n_0,mcp1_ignore_next_mismatch_i_41_n_0,mcp1_ignore_next_mismatch_i_42_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_33
       (.CI(mcp1_ignore_next_mismatch_reg_i_43_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_33_n_0,mcp1_ignore_next_mismatch_reg_i_33_n_1,mcp1_ignore_next_mismatch_reg_i_33_n_2,mcp1_ignore_next_mismatch_reg_i_33_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_33_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_44_n_0,mcp1_ignore_next_mismatch_i_45_n_0,mcp1_ignore_next_mismatch_i_46_n_0,mcp1_ignore_next_mismatch_i_47_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_38
       (.CI(mcp1_ignore_next_mismatch_reg_i_48_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_38_n_0,mcp1_ignore_next_mismatch_reg_i_38_n_1,mcp1_ignore_next_mismatch_reg_i_38_n_2,mcp1_ignore_next_mismatch_reg_i_38_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_38_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_49_n_0,mcp1_ignore_next_mismatch_i_50_n_0,mcp1_ignore_next_mismatch_i_51_n_0,mcp1_ignore_next_mismatch_i_52_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_43
       (.CI(1'b0),
        .CO({mcp1_ignore_next_mismatch_reg_i_43_n_0,mcp1_ignore_next_mismatch_reg_i_43_n_1,mcp1_ignore_next_mismatch_reg_i_43_n_2,mcp1_ignore_next_mismatch_reg_i_43_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_43_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_53_n_0,mcp1_ignore_next_mismatch_i_54_n_0,mcp1_ignore_next_mismatch_i_55_n_0,mcp1_ignore_next_mismatch_i_56_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_48
       (.CI(1'b0),
        .CO({mcp1_ignore_next_mismatch_reg_i_48_n_0,mcp1_ignore_next_mismatch_reg_i_48_n_1,mcp1_ignore_next_mismatch_reg_i_48_n_2,mcp1_ignore_next_mismatch_reg_i_48_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_48_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_57_n_0,mcp1_ignore_next_mismatch_i_58_n_0,mcp1_ignore_next_mismatch_i_59_n_0,mcp1_ignore_next_mismatch_i_60_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_5
       (.CI(mcp1_ignore_next_mismatch_reg_i_7_n_0),
        .CO({NLW_mcp1_ignore_next_mismatch_reg_i_5_CO_UNCONNECTED[3:2],mcp1_err_block_count_inc_out1,mcp1_ignore_next_mismatch_reg_i_5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_5_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,mcp1_ignore_next_mismatch_i_8_n_0,mcp1_ignore_next_mismatch_i_9_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_6
       (.CI(mcp1_ignore_next_mismatch_reg_i_10_n_0),
        .CO({NLW_mcp1_ignore_next_mismatch_reg_i_6_CO_UNCONNECTED[3:2],mcp1_err_block_count_inc_out10_out,mcp1_ignore_next_mismatch_reg_i_6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_6_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,mcp1_ignore_next_mismatch_i_11_n_0,mcp1_ignore_next_mismatch_i_12_n_0}));
  CARRY4 mcp1_ignore_next_mismatch_reg_i_7
       (.CI(mcp1_ignore_next_mismatch_reg_i_13_n_0),
        .CO({mcp1_ignore_next_mismatch_reg_i_7_n_0,mcp1_ignore_next_mismatch_reg_i_7_n_1,mcp1_ignore_next_mismatch_reg_i_7_n_2,mcp1_ignore_next_mismatch_reg_i_7_n_3}),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(NLW_mcp1_ignore_next_mismatch_reg_i_7_O_UNCONNECTED[3:0]),
        .S({mcp1_ignore_next_mismatch_i_14_n_0,mcp1_ignore_next_mismatch_i_15_n_0,mcp1_ignore_next_mismatch_i_16_n_0,mcp1_ignore_next_mismatch_i_17_n_0}));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_descramble pcs_descramble_i
       (.SR(rxreset_4),
        .\mcp1_rx_66_raw_reg[65] (\mcp1_rx_66_raw_reg[65] [65:2]),
        .rx_66_enc(rx_66_enc[59:2]),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg(rxusrclk2_en156_reg));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[60]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [60]),
        .I1(\mcp1_rx_66_raw_reg[65] [21]),
        .I2(\mcp1_rx_66_raw_reg[65] [2]),
        .O(rx_66_enc[60]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[61]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [61]),
        .I1(\mcp1_rx_66_raw_reg[65] [22]),
        .I2(\mcp1_rx_66_raw_reg[65] [3]),
        .O(rx_66_enc[61]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[62]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [62]),
        .I1(\mcp1_rx_66_raw_reg[65] [23]),
        .I2(\mcp1_rx_66_raw_reg[65] [4]),
        .O(rx_66_enc[62]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[63]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [63]),
        .I1(\mcp1_rx_66_raw_reg[65] [24]),
        .I2(\mcp1_rx_66_raw_reg[65] [5]),
        .O(rx_66_enc[63]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[64]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [64]),
        .I1(\mcp1_rx_66_raw_reg[65] [25]),
        .I2(\mcp1_rx_66_raw_reg[65] [6]),
        .O(rx_66_enc[64]));
  LUT3 #(
    .INIT(8'h96)) 
    \rx_66_enc_reg[65]_i_1 
       (.I0(\mcp1_rx_66_raw_reg[65] [65]),
        .I1(\mcp1_rx_66_raw_reg[65] [26]),
        .I2(\mcp1_rx_66_raw_reg[65] [7]),
        .O(rx_66_enc[65]));
  FDRE \rx_66_enc_reg_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(\mcp1_rx_66_raw_reg[65] [0]),
        .Q(rx_66_enc_reg[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[10]),
        .Q(rx_66_enc_reg[10]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[11]),
        .Q(rx_66_enc_reg[11]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[12]),
        .Q(rx_66_enc_reg[12]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[13]),
        .Q(rx_66_enc_reg[13]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[14]),
        .Q(rx_66_enc_reg[14]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[15]),
        .Q(rx_66_enc_reg[15]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[16] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[16]),
        .Q(rx_66_enc_reg[16]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[17] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[17]),
        .Q(rx_66_enc_reg[17]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[18] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[18]),
        .Q(rx_66_enc_reg[18]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[19] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[19]),
        .Q(rx_66_enc_reg[19]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(\mcp1_rx_66_raw_reg[65] [1]),
        .Q(rx_66_enc_reg[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[20] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[20]),
        .Q(rx_66_enc_reg[20]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[21] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[21]),
        .Q(rx_66_enc_reg[21]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[22] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[22]),
        .Q(rx_66_enc_reg[22]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[23] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[23]),
        .Q(rx_66_enc_reg[23]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[24] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[24]),
        .Q(rx_66_enc_reg[24]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[25] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[25]),
        .Q(rx_66_enc_reg[25]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[26] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[26]),
        .Q(rx_66_enc_reg[26]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[27] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[27]),
        .Q(rx_66_enc_reg[27]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[28] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[28]),
        .Q(rx_66_enc_reg[28]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[29] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[29]),
        .Q(rx_66_enc_reg[29]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[2]),
        .Q(block_field[0]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[30] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[30]),
        .Q(rx_66_enc_reg[30]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[31] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[31]),
        .Q(rx_66_enc_reg[31]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[32] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[32]),
        .Q(rx_66_enc_reg[32]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[33] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[33]),
        .Q(rx_66_enc_reg[33]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[34] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[34]),
        .Q(rx_66_enc_reg[34]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[35] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[35]),
        .Q(rx_66_enc_reg[35]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[36] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[36]),
        .Q(rx_66_enc_reg[36]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[37]),
        .Q(rx_66_enc_reg[37]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[38]),
        .Q(rx_66_enc_reg[38]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[39] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[39]),
        .Q(rx_66_enc_reg[39]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[3]),
        .Q(block_field[1]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[40]),
        .Q(rx_66_enc_reg[40]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[41]),
        .Q(rx_66_enc_reg[41]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[42]),
        .Q(rx_66_enc_reg[42]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[43]),
        .Q(rx_66_enc_reg[43]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[44]),
        .Q(rx_66_enc_reg[44]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[45]),
        .Q(rx_66_enc_reg[45]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[46]),
        .Q(rx_66_enc_reg[46]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[47]),
        .Q(rx_66_enc_reg[47]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[48]),
        .Q(rx_66_enc_reg[48]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[49]),
        .Q(rx_66_enc_reg[49]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[4]),
        .Q(block_field[2]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[50]),
        .Q(rx_66_enc_reg[50]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[51]),
        .Q(rx_66_enc_reg[51]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[52]),
        .Q(rx_66_enc_reg[52]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[53]),
        .Q(rx_66_enc_reg[53]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[54]),
        .Q(rx_66_enc_reg[54]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[55]),
        .Q(rx_66_enc_reg[55]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[56] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[56]),
        .Q(rx_66_enc_reg[56]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[57]),
        .Q(rx_66_enc_reg[57]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[58] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[58]),
        .Q(rx_66_enc_reg[58]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[59] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[59]),
        .Q(rx_66_enc_reg[59]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[5]),
        .Q(block_field[3]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[60] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[60]),
        .Q(rx_66_enc_reg[60]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[61] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[61]),
        .Q(rx_66_enc_reg[61]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[62] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[62]),
        .Q(rx_66_enc_reg[62]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[63] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[63]),
        .Q(rx_66_enc_reg[63]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[64] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[64]),
        .Q(rx_66_enc_reg[64]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[65] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(rx_66_enc[65]),
        .Q(rx_66_enc_reg[65]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[6]),
        .Q(block_field[4]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[7]),
        .Q(block_field[5]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[8]),
        .Q(block_field[6]),
        .R(1'b0));
  FDRE \rx_66_enc_reg_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__3),
        .D(rx_66_enc[9]),
        .Q(block_field[7]),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_ber_mon_fsm rx_ber_mon_fsm_i
       (.ber_count_inc(ber_count_inc),
        .d1_reg(d1_reg_0),
        .\mcp1_rx_66_raw_reg[1] (\mcp1_rx_66_raw_reg[65] [1:0]),
        .out(out),
        .rxreset_2_reg(rxreset_2),
        .rxreset_2_reg_0(rx_block_lock_fsm_i_n_6),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__10(rxusrclk2_en156_reg_rep__10),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11),
        .sh_valid(sh_valid));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_block_lock_fsm rx_block_lock_fsm_i
       (.CO(mcp1_err_block_count_inc_out1),
        .\FSM_sequential_mcp1_state_reg[2] (rx_block_lock_fsm_i_n_5),
        .\FSM_sequential_mcp1_state_reg[2]_0 (rx_block_lock_fsm_i_n_6),
        .SR(mcp1_state0),
        .d1_reg(d1_reg),
        .gt_slip_int(gt_slip_int),
        .mcp1_err_block_count_inc_out_reg(rx_block_lock_fsm_i_n_7),
        .mcp1_hiber_reg(d1_reg_0),
        .mcp1_ignore_next_mismatch(mcp1_ignore_next_mismatch),
        .\mcp1_rx_66_raw_reg[1] (\mcp1_rx_66_raw_reg[65] [1:0]),
        .mcp1_state(mcp1_state),
        .\mcp1_state_reg[1]_0 (\mcp1_state_reg[1] ),
        .\outreg_reg[2] (\outreg_reg[2] [2]),
        .pcs_rx_link_up_core_reg_reg(pcs_rx_link_up_core_reg_reg),
        .\rx_66_enc_reg_reg[65] (mcp1_err_block_count_inc_out10_out),
        .rxreset_1_reg(rxreset_1),
        .rxreset_2_reg(rxreset_2),
        .rxreset_6_reg(rxreset_6),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__0(rxusrclk2_en156_reg_rep__2[0]),
        .rxusrclk2_en156_reg_rep__10(rxusrclk2_en156_reg_rep__10),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11),
        .sh_valid(sh_valid),
        .signal_ok_reg(signal_ok_reg));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_decoder rx_decoder_i
       (.D(D),
        .E(E),
        .\FSM_sequential_mcp1_state_reg[0] (rx_decoder_i_n_82),
        .\FSM_sequential_mcp1_state_reg[0]_0 (rx_decoder_i_n_84),
        .\FSM_sequential_mcp1_state_reg[0]_1 (rx_decoder_i_n_86),
        .\FSM_sequential_mcp1_state_reg[1] (rx_decoder_i_n_88),
        .\FSM_sequential_mcp1_state_reg[1]_0 (next_state[0]),
        .\FSM_sequential_mcp1_state_reg[2] (rx_decoder_i_n_85),
        .\FSM_sequential_mcp1_state_reg[2]_0 (rx_decoder_i_n_87),
        .Q({rx_66_enc_reg[65:10],block_field,rx_66_enc_reg[1:0]}),
        .\mcp1_dec_c0_reg[2]_0 (\mcp1_dec_c0_reg[2] ),
        .\mcp1_dec_c1_reg[2]_0 (\mcp1_dec_c1_reg[2] ),
        .\mcp1_dec_c2_reg[2]_0 (\mcp1_dec_c2_reg[2] ),
        .\mcp1_dec_c3_reg[2]_0 (\mcp1_dec_c3_reg[2] ),
        .\mcp1_dec_c4_reg[2]_0 (\mcp1_dec_c4_reg[2] ),
        .\mcp1_dec_c5_reg[2]_0 (\mcp1_dec_c5_reg[2] ),
        .\mcp1_dec_c6_reg[2]_0 (\mcp1_dec_c6_reg[2] ),
        .\mcp1_rx_ebuff_ctrl_reg[7] (rx_ebuff_ctrl_t),
        .\mcp1_rx_ebuff_data_reg[56] ({mcp1_rx_64_data_out[56],mcp1_rx_64_data_out[24]}),
        .\mcp1_rx_ebuff_data_reg[56]_0 (rx_decoder_i_n_83),
        .\mcp1_rx_ebuff_data_reg[63] ({rx_ebuff_data_t[63:57],rx_ebuff_data_t[55:25],rx_ebuff_data_t[23:0]}),
        .next_state(next_state[2:1]),
        .out({rx_pcs_fsm_i_n_0,rx_pcs_fsm_i_n_1,rx_pcs_fsm_i_n_2}),
        .rxreset_5_reg(rxreset_5),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg(rxusrclk2_en156_reg[1]),
        .rxusrclk2_en156_reg_rep__10(rxusrclk2_en156_reg_rep__10),
        .rxusrclk2_en156_reg_rep__10_0(rxusrclk2_en156_reg_rep__10_0),
        .rxusrclk2_en156_reg_rep__10_1(rxusrclk2_en156_reg_rep__10_1),
        .rxusrclk2_en156_reg_rep__10_2(rxusrclk2_en156_reg_rep__10_2),
        .rxusrclk2_en156_reg_rep__10_3(rxusrclk2_en156_reg_rep__10_3),
        .rxusrclk2_en156_reg_rep__10_4(rxusrclk2_en156_reg_rep__10_4),
        .rxusrclk2_en156_reg_rep__10_5(rxusrclk2_en156_reg_rep__10_5),
        .rxusrclk2_en156_reg_rep__10_6(rxusrclk2_en156_reg_rep__10_6),
        .rxusrclk2_en156_reg_rep__10_7(rxusrclk2_en156_reg_rep__10_7),
        .rxusrclk2_en156_reg_rep__10_8(rxusrclk2_en156_reg_rep__10_8),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11),
        .rxusrclk2_en156_reg_rep__2(rxusrclk2_en156_reg_rep__2),
        .rxusrclk2_en156_reg_rep__4(rxusrclk2_en156_reg_rep__4),
        .rxusrclk2_en156_reg_rep__7(rxusrclk2_en156_reg_rep__7));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_fsm rx_pcs_fsm_i
       (.CO(mcp1_err_block_count_inc_out1),
        .D(rx_ebuff_ctrl_t),
        .\FSM_sequential_mcp1_state_reg[0]_0 (rx_decoder_i_n_83),
        .comp_0(comp_0),
        .comp_0_13(comp_0_13),
        .comp_0_14(comp_0_14),
        .comp_0_8(comp_0_8),
        .comp_1(comp_1),
        .comp_1_11(comp_1_11),
        .comp_1_12(comp_1_12),
        .comp_1_7(comp_1_7),
        .comp_2(comp_2),
        .comp_2_10(comp_2_10),
        .comp_2_5(comp_2_5),
        .comp_2_6(comp_2_6),
        .comp_3(comp_3),
        .comp_3_4(comp_3_4),
        .comp_4(comp_4),
        .comp_4_3(comp_4_3),
        .comp_5(comp_5),
        .comp_5_2(comp_5_2),
        .comp_6(comp_6),
        .comp_6_1(comp_6_1),
        .comp_7(comp_7),
        .comp_7_0(comp_7_0),
        .comp_8(comp_8),
        .comp_8_9(comp_8_9),
        .mcp1_b_lock_reg(d1_reg),
        .mcp1_b_lock_reg_0(rx_block_lock_fsm_i_n_5),
        .\mcp1_ctrl_pipe_reg[7] (\mcp1_ctrl_pipe_reg[7] ),
        .\mcp1_data_pipe_reg[63] (\mcp1_data_pipe_reg[63] ),
        .mcp1_err_block_count_inc_out_reg(rx_pcs_fsm_i_n_79),
        .\mcp1_r_type_reg_reg[0] (rx_decoder_i_n_82),
        .\mcp1_r_type_reg_reg[1] (rx_decoder_i_n_87),
        .\mcp1_r_type_reg_reg[1]_0 (rx_decoder_i_n_85),
        .\mcp1_r_type_reg_reg[2] (rx_decoder_i_n_88),
        .\mcp1_r_type_reg_reg[2]_0 (rx_decoder_i_n_86),
        .\mcp1_r_type_reg_reg[2]_1 (rx_decoder_i_n_84),
        .\mcp1_rx_64_data_out_reg[56] ({mcp1_rx_64_data_out[56],mcp1_rx_64_data_out[24]}),
        .\mcp1_rx_64_data_out_reg[63] ({rx_ebuff_data_t[63:57],rx_ebuff_data_t[55:25],rx_ebuff_data_t[23:0]}),
        .\mcp1_rx_ebuff_data_reg[56]_0 (next_state[0]),
        .next_state(next_state[2:1]),
        .out({rx_pcs_fsm_i_n_0,rx_pcs_fsm_i_n_1,rx_pcs_fsm_i_n_2}),
        .\outreg_reg[2] (\outreg_reg[2] [2]),
        .\rx_66_enc_reg_reg[65] (mcp1_err_block_count_inc_out10_out),
        .rxreset_6_reg(rxreset_6),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg_rep__1(rxusrclk2_en156_reg_rep__1),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11),
        .rxusrclk2_en156_reg_rep__2(rxusrclk2_en156_reg_rep__2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_test rx_pcs_test_i
       (.SR(rxreset_3),
        .err_block_count_inc(err_block_count_inc),
        .mcp1_b_lock_reg(rx_pcs_fsm_i_n_79),
        .mcp1_b_lock_reg_0(rx_block_lock_fsm_i_n_7),
        .mcp1_ignore_next_mismatch(mcp1_ignore_next_mismatch),
        .rxusrclk2(rxusrclk2),
        .rxusrclk2_en156_reg(rxusrclk2_en156_reg[1]),
        .rxusrclk2_en156_reg_rep__10(rxusrclk2_en156_reg_rep__10),
        .rxusrclk2_en156_reg_rep__11(rxusrclk2_en156_reg_rep__11));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_2),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_3),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_4),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_5_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_5),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxreset_6_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxreset_local_reg),
        .Q(rxreset_6),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_29 synch_signal_ok
       (.SR(mcp1_state0),
        .rxreset_1_reg(rxreset_1),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .signal_ok_reg(signal_ok_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_fsm" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_fsm
   (out,
    comp_7,
    \mcp1_data_pipe_reg[63] ,
    comp_6,
    comp_5,
    comp_4,
    comp_3,
    comp_2,
    comp_7_0,
    comp_6_1,
    comp_5_2,
    comp_4_3,
    comp_3_4,
    comp_2_5,
    mcp1_err_block_count_inc_out_reg,
    \mcp1_rx_ebuff_data_reg[56]_0 ,
    \mcp1_ctrl_pipe_reg[7] ,
    comp_8,
    comp_2_6,
    comp_1,
    comp_1_7,
    comp_0,
    comp_0_8,
    comp_8_9,
    comp_2_10,
    comp_1_11,
    comp_1_12,
    comp_0_13,
    comp_0_14,
    CO,
    \rx_66_enc_reg_reg[65] ,
    mcp1_b_lock_reg,
    \outreg_reg[2] ,
    rxreset_6_reg,
    rxusrclk2_en156_reg_rep__11,
    \mcp1_r_type_reg_reg[0] ,
    \FSM_sequential_mcp1_state_reg[0]_0 ,
    rxusrclk2_en156_reg_rep__2,
    D,
    rxusrclk2,
    \mcp1_rx_64_data_out_reg[63] ,
    rxusrclk2_en156_reg_rep__1,
    \mcp1_rx_64_data_out_reg[56] ,
    next_state,
    \mcp1_r_type_reg_reg[1] ,
    \mcp1_r_type_reg_reg[1]_0 ,
    mcp1_b_lock_reg_0,
    \mcp1_r_type_reg_reg[2] ,
    \mcp1_r_type_reg_reg[2]_0 ,
    \mcp1_r_type_reg_reg[2]_1 );
  output [2:0]out;
  output comp_7;
  output [63:0]\mcp1_data_pipe_reg[63] ;
  output comp_6;
  output comp_5;
  output comp_4;
  output comp_3;
  output comp_2;
  output comp_7_0;
  output comp_6_1;
  output comp_5_2;
  output comp_4_3;
  output comp_3_4;
  output comp_2_5;
  output mcp1_err_block_count_inc_out_reg;
  output [0:0]\mcp1_rx_ebuff_data_reg[56]_0 ;
  output [7:0]\mcp1_ctrl_pipe_reg[7] ;
  output comp_8;
  output comp_2_6;
  output comp_1;
  output comp_1_7;
  output comp_0;
  output comp_0_8;
  output comp_8_9;
  output comp_2_10;
  output comp_1_11;
  output comp_1_12;
  output comp_0_13;
  output comp_0_14;
  input [0:0]CO;
  input [0:0]\rx_66_enc_reg_reg[65] ;
  input mcp1_b_lock_reg;
  input [0:0]\outreg_reg[2] ;
  input rxreset_6_reg;
  input rxusrclk2_en156_reg_rep__11;
  input \mcp1_r_type_reg_reg[0] ;
  input \FSM_sequential_mcp1_state_reg[0]_0 ;
  input [1:0]rxusrclk2_en156_reg_rep__2;
  input [7:0]D;
  input rxusrclk2;
  input [61:0]\mcp1_rx_64_data_out_reg[63] ;
  input [0:0]rxusrclk2_en156_reg_rep__1;
  input [1:0]\mcp1_rx_64_data_out_reg[56] ;
  input [1:0]next_state;
  input \mcp1_r_type_reg_reg[1] ;
  input \mcp1_r_type_reg_reg[1]_0 ;
  input mcp1_b_lock_reg_0;
  input \mcp1_r_type_reg_reg[2] ;
  input \mcp1_r_type_reg_reg[2]_0 ;
  input \mcp1_r_type_reg_reg[2]_1 ;

  wire [0:0]CO;
  wire [7:0]D;
  wire \FSM_sequential_mcp1_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state[1]_i_3_n_0 ;
  wire \FSM_sequential_mcp1_state[2]_i_1__0_n_0 ;
  wire \FSM_sequential_mcp1_state_reg[0]_0 ;
  wire comp_0;
  wire comp_0_13;
  wire comp_0_14;
  wire comp_0_8;
  wire comp_1;
  wire comp_1_11;
  wire comp_1_12;
  wire comp_1_7;
  wire comp_2;
  wire comp_2_10;
  wire comp_2_5;
  wire comp_2_6;
  wire comp_3;
  wire comp_3_4;
  wire comp_4;
  wire comp_4_3;
  wire comp_5;
  wire comp_5_2;
  wire comp_6;
  wire comp_6_1;
  wire comp_7;
  wire comp_7_0;
  wire comp_8;
  wire comp_8_9;
  wire mcp1_b_lock_reg;
  wire mcp1_b_lock_reg_0;
  wire [7:0]\mcp1_ctrl_pipe_reg[7] ;
  wire [63:0]\mcp1_data_pipe_reg[63] ;
  wire mcp1_err_block_count_inc_out_i_3_n_0;
  wire mcp1_err_block_count_inc_out_reg;
  wire \mcp1_r_type_reg_reg[0] ;
  wire \mcp1_r_type_reg_reg[1] ;
  wire \mcp1_r_type_reg_reg[1]_0 ;
  wire \mcp1_r_type_reg_reg[2] ;
  wire \mcp1_r_type_reg_reg[2]_0 ;
  wire \mcp1_r_type_reg_reg[2]_1 ;
  wire [1:0]\mcp1_rx_64_data_out_reg[56] ;
  wire [61:0]\mcp1_rx_64_data_out_reg[63] ;
  wire \mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ;
  wire [0:0]\mcp1_rx_ebuff_data_reg[56]_0 ;
  wire [1:0]next_state;
  (* RTL_KEEP = "yes" *) wire [2:0]out;
  wire [0:0]\outreg_reg[2] ;
  wire [0:0]\rx_66_enc_reg_reg[65] ;
  wire [56:24]rx_ebuff_data_t;
  wire rxreset_6_reg;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg_rep__1;
  wire rxusrclk2_en156_reg_rep__11;
  wire [1:0]rxusrclk2_en156_reg_rep__2;

  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \FSM_sequential_mcp1_state[0]_i_1__0 
       (.I0(out[0]),
        .I1(rxusrclk2_en156_reg_rep__11),
        .I2(\mcp1_r_type_reg_reg[2]_0 ),
        .I3(out[2]),
        .I4(\mcp1_r_type_reg_reg[2]_1 ),
        .I5(mcp1_b_lock_reg_0),
        .O(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \FSM_sequential_mcp1_state[1]_i_1__0 
       (.I0(out[1]),
        .I1(rxusrclk2_en156_reg_rep__11),
        .I2(\mcp1_r_type_reg_reg[2] ),
        .I3(out[2]),
        .I4(\FSM_sequential_mcp1_state[1]_i_3_n_0 ),
        .I5(mcp1_b_lock_reg_0),
        .O(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \FSM_sequential_mcp1_state[1]_i_3 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(\mcp1_r_type_reg_reg[0] ),
        .O(\FSM_sequential_mcp1_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEE222E2)) 
    \FSM_sequential_mcp1_state[2]_i_1__0 
       (.I0(out[2]),
        .I1(rxusrclk2_en156_reg_rep__11),
        .I2(\mcp1_r_type_reg_reg[1] ),
        .I3(out[2]),
        .I4(\mcp1_r_type_reg_reg[1]_0 ),
        .I5(mcp1_b_lock_reg_0),
        .O(\FSM_sequential_mcp1_state[2]_i_1__0_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[0] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[0]_i_1__0_n_0 ),
        .Q(out[0]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[1] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[1]_i_1__0_n_0 ),
        .Q(out[1]),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_mcp1_state_reg[2] 
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(\FSM_sequential_mcp1_state[2]_i_1__0_n_0 ),
        .Q(out[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h800080008FFF8000)) 
    mcp1_err_block_count_inc_out_i_2
       (.I0(CO),
        .I1(\rx_66_enc_reg_reg[65] ),
        .I2(mcp1_b_lock_reg),
        .I3(\outreg_reg[2] ),
        .I4(mcp1_err_block_count_inc_out_i_3_n_0),
        .I5(out[2]),
        .O(mcp1_err_block_count_inc_out_reg));
  LUT2 #(
    .INIT(4'h2)) 
    mcp1_err_block_count_inc_out_i_3
       (.I0(out[0]),
        .I1(out[1]),
        .O(mcp1_err_block_count_inc_out_i_3_n_0));
  LUT5 #(
    .INIT(32'hAAABAAAA)) 
    \mcp1_rx_ebuff_ctrl[7]_i_1 
       (.I0(rxreset_6_reg),
        .I1(out[0]),
        .I2(out[1]),
        .I3(out[2]),
        .I4(rxusrclk2_en156_reg_rep__11),
        .O(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \mcp1_rx_ebuff_ctrl[7]_i_4 
       (.I0(out[1]),
        .I1(\mcp1_r_type_reg_reg[0] ),
        .I2(out[0]),
        .I3(out[2]),
        .I4(\FSM_sequential_mcp1_state_reg[0]_0 ),
        .O(\mcp1_rx_ebuff_data_reg[56]_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(D[0]),
        .Q(\mcp1_ctrl_pipe_reg[7] [0]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[1]),
        .Q(\mcp1_ctrl_pipe_reg[7] [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[2]),
        .Q(\mcp1_ctrl_pipe_reg[7] [2]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[3]),
        .Q(\mcp1_ctrl_pipe_reg[7] [3]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(D[4]),
        .Q(\mcp1_ctrl_pipe_reg[7] [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[5]),
        .Q(\mcp1_ctrl_pipe_reg[7] [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[6]),
        .Q(\mcp1_ctrl_pipe_reg[7] [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_ctrl_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[1]),
        .D(D[7]),
        .Q(\mcp1_ctrl_pipe_reg[7] [7]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'hEEE3)) 
    \mcp1_rx_ebuff_data[24]_i_1 
       (.I0(\mcp1_rx_64_data_out_reg[56] [0]),
        .I1(next_state[1]),
        .I2(next_state[0]),
        .I3(\mcp1_rx_ebuff_data_reg[56]_0 ),
        .O(rx_ebuff_data_t[24]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'hEEE3)) 
    \mcp1_rx_ebuff_data[56]_i_1 
       (.I0(\mcp1_rx_64_data_out_reg[56] [1]),
        .I1(next_state[1]),
        .I2(next_state[0]),
        .I3(\mcp1_rx_ebuff_data_reg[56]_0 ),
        .O(rx_ebuff_data_t[56]));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [0]),
        .Q(\mcp1_data_pipe_reg[63] [0]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[10] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [10]),
        .Q(\mcp1_data_pipe_reg[63] [10]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[11] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [11]),
        .Q(\mcp1_data_pipe_reg[63] [11]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[12] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [12]),
        .Q(\mcp1_data_pipe_reg[63] [12]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[13] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [13]),
        .Q(\mcp1_data_pipe_reg[63] [13]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[14] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [14]),
        .Q(\mcp1_data_pipe_reg[63] [14]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[15] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [15]),
        .Q(\mcp1_data_pipe_reg[63] [15]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[16] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [16]),
        .Q(\mcp1_data_pipe_reg[63] [16]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[17] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [17]),
        .Q(\mcp1_data_pipe_reg[63] [17]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[18] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [18]),
        .Q(\mcp1_data_pipe_reg[63] [18]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[19] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [19]),
        .Q(\mcp1_data_pipe_reg[63] [19]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [1]),
        .Q(\mcp1_data_pipe_reg[63] [1]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[20] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [20]),
        .Q(\mcp1_data_pipe_reg[63] [20]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[21] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [21]),
        .Q(\mcp1_data_pipe_reg[63] [21]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[22] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [22]),
        .Q(\mcp1_data_pipe_reg[63] [22]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[23] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [23]),
        .Q(\mcp1_data_pipe_reg[63] [23]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[24] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(rx_ebuff_data_t[24]),
        .Q(\mcp1_data_pipe_reg[63] [24]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[25] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [24]),
        .Q(\mcp1_data_pipe_reg[63] [25]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[26] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [25]),
        .Q(\mcp1_data_pipe_reg[63] [26]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[27] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [26]),
        .Q(\mcp1_data_pipe_reg[63] [27]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[28] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [27]),
        .Q(\mcp1_data_pipe_reg[63] [28]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[29] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [28]),
        .Q(\mcp1_data_pipe_reg[63] [29]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [2]),
        .Q(\mcp1_data_pipe_reg[63] [2]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[30] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [29]),
        .Q(\mcp1_data_pipe_reg[63] [30]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[31] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [30]),
        .Q(\mcp1_data_pipe_reg[63] [31]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[32] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [31]),
        .Q(\mcp1_data_pipe_reg[63] [32]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[33] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [32]),
        .Q(\mcp1_data_pipe_reg[63] [33]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[34] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [33]),
        .Q(\mcp1_data_pipe_reg[63] [34]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[35] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [34]),
        .Q(\mcp1_data_pipe_reg[63] [35]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[36] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [35]),
        .Q(\mcp1_data_pipe_reg[63] [36]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [36]),
        .Q(\mcp1_data_pipe_reg[63] [37]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [37]),
        .Q(\mcp1_data_pipe_reg[63] [38]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[39] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [38]),
        .Q(\mcp1_data_pipe_reg[63] [39]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [3]),
        .Q(\mcp1_data_pipe_reg[63] [3]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [39]),
        .Q(\mcp1_data_pipe_reg[63] [40]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [40]),
        .Q(\mcp1_data_pipe_reg[63] [41]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [41]),
        .Q(\mcp1_data_pipe_reg[63] [42]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [42]),
        .Q(\mcp1_data_pipe_reg[63] [43]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [43]),
        .Q(\mcp1_data_pipe_reg[63] [44]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [44]),
        .Q(\mcp1_data_pipe_reg[63] [45]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [45]),
        .Q(\mcp1_data_pipe_reg[63] [46]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [46]),
        .Q(\mcp1_data_pipe_reg[63] [47]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [47]),
        .Q(\mcp1_data_pipe_reg[63] [48]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [48]),
        .Q(\mcp1_data_pipe_reg[63] [49]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [4]),
        .Q(\mcp1_data_pipe_reg[63] [4]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [49]),
        .Q(\mcp1_data_pipe_reg[63] [50]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [50]),
        .Q(\mcp1_data_pipe_reg[63] [51]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [51]),
        .Q(\mcp1_data_pipe_reg[63] [52]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [52]),
        .Q(\mcp1_data_pipe_reg[63] [53]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [53]),
        .Q(\mcp1_data_pipe_reg[63] [54]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [54]),
        .Q(\mcp1_data_pipe_reg[63] [55]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[56] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(rx_ebuff_data_t[56]),
        .Q(\mcp1_data_pipe_reg[63] [56]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [55]),
        .Q(\mcp1_data_pipe_reg[63] [57]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[58] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [56]),
        .Q(\mcp1_data_pipe_reg[63] [58]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[59] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [57]),
        .Q(\mcp1_data_pipe_reg[63] [59]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [5]),
        .Q(\mcp1_data_pipe_reg[63] [5]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[60] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [58]),
        .Q(\mcp1_data_pipe_reg[63] [60]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[61] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [59]),
        .Q(\mcp1_data_pipe_reg[63] [61]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[62] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [60]),
        .Q(\mcp1_data_pipe_reg[63] [62]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[63] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [61]),
        .Q(\mcp1_data_pipe_reg[63] [63]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [6]),
        .Q(\mcp1_data_pipe_reg[63] [6]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[7] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__2[0]),
        .D(\mcp1_rx_64_data_out_reg[63] [7]),
        .Q(\mcp1_data_pipe_reg[63] [7]),
        .S(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[8] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [8]),
        .Q(\mcp1_data_pipe_reg[63] [8]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \mcp1_rx_ebuff_data_reg[9] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg_rep__1),
        .D(\mcp1_rx_64_data_out_reg[63] [9]),
        .Q(\mcp1_data_pipe_reg[63] [9]),
        .R(\mcp1_rx_ebuff_ctrl[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i0_i_1
       (.I0(\mcp1_data_pipe_reg[63] [2]),
        .I1(\mcp1_data_pipe_reg[63] [3]),
        .I2(\mcp1_data_pipe_reg[63] [0]),
        .I3(\mcp1_data_pipe_reg[63] [1]),
        .O(comp_0));
  LUT4 #(
    .INIT(16'h1000)) 
    muxcy_i0_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [0]),
        .I1(\mcp1_data_pipe_reg[63] [1]),
        .I2(\mcp1_data_pipe_reg[63] [3]),
        .I3(\mcp1_data_pipe_reg[63] [2]),
        .O(comp_0_8));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i0_i_1__1
       (.I0(\mcp1_data_pipe_reg[63] [34]),
        .I1(\mcp1_data_pipe_reg[63] [35]),
        .I2(\mcp1_data_pipe_reg[63] [32]),
        .I3(\mcp1_data_pipe_reg[63] [33]),
        .O(comp_0_13));
  LUT4 #(
    .INIT(16'h1000)) 
    muxcy_i0_i_1__2
       (.I0(\mcp1_data_pipe_reg[63] [32]),
        .I1(\mcp1_data_pipe_reg[63] [33]),
        .I2(\mcp1_data_pipe_reg[63] [35]),
        .I3(\mcp1_data_pipe_reg[63] [34]),
        .O(comp_0_14));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i1_i_1
       (.I0(\mcp1_data_pipe_reg[63] [7]),
        .I1(\mcp1_data_pipe_reg[63] [6]),
        .I2(\mcp1_data_pipe_reg[63] [4]),
        .I3(\mcp1_data_pipe_reg[63] [5]),
        .O(comp_1));
  LUT4 #(
    .INIT(16'h1000)) 
    muxcy_i1_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [5]),
        .I1(\mcp1_data_pipe_reg[63] [6]),
        .I2(\mcp1_data_pipe_reg[63] [4]),
        .I3(\mcp1_data_pipe_reg[63] [7]),
        .O(comp_1_7));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i1_i_1__1
       (.I0(\mcp1_data_pipe_reg[63] [39]),
        .I1(\mcp1_data_pipe_reg[63] [38]),
        .I2(\mcp1_data_pipe_reg[63] [36]),
        .I3(\mcp1_data_pipe_reg[63] [37]),
        .O(comp_1_11));
  LUT4 #(
    .INIT(16'h1000)) 
    muxcy_i1_i_1__2
       (.I0(\mcp1_data_pipe_reg[63] [37]),
        .I1(\mcp1_data_pipe_reg[63] [38]),
        .I2(\mcp1_data_pipe_reg[63] [36]),
        .I3(\mcp1_data_pipe_reg[63] [39]),
        .O(comp_1_12));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i2_i_1
       (.I0(\mcp1_data_pipe_reg[63] [10]),
        .I1(\mcp1_data_pipe_reg[63] [11]),
        .I2(\mcp1_data_pipe_reg[63] [8]),
        .I3(\mcp1_data_pipe_reg[63] [9]),
        .O(comp_2));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i2_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [42]),
        .I1(\mcp1_data_pipe_reg[63] [43]),
        .I2(\mcp1_data_pipe_reg[63] [40]),
        .I3(\mcp1_data_pipe_reg[63] [41]),
        .O(comp_2_5));
  LUT4 #(
    .INIT(16'h0010)) 
    muxcy_i2_i_1__1
       (.I0(\mcp1_ctrl_pipe_reg[7] [3]),
        .I1(\mcp1_ctrl_pipe_reg[7] [2]),
        .I2(\mcp1_ctrl_pipe_reg[7] [0]),
        .I3(\mcp1_ctrl_pipe_reg[7] [1]),
        .O(comp_2_6));
  LUT4 #(
    .INIT(16'h0010)) 
    muxcy_i2_i_1__2
       (.I0(\mcp1_ctrl_pipe_reg[7] [7]),
        .I1(\mcp1_ctrl_pipe_reg[7] [6]),
        .I2(\mcp1_ctrl_pipe_reg[7] [4]),
        .I3(\mcp1_ctrl_pipe_reg[7] [5]),
        .O(comp_2_10));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i3_i_1
       (.I0(\mcp1_data_pipe_reg[63] [15]),
        .I1(\mcp1_data_pipe_reg[63] [14]),
        .I2(\mcp1_data_pipe_reg[63] [12]),
        .I3(\mcp1_data_pipe_reg[63] [13]),
        .O(comp_3));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i3_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [47]),
        .I1(\mcp1_data_pipe_reg[63] [46]),
        .I2(\mcp1_data_pipe_reg[63] [44]),
        .I3(\mcp1_data_pipe_reg[63] [45]),
        .O(comp_3_4));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i4_i_1
       (.I0(\mcp1_data_pipe_reg[63] [18]),
        .I1(\mcp1_data_pipe_reg[63] [19]),
        .I2(\mcp1_data_pipe_reg[63] [16]),
        .I3(\mcp1_data_pipe_reg[63] [17]),
        .O(comp_4));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i4_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [50]),
        .I1(\mcp1_data_pipe_reg[63] [51]),
        .I2(\mcp1_data_pipe_reg[63] [48]),
        .I3(\mcp1_data_pipe_reg[63] [49]),
        .O(comp_4_3));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i5_i_1
       (.I0(\mcp1_data_pipe_reg[63] [23]),
        .I1(\mcp1_data_pipe_reg[63] [22]),
        .I2(\mcp1_data_pipe_reg[63] [20]),
        .I3(\mcp1_data_pipe_reg[63] [21]),
        .O(comp_5));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i5_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [55]),
        .I1(\mcp1_data_pipe_reg[63] [54]),
        .I2(\mcp1_data_pipe_reg[63] [52]),
        .I3(\mcp1_data_pipe_reg[63] [53]),
        .O(comp_5_2));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i6_i_1
       (.I0(\mcp1_data_pipe_reg[63] [26]),
        .I1(\mcp1_data_pipe_reg[63] [27]),
        .I2(\mcp1_data_pipe_reg[63] [24]),
        .I3(\mcp1_data_pipe_reg[63] [25]),
        .O(comp_6));
  LUT4 #(
    .INIT(16'h2000)) 
    muxcy_i6_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [58]),
        .I1(\mcp1_data_pipe_reg[63] [59]),
        .I2(\mcp1_data_pipe_reg[63] [56]),
        .I3(\mcp1_data_pipe_reg[63] [57]),
        .O(comp_6_1));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i7_i_1
       (.I0(\mcp1_data_pipe_reg[63] [31]),
        .I1(\mcp1_data_pipe_reg[63] [30]),
        .I2(\mcp1_data_pipe_reg[63] [28]),
        .I3(\mcp1_data_pipe_reg[63] [29]),
        .O(comp_7));
  LUT4 #(
    .INIT(16'h0001)) 
    muxcy_i7_i_1__0
       (.I0(\mcp1_data_pipe_reg[63] [63]),
        .I1(\mcp1_data_pipe_reg[63] [62]),
        .I2(\mcp1_data_pipe_reg[63] [60]),
        .I3(\mcp1_data_pipe_reg[63] [61]),
        .O(comp_7_0));
  LUT4 #(
    .INIT(16'h8000)) 
    muxcy_i8_i_1
       (.I0(\mcp1_ctrl_pipe_reg[7] [3]),
        .I1(\mcp1_ctrl_pipe_reg[7] [2]),
        .I2(\mcp1_ctrl_pipe_reg[7] [0]),
        .I3(\mcp1_ctrl_pipe_reg[7] [1]),
        .O(comp_8));
  LUT4 #(
    .INIT(16'h8000)) 
    muxcy_i8_i_1__0
       (.I0(\mcp1_ctrl_pipe_reg[7] [7]),
        .I1(\mcp1_ctrl_pipe_reg[7] [6]),
        .I2(\mcp1_ctrl_pipe_reg[7] [4]),
        .I3(\mcp1_ctrl_pipe_reg[7] [5]),
        .O(comp_8_9));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_test" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rx_pcs_test
   (mcp1_ignore_next_mismatch,
    err_block_count_inc,
    rxusrclk2,
    rxusrclk2_en156_reg_rep__10,
    rxusrclk2_en156_reg_rep__11,
    mcp1_b_lock_reg,
    mcp1_b_lock_reg_0,
    SR,
    rxusrclk2_en156_reg);
  output mcp1_ignore_next_mismatch;
  output err_block_count_inc;
  input rxusrclk2;
  input rxusrclk2_en156_reg_rep__10;
  input rxusrclk2_en156_reg_rep__11;
  input mcp1_b_lock_reg;
  input mcp1_b_lock_reg_0;
  input [0:0]SR;
  input [0:0]rxusrclk2_en156_reg;

  wire [0:0]SR;
  wire err_block_count_inc;
  wire mcp1_b_lock_reg;
  wire mcp1_b_lock_reg_0;
  wire \mcp1_block_count[6]_i_2_n_0 ;
  wire [6:0]mcp1_block_count_reg__0;
  wire mcp1_err_block_count_inc_out_i_1_n_0;
  wire mcp1_ignore_next_mismatch;
  wire mcp1_ignore_next_mismatch_i_1_n_0;
  wire mcp1_ignore_next_mismatch_i_3_n_0;
  wire mcp1_ignore_next_mismatch_i_4_n_0;
  wire [6:0]p_0_in__1;
  wire rxusrclk2;
  wire [0:0]rxusrclk2_en156_reg;
  wire rxusrclk2_en156_reg_rep__10;
  wire rxusrclk2_en156_reg_rep__11;

  LUT1 #(
    .INIT(2'h1)) 
    \mcp1_block_count[0]_i_1 
       (.I0(mcp1_block_count_reg__0[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \mcp1_block_count[1]_i_1 
       (.I0(mcp1_block_count_reg__0[1]),
        .I1(mcp1_block_count_reg__0[0]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[2]_i_1 
       (.I0(mcp1_block_count_reg__0[2]),
        .I1(mcp1_block_count_reg__0[0]),
        .I2(mcp1_block_count_reg__0[1]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \mcp1_block_count[3]_i_1 
       (.I0(mcp1_block_count_reg__0[3]),
        .I1(mcp1_block_count_reg__0[1]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[2]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \mcp1_block_count[4]_i_1 
       (.I0(mcp1_block_count_reg__0[4]),
        .I1(mcp1_block_count_reg__0[2]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[1]),
        .I4(mcp1_block_count_reg__0[3]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \mcp1_block_count[5]_i_1 
       (.I0(mcp1_block_count_reg__0[5]),
        .I1(mcp1_block_count_reg__0[3]),
        .I2(mcp1_block_count_reg__0[1]),
        .I3(mcp1_block_count_reg__0[0]),
        .I4(mcp1_block_count_reg__0[2]),
        .I5(mcp1_block_count_reg__0[4]),
        .O(p_0_in__1[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \mcp1_block_count[6]_i_1 
       (.I0(mcp1_block_count_reg__0[6]),
        .I1(\mcp1_block_count[6]_i_2_n_0 ),
        .I2(mcp1_block_count_reg__0[5]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \mcp1_block_count[6]_i_2 
       (.I0(mcp1_block_count_reg__0[4]),
        .I1(mcp1_block_count_reg__0[2]),
        .I2(mcp1_block_count_reg__0[0]),
        .I3(mcp1_block_count_reg__0[1]),
        .I4(mcp1_block_count_reg__0[3]),
        .O(\mcp1_block_count[6]_i_2_n_0 ));
  FDRE \mcp1_block_count_reg[0] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[0]),
        .Q(mcp1_block_count_reg__0[0]),
        .R(SR));
  FDRE \mcp1_block_count_reg[1] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[1]),
        .Q(mcp1_block_count_reg__0[1]),
        .R(SR));
  FDRE \mcp1_block_count_reg[2] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[2]),
        .Q(mcp1_block_count_reg__0[2]),
        .R(SR));
  FDRE \mcp1_block_count_reg[3] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[3]),
        .Q(mcp1_block_count_reg__0[3]),
        .R(SR));
  FDRE \mcp1_block_count_reg[4] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[4]),
        .Q(mcp1_block_count_reg__0[4]),
        .R(SR));
  FDRE \mcp1_block_count_reg[5] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[5]),
        .Q(mcp1_block_count_reg__0[5]),
        .R(SR));
  FDRE \mcp1_block_count_reg[6] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_reg),
        .D(p_0_in__1[6]),
        .Q(mcp1_block_count_reg__0[6]),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000E2)) 
    mcp1_err_block_count_inc_out_i_1
       (.I0(err_block_count_inc),
        .I1(rxusrclk2_en156_reg_rep__11),
        .I2(mcp1_b_lock_reg),
        .I3(mcp1_b_lock_reg_0),
        .I4(SR),
        .O(mcp1_err_block_count_inc_out_i_1_n_0));
  FDRE mcp1_err_block_count_inc_out_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_err_block_count_inc_out_i_1_n_0),
        .Q(err_block_count_inc),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF44F4)) 
    mcp1_ignore_next_mismatch_i_1
       (.I0(mcp1_b_lock_reg_0),
        .I1(mcp1_ignore_next_mismatch),
        .I2(mcp1_ignore_next_mismatch_i_3_n_0),
        .I3(mcp1_ignore_next_mismatch_i_4_n_0),
        .I4(SR),
        .O(mcp1_ignore_next_mismatch_i_1_n_0));
  LUT4 #(
    .INIT(16'h0010)) 
    mcp1_ignore_next_mismatch_i_3
       (.I0(mcp1_block_count_reg__0[2]),
        .I1(mcp1_block_count_reg__0[3]),
        .I2(rxusrclk2_en156_reg_rep__10),
        .I3(mcp1_block_count_reg__0[6]),
        .O(mcp1_ignore_next_mismatch_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    mcp1_ignore_next_mismatch_i_4
       (.I0(mcp1_block_count_reg__0[0]),
        .I1(mcp1_block_count_reg__0[1]),
        .I2(mcp1_block_count_reg__0[5]),
        .I3(mcp1_block_count_reg__0[4]),
        .O(mcp1_ignore_next_mismatch_i_4_n_0));
  FDRE mcp1_ignore_next_mismatch_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_ignore_next_mismatch_i_1_n_0),
        .Q(mcp1_ignore_next_mismatch),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rxratecounter" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxratecounter
   (eq_rxusrclk2_en156,
    E,
    \mcp1_rx_ebuff_ctrl_reg[1] ,
    \mcp1_rx_ebuff_data_reg[0] ,
    \rx_66_enc_reg_reg[46] ,
    \mcp1_rx_66_enc_reg_reg[18] ,
    \mcp1_rx_66_enc_reg_reg[65] ,
    \mcp1_rx_64_data_out_reg[63] ,
    \mcp1_rx_66_raw_reg[46] ,
    \mcp1_dec_c6_reg[7] ,
    mcp1_err_block_count_inc_out_reg,
    mcp1_state,
    \mcp1_r_type_next_reg_reg[2] ,
    SR,
    \mcp1_dec_c0_reg[7] ,
    \mcp1_dec_c2_reg[7] ,
    \mcp1_dec_c3_reg[7] ,
    \mcp1_dec_c7_reg[7] ,
    \mcp1_dec_c5_reg[7] ,
    \mcp1_dec_c4_reg[7] ,
    \mcp1_dec_c6_reg[7]_0 ,
    D,
    rxusrclk2,
    rxdatavalid,
    rxheadervalid,
    \mcp1_state_reg[0] ,
    rxreset_5_reg,
    DecodeWord0,
    \rx_66_enc_reg_reg[10] ,
    DecodeWord1,
    DecodeWord2,
    DecodeWord6,
    \rx_66_enc_reg_reg[45] ,
    DecodeWord3,
    DecodeWord5,
    rxdatavalid_reg,
    Q);
  output eq_rxusrclk2_en156;
  output [1:0]E;
  output [1:0]\mcp1_rx_ebuff_ctrl_reg[1] ;
  output [0:0]\mcp1_rx_ebuff_data_reg[0] ;
  output [0:0]\rx_66_enc_reg_reg[46] ;
  output [1:0]\mcp1_rx_66_enc_reg_reg[18] ;
  output [0:0]\mcp1_rx_66_enc_reg_reg[65] ;
  output [1:0]\mcp1_rx_64_data_out_reg[63] ;
  output [0:0]\mcp1_rx_66_raw_reg[46] ;
  output \mcp1_dec_c6_reg[7] ;
  output mcp1_err_block_count_inc_out_reg;
  output mcp1_state;
  output \mcp1_r_type_next_reg_reg[2] ;
  output [0:0]SR;
  output [0:0]\mcp1_dec_c0_reg[7] ;
  output [0:0]\mcp1_dec_c2_reg[7] ;
  output [0:0]\mcp1_dec_c3_reg[7] ;
  output [0:0]\mcp1_dec_c7_reg[7] ;
  output [0:0]\mcp1_dec_c5_reg[7] ;
  output [0:0]\mcp1_dec_c4_reg[7] ;
  output [0:0]\mcp1_dec_c6_reg[7]_0 ;
  output [65:0]D;
  input rxusrclk2;
  input rxdatavalid;
  input rxheadervalid;
  input \mcp1_state_reg[0] ;
  input rxreset_5_reg;
  input [0:0]DecodeWord0;
  input \rx_66_enc_reg_reg[10] ;
  input [0:0]DecodeWord1;
  input [0:0]DecodeWord2;
  input [0:0]DecodeWord6;
  input \rx_66_enc_reg_reg[45] ;
  input [0:0]DecodeWord3;
  input [0:0]DecodeWord5;
  input [0:0]rxdatavalid_reg;
  input [33:0]Q;

  wire [65:0]D;
  wire [0:0]DecodeWord0;
  wire [0:0]DecodeWord1;
  wire [0:0]DecodeWord2;
  wire [0:0]DecodeWord3;
  wire [0:0]DecodeWord5;
  wire [0:0]DecodeWord6;
  wire [1:0]E;
  wire [33:0]Q;
  wire [0:0]SR;
  (* RTL_KEEP = "true" *) (* equivalent_register_removal = "no" *) wire eq_rxusrclk2_en156;
  wire [0:0]\mcp1_dec_c0_reg[7] ;
  wire [0:0]\mcp1_dec_c2_reg[7] ;
  wire [0:0]\mcp1_dec_c3_reg[7] ;
  wire [0:0]\mcp1_dec_c4_reg[7] ;
  wire [0:0]\mcp1_dec_c5_reg[7] ;
  wire \mcp1_dec_c6_reg[7] ;
  wire [0:0]\mcp1_dec_c6_reg[7]_0 ;
  wire [0:0]\mcp1_dec_c7_reg[7] ;
  wire mcp1_err_block_count_inc_out_reg;
  wire \mcp1_r_type_next_reg_reg[2] ;
  wire [1:0]\mcp1_rx_64_data_out_reg[63] ;
  wire [1:0]\mcp1_rx_66_enc_reg_reg[18] ;
  wire [0:0]\mcp1_rx_66_enc_reg_reg[65] ;
  wire [0:0]\mcp1_rx_66_raw_reg[46] ;
  wire [1:0]\mcp1_rx_ebuff_ctrl_reg[1] ;
  wire [0:0]\mcp1_rx_ebuff_data_reg[0] ;
  wire mcp1_state;
  wire \mcp1_state_reg[0] ;
  wire \rx_66_enc_reg_reg[10] ;
  wire \rx_66_enc_reg_reg[45] ;
  wire [0:0]\rx_66_enc_reg_reg[46] ;
  wire rxdatavalid;
  wire [0:0]rxdatavalid_reg;
  wire rxheadervalid;
  wire rxreset_5_reg;
  wire rxusrclk2;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup1_reg_n_0;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup2_reg_n_0;
  (* MAX_FANOUT = "50" *) (* RTL_MAX_FANOUT = "found" *) (* equivalent_register_removal = "no" *) wire rxusrclk2_en156_dup3_reg_n_0;
  wire rxusrclk2_en156_i_1_n_0;

  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE eq_rxusrclk2_en156_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(eq_rxusrclk2_en156),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_dec_c0[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(\rx_66_enc_reg_reg[10] ),
        .O(\mcp1_dec_c0_reg[7] ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c1[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord0),
        .O(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c2[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord1),
        .O(\mcp1_dec_c2_reg[7] ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c3[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord2),
        .O(\mcp1_dec_c3_reg[7] ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c4[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord3),
        .O(\mcp1_dec_c4_reg[7] ));
  LUT2 #(
    .INIT(4'h8)) 
    \mcp1_dec_c5[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(\rx_66_enc_reg_reg[45] ),
        .O(\mcp1_dec_c5_reg[7] ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c6[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord5),
        .O(\mcp1_dec_c6_reg[7]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_dec_c7[7]_i_1 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(DecodeWord6),
        .O(\mcp1_dec_c7_reg[7] ));
  LUT2 #(
    .INIT(4'hE)) 
    \mcp1_r_type_next_reg[2]_i_6 
       (.I0(\mcp1_dec_c6_reg[7] ),
        .I1(rxreset_5_reg),
        .O(\mcp1_r_type_next_reg_reg[2] ));
  LUT2 #(
    .INIT(4'h2)) 
    \mcp1_state[1]_i_4 
       (.I0(mcp1_err_block_count_inc_out_reg),
        .I1(\mcp1_state_reg[0] ),
        .O(mcp1_state));
  FDRE \rx_66_out_reg[0] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[0]),
        .Q(D[0]),
        .R(1'b0));
  FDRE \rx_66_out_reg[10] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[10]),
        .Q(D[10]),
        .R(1'b0));
  FDRE \rx_66_out_reg[11] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[11]),
        .Q(D[11]),
        .R(1'b0));
  FDRE \rx_66_out_reg[12] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[12]),
        .Q(D[12]),
        .R(1'b0));
  FDRE \rx_66_out_reg[13] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[13]),
        .Q(D[13]),
        .R(1'b0));
  FDRE \rx_66_out_reg[14] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[14]),
        .Q(D[14]),
        .R(1'b0));
  FDRE \rx_66_out_reg[15] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[15]),
        .Q(D[15]),
        .R(1'b0));
  FDRE \rx_66_out_reg[16] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[16]),
        .Q(D[16]),
        .R(1'b0));
  FDRE \rx_66_out_reg[17] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[17]),
        .Q(D[17]),
        .R(1'b0));
  FDRE \rx_66_out_reg[18] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[18]),
        .Q(D[18]),
        .R(1'b0));
  FDRE \rx_66_out_reg[19] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[19]),
        .Q(D[19]),
        .R(1'b0));
  FDRE \rx_66_out_reg[1] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[1]),
        .Q(D[1]),
        .R(1'b0));
  FDRE \rx_66_out_reg[20] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[20]),
        .Q(D[20]),
        .R(1'b0));
  FDRE \rx_66_out_reg[21] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[21]),
        .Q(D[21]),
        .R(1'b0));
  FDRE \rx_66_out_reg[22] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[22]),
        .Q(D[22]),
        .R(1'b0));
  FDRE \rx_66_out_reg[23] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[23]),
        .Q(D[23]),
        .R(1'b0));
  FDRE \rx_66_out_reg[24] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[24]),
        .Q(D[24]),
        .R(1'b0));
  FDRE \rx_66_out_reg[25] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[25]),
        .Q(D[25]),
        .R(1'b0));
  FDRE \rx_66_out_reg[26] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[26]),
        .Q(D[26]),
        .R(1'b0));
  FDRE \rx_66_out_reg[27] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[27]),
        .Q(D[27]),
        .R(1'b0));
  FDRE \rx_66_out_reg[28] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[28]),
        .Q(D[28]),
        .R(1'b0));
  FDRE \rx_66_out_reg[29] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[29]),
        .Q(D[29]),
        .R(1'b0));
  FDRE \rx_66_out_reg[2] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[2]),
        .Q(D[2]),
        .R(1'b0));
  FDRE \rx_66_out_reg[30] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[30]),
        .Q(D[30]),
        .R(1'b0));
  FDRE \rx_66_out_reg[31] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[31]),
        .Q(D[31]),
        .R(1'b0));
  FDRE \rx_66_out_reg[32] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[32]),
        .Q(D[32]),
        .R(1'b0));
  FDRE \rx_66_out_reg[33] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[33]),
        .Q(D[33]),
        .R(1'b0));
  FDRE \rx_66_out_reg[34] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[2]),
        .Q(D[34]),
        .R(1'b0));
  FDRE \rx_66_out_reg[35] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[3]),
        .Q(D[35]),
        .R(1'b0));
  FDRE \rx_66_out_reg[36] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[4]),
        .Q(D[36]),
        .R(1'b0));
  FDRE \rx_66_out_reg[37] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[5]),
        .Q(D[37]),
        .R(1'b0));
  FDRE \rx_66_out_reg[38] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[6]),
        .Q(D[38]),
        .R(1'b0));
  FDRE \rx_66_out_reg[39] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[7]),
        .Q(D[39]),
        .R(1'b0));
  FDRE \rx_66_out_reg[3] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[3]),
        .Q(D[3]),
        .R(1'b0));
  FDRE \rx_66_out_reg[40] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[8]),
        .Q(D[40]),
        .R(1'b0));
  FDRE \rx_66_out_reg[41] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[9]),
        .Q(D[41]),
        .R(1'b0));
  FDRE \rx_66_out_reg[42] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[10]),
        .Q(D[42]),
        .R(1'b0));
  FDRE \rx_66_out_reg[43] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[11]),
        .Q(D[43]),
        .R(1'b0));
  FDRE \rx_66_out_reg[44] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[12]),
        .Q(D[44]),
        .R(1'b0));
  FDRE \rx_66_out_reg[45] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[13]),
        .Q(D[45]),
        .R(1'b0));
  FDRE \rx_66_out_reg[46] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[14]),
        .Q(D[46]),
        .R(1'b0));
  FDRE \rx_66_out_reg[47] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[15]),
        .Q(D[47]),
        .R(1'b0));
  FDRE \rx_66_out_reg[48] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[16]),
        .Q(D[48]),
        .R(1'b0));
  FDRE \rx_66_out_reg[49] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[17]),
        .Q(D[49]),
        .R(1'b0));
  FDRE \rx_66_out_reg[4] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[4]),
        .Q(D[4]),
        .R(1'b0));
  FDRE \rx_66_out_reg[50] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[18]),
        .Q(D[50]),
        .R(1'b0));
  FDRE \rx_66_out_reg[51] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[19]),
        .Q(D[51]),
        .R(1'b0));
  FDRE \rx_66_out_reg[52] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[20]),
        .Q(D[52]),
        .R(1'b0));
  FDRE \rx_66_out_reg[53] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[21]),
        .Q(D[53]),
        .R(1'b0));
  FDRE \rx_66_out_reg[54] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[22]),
        .Q(D[54]),
        .R(1'b0));
  FDRE \rx_66_out_reg[55] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[23]),
        .Q(D[55]),
        .R(1'b0));
  FDRE \rx_66_out_reg[56] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[24]),
        .Q(D[56]),
        .R(1'b0));
  FDRE \rx_66_out_reg[57] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[25]),
        .Q(D[57]),
        .R(1'b0));
  FDRE \rx_66_out_reg[58] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[26]),
        .Q(D[58]),
        .R(1'b0));
  FDRE \rx_66_out_reg[59] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[27]),
        .Q(D[59]),
        .R(1'b0));
  FDRE \rx_66_out_reg[5] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[5]),
        .Q(D[5]),
        .R(1'b0));
  FDRE \rx_66_out_reg[60] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[28]),
        .Q(D[60]),
        .R(1'b0));
  FDRE \rx_66_out_reg[61] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[29]),
        .Q(D[61]),
        .R(1'b0));
  FDRE \rx_66_out_reg[62] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[30]),
        .Q(D[62]),
        .R(1'b0));
  FDRE \rx_66_out_reg[63] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[31]),
        .Q(D[63]),
        .R(1'b0));
  FDRE \rx_66_out_reg[64] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[32]),
        .Q(D[64]),
        .R(1'b0));
  FDRE \rx_66_out_reg[65] 
       (.C(rxusrclk2),
        .CE(rxusrclk2_en156_i_1_n_0),
        .D(Q[33]),
        .Q(D[65]),
        .R(1'b0));
  FDRE \rx_66_out_reg[6] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[6]),
        .Q(D[6]),
        .R(1'b0));
  FDRE \rx_66_out_reg[7] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[7]),
        .Q(D[7]),
        .R(1'b0));
  FDRE \rx_66_out_reg[8] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[8]),
        .Q(D[8]),
        .R(1'b0));
  FDRE \rx_66_out_reg[9] 
       (.C(rxusrclk2),
        .CE(rxdatavalid_reg),
        .D(Q[9]),
        .Q(D[9]),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(rxusrclk2_en156_dup1_reg_n_0),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(rxusrclk2_en156_dup2_reg_n_0),
        .R(1'b0));
  (* RTL_MAX_FANOUT = "found" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE rxusrclk2_en156_dup3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(rxusrclk2_en156_dup3_reg_n_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    rxusrclk2_en156_i_1
       (.I0(rxdatavalid),
        .I1(rxheadervalid),
        .O(rxusrclk2_en156_i_1_n_0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(E[1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(E[0]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__0
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_ebuff_ctrl_reg[1] [0]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__1
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_ebuff_data_reg[0] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__10
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_dec_c6_reg[7] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__11
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(mcp1_err_block_count_inc_out_reg),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__2
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_ebuff_ctrl_reg[1] [1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__3
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\rx_66_enc_reg_reg[46] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__4
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_66_enc_reg_reg[18] [0]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__5
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_66_enc_reg_reg[65] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__6
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_66_enc_reg_reg[18] [1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__7
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_64_data_out_reg[63] [1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__8
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_64_data_out_reg[63] [0]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "rxusrclk2_en156_reg" *) 
  FDRE rxusrclk2_en156_reg_rep__9
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(rxusrclk2_en156_i_1_n_0),
        .Q(\mcp1_rx_66_raw_reg[46] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync
   (counter_out,
    rxusrclk2,
    coreclk,
    rxusrclk2_en156_reg_rep__10,
    rx_test_mode_int_reg,
    err_block_count_inc,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input rxusrclk2_en156_reg_rep__10;
  input rx_test_mode_int_reg;
  input err_block_count_inc;
  input rxreset_rxusrclk2;

  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__0_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__0_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__0_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire psynch_1_n_1;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire rxusrclk2_en156_reg_rep__10;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT5 #(
    .INIT(32'h55550020)) 
    mcp1_counter_1_i_1__0
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .I4(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1__0_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__0_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT5 #(
    .INIT(32'h55552000)) 
    mcp1_counter_2_i_1__0
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_1_reg_n_0),
        .I4(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1__0_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__0_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT5 #(
    .INIT(32'h55552000)) 
    mcp1_counter_3_i_1__0
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(rx_test_mode_int_reg),
        .I2(err_block_count_inc),
        .I3(mcp1_counter_2_reg_n_0),
        .I4(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1__0_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__0_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_33 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_34 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_35 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync_20
   (counter_out,
    rxusrclk2,
    coreclk,
    rxusrclk2_en156_reg_rep__10,
    ber_count_inc,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input rxusrclk2_en156_reg_rep__10;
  input ber_count_inc;
  input rxreset_rxusrclk2;

  wire ber_count_inc;
  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire mcp1_counter_1_i_1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire psynch_1_n_1;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire rxusrclk2_en156_reg_rep__10;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'h5508)) 
    mcp1_counter_1_i_1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(ber_count_inc),
        .I2(mcp1_counter_2_reg_n_0),
        .I3(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT4 #(
    .INIT(16'h5580)) 
    mcp1_counter_2_i_1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(ber_count_inc),
        .I2(mcp1_counter_1_reg_n_0),
        .I3(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT4 #(
    .INIT(16'h5580)) 
    mcp1_counter_3_i_1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(ber_count_inc),
        .I2(mcp1_counter_2_reg_n_0),
        .I3(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_30 psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_31 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_32 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_rxusrclk2_coreclk_counter_resync_23
   (counter_out,
    rxusrclk2,
    coreclk,
    rxusrclk2_en156_reg_rep__10,
    out,
    err_block_count_inc,
    rx_test_mode_int_reg,
    rxreset_rxusrclk2);
  output counter_out;
  input rxusrclk2;
  input coreclk;
  input rxusrclk2_en156_reg_rep__10;
  input [0:0]out;
  input err_block_count_inc;
  input rx_test_mode_int_reg;
  input rxreset_rxusrclk2;

  wire coreclk;
  wire counter_out;
  wire counter_out0;
  wire counter_sync_1;
  wire counter_sync_2;
  wire counter_sync_3;
  wire counter_sync_extra;
  wire err_block_count_inc;
  wire mcp1_counter_1_i_1__1_n_0;
  wire mcp1_counter_1_reg_n_0;
  wire mcp1_counter_2_i_1__1_n_0;
  wire mcp1_counter_2_reg_n_0;
  wire mcp1_counter_3_i_1__1_n_0;
  wire mcp1_counter_3_reg_n_0;
  wire [0:0]out;
  wire psynch_1_n_1;
  wire rx_test_mode_int_reg;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire rxusrclk2_en156_reg_rep__10;

  FDRE counter_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(counter_out0),
        .Q(counter_out),
        .R(1'b0));
  FDRE counter_sync_extra_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(psynch_1_n_1),
        .Q(counter_sync_extra),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5555555500002000)) 
    mcp1_counter_1_i_1__1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(out),
        .I2(err_block_count_inc),
        .I3(rx_test_mode_int_reg),
        .I4(mcp1_counter_2_reg_n_0),
        .I5(mcp1_counter_1_reg_n_0),
        .O(mcp1_counter_1_i_1__1_n_0));
  FDRE mcp1_counter_1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_1_i_1__1_n_0),
        .Q(mcp1_counter_1_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'h5555555520000000)) 
    mcp1_counter_2_i_1__1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(out),
        .I2(err_block_count_inc),
        .I3(rx_test_mode_int_reg),
        .I4(mcp1_counter_1_reg_n_0),
        .I5(mcp1_counter_2_reg_n_0),
        .O(mcp1_counter_2_i_1__1_n_0));
  FDRE mcp1_counter_2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_2_i_1__1_n_0),
        .Q(mcp1_counter_2_reg_n_0),
        .R(rxreset_rxusrclk2));
  LUT6 #(
    .INIT(64'h5555555520000000)) 
    mcp1_counter_3_i_1__1
       (.I0(rxusrclk2_en156_reg_rep__10),
        .I1(out),
        .I2(err_block_count_inc),
        .I3(rx_test_mode_int_reg),
        .I4(mcp1_counter_2_reg_n_0),
        .I5(mcp1_counter_3_reg_n_0),
        .O(mcp1_counter_3_i_1__1_n_0));
  FDRE mcp1_counter_3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(mcp1_counter_3_i_1__1_n_0),
        .Q(mcp1_counter_3_reg_n_0),
        .R(rxreset_rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer psynch_1
       (.coreclk(coreclk),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .counter_sync_extra_reg(psynch_1_n_1),
        .mcp1_counter_1_reg(mcp1_counter_1_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_24 psynch_2
       (.coreclk(coreclk),
        .counter_out0(counter_out0),
        .counter_sync_1(counter_sync_1),
        .counter_sync_2(counter_sync_2),
        .counter_sync_3(counter_sync_3),
        .counter_sync_extra(counter_sync_extra),
        .mcp1_counter_2_reg(mcp1_counter_2_reg_n_0),
        .rxusrclk2(rxusrclk2));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pulse_synchronizer_25 psynch_3
       (.coreclk(coreclk),
        .counter_sync_3(counter_sync_3),
        .mcp1_counter_3_reg(mcp1_counter_3_reg_n_0),
        .rxusrclk2(rxusrclk2));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_seq_detect" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_seq_detect
   (D,
    comp_0_9,
    comp_1_10,
    comp_2_11);
  output [0:0]D;
  input comp_0_9;
  input comp_1_10;
  input comp_2_11;

  wire [0:0]D;
  wire comp_0_9;
  wire comp_1_10;
  wire comp_2_11;
  wire [3:0]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[3],D,NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b1),
        .DI({NLW_muxcy_i0_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i0_CARRY4_S_UNCONNECTED[3],comp_2_11,comp_1_10,comp_0_9}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_seq_detect" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_seq_detect_44
   (D,
    comp_0_12,
    comp_1_13,
    comp_2_14);
  output [0:0]D;
  input comp_0_12;
  input comp_1_13;
  input comp_2_14;

  wire [0:0]D;
  wire comp_0_12;
  wire comp_1_13;
  wire comp_2_14;
  wire [3:0]NLW_muxcy_i0_CARRY4_CO_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_DI_UNCONNECTED;
  wire [3:0]NLW_muxcy_i0_CARRY4_O_UNCONNECTED;
  wire [3:3]NLW_muxcy_i0_CARRY4_S_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 muxcy_i0_CARRY4
       (.CI(1'b0),
        .CO({NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[3],D,NLW_muxcy_i0_CARRY4_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b1),
        .DI({NLW_muxcy_i0_CARRY4_DI_UNCONNECTED[3],1'b0,1'b0,1'b0}),
        .O(NLW_muxcy_i0_CARRY4_O_UNCONNECTED[3:0]),
        .S({NLW_muxcy_i0_CARRY4_S_UNCONNECTED[3],comp_2_14,comp_1_13,comp_0_12}));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer
   (pcs_rxreset_int,
    rxreset,
    pcs_reset_core_reg,
    rxusrclk2,
    rxreset_rxusrclk2);
  output pcs_rxreset_int;
  output rxreset;
  input pcs_reset_core_reg;
  input rxusrclk2;
  input rxreset_rxusrclk2;

  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire pcs_reset_core_reg;
  wire pcs_rxreset_int;
  wire rxreset;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(pcs_reset_core_reg),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_rxreset_int),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    rxreset_local_i_1
       (.I0(rxreset_rxusrclk2),
        .I1(pcs_rxreset_int),
        .O(rxreset));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_21
   (tx_disable,
    tx_disable_int,
    txusrclk2);
  output tx_disable;
  input tx_disable_int;
  input txusrclk2;

  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire tx_disable;
  wire tx_disable_int;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(tx_disable_int),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(tx_disable),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_22
   (signal_detect_sync,
    signal_detect,
    coreclk);
  output signal_detect_sync;
  input signal_detect;
  input coreclk;

  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire signal_detect;
  wire signal_detect_sync;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(signal_detect_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_26
   (core_status,
    b_lock,
    coreclk);
  output [0:0]core_status;
  input b_lock;
  input coreclk;

  wire b_lock;
  wire [0:0]core_status;
  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(b_lock),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(core_status),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_27
   (pcs_hi_ber_core_int,
    hiber,
    coreclk);
  output pcs_hi_ber_core_int;
  input hiber;
  input coreclk;

  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire hiber;
  wire pcs_hi_ber_core_int;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(hiber),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_hi_ber_core_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_28
   (pcs_rx_link_up_core_sync_int,
    pcs_rx_link_up_core_reg,
    coreclk);
  output pcs_rx_link_up_core_sync_int;
  input pcs_rx_link_up_core_reg;
  input coreclk;

  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire pcs_rx_link_up_core_reg;
  wire pcs_rx_link_up_core_sync_int;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(pcs_rx_link_up_core_reg),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(pcs_rx_link_up_core_sync_int),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_29
   (signal_ok_reg,
    SR,
    signal_detect,
    rxusrclk2,
    rxreset_1_reg);
  output signal_ok_reg;
  output [0:0]SR;
  input signal_detect;
  input rxusrclk2;
  input rxreset_1_reg;

  wire [0:0]SR;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire rxreset_1_reg;
  wire rxusrclk2;
  wire signal_detect;
  wire signal_ok_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(signal_detect),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \mcp1_sh_cnt[5]_i_1 
       (.I0(rxreset_1_reg),
        .I1(signal_ok_reg),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(rxusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(signal_ok_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_40
   (toggle_rdclk,
    E,
    toggle_reg,
    coreclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input toggle_reg;
  input coreclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_reg),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \q[15]_i_1__6 
       (.I0(toggle_rdclk),
        .I1(toggle_rdclk_reg),
        .O(E));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_41
   (toggle_rdclk,
    E,
    toggle_reg,
    dclk,
    toggle_rdclk_reg);
  output toggle_rdclk;
  output [0:0]E;
  input toggle_reg;
  input dclk;
  input toggle_rdclk_reg;

  wire [0:0]E;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire dclk;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;

  LUT2 #(
    .INIT(4'h6)) 
    control_out_i_1
       (.I0(toggle_rdclk),
        .I1(toggle_rdclk_reg),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_reg),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(dclk),
        .CE(1'b1),
        .D(d4),
        .Q(toggle_rdclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_42
   (q,
    can_insert_wra_comb,
    coreclk);
  output q;
  input can_insert_wra_comb;
  input coreclk;

  wire can_insert_wra_comb;
  wire coreclk;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(can_insert_wra_comb),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_45
   (tx_prbs31_en,
    prbs31_tx_enable_core_reg,
    txusrclk2);
  output tx_prbs31_en;
  input prbs31_tx_enable_core_reg;
  input txusrclk2;

  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire prbs31_tx_enable_core_reg;
  wire tx_prbs31_en;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(prbs31_tx_enable_core_reg),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(tx_prbs31_en),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_46
   (sel0,
    pcs_loopback_core_int,
    txusrclk2);
  output [0:0]sel0;
  input pcs_loopback_core_int;
  input txusrclk2;

  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire pcs_loopback_core_int;
  wire [0:0]sel0;
  wire txusrclk2;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(pcs_loopback_core_int),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(d4),
        .Q(sel0),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__21
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__22
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__23
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__24
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__25
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__26
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__27
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__28
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__29
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__30
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__31
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__32
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__33
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__34
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__35
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__36
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__37
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__38
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__39
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* KEEP_HIERARCHY = "true" *) (* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_enable__40
   (clk,
    d,
    en,
    q);
  input clk;
  input d;
  input en;
  output q;

  wire clk;
  wire d;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d1b;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d2;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d3;
  (* ASYNC_REG = "true" *) (* shreg_extract = "no" *) wire d4;
  wire en;
  wire q;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1_reg
       (.C(clk),
        .CE(en),
        .D(d),
        .Q(d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d1b_reg
       (.C(clk),
        .CE(en),
        .D(d1),
        .Q(d1b),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d2_reg
       (.C(clk),
        .CE(en),
        .D(d1b),
        .Q(d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d3_reg
       (.C(clk),
        .CE(en),
        .D(d2),
        .Q(d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    d4_reg
       (.C(clk),
        .CE(en),
        .D(d3),
        .Q(d4),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_reg
       (.C(clk),
        .CE(en),
        .D(d4),
        .Q(q),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer
   (toggle_reg,
    control_reg,
    E,
    ipif_cs_dclk_reg_reg,
    Q,
    dclk,
    mgmt_drp_cs,
    coreclk,
    \state_reg[2] ,
    ipif_cs_dclk_reg,
    dclk_reset,
    D,
    \shift_reg_reg[15] );
  output toggle_reg;
  output control_reg;
  output [0:0]E;
  output ipif_cs_dclk_reg_reg;
  output [32:0]Q;
  input dclk;
  input mgmt_drp_cs;
  input coreclk;
  input \state_reg[2] ;
  input ipif_cs_dclk_reg;
  input dclk_reset;
  input [16:0]D;
  input [15:0]\shift_reg_reg[15] ;

  wire [16:0]D;
  wire [0:0]E;
  wire [32:0]Q;
  wire control_reg;
  wire coreclk;
  wire [32:0]d_reg;
  wire dclk;
  wire dclk_reset;
  wire ipif_cs_dclk;
  wire ipif_cs_dclk_reg;
  wire ipif_cs_dclk_reg_reg;
  wire mgmt_drp_cs;
  wire [15:0]\shift_reg_reg[15] ;
  wire \state_reg[2] ;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;
  wire toggle_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(ipif_cs_dclk),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(mgmt_drp_cs),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [0]),
        .Q(d_reg[0]),
        .R(D[16]));
  FDRE \d_reg_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [10]),
        .Q(d_reg[10]),
        .R(D[16]));
  FDRE \d_reg_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [11]),
        .Q(d_reg[11]),
        .R(D[16]));
  FDRE \d_reg_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [12]),
        .Q(d_reg[12]),
        .R(D[16]));
  FDRE \d_reg_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [13]),
        .Q(d_reg[13]),
        .R(D[16]));
  FDRE \d_reg_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [14]),
        .Q(d_reg[14]),
        .R(D[16]));
  FDRE \d_reg_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [15]),
        .Q(d_reg[15]),
        .R(D[16]));
  FDRE \d_reg_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(d_reg[16]),
        .R(1'b0));
  FDRE \d_reg_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(d_reg[17]),
        .R(1'b0));
  FDRE \d_reg_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(d_reg[18]),
        .R(1'b0));
  FDRE \d_reg_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(d_reg[19]),
        .R(1'b0));
  FDRE \d_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [1]),
        .Q(d_reg[1]),
        .R(D[16]));
  FDRE \d_reg_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(d_reg[20]),
        .R(1'b0));
  FDRE \d_reg_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(d_reg[21]),
        .R(1'b0));
  FDRE \d_reg_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(d_reg[22]),
        .R(1'b0));
  FDRE \d_reg_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(d_reg[23]),
        .R(1'b0));
  FDRE \d_reg_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(d_reg[24]),
        .R(1'b0));
  FDRE \d_reg_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(d_reg[25]),
        .R(1'b0));
  FDRE \d_reg_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(d_reg[26]),
        .R(1'b0));
  FDRE \d_reg_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(d_reg[27]),
        .R(1'b0));
  FDRE \d_reg_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(d_reg[28]),
        .R(1'b0));
  FDRE \d_reg_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(d_reg[29]),
        .R(1'b0));
  FDRE \d_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [2]),
        .Q(d_reg[2]),
        .R(D[16]));
  FDRE \d_reg_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(d_reg[30]),
        .R(1'b0));
  FDRE \d_reg_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(d_reg[31]),
        .R(1'b0));
  FDRE \d_reg_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(d_reg[32]),
        .R(1'b0));
  FDRE \d_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [3]),
        .Q(d_reg[3]),
        .R(D[16]));
  FDRE \d_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [4]),
        .Q(d_reg[4]),
        .R(D[16]));
  FDRE \d_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [5]),
        .Q(d_reg[5]),
        .R(D[16]));
  FDRE \d_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [6]),
        .Q(d_reg[6]),
        .R(D[16]));
  FDRE \d_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [7]),
        .Q(d_reg[7]),
        .R(D[16]));
  FDRE \d_reg_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [8]),
        .Q(d_reg[8]),
        .R(D[16]));
  FDRE \d_reg_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\shift_reg_reg[15] [9]),
        .Q(d_reg[9]),
        .R(D[16]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ipif_addr_dclk[15]_i_1 
       (.I0(ipif_cs_dclk),
        .I1(ipif_cs_dclk_reg),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ipif_cs_dclk_reg_i_1
       (.I0(ipif_cs_dclk),
        .I1(dclk_reset),
        .O(ipif_cs_dclk_reg_reg));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[16] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[17] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[18] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[19] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[20] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[21] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[22] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[23] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[24] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[25] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[26] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[27] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[28] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[29] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[30] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[31] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[32] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(dclk),
        .CE(toggle_sync_n_1),
        .D(d_reg[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(\state_reg[2] ),
        .Q(toggle_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_41 toggle_sync
       (.E(toggle_sync_n_1),
        .dclk(dclk),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg),
        .toggle_reg(toggle_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_toggle_synchronizer__parameterized0
   (drp_ack,
    \prbs31_err_count_reg[15] ,
    coreclk,
    drp_drdy,
    dclk,
    Q);
  output drp_ack;
  output [15:0]\prbs31_err_count_reg[15] ;
  input coreclk;
  input drp_drdy;
  input dclk;
  input [15:0]Q;

  wire [15:0]Q;
  wire control_reg;
  wire coreclk;
  wire \d_reg_reg_n_0_[0] ;
  wire \d_reg_reg_n_0_[10] ;
  wire \d_reg_reg_n_0_[11] ;
  wire \d_reg_reg_n_0_[12] ;
  wire \d_reg_reg_n_0_[13] ;
  wire \d_reg_reg_n_0_[14] ;
  wire \d_reg_reg_n_0_[15] ;
  wire \d_reg_reg_n_0_[1] ;
  wire \d_reg_reg_n_0_[2] ;
  wire \d_reg_reg_n_0_[3] ;
  wire \d_reg_reg_n_0_[4] ;
  wire \d_reg_reg_n_0_[5] ;
  wire \d_reg_reg_n_0_[6] ;
  wire \d_reg_reg_n_0_[7] ;
  wire \d_reg_reg_n_0_[8] ;
  wire \d_reg_reg_n_0_[9] ;
  wire dclk;
  wire drp_ack;
  wire drp_drdy;
  wire [15:0]\prbs31_err_count_reg[15] ;
  wire toggle_rdclk;
  wire toggle_rdclk_reg;
  wire toggle_reg;
  wire toggle_reg_i_1__0_n_0;
  wire toggle_sync_n_1;

  FDRE #(
    .INIT(1'b0)) 
    control_out_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_sync_n_1),
        .Q(drp_ack),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    control_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(drp_drdy),
        .Q(control_reg),
        .R(1'b0));
  FDRE \d_reg_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(\d_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \d_reg_reg[10] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(\d_reg_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \d_reg_reg[11] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(\d_reg_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \d_reg_reg[12] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(\d_reg_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \d_reg_reg[13] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(\d_reg_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \d_reg_reg[14] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(\d_reg_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \d_reg_reg[15] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(\d_reg_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \d_reg_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(\d_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \d_reg_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(\d_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \d_reg_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(\d_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \d_reg_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(\d_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \d_reg_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(\d_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \d_reg_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(\d_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \d_reg_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(\d_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \d_reg_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(\d_reg_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \d_reg_reg[9] 
       (.C(dclk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(\d_reg_reg_n_0_[9] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[0] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[0] ),
        .Q(\prbs31_err_count_reg[15] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[10] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[10] ),
        .Q(\prbs31_err_count_reg[15] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[11] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[11] ),
        .Q(\prbs31_err_count_reg[15] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[12] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[12] ),
        .Q(\prbs31_err_count_reg[15] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[13] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[13] ),
        .Q(\prbs31_err_count_reg[15] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[14] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[14] ),
        .Q(\prbs31_err_count_reg[15] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[15] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[15] ),
        .Q(\prbs31_err_count_reg[15] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[1] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[1] ),
        .Q(\prbs31_err_count_reg[15] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[2] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[2] ),
        .Q(\prbs31_err_count_reg[15] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[3] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[3] ),
        .Q(\prbs31_err_count_reg[15] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[4] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[4] ),
        .Q(\prbs31_err_count_reg[15] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[5] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[5] ),
        .Q(\prbs31_err_count_reg[15] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[6] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[6] ),
        .Q(\prbs31_err_count_reg[15] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[7] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[7] ),
        .Q(\prbs31_err_count_reg[15] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[8] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[8] ),
        .Q(\prbs31_err_count_reg[15] [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_reg[9] 
       (.C(coreclk),
        .CE(toggle_sync_n_1),
        .D(\d_reg_reg_n_0_[9] ),
        .Q(\prbs31_err_count_reg[15] [9]),
        .R(1'b0));
  FDRE toggle_rdclk_reg_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(toggle_rdclk),
        .Q(toggle_rdclk_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hD2)) 
    toggle_reg_i_1__0
       (.I0(drp_drdy),
        .I1(control_reg),
        .I2(toggle_reg),
        .O(toggle_reg_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    toggle_reg_reg
       (.C(dclk),
        .CE(1'b1),
        .D(toggle_reg_i_1__0_n_0),
        .Q(toggle_reg),
        .R(1'b0));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_synchronizer_40 toggle_sync
       (.E(toggle_sync_n_1),
        .coreclk(coreclk),
        .toggle_rdclk(toggle_rdclk),
        .toggle_rdclk_reg(toggle_rdclk_reg),
        .toggle_reg(toggle_reg));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_tx_encoder" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_encoder
   (Q,
    \tx_66_enc_out_reg[65] ,
    next_state,
    \FSM_sequential_state_reg[2] ,
    coreclk,
    SR,
    D,
    \xgmii_txd_reg_reg[63] ,
    out);
  output [2:0]Q;
  output [65:0]\tx_66_enc_out_reg[65] ;
  output [0:0]next_state;
  output [2:0]\FSM_sequential_state_reg[2] ;
  input coreclk;
  input [0:0]SR;
  input [7:0]D;
  input [63:0]\xgmii_txd_reg_reg[63] ;
  input [2:0]out;

  wire [7:0]D;
  wire [2:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]Q;
  wire [0:0]SR;
  wire \block_field[0]_i_1_n_0 ;
  wire \block_field[0]_i_2_n_0 ;
  wire \block_field[0]_i_3_n_0 ;
  wire \block_field[0]_i_4_n_0 ;
  wire \block_field[1]_i_1_n_0 ;
  wire \block_field[1]_i_2_n_0 ;
  wire \block_field[1]_i_3_n_0 ;
  wire \block_field[1]_i_4_n_0 ;
  wire \block_field[2]_i_1_n_0 ;
  wire \block_field[2]_i_2_n_0 ;
  wire \block_field[2]_i_3_n_0 ;
  wire \block_field[2]_i_4_n_0 ;
  wire \block_field[2]_i_5_n_0 ;
  wire \block_field[2]_i_6_n_0 ;
  wire \block_field[3]_i_1_n_0 ;
  wire \block_field[3]_i_2_n_0 ;
  wire \block_field[4]_i_1_n_0 ;
  wire \block_field[4]_i_2_n_0 ;
  wire \block_field[4]_i_3_n_0 ;
  wire \block_field[4]_i_4_n_0 ;
  wire \block_field[4]_i_5_n_0 ;
  wire \block_field[5]_i_1_n_0 ;
  wire \block_field[5]_i_2_n_0 ;
  wire \block_field[5]_i_3_n_0 ;
  wire \block_field[5]_i_4_n_0 ;
  wire \block_field[5]_i_5_n_0 ;
  wire \block_field[5]_i_6_n_0 ;
  wire \block_field[5]_i_7_n_0 ;
  wire \block_field[5]_i_8_n_0 ;
  wire \block_field[5]_i_9_n_0 ;
  wire \block_field[6]_i_1_n_0 ;
  wire \block_field[6]_i_2_n_0 ;
  wire \block_field[6]_i_3_n_0 ;
  wire \block_field[6]_i_4_n_0 ;
  wire \block_field[7]_i_1_n_0 ;
  wire [6:0]c0;
  wire \c0[0]_i_1_n_0 ;
  wire \c0[0]_i_2_n_0 ;
  wire \c0[1]_i_1_n_0 ;
  wire \c0[2]_i_1_n_0 ;
  wire \c0[2]_i_2_n_0 ;
  wire \c0[3]_i_1_n_0 ;
  wire \c0[4]_i_1_n_0 ;
  wire \c0[4]_i_2_n_0 ;
  wire \c0[4]_i_3_n_0 ;
  wire \c0[4]_i_4_n_0 ;
  wire \c0[4]_i_5_n_0 ;
  wire \c0[5]_i_1_n_0 ;
  wire \c0[5]_i_2_n_0 ;
  wire \c0[5]_i_3_n_0 ;
  wire \c0[5]_i_4_n_0 ;
  wire \c0[6]_i_1_n_0 ;
  wire \c0[6]_i_2_n_0 ;
  wire \c0[6]_i_3_n_0 ;
  wire \c0[6]_i_4_n_0 ;
  wire \c0[6]_i_5_n_0 ;
  wire \c0[6]_i_6_n_0 ;
  wire \c0[6]_i_7_n_0 ;
  wire [6:0]c1;
  wire \c1[0]_i_1_n_0 ;
  wire \c1[0]_i_2_n_0 ;
  wire \c1[1]_i_1_n_0 ;
  wire \c1[1]_i_2_n_0 ;
  wire \c1[2]_i_1_n_0 ;
  wire \c1[2]_i_2_n_0 ;
  wire \c1[3]_i_1_n_0 ;
  wire \c1[4]_i_1_n_0 ;
  wire \c1[4]_i_2_n_0 ;
  wire \c1[4]_i_3_n_0 ;
  wire \c1[4]_i_4_n_0 ;
  wire \c1[5]_i_1_n_0 ;
  wire \c1[5]_i_2_n_0 ;
  wire \c1[5]_i_3_n_0 ;
  wire \c1[5]_i_4_n_0 ;
  wire \c1[5]_i_5_n_0 ;
  wire \c1[6]_i_1_n_0 ;
  wire \c1[6]_i_2_n_0 ;
  wire \c1[6]_i_3_n_0 ;
  wire \c1[6]_i_4_n_0 ;
  wire [6:0]c2;
  wire \c2[0]_i_1_n_0 ;
  wire \c2[0]_i_2_n_0 ;
  wire \c2[1]_i_1_n_0 ;
  wire \c2[1]_i_2_n_0 ;
  wire \c2[2]_i_1_n_0 ;
  wire \c2[2]_i_2_n_0 ;
  wire \c2[3]_i_1_n_0 ;
  wire \c2[4]_i_1_n_0 ;
  wire \c2[4]_i_2_n_0 ;
  wire \c2[4]_i_3_n_0 ;
  wire \c2[4]_i_4_n_0 ;
  wire \c2[5]_i_1_n_0 ;
  wire \c2[5]_i_2_n_0 ;
  wire \c2[5]_i_3_n_0 ;
  wire \c2[5]_i_4_n_0 ;
  wire \c2[5]_i_5_n_0 ;
  wire \c2[6]_i_1_n_0 ;
  wire \c2[6]_i_2_n_0 ;
  wire \c2[6]_i_3_n_0 ;
  wire \c2[6]_i_4_n_0 ;
  wire [6:0]c3;
  wire \c3[0]_i_1_n_0 ;
  wire \c3[0]_i_2_n_0 ;
  wire \c3[1]_i_1_n_0 ;
  wire \c3[1]_i_2_n_0 ;
  wire \c3[2]_i_1_n_0 ;
  wire \c3[2]_i_2_n_0 ;
  wire \c3[3]_i_1_n_0 ;
  wire \c3[4]_i_1_n_0 ;
  wire \c3[4]_i_2_n_0 ;
  wire \c3[4]_i_3_n_0 ;
  wire \c3[4]_i_4_n_0 ;
  wire \c3[5]_i_1_n_0 ;
  wire \c3[5]_i_2_n_0 ;
  wire \c3[5]_i_3_n_0 ;
  wire \c3[5]_i_4_n_0 ;
  wire \c3[5]_i_5_n_0 ;
  wire \c3[6]_i_1_n_0 ;
  wire \c3[6]_i_2_n_0 ;
  wire \c3[6]_i_3_n_0 ;
  wire \c3[6]_i_4_n_0 ;
  wire \c4[0]_i_1_n_0 ;
  wire \c4[0]_i_2_n_0 ;
  wire \c4[1]_i_1_n_0 ;
  wire \c4[2]_i_1_n_0 ;
  wire \c4[2]_i_2_n_0 ;
  wire \c4[3]_i_1_n_0 ;
  wire \c4[4]_i_1_n_0 ;
  wire \c4[4]_i_2_n_0 ;
  wire \c4[4]_i_3_n_0 ;
  wire \c4[4]_i_4_n_0 ;
  wire \c4[4]_i_5_n_0 ;
  wire \c4[5]_i_1_n_0 ;
  wire \c4[5]_i_2_n_0 ;
  wire \c4[5]_i_3_n_0 ;
  wire \c4[5]_i_4_n_0 ;
  wire \c4[6]_i_1_n_0 ;
  wire \c4[6]_i_2_n_0 ;
  wire \c4[6]_i_3_n_0 ;
  wire \c4[6]_i_4_n_0 ;
  wire \c4[6]_i_5_n_0 ;
  wire \c4[6]_i_6_n_0 ;
  wire \c4[6]_i_7_n_0 ;
  wire \c5[0]_i_1_n_0 ;
  wire \c5[0]_i_2_n_0 ;
  wire \c5[1]_i_1_n_0 ;
  wire \c5[1]_i_2_n_0 ;
  wire \c5[2]_i_1_n_0 ;
  wire \c5[2]_i_2_n_0 ;
  wire \c5[3]_i_1_n_0 ;
  wire \c5[4]_i_1_n_0 ;
  wire \c5[4]_i_2_n_0 ;
  wire \c5[4]_i_3_n_0 ;
  wire \c5[4]_i_4_n_0 ;
  wire \c5[5]_i_1_n_0 ;
  wire \c5[5]_i_2_n_0 ;
  wire \c5[5]_i_3_n_0 ;
  wire \c5[5]_i_4_n_0 ;
  wire \c5[5]_i_5_n_0 ;
  wire \c5[6]_i_1_n_0 ;
  wire \c5[6]_i_2_n_0 ;
  wire \c5[6]_i_3_n_0 ;
  wire \c5[6]_i_4_n_0 ;
  wire \c6[0]_i_1_n_0 ;
  wire \c6[0]_i_2_n_0 ;
  wire \c6[1]_i_1_n_0 ;
  wire \c6[1]_i_2_n_0 ;
  wire \c6[2]_i_1_n_0 ;
  wire \c6[2]_i_2_n_0 ;
  wire \c6[3]_i_1_n_0 ;
  wire \c6[4]_i_1_n_0 ;
  wire \c6[4]_i_2_n_0 ;
  wire \c6[4]_i_3_n_0 ;
  wire \c6[4]_i_4_n_0 ;
  wire \c6[5]_i_1_n_0 ;
  wire \c6[5]_i_2_n_0 ;
  wire \c6[5]_i_3_n_0 ;
  wire \c6[5]_i_4_n_0 ;
  wire \c6[5]_i_5_n_0 ;
  wire \c6[6]_i_1_n_0 ;
  wire \c6[6]_i_2_n_0 ;
  wire \c6[6]_i_3_n_0 ;
  wire \c6[6]_i_4_n_0 ;
  wire \c7[0]_i_1_n_0 ;
  wire \c7[0]_i_2_n_0 ;
  wire \c7[1]_i_1_n_0 ;
  wire \c7[1]_i_2_n_0 ;
  wire \c7[2]_i_1_n_0 ;
  wire \c7[2]_i_2_n_0 ;
  wire \c7[3]_i_1_n_0 ;
  wire \c7[4]_i_1_n_0 ;
  wire \c7[4]_i_2_n_0 ;
  wire \c7[4]_i_3_n_0 ;
  wire \c7[4]_i_4_n_0 ;
  wire \c7[5]_i_1_n_0 ;
  wire \c7[5]_i_2_n_0 ;
  wire \c7[5]_i_3_n_0 ;
  wire \c7[5]_i_4_n_0 ;
  wire \c7[5]_i_5_n_0 ;
  wire \c7[6]_i_1_n_0 ;
  wire \c7[6]_i_2_n_0 ;
  wire \c7[6]_i_3_n_0 ;
  wire \c7[6]_i_4_n_0 ;
  wire coreclk;
  wire \d0[7]_i_1_n_0 ;
  wire \d1[7]_i_1_n_0 ;
  wire \d2[7]_i_1_n_0 ;
  wire \d3[7]_i_1_n_0 ;
  wire \d4[7]_i_1_n_0 ;
  wire \d5[7]_i_1_n_0 ;
  wire \d6[7]_i_1_n_0 ;
  wire \d7[7]_i_1_n_0 ;
  wire [65:34]data11;
  wire [65:2]data12;
  wire [17:10]data8;
  wire [0:0]next_state;
  wire o0;
  wire \o0[0]_i_1_n_0 ;
  wire \o0[1]_i_1_n_0 ;
  wire \o0[2]_i_1_n_0 ;
  wire \o0[3]_i_2_n_0 ;
  wire \o0[3]_i_3_n_0 ;
  wire \o0[3]_i_4_n_0 ;
  wire [3:0]o4;
  wire \o4[0]_i_1_n_0 ;
  wire \o4[1]_i_1_n_0 ;
  wire \o4[2]_i_1_n_0 ;
  wire \o4[3]_i_2_n_0 ;
  wire \o4[3]_i_3_n_0 ;
  wire \o4[3]_i_4_n_0 ;
  wire o4_0;
  wire o_code_c0;
  wire o_code_c00;
  wire o_code_c4;
  wire o_code_c40;
  wire [2:0]out;
  wire [7:0]p_15_out;
  wire p_5_in;
  wire [7:0]p_8_out;
  wire s_code_c0;
  wire s_code_c0_i_2_n_0;
  wire s_code_c0_reg_n_0;
  wire s_code_c4;
  wire s_code_c4_i_2_n_0;
  wire s_code_c4_reg_n_0;
  wire \t_code[0]_i_2_n_0 ;
  wire \t_code[1]_i_2_n_0 ;
  wire \t_code[2]_i_2_n_0 ;
  wire \t_code[3]_i_2_n_0 ;
  wire \t_code[4]_i_2_n_0 ;
  wire \t_code[5]_i_2_n_0 ;
  wire \t_code[6]_i_2_n_0 ;
  wire \t_code[7]_i_2_n_0 ;
  wire \t_code_reg_n_0_[0] ;
  wire \t_code_reg_n_0_[1] ;
  wire \t_code_reg_n_0_[2] ;
  wire \t_code_reg_n_0_[3] ;
  wire \t_code_reg_n_0_[4] ;
  wire \t_code_reg_n_0_[5] ;
  wire \t_code_reg_n_0_[6] ;
  wire \t_code_reg_n_0_[7] ;
  wire \t_type_reg[0]_i_1_n_0 ;
  wire \t_type_reg[0]_i_2_n_0 ;
  wire \t_type_reg[0]_i_3_n_0 ;
  wire \t_type_reg[0]_i_4_n_0 ;
  wire \t_type_reg[0]_i_5_n_0 ;
  wire \t_type_reg[0]_i_6_n_0 ;
  wire \t_type_reg[0]_i_7_n_0 ;
  wire \t_type_reg[1]_i_10_n_0 ;
  wire \t_type_reg[1]_i_11_n_0 ;
  wire \t_type_reg[1]_i_12_n_0 ;
  wire \t_type_reg[1]_i_13_n_0 ;
  wire \t_type_reg[1]_i_14_n_0 ;
  wire \t_type_reg[1]_i_15_n_0 ;
  wire \t_type_reg[1]_i_16_n_0 ;
  wire \t_type_reg[1]_i_1_n_0 ;
  wire \t_type_reg[1]_i_2_n_0 ;
  wire \t_type_reg[1]_i_3_n_0 ;
  wire \t_type_reg[1]_i_4_n_0 ;
  wire \t_type_reg[1]_i_5_n_0 ;
  wire \t_type_reg[1]_i_6_n_0 ;
  wire \t_type_reg[1]_i_7_n_0 ;
  wire \t_type_reg[1]_i_8_n_0 ;
  wire \t_type_reg[1]_i_9_n_0 ;
  wire \t_type_reg[2]_i_1_n_0 ;
  wire \t_type_reg[2]_i_2_n_0 ;
  wire \t_type_reg[2]_i_3_n_0 ;
  wire \t_type_reg[2]_i_4_n_0 ;
  wire \t_type_reg[2]_i_5_n_0 ;
  wire \t_type_reg[2]_i_6_n_0 ;
  wire \t_type_reg[2]_i_7_n_0 ;
  wire \t_type_reg[2]_i_8_n_0 ;
  wire \t_type_reg[2]_i_9_n_0 ;
  wire \t_type_reg_reg_n_0_[0] ;
  wire \t_type_reg_reg_n_0_[1] ;
  wire \t_type_reg_reg_n_0_[2] ;
  wire [65:0]\tx_66_enc_out_reg[65] ;
  wire [65:0]tx_encoded_data;
  wire \tx_encoded_data[10]_i_2_n_0 ;
  wire \tx_encoded_data[10]_i_3_n_0 ;
  wire \tx_encoded_data[11]_i_2_n_0 ;
  wire \tx_encoded_data[11]_i_3_n_0 ;
  wire \tx_encoded_data[11]_i_4_n_0 ;
  wire \tx_encoded_data[12]_i_2_n_0 ;
  wire \tx_encoded_data[12]_i_3_n_0 ;
  wire \tx_encoded_data[12]_i_4_n_0 ;
  wire \tx_encoded_data[13]_i_2_n_0 ;
  wire \tx_encoded_data[13]_i_3_n_0 ;
  wire \tx_encoded_data[13]_i_4_n_0 ;
  wire \tx_encoded_data[14]_i_2_n_0 ;
  wire \tx_encoded_data[14]_i_3_n_0 ;
  wire \tx_encoded_data[14]_i_4_n_0 ;
  wire \tx_encoded_data[15]_i_2_n_0 ;
  wire \tx_encoded_data[15]_i_3_n_0 ;
  wire \tx_encoded_data[16]_i_2_n_0 ;
  wire \tx_encoded_data[16]_i_3_n_0 ;
  wire \tx_encoded_data[16]_i_4_n_0 ;
  wire \tx_encoded_data[16]_i_5_n_0 ;
  wire \tx_encoded_data[17]_i_2_n_0 ;
  wire \tx_encoded_data[17]_i_3_n_0 ;
  wire \tx_encoded_data[17]_i_4_n_0 ;
  wire \tx_encoded_data[17]_i_5_n_0 ;
  wire \tx_encoded_data[18]_i_2_n_0 ;
  wire \tx_encoded_data[18]_i_3_n_0 ;
  wire \tx_encoded_data[18]_i_4_n_0 ;
  wire \tx_encoded_data[19]_i_2_n_0 ;
  wire \tx_encoded_data[19]_i_3_n_0 ;
  wire \tx_encoded_data[19]_i_4_n_0 ;
  wire \tx_encoded_data[1]_i_2_n_0 ;
  wire \tx_encoded_data[1]_i_3_n_0 ;
  wire \tx_encoded_data[1]_i_4_n_0 ;
  wire \tx_encoded_data[20]_i_2_n_0 ;
  wire \tx_encoded_data[20]_i_3_n_0 ;
  wire \tx_encoded_data[20]_i_4_n_0 ;
  wire \tx_encoded_data[21]_i_2_n_0 ;
  wire \tx_encoded_data[21]_i_3_n_0 ;
  wire \tx_encoded_data[21]_i_4_n_0 ;
  wire \tx_encoded_data[22]_i_2_n_0 ;
  wire \tx_encoded_data[22]_i_3_n_0 ;
  wire \tx_encoded_data[22]_i_4_n_0 ;
  wire \tx_encoded_data[23]_i_2_n_0 ;
  wire \tx_encoded_data[23]_i_3_n_0 ;
  wire \tx_encoded_data[23]_i_4_n_0 ;
  wire \tx_encoded_data[24]_i_2_n_0 ;
  wire \tx_encoded_data[24]_i_3_n_0 ;
  wire \tx_encoded_data[24]_i_4_n_0 ;
  wire \tx_encoded_data[25]_i_2_n_0 ;
  wire \tx_encoded_data[25]_i_3_n_0 ;
  wire \tx_encoded_data[25]_i_4_n_0 ;
  wire \tx_encoded_data[25]_i_5_n_0 ;
  wire \tx_encoded_data[26]_i_2_n_0 ;
  wire \tx_encoded_data[26]_i_3_n_0 ;
  wire \tx_encoded_data[26]_i_4_n_0 ;
  wire \tx_encoded_data[27]_i_2_n_0 ;
  wire \tx_encoded_data[27]_i_3_n_0 ;
  wire \tx_encoded_data[27]_i_4_n_0 ;
  wire \tx_encoded_data[28]_i_2_n_0 ;
  wire \tx_encoded_data[28]_i_3_n_0 ;
  wire \tx_encoded_data[28]_i_4_n_0 ;
  wire \tx_encoded_data[29]_i_2_n_0 ;
  wire \tx_encoded_data[29]_i_3_n_0 ;
  wire \tx_encoded_data[29]_i_4_n_0 ;
  wire \tx_encoded_data[2]_i_2_n_0 ;
  wire \tx_encoded_data[30]_i_2_n_0 ;
  wire \tx_encoded_data[30]_i_3_n_0 ;
  wire \tx_encoded_data[30]_i_4_n_0 ;
  wire \tx_encoded_data[31]_i_2_n_0 ;
  wire \tx_encoded_data[31]_i_3_n_0 ;
  wire \tx_encoded_data[31]_i_4_n_0 ;
  wire \tx_encoded_data[32]_i_2_n_0 ;
  wire \tx_encoded_data[32]_i_3_n_0 ;
  wire \tx_encoded_data[32]_i_4_n_0 ;
  wire \tx_encoded_data[32]_i_5_n_0 ;
  wire \tx_encoded_data[33]_i_2_n_0 ;
  wire \tx_encoded_data[33]_i_3_n_0 ;
  wire \tx_encoded_data[33]_i_4_n_0 ;
  wire \tx_encoded_data[33]_i_5_n_0 ;
  wire \tx_encoded_data[34]_i_2_n_0 ;
  wire \tx_encoded_data[34]_i_3_n_0 ;
  wire \tx_encoded_data[34]_i_4_n_0 ;
  wire \tx_encoded_data[34]_i_5_n_0 ;
  wire \tx_encoded_data[35]_i_10_n_0 ;
  wire \tx_encoded_data[35]_i_2_n_0 ;
  wire \tx_encoded_data[35]_i_3_n_0 ;
  wire \tx_encoded_data[35]_i_4_n_0 ;
  wire \tx_encoded_data[35]_i_5_n_0 ;
  wire \tx_encoded_data[35]_i_6_n_0 ;
  wire \tx_encoded_data[35]_i_7_n_0 ;
  wire \tx_encoded_data[35]_i_8_n_0 ;
  wire \tx_encoded_data[35]_i_9_n_0 ;
  wire \tx_encoded_data[36]_i_2_n_0 ;
  wire \tx_encoded_data[36]_i_3_n_0 ;
  wire \tx_encoded_data[36]_i_4_n_0 ;
  wire \tx_encoded_data[37]_i_2_n_0 ;
  wire \tx_encoded_data[37]_i_3_n_0 ;
  wire \tx_encoded_data[37]_i_4_n_0 ;
  wire \tx_encoded_data[38]_i_2_n_0 ;
  wire \tx_encoded_data[38]_i_3_n_0 ;
  wire \tx_encoded_data[38]_i_4_n_0 ;
  wire \tx_encoded_data[38]_i_5_n_0 ;
  wire \tx_encoded_data[39]_i_2_n_0 ;
  wire \tx_encoded_data[39]_i_3_n_0 ;
  wire \tx_encoded_data[39]_i_4_n_0 ;
  wire \tx_encoded_data[39]_i_5_n_0 ;
  wire \tx_encoded_data[3]_i_2_n_0 ;
  wire \tx_encoded_data[40]_i_2_n_0 ;
  wire \tx_encoded_data[40]_i_3_n_0 ;
  wire \tx_encoded_data[40]_i_4_n_0 ;
  wire \tx_encoded_data[40]_i_5_n_0 ;
  wire \tx_encoded_data[41]_i_2_n_0 ;
  wire \tx_encoded_data[41]_i_3_n_0 ;
  wire \tx_encoded_data[41]_i_4_n_0 ;
  wire \tx_encoded_data[41]_i_5_n_0 ;
  wire \tx_encoded_data[42]_i_2_n_0 ;
  wire \tx_encoded_data[42]_i_3_n_0 ;
  wire \tx_encoded_data[42]_i_4_n_0 ;
  wire \tx_encoded_data[43]_i_2_n_0 ;
  wire \tx_encoded_data[43]_i_3_n_0 ;
  wire \tx_encoded_data[43]_i_4_n_0 ;
  wire \tx_encoded_data[44]_i_2_n_0 ;
  wire \tx_encoded_data[44]_i_3_n_0 ;
  wire \tx_encoded_data[44]_i_4_n_0 ;
  wire \tx_encoded_data[45]_i_2_n_0 ;
  wire \tx_encoded_data[45]_i_3_n_0 ;
  wire \tx_encoded_data[45]_i_4_n_0 ;
  wire \tx_encoded_data[45]_i_5_n_0 ;
  wire \tx_encoded_data[46]_i_2_n_0 ;
  wire \tx_encoded_data[46]_i_3_n_0 ;
  wire \tx_encoded_data[46]_i_4_n_0 ;
  wire \tx_encoded_data[47]_i_2_n_0 ;
  wire \tx_encoded_data[47]_i_3_n_0 ;
  wire \tx_encoded_data[47]_i_4_n_0 ;
  wire \tx_encoded_data[48]_i_2_n_0 ;
  wire \tx_encoded_data[48]_i_3_n_0 ;
  wire \tx_encoded_data[48]_i_4_n_0 ;
  wire \tx_encoded_data[49]_i_2_n_0 ;
  wire \tx_encoded_data[49]_i_3_n_0 ;
  wire \tx_encoded_data[49]_i_4_n_0 ;
  wire \tx_encoded_data[4]_i_2_n_0 ;
  wire \tx_encoded_data[50]_i_2_n_0 ;
  wire \tx_encoded_data[50]_i_3_n_0 ;
  wire \tx_encoded_data[50]_i_4_n_0 ;
  wire \tx_encoded_data[51]_i_2_n_0 ;
  wire \tx_encoded_data[51]_i_3_n_0 ;
  wire \tx_encoded_data[51]_i_4_n_0 ;
  wire \tx_encoded_data[52]_i_2_n_0 ;
  wire \tx_encoded_data[52]_i_3_n_0 ;
  wire \tx_encoded_data[52]_i_4_n_0 ;
  wire \tx_encoded_data[53]_i_2_n_0 ;
  wire \tx_encoded_data[53]_i_3_n_0 ;
  wire \tx_encoded_data[53]_i_4_n_0 ;
  wire \tx_encoded_data[54]_i_2_n_0 ;
  wire \tx_encoded_data[54]_i_3_n_0 ;
  wire \tx_encoded_data[54]_i_4_n_0 ;
  wire \tx_encoded_data[55]_i_2_n_0 ;
  wire \tx_encoded_data[55]_i_3_n_0 ;
  wire \tx_encoded_data[55]_i_4_n_0 ;
  wire \tx_encoded_data[56]_i_2_n_0 ;
  wire \tx_encoded_data[56]_i_3_n_0 ;
  wire \tx_encoded_data[56]_i_4_n_0 ;
  wire \tx_encoded_data[57]_i_2_n_0 ;
  wire \tx_encoded_data[57]_i_3_n_0 ;
  wire \tx_encoded_data[57]_i_4_n_0 ;
  wire \tx_encoded_data[58]_i_2_n_0 ;
  wire \tx_encoded_data[58]_i_3_n_0 ;
  wire \tx_encoded_data[58]_i_4_n_0 ;
  wire \tx_encoded_data[59]_i_2_n_0 ;
  wire \tx_encoded_data[59]_i_3_n_0 ;
  wire \tx_encoded_data[5]_i_2_n_0 ;
  wire \tx_encoded_data[60]_i_2_n_0 ;
  wire \tx_encoded_data[61]_i_2_n_0 ;
  wire \tx_encoded_data[61]_i_3_n_0 ;
  wire \tx_encoded_data[62]_i_2_n_0 ;
  wire \tx_encoded_data[62]_i_3_n_0 ;
  wire \tx_encoded_data[63]_i_2_n_0 ;
  wire \tx_encoded_data[63]_i_3_n_0 ;
  wire \tx_encoded_data[63]_i_4_n_0 ;
  wire \tx_encoded_data[63]_i_5_n_0 ;
  wire \tx_encoded_data[64]_i_2_n_0 ;
  wire \tx_encoded_data[64]_i_3_n_0 ;
  wire \tx_encoded_data[64]_i_4_n_0 ;
  wire \tx_encoded_data[64]_i_5_n_0 ;
  wire \tx_encoded_data[65]_i_2_n_0 ;
  wire \tx_encoded_data[65]_i_3_n_0 ;
  wire \tx_encoded_data[65]_i_4_n_0 ;
  wire \tx_encoded_data[65]_i_5_n_0 ;
  wire \tx_encoded_data[65]_i_6_n_0 ;
  wire \tx_encoded_data[65]_i_7_n_0 ;
  wire \tx_encoded_data[65]_i_8_n_0 ;
  wire \tx_encoded_data[6]_i_2_n_0 ;
  wire \tx_encoded_data[7]_i_2_n_0 ;
  wire \tx_encoded_data[8]_i_2_n_0 ;
  wire \tx_encoded_data[9]_i_2_n_0 ;
  wire \tx_encoded_data[9]_i_3_n_0 ;
  wire \tx_encoded_data[9]_i_4_n_0 ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg1;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [7:0]tx_xgmii_ctrl_reg2;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ;
  wire \tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ;
  (* DONT_TOUCH *) (* equivalent_register_removal = "no" *) wire [63:0]tx_xgmii_data_reg2;
  wire tx_xgmii_valid_code1;
  wire tx_xgmii_valid_code7;
  wire tx_xgmii_valid_code70_in;
  wire tx_xgmii_valid_code71_in;
  wire tx_xgmii_valid_code72_in;
  wire tx_xgmii_valid_code73_in;
  wire tx_xgmii_valid_code74_in;
  wire tx_xgmii_valid_code75_in;
  wire tx_xgmii_valid_code76_in;
  wire \tx_xgmii_valid_code[0]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[0]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[1]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[2]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[3]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[4]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[5]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[6]_i_3_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_11_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_12_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_1_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_4_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_5_n_0 ;
  wire \tx_xgmii_valid_code[7]_i_6_n_0 ;
  wire \tx_xgmii_valid_code_reg_n_0_[0] ;
  wire \tx_xgmii_valid_code_reg_n_0_[1] ;
  wire \tx_xgmii_valid_code_reg_n_0_[2] ;
  wire \tx_xgmii_valid_code_reg_n_0_[3] ;
  wire \tx_xgmii_valid_code_reg_n_0_[4] ;
  wire \tx_xgmii_valid_code_reg_n_0_[5] ;
  wire \tx_xgmii_valid_code_reg_n_0_[6] ;
  wire [63:0]\xgmii_txd_reg_reg[63] ;

  LUT6 #(
    .INIT(64'h000000EFDFCFEFEF)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(out[1]),
        .I4(out[0]),
        .I5(out[2]),
        .O(\FSM_sequential_state_reg[2] [0]));
  LUT6 #(
    .INIT(64'h0000000002121155)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(Q[0]),
        .I1(out[2]),
        .I2(Q[1]),
        .I3(out[1]),
        .I4(out[0]),
        .I5(Q[2]),
        .O(\FSM_sequential_state_reg[2] [1]));
  LUT5 #(
    .INIT(32'h00400000)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(out[2]),
        .I1(out[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\FSM_sequential_state_reg[2] [2]));
  LUT5 #(
    .INIT(32'hFFFFAAAE)) 
    \block_field[0]_i_1 
       (.I0(\t_type_reg[0]_i_4_n_0 ),
        .I1(\block_field[0]_i_2_n_0 ),
        .I2(\block_field[0]_i_3_n_0 ),
        .I3(\block_field[0]_i_4_n_0 ),
        .I4(\t_type_reg[1]_i_7_n_0 ),
        .O(\block_field[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8002)) 
    \block_field[0]_i_2 
       (.I0(\block_field[6]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(tx_xgmii_ctrl_reg1[1]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFCFCFFF33113333)) 
    \block_field[0]_i_3 
       (.I0(o_code_c0),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(\t_type_reg[1]_i_16_n_0 ),
        .I3(s_code_c4_reg_n_0),
        .I4(o_code_c4),
        .I5(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7DFF)) 
    \block_field[0]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF0002)) 
    \block_field[1]_i_1 
       (.I0(\block_field[1]_i_2_n_0 ),
        .I1(\block_field[1]_i_3_n_0 ),
        .I2(\t_type_reg[2]_i_2_n_0 ),
        .I3(\t_type_reg[1]_i_2_n_0 ),
        .I4(\block_field[2]_i_5_n_0 ),
        .I5(\t_type_reg[2]_i_4_n_0 ),
        .O(\block_field[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h55550155)) 
    \block_field[1]_i_2 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(s_code_c0_reg_n_0),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(\block_field[5]_i_4_n_0 ),
        .I4(\block_field[1]_i_4_n_0 ),
        .O(\block_field[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \block_field[1]_i_3 
       (.I0(\t_type_reg[1]_i_9_n_0 ),
        .I1(\t_code_reg_n_0_[3] ),
        .I2(\t_type_reg[1]_i_11_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[1]),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .I5(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF7FFC0CCCCCC)) 
    \block_field[1]_i_4 
       (.I0(\t_type_reg[1]_i_16_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c4),
        .I4(o_code_c0),
        .I5(tx_xgmii_ctrl_reg1[3]),
        .O(\block_field[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555500004404)) 
    \block_field[2]_i_1 
       (.I0(\t_type_reg[0]_i_5_n_0 ),
        .I1(\block_field[2]_i_2_n_0 ),
        .I2(\block_field[2]_i_3_n_0 ),
        .I3(\block_field[2]_i_4_n_0 ),
        .I4(\block_field[4]_i_2_n_0 ),
        .I5(\block_field[2]_i_5_n_0 ),
        .O(\block_field[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \block_field[2]_i_2 
       (.I0(\t_type_reg[0]_i_3_n_0 ),
        .I1(\t_type_reg[2]_i_2_n_0 ),
        .I2(\t_type_reg[1]_i_5_n_0 ),
        .O(\block_field[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008100)) 
    \block_field[2]_i_3 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(\block_field[6]_i_3_n_0 ),
        .I4(\block_field[4]_i_4_n_0 ),
        .I5(\block_field[2]_i_6_n_0 ),
        .O(\block_field[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEBEEEFEEEFEEEFE)) 
    \block_field[2]_i_4 
       (.I0(\t_type_reg[2]_i_7_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(\t_type_reg[1]_i_16_n_0 ),
        .I5(s_code_c4_reg_n_0),
        .O(\block_field[2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h4000)) 
    \block_field[2]_i_5 
       (.I0(\t_type_reg[1]_i_11_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .O(\block_field[2]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \block_field[2]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(\t_type_reg[0]_i_6_n_0 ),
        .O(\block_field[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004500)) 
    \block_field[3]_i_1 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(\block_field[3]_i_2_n_0 ),
        .I2(\block_field[5]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_3_n_0 ),
        .I4(\t_type_reg[2]_i_4_n_0 ),
        .I5(\t_type_reg[2]_i_5_n_0 ),
        .O(\block_field[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h73F373FF7FFF7FFF)) 
    \block_field[3]_i_2 
       (.I0(\t_type_reg[1]_i_16_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(s_code_c4_reg_n_0),
        .I4(o_code_c4),
        .I5(o_code_c0),
        .O(\block_field[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \block_field[4]_i_1 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(\block_field[4]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_5_n_0 ),
        .I3(\t_type_reg[0]_i_5_n_0 ),
        .I4(\t_type_reg[2]_i_5_n_0 ),
        .I5(\t_type_reg[1]_i_2_n_0 ),
        .O(\block_field[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \block_field[4]_i_2 
       (.I0(\block_field[4]_i_4_n_0 ),
        .I1(p_5_in),
        .I2(\t_code_reg_n_0_[6] ),
        .O(\block_field[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFABBBFFFFFFFF)) 
    \block_field[4]_i_3 
       (.I0(\block_field[0]_i_4_n_0 ),
        .I1(\block_field[4]_i_5_n_0 ),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c0),
        .I4(\t_type_reg[1]_i_14_n_0 ),
        .I5(\block_field[2]_i_3_n_0 ),
        .O(\block_field[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \block_field[4]_i_4 
       (.I0(\t_type_reg[1]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[7]),
        .I5(tx_xgmii_ctrl_reg1[6]),
        .O(\block_field[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \block_field[4]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .O(\block_field[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FFBA)) 
    \block_field[5]_i_1 
       (.I0(\block_field[5]_i_2_n_0 ),
        .I1(\block_field[5]_i_3_n_0 ),
        .I2(\block_field[5]_i_4_n_0 ),
        .I3(\block_field[5]_i_5_n_0 ),
        .I4(\t_type_reg[2]_i_4_n_0 ),
        .I5(\block_field[5]_i_6_n_0 ),
        .O(\block_field[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \block_field[5]_i_2 
       (.I0(\t_code_reg_n_0_[7] ),
        .I1(\t_type_reg[0]_i_6_n_0 ),
        .I2(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8C8FBCBFBCBFBCBF)) 
    \block_field[5]_i_3 
       (.I0(\block_field[5]_i_7_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(s_code_c0_reg_n_0),
        .I4(o_code_c0),
        .I5(s_code_c4_reg_n_0),
        .O(\block_field[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \block_field[5]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[6]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[7]),
        .I3(tx_xgmii_ctrl_reg1[0]),
        .I4(\block_field[5]_i_8_n_0 ),
        .O(\block_field[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \block_field[5]_i_5 
       (.I0(\block_field[4]_i_2_n_0 ),
        .I1(\t_type_reg[0]_i_2_n_0 ),
        .O(\block_field[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \block_field[5]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(\block_field[5]_i_9_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[5]),
        .I4(tx_xgmii_ctrl_reg1[6]),
        .I5(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \block_field[5]_i_7 
       (.I0(o_code_c4),
        .I1(s_code_c4_reg_n_0),
        .I2(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I4(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I5(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .O(\block_field[5]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h7E)) 
    \block_field[5]_i_8 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .O(\block_field[5]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \block_field[5]_i_9 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .O(\block_field[5]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \block_field[6]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\t_type_reg[0]_i_3_n_0 ),
        .I2(\block_field[6]_i_2_n_0 ),
        .I3(\t_type_reg[0]_i_4_n_0 ),
        .O(\block_field[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \block_field[6]_i_2 
       (.I0(\block_field[6]_i_3_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(tx_xgmii_ctrl_reg1[3]),
        .I4(\block_field[6]_i_4_n_0 ),
        .I5(\t_type_reg[2]_i_7_n_0 ),
        .O(\block_field[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h400F)) 
    \block_field[6]_i_3 
       (.I0(\t_type_reg[1]_i_9_n_0 ),
        .I1(o_code_c0),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .O(\block_field[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00044444)) 
    \block_field[6]_i_4 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c4),
        .I4(o_code_c0),
        .O(\block_field[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \block_field[7]_i_1 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_2_n_0 ),
        .I2(\t_type_reg[0]_i_3_n_0 ),
        .I3(\t_type_reg[1]_i_7_n_0 ),
        .I4(\t_type_reg[0]_i_4_n_0 ),
        .I5(\t_type_reg[2]_i_4_n_0 ),
        .O(\block_field[7]_i_1_n_0 ));
  FDSE \block_field_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[0]_i_1_n_0 ),
        .Q(data12[2]),
        .S(SR));
  FDRE \block_field_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[1]_i_1_n_0 ),
        .Q(data12[3]),
        .R(1'b0));
  FDSE \block_field_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[2]_i_1_n_0 ),
        .Q(data12[4]),
        .S(SR));
  FDRE \block_field_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[3]_i_1_n_0 ),
        .Q(data12[5]),
        .R(1'b0));
  FDSE \block_field_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[4]_i_1_n_0 ),
        .Q(data12[6]),
        .S(SR));
  FDRE \block_field_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[5]_i_1_n_0 ),
        .Q(data12[7]),
        .R(1'b0));
  FDSE \block_field_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[6]_i_1_n_0 ),
        .Q(data12[8]),
        .S(SR));
  FDRE \block_field_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\block_field[7]_i_1_n_0 ),
        .Q(data12[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \c0[0]_i_1 
       (.I0(\c0[0]_i_2_n_0 ),
        .I1(\c0[5]_i_3_n_0 ),
        .O(\c0[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20B0FFFF20B00000)) 
    \c0[0]_i_2 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(\o0[3]_i_3_n_0 ),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(\c0[4]_i_2_n_0 ),
        .I5(c0[0]),
        .O(\c0[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBFBFFF3C)) 
    \c0[1]_i_1 
       (.I0(\c0[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(\c0[4]_i_5_n_0 ),
        .I4(tx_xgmii_data_reg2[6]),
        .O(\c0[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEE4EFFFF)) 
    \c0[2]_i_1 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(\c0[4]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(\c0[2]_i_2_n_0 ),
        .I4(tx_xgmii_data_reg2[5]),
        .O(\c0[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFFFF)) 
    \c0[2]_i_2 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[2]),
        .I4(tx_xgmii_data_reg2[0]),
        .O(\c0[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFBF5)) 
    \c0[3]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(\c0[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[6]),
        .O(\c0[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \c0[4]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(\c0[4]_i_4_n_0 ),
        .I3(tx_xgmii_data_reg2[0]),
        .I4(tx_xgmii_data_reg2[6]),
        .I5(tx_xgmii_ctrl_reg2[0]),
        .O(\c0[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFB0000)) 
    \c0[4]_i_2 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(\c0[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[7]),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .O(\c0[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFBF6)) 
    \c0[4]_i_3 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[6]),
        .I2(\c0[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[7]),
        .O(\c0[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c0[4]_i_4 
       (.I0(tx_xgmii_data_reg2[2]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[4]),
        .O(\c0[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c0[4]_i_5 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[2]),
        .I4(tx_xgmii_data_reg2[0]),
        .O(\c0[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \c0[5]_i_1 
       (.I0(c0[5]),
        .I1(\c0[4]_i_2_n_0 ),
        .I2(\c0[5]_i_2_n_0 ),
        .I3(\c0[5]_i_3_n_0 ),
        .O(\c0[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB0800F00)) 
    \c0[5]_i_2 
       (.I0(\c0[6]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(\o0[3]_i_3_n_0 ),
        .I4(tx_xgmii_data_reg2[7]),
        .O(\c0[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE2220000)) 
    \c0[5]_i_3 
       (.I0(\c0[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(\c0[6]_i_7_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .O(\c0[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c0[5]_i_4 
       (.I0(tx_xgmii_data_reg2[7]),
        .I1(\c0[4]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[0]),
        .I3(tx_xgmii_data_reg2[6]),
        .O(\c0[5]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c0[6]_i_1 
       (.I0(c0[6]),
        .I1(\c0[6]_i_2_n_0 ),
        .I2(\c0[6]_i_3_n_0 ),
        .I3(\c0[6]_i_4_n_0 ),
        .O(\c0[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEA0000)) 
    \c0[6]_i_2 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(\c0[4]_i_5_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .O(\c0[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBC80CC00)) 
    \c0[6]_i_3 
       (.I0(\c0[6]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[5]),
        .I2(tx_xgmii_data_reg2[7]),
        .I3(\o0[3]_i_3_n_0 ),
        .I4(tx_xgmii_data_reg2[6]),
        .O(\c0[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF4A4540400000000)) 
    \c0[6]_i_4 
       (.I0(tx_xgmii_data_reg2[6]),
        .I1(\c0[6]_i_6_n_0 ),
        .I2(tx_xgmii_data_reg2[5]),
        .I3(\o0[3]_i_4_n_0 ),
        .I4(\c0[6]_i_7_n_0 ),
        .I5(tx_xgmii_ctrl_reg2[0]),
        .O(\c0[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \c0[6]_i_5 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[3]),
        .I2(tx_xgmii_data_reg2[1]),
        .I3(tx_xgmii_data_reg2[2]),
        .I4(tx_xgmii_data_reg2[0]),
        .O(\c0[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004002000)) 
    \c0[6]_i_6 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[2]),
        .I4(tx_xgmii_data_reg2[0]),
        .I5(tx_xgmii_data_reg2[7]),
        .O(\c0[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \c0[6]_i_7 
       (.I0(tx_xgmii_data_reg2[0]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[1]),
        .I4(tx_xgmii_data_reg2[4]),
        .I5(tx_xgmii_data_reg2[7]),
        .O(\c0[6]_i_7_n_0 ));
  FDRE \c0_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[0]_i_1_n_0 ),
        .Q(c0[0]),
        .R(1'b0));
  FDRE \c0_reg[1] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[1]_i_1_n_0 ),
        .Q(c0[1]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[2] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[2]_i_1_n_0 ),
        .Q(c0[2]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[3] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[3]_i_1_n_0 ),
        .Q(c0[3]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[4] 
       (.C(coreclk),
        .CE(\c0[4]_i_2_n_0 ),
        .D(\c0[4]_i_3_n_0 ),
        .Q(c0[4]),
        .R(\c0[4]_i_1_n_0 ));
  FDRE \c0_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[5]_i_1_n_0 ),
        .Q(c0[5]),
        .R(1'b0));
  FDRE \c0_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c0[6]_i_1_n_0 ),
        .Q(c0[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c1[0]_i_1 
       (.I0(\c1[0]_i_2_n_0 ),
        .I1(\c1[5]_i_4_n_0 ),
        .O(\c1[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c1[0]_i_2 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(\c1[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(c1[0]),
        .O(\c1[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c1[1]_i_1 
       (.I0(\c1[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[11]),
        .O(\c1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c1[1]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[10]),
        .I3(tx_xgmii_data_reg2[12]),
        .I4(tx_xgmii_data_reg2[9]),
        .I5(tx_xgmii_data_reg2[8]),
        .O(\c1[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c1[2]_i_1 
       (.I0(\c1[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[13]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[14]),
        .I4(tx_xgmii_data_reg2[15]),
        .O(\c1[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c1[2]_i_2 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[9]),
        .I3(tx_xgmii_data_reg2[8]),
        .I4(tx_xgmii_data_reg2[11]),
        .O(\c1[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c1[3]_i_1 
       (.I0(\c1[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[13]),
        .I3(tx_xgmii_data_reg2[15]),
        .O(\c1[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c1[4]_i_1 
       (.I0(\c1[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[13]),
        .I4(tx_xgmii_ctrl_reg2[1]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c1[4]_i_2 
       (.I0(\c1[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[15]),
        .I2(tx_xgmii_data_reg2[14]),
        .I3(tx_xgmii_data_reg2[13]),
        .O(\c1[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c1[4]_i_3 
       (.I0(tx_xgmii_data_reg2[12]),
        .I1(tx_xgmii_data_reg2[8]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[9]),
        .O(\c1[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c1[4]_i_4 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[12]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[10]),
        .I4(tx_xgmii_data_reg2[9]),
        .O(\c1[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c1[5]_i_1 
       (.I0(c1[5]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(\c1[5]_i_2_n_0 ),
        .I3(\c1[5]_i_3_n_0 ),
        .I4(\c1[5]_i_4_n_0 ),
        .O(\c1[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c1[5]_i_2 
       (.I0(tx_xgmii_data_reg2[13]),
        .I1(tx_xgmii_data_reg2[11]),
        .I2(tx_xgmii_data_reg2[12]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[14]),
        .I5(tx_xgmii_data_reg2[10]),
        .O(\c1[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c1[5]_i_3 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[8]),
        .I2(tx_xgmii_data_reg2[9]),
        .O(\c1[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c1[5]_i_4 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[12]),
        .I2(tx_xgmii_data_reg2[8]),
        .I3(tx_xgmii_data_reg2[13]),
        .I4(tx_xgmii_data_reg2[9]),
        .I5(\c1[5]_i_5_n_0 ),
        .O(\c1[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c1[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .I1(tx_xgmii_data_reg2[10]),
        .I2(tx_xgmii_data_reg2[12]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[14]),
        .I5(tx_xgmii_data_reg2[13]),
        .O(\c1[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c1[6]_i_1 
       (.I0(c1[6]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(\c1[6]_i_2_n_0 ),
        .I3(\c1[6]_i_3_n_0 ),
        .O(\c1[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c1[6]_i_2 
       (.I0(tx_xgmii_data_reg2[11]),
        .I1(tx_xgmii_data_reg2[14]),
        .I2(tx_xgmii_data_reg2[15]),
        .I3(tx_xgmii_data_reg2[13]),
        .I4(\c1[2]_i_2_n_0 ),
        .O(\c1[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c1[6]_i_3 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_data_reg2[9]),
        .I2(tx_xgmii_data_reg2[11]),
        .I3(tx_xgmii_data_reg2[12]),
        .I4(tx_xgmii_data_reg2[8]),
        .I5(\c1[6]_i_4_n_0 ),
        .O(\c1[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c1[6]_i_4 
       (.I0(tx_xgmii_data_reg2[14]),
        .I1(tx_xgmii_ctrl_reg2[1]),
        .I2(tx_xgmii_data_reg2[10]),
        .I3(tx_xgmii_data_reg2[15]),
        .I4(tx_xgmii_data_reg2[13]),
        .I5(tx_xgmii_data_reg2[12]),
        .O(\c1[6]_i_4_n_0 ));
  FDRE \c1_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[0]_i_1_n_0 ),
        .Q(c1[0]),
        .R(1'b0));
  FDRE \c1_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[1]_i_1_n_0 ),
        .Q(c1[1]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[2]_i_1_n_0 ),
        .Q(c1[2]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[3]_i_1_n_0 ),
        .Q(c1[3]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[1]),
        .D(\c1[4]_i_2_n_0 ),
        .Q(c1[4]),
        .R(\c1[4]_i_1_n_0 ));
  FDRE \c1_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[5]_i_1_n_0 ),
        .Q(c1[5]),
        .R(1'b0));
  FDRE \c1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c1[6]_i_1_n_0 ),
        .Q(c1[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c2[0]_i_1 
       (.I0(\c2[0]_i_2_n_0 ),
        .I1(\c2[5]_i_4_n_0 ),
        .O(\c2[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c2[0]_i_2 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(\c2[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(c2[0]),
        .O(\c2[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c2[1]_i_1 
       (.I0(\c2[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[19]),
        .O(\c2[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c2[1]_i_2 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[18]),
        .I3(tx_xgmii_data_reg2[20]),
        .I4(tx_xgmii_data_reg2[17]),
        .I5(tx_xgmii_data_reg2[16]),
        .O(\c2[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c2[2]_i_1 
       (.I0(\c2[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[21]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[22]),
        .I4(tx_xgmii_data_reg2[23]),
        .O(\c2[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c2[2]_i_2 
       (.I0(tx_xgmii_data_reg2[20]),
        .I1(tx_xgmii_data_reg2[18]),
        .I2(tx_xgmii_data_reg2[17]),
        .I3(tx_xgmii_data_reg2[16]),
        .I4(tx_xgmii_data_reg2[19]),
        .O(\c2[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c2[3]_i_1 
       (.I0(\c2[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[21]),
        .I3(tx_xgmii_data_reg2[23]),
        .O(\c2[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c2[4]_i_1 
       (.I0(\c2[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_ctrl_reg2[2]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c2[4]_i_2 
       (.I0(\c2[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[23]),
        .I2(tx_xgmii_data_reg2[22]),
        .I3(tx_xgmii_data_reg2[21]),
        .O(\c2[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c2[4]_i_3 
       (.I0(tx_xgmii_data_reg2[20]),
        .I1(tx_xgmii_data_reg2[16]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[17]),
        .O(\c2[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c2[4]_i_4 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[18]),
        .I4(tx_xgmii_data_reg2[17]),
        .O(\c2[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c2[5]_i_1 
       (.I0(c2[5]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(\c2[5]_i_2_n_0 ),
        .I3(\c2[5]_i_3_n_0 ),
        .I4(\c2[5]_i_4_n_0 ),
        .O(\c2[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c2[5]_i_2 
       (.I0(tx_xgmii_data_reg2[21]),
        .I1(tx_xgmii_data_reg2[19]),
        .I2(tx_xgmii_data_reg2[20]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[22]),
        .I5(tx_xgmii_data_reg2[18]),
        .O(\c2[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c2[5]_i_3 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[16]),
        .I2(tx_xgmii_data_reg2[17]),
        .O(\c2[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c2[5]_i_4 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[20]),
        .I2(tx_xgmii_data_reg2[16]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(tx_xgmii_data_reg2[17]),
        .I5(\c2[5]_i_5_n_0 ),
        .O(\c2[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c2[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .I1(tx_xgmii_data_reg2[18]),
        .I2(tx_xgmii_data_reg2[20]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[22]),
        .I5(tx_xgmii_data_reg2[21]),
        .O(\c2[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c2[6]_i_1 
       (.I0(c2[6]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(\c2[6]_i_2_n_0 ),
        .I3(\c2[6]_i_3_n_0 ),
        .O(\c2[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c2[6]_i_2 
       (.I0(tx_xgmii_data_reg2[19]),
        .I1(tx_xgmii_data_reg2[22]),
        .I2(tx_xgmii_data_reg2[23]),
        .I3(tx_xgmii_data_reg2[21]),
        .I4(\c2[2]_i_2_n_0 ),
        .O(\c2[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c2[6]_i_3 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_data_reg2[17]),
        .I2(tx_xgmii_data_reg2[19]),
        .I3(tx_xgmii_data_reg2[20]),
        .I4(tx_xgmii_data_reg2[16]),
        .I5(\c2[6]_i_4_n_0 ),
        .O(\c2[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c2[6]_i_4 
       (.I0(tx_xgmii_data_reg2[22]),
        .I1(tx_xgmii_ctrl_reg2[2]),
        .I2(tx_xgmii_data_reg2[18]),
        .I3(tx_xgmii_data_reg2[23]),
        .I4(tx_xgmii_data_reg2[21]),
        .I5(tx_xgmii_data_reg2[20]),
        .O(\c2[6]_i_4_n_0 ));
  FDRE \c2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[0]_i_1_n_0 ),
        .Q(c2[0]),
        .R(1'b0));
  FDRE \c2_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[1]_i_1_n_0 ),
        .Q(c2[1]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[2]_i_1_n_0 ),
        .Q(c2[2]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[3]_i_1_n_0 ),
        .Q(c2[3]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[2]),
        .D(\c2[4]_i_2_n_0 ),
        .Q(c2[4]),
        .R(\c2[4]_i_1_n_0 ));
  FDRE \c2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[5]_i_1_n_0 ),
        .Q(c2[5]),
        .R(1'b0));
  FDRE \c2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c2[6]_i_1_n_0 ),
        .Q(c2[6]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c3[0]_i_1 
       (.I0(\c3[0]_i_2_n_0 ),
        .I1(\c3[5]_i_4_n_0 ),
        .O(\c3[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c3[0]_i_2 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(\c3[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(c3[0]),
        .O(\c3[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c3[1]_i_1 
       (.I0(\c3[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[27]),
        .O(\c3[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c3[1]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[26]),
        .I3(tx_xgmii_data_reg2[28]),
        .I4(tx_xgmii_data_reg2[25]),
        .I5(tx_xgmii_data_reg2[24]),
        .O(\c3[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c3[2]_i_1 
       (.I0(\c3[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[29]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[30]),
        .I4(tx_xgmii_data_reg2[31]),
        .O(\c3[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c3[2]_i_2 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[25]),
        .I3(tx_xgmii_data_reg2[24]),
        .I4(tx_xgmii_data_reg2[27]),
        .O(\c3[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c3[3]_i_1 
       (.I0(\c3[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[29]),
        .I3(tx_xgmii_data_reg2[31]),
        .O(\c3[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c3[4]_i_1 
       (.I0(\c3[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[29]),
        .I4(tx_xgmii_ctrl_reg2[3]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c3[4]_i_2 
       (.I0(\c3[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[31]),
        .I2(tx_xgmii_data_reg2[30]),
        .I3(tx_xgmii_data_reg2[29]),
        .O(\c3[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c3[4]_i_3 
       (.I0(tx_xgmii_data_reg2[28]),
        .I1(tx_xgmii_data_reg2[24]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[25]),
        .O(\c3[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c3[4]_i_4 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[28]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[26]),
        .I4(tx_xgmii_data_reg2[25]),
        .O(\c3[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c3[5]_i_1 
       (.I0(c3[5]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(\c3[5]_i_2_n_0 ),
        .I3(\c3[5]_i_3_n_0 ),
        .I4(\c3[5]_i_4_n_0 ),
        .O(\c3[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c3[5]_i_2 
       (.I0(tx_xgmii_data_reg2[29]),
        .I1(tx_xgmii_data_reg2[27]),
        .I2(tx_xgmii_data_reg2[28]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[30]),
        .I5(tx_xgmii_data_reg2[26]),
        .O(\c3[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c3[5]_i_3 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[24]),
        .I2(tx_xgmii_data_reg2[25]),
        .O(\c3[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c3[5]_i_4 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[28]),
        .I2(tx_xgmii_data_reg2[24]),
        .I3(tx_xgmii_data_reg2[29]),
        .I4(tx_xgmii_data_reg2[25]),
        .I5(\c3[5]_i_5_n_0 ),
        .O(\c3[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c3[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .I1(tx_xgmii_data_reg2[26]),
        .I2(tx_xgmii_data_reg2[28]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[30]),
        .I5(tx_xgmii_data_reg2[29]),
        .O(\c3[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c3[6]_i_1 
       (.I0(c3[6]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(\c3[6]_i_2_n_0 ),
        .I3(\c3[6]_i_3_n_0 ),
        .O(\c3[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c3[6]_i_2 
       (.I0(tx_xgmii_data_reg2[27]),
        .I1(tx_xgmii_data_reg2[30]),
        .I2(tx_xgmii_data_reg2[31]),
        .I3(tx_xgmii_data_reg2[29]),
        .I4(\c3[2]_i_2_n_0 ),
        .O(\c3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c3[6]_i_3 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_data_reg2[25]),
        .I2(tx_xgmii_data_reg2[27]),
        .I3(tx_xgmii_data_reg2[28]),
        .I4(tx_xgmii_data_reg2[24]),
        .I5(\c3[6]_i_4_n_0 ),
        .O(\c3[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c3[6]_i_4 
       (.I0(tx_xgmii_data_reg2[30]),
        .I1(tx_xgmii_ctrl_reg2[3]),
        .I2(tx_xgmii_data_reg2[26]),
        .I3(tx_xgmii_data_reg2[31]),
        .I4(tx_xgmii_data_reg2[29]),
        .I5(tx_xgmii_data_reg2[28]),
        .O(\c3[6]_i_4_n_0 ));
  FDRE \c3_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[0]_i_1_n_0 ),
        .Q(c3[0]),
        .R(1'b0));
  FDRE \c3_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[1]_i_1_n_0 ),
        .Q(c3[1]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[2]_i_1_n_0 ),
        .Q(c3[2]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[3]_i_1_n_0 ),
        .Q(c3[3]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[3]),
        .D(\c3[4]_i_2_n_0 ),
        .Q(c3[4]),
        .R(\c3[4]_i_1_n_0 ));
  FDRE \c3_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[5]_i_1_n_0 ),
        .Q(c3[5]),
        .R(1'b0));
  FDRE \c3_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c3[6]_i_1_n_0 ),
        .Q(c3[6]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \c4[0]_i_1 
       (.I0(\c4[0]_i_2_n_0 ),
        .I1(\c4[5]_i_3_n_0 ),
        .O(\c4[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h20B0FFFF20B00000)) 
    \c4[0]_i_2 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(\o4[3]_i_3_n_0 ),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(\c4[4]_i_2_n_0 ),
        .I5(data12[38]),
        .O(\c4[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBFBFFF3C)) 
    \c4[1]_i_1 
       (.I0(\c4[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(\c4[4]_i_5_n_0 ),
        .I4(tx_xgmii_data_reg2[38]),
        .O(\c4[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEE4EFFFF)) 
    \c4[2]_i_1 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(\c4[4]_i_5_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(\c4[2]_i_2_n_0 ),
        .I4(tx_xgmii_data_reg2[37]),
        .O(\c4[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF7FFFFFF)) 
    \c4[2]_i_2 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[34]),
        .I4(tx_xgmii_data_reg2[32]),
        .O(\c4[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFBF5)) 
    \c4[3]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(\c4[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[38]),
        .O(\c4[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \c4[4]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(\c4[4]_i_4_n_0 ),
        .I3(tx_xgmii_data_reg2[32]),
        .I4(tx_xgmii_data_reg2[38]),
        .I5(tx_xgmii_ctrl_reg2[4]),
        .O(\c4[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFB0000)) 
    \c4[4]_i_2 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(\c4[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[39]),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .O(\c4[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFBF6)) 
    \c4[4]_i_3 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[38]),
        .I2(\c4[4]_i_5_n_0 ),
        .I3(tx_xgmii_data_reg2[39]),
        .O(\c4[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \c4[4]_i_4 
       (.I0(tx_xgmii_data_reg2[34]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[36]),
        .O(\c4[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c4[4]_i_5 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[34]),
        .I4(tx_xgmii_data_reg2[32]),
        .O(\c4[4]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT4 #(
    .INIT(16'h00E2)) 
    \c4[5]_i_1 
       (.I0(data12[43]),
        .I1(\c4[4]_i_2_n_0 ),
        .I2(\c4[5]_i_2_n_0 ),
        .I3(\c4[5]_i_3_n_0 ),
        .O(\c4[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB0800F00)) 
    \c4[5]_i_2 
       (.I0(\c4[6]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(\o4[3]_i_3_n_0 ),
        .I4(tx_xgmii_data_reg2[39]),
        .O(\c4[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE2220000)) 
    \c4[5]_i_3 
       (.I0(\c4[5]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(\c4[6]_i_7_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .O(\c4[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \c4[5]_i_4 
       (.I0(tx_xgmii_data_reg2[39]),
        .I1(\c4[4]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[32]),
        .I3(tx_xgmii_data_reg2[38]),
        .O(\c4[5]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c4[6]_i_1 
       (.I0(data12[44]),
        .I1(\c4[6]_i_2_n_0 ),
        .I2(\c4[6]_i_3_n_0 ),
        .I3(\c4[6]_i_4_n_0 ),
        .O(\c4[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEA0000)) 
    \c4[6]_i_2 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(\c4[4]_i_5_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .O(\c4[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBC80CC00)) 
    \c4[6]_i_3 
       (.I0(\c4[6]_i_5_n_0 ),
        .I1(tx_xgmii_data_reg2[37]),
        .I2(tx_xgmii_data_reg2[39]),
        .I3(\o4[3]_i_3_n_0 ),
        .I4(tx_xgmii_data_reg2[38]),
        .O(\c4[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF4A4540400000000)) 
    \c4[6]_i_4 
       (.I0(tx_xgmii_data_reg2[38]),
        .I1(\c4[6]_i_6_n_0 ),
        .I2(tx_xgmii_data_reg2[37]),
        .I3(\o4[3]_i_4_n_0 ),
        .I4(\c4[6]_i_7_n_0 ),
        .I5(tx_xgmii_ctrl_reg2[4]),
        .O(\c4[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \c4[6]_i_5 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[35]),
        .I2(tx_xgmii_data_reg2[33]),
        .I3(tx_xgmii_data_reg2[34]),
        .I4(tx_xgmii_data_reg2[32]),
        .O(\c4[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004002000)) 
    \c4[6]_i_6 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[34]),
        .I4(tx_xgmii_data_reg2[32]),
        .I5(tx_xgmii_data_reg2[39]),
        .O(\c4[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \c4[6]_i_7 
       (.I0(tx_xgmii_data_reg2[32]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[33]),
        .I4(tx_xgmii_data_reg2[36]),
        .I5(tx_xgmii_data_reg2[39]),
        .O(\c4[6]_i_7_n_0 ));
  FDRE \c4_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[0]_i_1_n_0 ),
        .Q(data12[38]),
        .R(1'b0));
  FDRE \c4_reg[1] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[1]_i_1_n_0 ),
        .Q(data12[39]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[2] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[2]_i_1_n_0 ),
        .Q(data12[40]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[3] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[3]_i_1_n_0 ),
        .Q(data12[41]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[4] 
       (.C(coreclk),
        .CE(\c4[4]_i_2_n_0 ),
        .D(\c4[4]_i_3_n_0 ),
        .Q(data12[42]),
        .R(\c4[4]_i_1_n_0 ));
  FDRE \c4_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[5]_i_1_n_0 ),
        .Q(data12[43]),
        .R(1'b0));
  FDRE \c4_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c4[6]_i_1_n_0 ),
        .Q(data12[44]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c5[0]_i_1 
       (.I0(\c5[0]_i_2_n_0 ),
        .I1(\c5[5]_i_4_n_0 ),
        .O(\c5[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c5[0]_i_2 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(\c5[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(data12[45]),
        .O(\c5[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c5[1]_i_1 
       (.I0(\c5[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[43]),
        .O(\c5[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c5[1]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[42]),
        .I3(tx_xgmii_data_reg2[44]),
        .I4(tx_xgmii_data_reg2[41]),
        .I5(tx_xgmii_data_reg2[40]),
        .O(\c5[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c5[2]_i_1 
       (.I0(\c5[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[45]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[46]),
        .I4(tx_xgmii_data_reg2[47]),
        .O(\c5[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c5[2]_i_2 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[41]),
        .I3(tx_xgmii_data_reg2[40]),
        .I4(tx_xgmii_data_reg2[43]),
        .O(\c5[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c5[3]_i_1 
       (.I0(\c5[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[45]),
        .I3(tx_xgmii_data_reg2[47]),
        .O(\c5[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c5[4]_i_1 
       (.I0(\c5[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[45]),
        .I4(tx_xgmii_ctrl_reg2[5]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c5[4]_i_2 
       (.I0(\c5[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[47]),
        .I2(tx_xgmii_data_reg2[46]),
        .I3(tx_xgmii_data_reg2[45]),
        .O(\c5[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c5[4]_i_3 
       (.I0(tx_xgmii_data_reg2[44]),
        .I1(tx_xgmii_data_reg2[40]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[41]),
        .O(\c5[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c5[4]_i_4 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[44]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[42]),
        .I4(tx_xgmii_data_reg2[41]),
        .O(\c5[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c5[5]_i_1 
       (.I0(data12[50]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(\c5[5]_i_2_n_0 ),
        .I3(\c5[5]_i_3_n_0 ),
        .I4(\c5[5]_i_4_n_0 ),
        .O(\c5[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c5[5]_i_2 
       (.I0(tx_xgmii_data_reg2[45]),
        .I1(tx_xgmii_data_reg2[43]),
        .I2(tx_xgmii_data_reg2[44]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[46]),
        .I5(tx_xgmii_data_reg2[42]),
        .O(\c5[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c5[5]_i_3 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[40]),
        .I2(tx_xgmii_data_reg2[41]),
        .O(\c5[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c5[5]_i_4 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[44]),
        .I2(tx_xgmii_data_reg2[40]),
        .I3(tx_xgmii_data_reg2[45]),
        .I4(tx_xgmii_data_reg2[41]),
        .I5(\c5[5]_i_5_n_0 ),
        .O(\c5[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c5[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .I1(tx_xgmii_data_reg2[42]),
        .I2(tx_xgmii_data_reg2[44]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[46]),
        .I5(tx_xgmii_data_reg2[45]),
        .O(\c5[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c5[6]_i_1 
       (.I0(data12[51]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(\c5[6]_i_2_n_0 ),
        .I3(\c5[6]_i_3_n_0 ),
        .O(\c5[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c5[6]_i_2 
       (.I0(tx_xgmii_data_reg2[43]),
        .I1(tx_xgmii_data_reg2[46]),
        .I2(tx_xgmii_data_reg2[47]),
        .I3(tx_xgmii_data_reg2[45]),
        .I4(\c5[2]_i_2_n_0 ),
        .O(\c5[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c5[6]_i_3 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_data_reg2[41]),
        .I2(tx_xgmii_data_reg2[43]),
        .I3(tx_xgmii_data_reg2[44]),
        .I4(tx_xgmii_data_reg2[40]),
        .I5(\c5[6]_i_4_n_0 ),
        .O(\c5[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c5[6]_i_4 
       (.I0(tx_xgmii_data_reg2[46]),
        .I1(tx_xgmii_ctrl_reg2[5]),
        .I2(tx_xgmii_data_reg2[42]),
        .I3(tx_xgmii_data_reg2[47]),
        .I4(tx_xgmii_data_reg2[45]),
        .I5(tx_xgmii_data_reg2[44]),
        .O(\c5[6]_i_4_n_0 ));
  FDRE \c5_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[0]_i_1_n_0 ),
        .Q(data12[45]),
        .R(1'b0));
  FDRE \c5_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[1]_i_1_n_0 ),
        .Q(data12[46]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[2]_i_1_n_0 ),
        .Q(data12[47]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[3]_i_1_n_0 ),
        .Q(data12[48]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[5]),
        .D(\c5[4]_i_2_n_0 ),
        .Q(data12[49]),
        .R(\c5[4]_i_1_n_0 ));
  FDRE \c5_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[5]_i_1_n_0 ),
        .Q(data12[50]),
        .R(1'b0));
  FDRE \c5_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c5[6]_i_1_n_0 ),
        .Q(data12[51]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c6[0]_i_1 
       (.I0(\c6[0]_i_2_n_0 ),
        .I1(\c6[5]_i_4_n_0 ),
        .O(\c6[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c6[0]_i_2 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(\c6[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(data12[52]),
        .O(\c6[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c6[1]_i_1 
       (.I0(\c6[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[51]),
        .O(\c6[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c6[1]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[50]),
        .I3(tx_xgmii_data_reg2[52]),
        .I4(tx_xgmii_data_reg2[49]),
        .I5(tx_xgmii_data_reg2[48]),
        .O(\c6[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c6[2]_i_1 
       (.I0(\c6[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[53]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[54]),
        .I4(tx_xgmii_data_reg2[55]),
        .O(\c6[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c6[2]_i_2 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[49]),
        .I3(tx_xgmii_data_reg2[48]),
        .I4(tx_xgmii_data_reg2[51]),
        .O(\c6[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c6[3]_i_1 
       (.I0(\c6[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[53]),
        .I3(tx_xgmii_data_reg2[55]),
        .O(\c6[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c6[4]_i_1 
       (.I0(\c6[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[53]),
        .I4(tx_xgmii_ctrl_reg2[6]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c6[4]_i_2 
       (.I0(\c6[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[55]),
        .I2(tx_xgmii_data_reg2[54]),
        .I3(tx_xgmii_data_reg2[53]),
        .O(\c6[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c6[4]_i_3 
       (.I0(tx_xgmii_data_reg2[52]),
        .I1(tx_xgmii_data_reg2[48]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[49]),
        .O(\c6[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c6[4]_i_4 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[52]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[50]),
        .I4(tx_xgmii_data_reg2[49]),
        .O(\c6[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c6[5]_i_1 
       (.I0(data12[57]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(\c6[5]_i_2_n_0 ),
        .I3(\c6[5]_i_3_n_0 ),
        .I4(\c6[5]_i_4_n_0 ),
        .O(\c6[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c6[5]_i_2 
       (.I0(tx_xgmii_data_reg2[53]),
        .I1(tx_xgmii_data_reg2[51]),
        .I2(tx_xgmii_data_reg2[52]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[54]),
        .I5(tx_xgmii_data_reg2[50]),
        .O(\c6[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c6[5]_i_3 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[48]),
        .I2(tx_xgmii_data_reg2[49]),
        .O(\c6[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c6[5]_i_4 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[52]),
        .I2(tx_xgmii_data_reg2[48]),
        .I3(tx_xgmii_data_reg2[53]),
        .I4(tx_xgmii_data_reg2[49]),
        .I5(\c6[5]_i_5_n_0 ),
        .O(\c6[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c6[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .I1(tx_xgmii_data_reg2[50]),
        .I2(tx_xgmii_data_reg2[52]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[54]),
        .I5(tx_xgmii_data_reg2[53]),
        .O(\c6[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c6[6]_i_1 
       (.I0(data12[58]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(\c6[6]_i_2_n_0 ),
        .I3(\c6[6]_i_3_n_0 ),
        .O(\c6[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c6[6]_i_2 
       (.I0(tx_xgmii_data_reg2[51]),
        .I1(tx_xgmii_data_reg2[54]),
        .I2(tx_xgmii_data_reg2[55]),
        .I3(tx_xgmii_data_reg2[53]),
        .I4(\c6[2]_i_2_n_0 ),
        .O(\c6[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c6[6]_i_3 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_data_reg2[49]),
        .I2(tx_xgmii_data_reg2[51]),
        .I3(tx_xgmii_data_reg2[52]),
        .I4(tx_xgmii_data_reg2[48]),
        .I5(\c6[6]_i_4_n_0 ),
        .O(\c6[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c6[6]_i_4 
       (.I0(tx_xgmii_data_reg2[54]),
        .I1(tx_xgmii_ctrl_reg2[6]),
        .I2(tx_xgmii_data_reg2[50]),
        .I3(tx_xgmii_data_reg2[55]),
        .I4(tx_xgmii_data_reg2[53]),
        .I5(tx_xgmii_data_reg2[52]),
        .O(\c6[6]_i_4_n_0 ));
  FDRE \c6_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[0]_i_1_n_0 ),
        .Q(data12[52]),
        .R(1'b0));
  FDRE \c6_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[1]_i_1_n_0 ),
        .Q(data12[53]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[2]_i_1_n_0 ),
        .Q(data12[54]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[3]_i_1_n_0 ),
        .Q(data12[55]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[6]),
        .D(\c6[4]_i_2_n_0 ),
        .Q(data12[56]),
        .R(\c6[4]_i_1_n_0 ));
  FDRE \c6_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[5]_i_1_n_0 ),
        .Q(data12[57]),
        .R(1'b0));
  FDRE \c6_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c6[6]_i_1_n_0 ),
        .Q(data12[58]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \c7[0]_i_1 
       (.I0(\c7[0]_i_2_n_0 ),
        .I1(\c7[5]_i_4_n_0 ),
        .O(\c7[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h005DFFFF005D0000)) 
    \c7[0]_i_2 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(\c7[4]_i_4_n_0 ),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(data12[59]),
        .O(\c7[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hBEBF)) 
    \c7[1]_i_1 
       (.I0(\c7[1]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[59]),
        .O(\c7[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFFFFFDFFF)) 
    \c7[1]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[58]),
        .I3(tx_xgmii_data_reg2[60]),
        .I4(tx_xgmii_data_reg2[57]),
        .I5(tx_xgmii_data_reg2[56]),
        .O(\c7[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFFBFBF)) 
    \c7[2]_i_1 
       (.I0(\c7[2]_i_2_n_0 ),
        .I1(tx_xgmii_data_reg2[61]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[62]),
        .I4(tx_xgmii_data_reg2[63]),
        .O(\c7[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFF77FFF)) 
    \c7[2]_i_2 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[57]),
        .I3(tx_xgmii_data_reg2[56]),
        .I4(tx_xgmii_data_reg2[59]),
        .O(\c7[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hEBEF)) 
    \c7[3]_i_1 
       (.I0(\c7[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[61]),
        .I3(tx_xgmii_data_reg2[63]),
        .O(\c7[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \c7[4]_i_1 
       (.I0(\c7[4]_i_3_n_0 ),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[61]),
        .I4(tx_xgmii_ctrl_reg2[7]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFBE)) 
    \c7[4]_i_2 
       (.I0(\c7[4]_i_4_n_0 ),
        .I1(tx_xgmii_data_reg2[63]),
        .I2(tx_xgmii_data_reg2[62]),
        .I3(tx_xgmii_data_reg2[61]),
        .O(\c7[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \c7[4]_i_3 
       (.I0(tx_xgmii_data_reg2[60]),
        .I1(tx_xgmii_data_reg2[56]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[57]),
        .O(\c7[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \c7[4]_i_4 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[60]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[58]),
        .I4(tx_xgmii_data_reg2[57]),
        .O(\c7[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00002E22)) 
    \c7[5]_i_1 
       (.I0(data12[64]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(\c7[5]_i_2_n_0 ),
        .I3(\c7[5]_i_3_n_0 ),
        .I4(\c7[5]_i_4_n_0 ),
        .O(\c7[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9FFFFF3FFFFFFFFF)) 
    \c7[5]_i_2 
       (.I0(tx_xgmii_data_reg2[61]),
        .I1(tx_xgmii_data_reg2[59]),
        .I2(tx_xgmii_data_reg2[60]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[62]),
        .I5(tx_xgmii_data_reg2[58]),
        .O(\c7[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h42)) 
    \c7[5]_i_3 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[56]),
        .I2(tx_xgmii_data_reg2[57]),
        .O(\c7[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000018100008)) 
    \c7[5]_i_4 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[60]),
        .I2(tx_xgmii_data_reg2[56]),
        .I3(tx_xgmii_data_reg2[61]),
        .I4(tx_xgmii_data_reg2[57]),
        .I5(\c7[5]_i_5_n_0 ),
        .O(\c7[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFF7FF7)) 
    \c7[5]_i_5 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .I1(tx_xgmii_data_reg2[58]),
        .I2(tx_xgmii_data_reg2[60]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[62]),
        .I5(tx_xgmii_data_reg2[61]),
        .O(\c7[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \c7[6]_i_1 
       (.I0(data12[65]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(\c7[6]_i_2_n_0 ),
        .I3(\c7[6]_i_3_n_0 ),
        .O(\c7[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00006AA2)) 
    \c7[6]_i_2 
       (.I0(tx_xgmii_data_reg2[59]),
        .I1(tx_xgmii_data_reg2[62]),
        .I2(tx_xgmii_data_reg2[63]),
        .I3(tx_xgmii_data_reg2[61]),
        .I4(\c7[2]_i_2_n_0 ),
        .O(\c7[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000C9000)) 
    \c7[6]_i_3 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_data_reg2[57]),
        .I2(tx_xgmii_data_reg2[59]),
        .I3(tx_xgmii_data_reg2[60]),
        .I4(tx_xgmii_data_reg2[56]),
        .I5(\c7[6]_i_4_n_0 ),
        .O(\c7[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FBFBFBFFFFFFFBF)) 
    \c7[6]_i_4 
       (.I0(tx_xgmii_data_reg2[62]),
        .I1(tx_xgmii_ctrl_reg2[7]),
        .I2(tx_xgmii_data_reg2[58]),
        .I3(tx_xgmii_data_reg2[63]),
        .I4(tx_xgmii_data_reg2[61]),
        .I5(tx_xgmii_data_reg2[60]),
        .O(\c7[6]_i_4_n_0 ));
  FDRE \c7_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[0]_i_1_n_0 ),
        .Q(data12[59]),
        .R(1'b0));
  FDRE \c7_reg[1] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[1]_i_1_n_0 ),
        .Q(data12[60]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[2] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[2]_i_1_n_0 ),
        .Q(data12[61]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[3] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[3]_i_1_n_0 ),
        .Q(data12[62]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[4] 
       (.C(coreclk),
        .CE(tx_xgmii_ctrl_reg2[7]),
        .D(\c7[4]_i_2_n_0 ),
        .Q(data12[63]),
        .R(\c7[4]_i_1_n_0 ));
  FDRE \c7_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[5]_i_1_n_0 ),
        .Q(data12[64]),
        .R(1'b0));
  FDRE \c7_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\c7[6]_i_1_n_0 ),
        .Q(data12[65]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d0[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[0]),
        .O(\d0[7]_i_1_n_0 ));
  FDRE \d0_reg[0] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[0]),
        .Q(data8[10]),
        .R(1'b0));
  FDRE \d0_reg[1] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[1]),
        .Q(data8[11]),
        .R(1'b0));
  FDRE \d0_reg[2] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[2]),
        .Q(data8[12]),
        .R(1'b0));
  FDRE \d0_reg[3] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[3]),
        .Q(data8[13]),
        .R(1'b0));
  FDRE \d0_reg[4] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[4]),
        .Q(data8[14]),
        .R(1'b0));
  FDRE \d0_reg[5] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[5]),
        .Q(data8[15]),
        .R(1'b0));
  FDRE \d0_reg[6] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[6]),
        .Q(data8[16]),
        .R(1'b0));
  FDRE \d0_reg[7] 
       (.C(coreclk),
        .CE(\d0[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[7]),
        .Q(data8[17]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d1[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[1]),
        .O(\d1[7]_i_1_n_0 ));
  FDRE \d1_reg[0] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[8]),
        .Q(data12[10]),
        .R(1'b0));
  FDRE \d1_reg[1] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[9]),
        .Q(data12[11]),
        .R(1'b0));
  FDRE \d1_reg[2] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[10]),
        .Q(data12[12]),
        .R(1'b0));
  FDRE \d1_reg[3] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[11]),
        .Q(data12[13]),
        .R(1'b0));
  FDRE \d1_reg[4] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[12]),
        .Q(data12[14]),
        .R(1'b0));
  FDRE \d1_reg[5] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[13]),
        .Q(data12[15]),
        .R(1'b0));
  FDRE \d1_reg[6] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[14]),
        .Q(data12[16]),
        .R(1'b0));
  FDRE \d1_reg[7] 
       (.C(coreclk),
        .CE(\d1[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[15]),
        .Q(data12[17]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d2[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[2]),
        .O(\d2[7]_i_1_n_0 ));
  FDRE \d2_reg[0] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[16]),
        .Q(data12[18]),
        .R(1'b0));
  FDRE \d2_reg[1] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[17]),
        .Q(data12[19]),
        .R(1'b0));
  FDRE \d2_reg[2] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[18]),
        .Q(data12[20]),
        .R(1'b0));
  FDRE \d2_reg[3] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[19]),
        .Q(data12[21]),
        .R(1'b0));
  FDRE \d2_reg[4] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[20]),
        .Q(data12[22]),
        .R(1'b0));
  FDRE \d2_reg[5] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[21]),
        .Q(data12[23]),
        .R(1'b0));
  FDRE \d2_reg[6] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[22]),
        .Q(data12[24]),
        .R(1'b0));
  FDRE \d2_reg[7] 
       (.C(coreclk),
        .CE(\d2[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[23]),
        .Q(data12[25]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d3[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[3]),
        .O(\d3[7]_i_1_n_0 ));
  FDRE \d3_reg[0] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[24]),
        .Q(data12[26]),
        .R(1'b0));
  FDRE \d3_reg[1] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[25]),
        .Q(data12[27]),
        .R(1'b0));
  FDRE \d3_reg[2] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[26]),
        .Q(data12[28]),
        .R(1'b0));
  FDRE \d3_reg[3] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[27]),
        .Q(data12[29]),
        .R(1'b0));
  FDRE \d3_reg[4] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[28]),
        .Q(data12[30]),
        .R(1'b0));
  FDRE \d3_reg[5] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[29]),
        .Q(data12[31]),
        .R(1'b0));
  FDRE \d3_reg[6] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[30]),
        .Q(data12[32]),
        .R(1'b0));
  FDRE \d3_reg[7] 
       (.C(coreclk),
        .CE(\d3[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[31]),
        .Q(data12[33]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d4[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[4]),
        .O(\d4[7]_i_1_n_0 ));
  FDRE \d4_reg[0] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[32]),
        .Q(data11[34]),
        .R(1'b0));
  FDRE \d4_reg[1] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[33]),
        .Q(data11[35]),
        .R(1'b0));
  FDRE \d4_reg[2] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[34]),
        .Q(data11[36]),
        .R(1'b0));
  FDRE \d4_reg[3] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[35]),
        .Q(data11[37]),
        .R(1'b0));
  FDRE \d4_reg[4] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[36]),
        .Q(data11[38]),
        .R(1'b0));
  FDRE \d4_reg[5] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[37]),
        .Q(data11[39]),
        .R(1'b0));
  FDRE \d4_reg[6] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[38]),
        .Q(data11[40]),
        .R(1'b0));
  FDRE \d4_reg[7] 
       (.C(coreclk),
        .CE(\d4[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[39]),
        .Q(data11[41]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d5[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[5]),
        .O(\d5[7]_i_1_n_0 ));
  FDRE \d5_reg[0] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[40]),
        .Q(data11[42]),
        .R(1'b0));
  FDRE \d5_reg[1] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[41]),
        .Q(data11[43]),
        .R(1'b0));
  FDRE \d5_reg[2] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[42]),
        .Q(data11[44]),
        .R(1'b0));
  FDRE \d5_reg[3] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[43]),
        .Q(data11[45]),
        .R(1'b0));
  FDRE \d5_reg[4] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[44]),
        .Q(data11[46]),
        .R(1'b0));
  FDRE \d5_reg[5] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[45]),
        .Q(data11[47]),
        .R(1'b0));
  FDRE \d5_reg[6] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[46]),
        .Q(data11[48]),
        .R(1'b0));
  FDRE \d5_reg[7] 
       (.C(coreclk),
        .CE(\d5[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[47]),
        .Q(data11[49]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d6[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[6]),
        .O(\d6[7]_i_1_n_0 ));
  FDRE \d6_reg[0] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[48]),
        .Q(data11[50]),
        .R(1'b0));
  FDRE \d6_reg[1] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[49]),
        .Q(data11[51]),
        .R(1'b0));
  FDRE \d6_reg[2] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[50]),
        .Q(data11[52]),
        .R(1'b0));
  FDRE \d6_reg[3] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[51]),
        .Q(data11[53]),
        .R(1'b0));
  FDRE \d6_reg[4] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[52]),
        .Q(data11[54]),
        .R(1'b0));
  FDRE \d6_reg[5] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[53]),
        .Q(data11[55]),
        .R(1'b0));
  FDRE \d6_reg[6] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[54]),
        .Q(data11[56]),
        .R(1'b0));
  FDRE \d6_reg[7] 
       (.C(coreclk),
        .CE(\d6[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[55]),
        .Q(data11[57]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \d7[7]_i_1 
       (.I0(tx_xgmii_ctrl_reg2[7]),
        .O(\d7[7]_i_1_n_0 ));
  FDRE \d7_reg[0] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[56]),
        .Q(data11[58]),
        .R(1'b0));
  FDRE \d7_reg[1] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[57]),
        .Q(data11[59]),
        .R(1'b0));
  FDRE \d7_reg[2] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[58]),
        .Q(data11[60]),
        .R(1'b0));
  FDRE \d7_reg[3] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[59]),
        .Q(data11[61]),
        .R(1'b0));
  FDRE \d7_reg[4] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[60]),
        .Q(data11[62]),
        .R(1'b0));
  FDRE \d7_reg[5] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[61]),
        .Q(data11[63]),
        .R(1'b0));
  FDRE \d7_reg[6] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[62]),
        .Q(data11[64]),
        .R(1'b0));
  FDRE \d7_reg[7] 
       (.C(coreclk),
        .CE(\d7[7]_i_1_n_0 ),
        .D(tx_xgmii_data_reg2[63]),
        .Q(data11[65]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o0[0]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(\o0[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(data12[34]),
        .O(\o0[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o0[1]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(\o0[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(data12[35]),
        .O(\o0[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o0[2]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(\o0[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(data12[36]),
        .O(\o0[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \o0[3]_i_1 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(tx_xgmii_data_reg2[7]),
        .I2(\o0[3]_i_3_n_0 ),
        .I3(tx_xgmii_data_reg2[6]),
        .I4(tx_xgmii_ctrl_reg2[0]),
        .O(o0));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o0[3]_i_2 
       (.I0(tx_xgmii_data_reg2[5]),
        .I1(\o0[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[6]),
        .I3(tx_xgmii_ctrl_reg2[0]),
        .I4(data12[37]),
        .O(\o0[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \o0[3]_i_3 
       (.I0(tx_xgmii_data_reg2[4]),
        .I1(tx_xgmii_data_reg2[1]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[2]),
        .I4(tx_xgmii_data_reg2[0]),
        .O(\o0[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \o0[3]_i_4 
       (.I0(tx_xgmii_data_reg2[0]),
        .I1(tx_xgmii_data_reg2[2]),
        .I2(tx_xgmii_data_reg2[3]),
        .I3(tx_xgmii_data_reg2[1]),
        .I4(tx_xgmii_data_reg2[4]),
        .I5(tx_xgmii_data_reg2[7]),
        .O(\o0[3]_i_4_n_0 ));
  FDRE \o0_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[0]_i_1_n_0 ),
        .Q(data12[34]),
        .R(o0));
  FDRE \o0_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[1]_i_1_n_0 ),
        .Q(data12[35]),
        .R(o0));
  FDRE \o0_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[2]_i_1_n_0 ),
        .Q(data12[36]),
        .R(o0));
  FDRE \o0_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o0[3]_i_2_n_0 ),
        .Q(data12[37]),
        .R(o0));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o4[0]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(\o4[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(o4[0]),
        .O(\o4[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o4[1]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(\o4[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(o4[1]),
        .O(\o4[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o4[2]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(\o4[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(o4[2]),
        .O(\o4[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00400000)) 
    \o4[3]_i_1 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(tx_xgmii_data_reg2[39]),
        .I2(\o4[3]_i_3_n_0 ),
        .I3(tx_xgmii_data_reg2[38]),
        .I4(tx_xgmii_ctrl_reg2[4]),
        .O(o4_0));
  LUT5 #(
    .INIT(32'hFFFF4000)) 
    \o4[3]_i_2 
       (.I0(tx_xgmii_data_reg2[37]),
        .I1(\o4[3]_i_4_n_0 ),
        .I2(tx_xgmii_data_reg2[38]),
        .I3(tx_xgmii_ctrl_reg2[4]),
        .I4(o4[3]),
        .O(\o4[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \o4[3]_i_3 
       (.I0(tx_xgmii_data_reg2[36]),
        .I1(tx_xgmii_data_reg2[33]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[34]),
        .I4(tx_xgmii_data_reg2[32]),
        .O(\o4[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \o4[3]_i_4 
       (.I0(tx_xgmii_data_reg2[32]),
        .I1(tx_xgmii_data_reg2[34]),
        .I2(tx_xgmii_data_reg2[35]),
        .I3(tx_xgmii_data_reg2[33]),
        .I4(tx_xgmii_data_reg2[36]),
        .I5(tx_xgmii_data_reg2[39]),
        .O(\o4[3]_i_4_n_0 ));
  FDRE \o4_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[0]_i_1_n_0 ),
        .Q(o4[0]),
        .R(o4_0));
  FDRE \o4_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[1]_i_1_n_0 ),
        .Q(o4[1]),
        .R(o4_0));
  FDRE \o4_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[2]_i_1_n_0 ),
        .Q(o4[2]),
        .R(o4_0));
  FDRE \o4_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\o4[3]_i_2_n_0 ),
        .Q(o4[3]),
        .R(o4_0));
  LUT6 #(
    .INIT(64'h0000000000000110)) 
    o_code_c0_i_1
       (.I0(\xgmii_txd_reg_reg[63] [0]),
        .I1(\t_code[0]_i_2_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [6]),
        .I3(\xgmii_txd_reg_reg[63] [7]),
        .I4(\xgmii_txd_reg_reg[63] [1]),
        .I5(\xgmii_txd_reg_reg[63] [5]),
        .O(o_code_c00));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c00),
        .Q(o_code_c0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000110)) 
    o_code_c4_i_1
       (.I0(\xgmii_txd_reg_reg[63] [32]),
        .I1(\t_code[4]_i_2_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [38]),
        .I3(\xgmii_txd_reg_reg[63] [39]),
        .I4(\xgmii_txd_reg_reg[63] [33]),
        .I5(\xgmii_txd_reg_reg[63] [37]),
        .O(o_code_c40));
  FDRE #(
    .INIT(1'b0)) 
    o_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(o_code_c40),
        .Q(o_code_c4),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    s_code_c0_i_1
       (.I0(\xgmii_txd_reg_reg[63] [3]),
        .I1(\xgmii_txd_reg_reg[63] [4]),
        .I2(\xgmii_txd_reg_reg[63] [1]),
        .I3(\xgmii_txd_reg_reg[63] [2]),
        .I4(s_code_c0_i_2_n_0),
        .O(s_code_c0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    s_code_c0_i_2
       (.I0(\xgmii_txd_reg_reg[63] [5]),
        .I1(\xgmii_txd_reg_reg[63] [6]),
        .I2(\xgmii_txd_reg_reg[63] [7]),
        .I3(\xgmii_txd_reg_reg[63] [0]),
        .O(s_code_c0_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c0_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c0),
        .Q(s_code_c0_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    s_code_c4_i_1
       (.I0(\xgmii_txd_reg_reg[63] [35]),
        .I1(\xgmii_txd_reg_reg[63] [36]),
        .I2(\xgmii_txd_reg_reg[63] [33]),
        .I3(\xgmii_txd_reg_reg[63] [34]),
        .I4(s_code_c4_i_2_n_0),
        .O(s_code_c4));
  LUT4 #(
    .INIT(16'h7FFF)) 
    s_code_c4_i_2
       (.I0(\xgmii_txd_reg_reg[63] [37]),
        .I1(\xgmii_txd_reg_reg[63] [38]),
        .I2(\xgmii_txd_reg_reg[63] [39]),
        .I3(\xgmii_txd_reg_reg[63] [32]),
        .O(s_code_c4_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_code_c4_reg
       (.C(coreclk),
        .CE(1'b1),
        .D(s_code_c4),
        .Q(s_code_c4_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \t_code[0]_i_1 
       (.I0(\xgmii_txd_reg_reg[63] [1]),
        .I1(\t_code[0]_i_2_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [0]),
        .I3(\xgmii_txd_reg_reg[63] [7]),
        .I4(\xgmii_txd_reg_reg[63] [6]),
        .I5(\xgmii_txd_reg_reg[63] [5]),
        .O(p_8_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \t_code[0]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [4]),
        .I1(\xgmii_txd_reg_reg[63] [3]),
        .I2(\xgmii_txd_reg_reg[63] [2]),
        .O(\t_code[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[1]_i_1 
       (.I0(\t_code[1]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [8]),
        .I2(\xgmii_txd_reg_reg[63] [9]),
        .I3(\xgmii_txd_reg_reg[63] [10]),
        .I4(\xgmii_txd_reg_reg[63] [11]),
        .O(p_8_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[1]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [13]),
        .I1(\xgmii_txd_reg_reg[63] [12]),
        .I2(\xgmii_txd_reg_reg[63] [15]),
        .I3(\xgmii_txd_reg_reg[63] [14]),
        .O(\t_code[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[2]_i_1 
       (.I0(\t_code[2]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [16]),
        .I2(\xgmii_txd_reg_reg[63] [17]),
        .I3(\xgmii_txd_reg_reg[63] [18]),
        .I4(\xgmii_txd_reg_reg[63] [19]),
        .O(p_8_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[2]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [21]),
        .I1(\xgmii_txd_reg_reg[63] [20]),
        .I2(\xgmii_txd_reg_reg[63] [23]),
        .I3(\xgmii_txd_reg_reg[63] [22]),
        .O(\t_code[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[3]_i_1 
       (.I0(\t_code[3]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [24]),
        .I2(\xgmii_txd_reg_reg[63] [25]),
        .I3(\xgmii_txd_reg_reg[63] [26]),
        .I4(\xgmii_txd_reg_reg[63] [27]),
        .O(p_8_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[3]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [29]),
        .I1(\xgmii_txd_reg_reg[63] [28]),
        .I2(\xgmii_txd_reg_reg[63] [31]),
        .I3(\xgmii_txd_reg_reg[63] [30]),
        .O(\t_code[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \t_code[4]_i_1 
       (.I0(\xgmii_txd_reg_reg[63] [33]),
        .I1(\t_code[4]_i_2_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [32]),
        .I3(\xgmii_txd_reg_reg[63] [39]),
        .I4(\xgmii_txd_reg_reg[63] [38]),
        .I5(\xgmii_txd_reg_reg[63] [37]),
        .O(p_8_out[4]));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \t_code[4]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [36]),
        .I1(\xgmii_txd_reg_reg[63] [35]),
        .I2(\xgmii_txd_reg_reg[63] [34]),
        .O(\t_code[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[5]_i_1 
       (.I0(\t_code[5]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [40]),
        .I2(\xgmii_txd_reg_reg[63] [41]),
        .I3(\xgmii_txd_reg_reg[63] [42]),
        .I4(\xgmii_txd_reg_reg[63] [43]),
        .O(p_8_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[5]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [45]),
        .I1(\xgmii_txd_reg_reg[63] [44]),
        .I2(\xgmii_txd_reg_reg[63] [47]),
        .I3(\xgmii_txd_reg_reg[63] [46]),
        .O(\t_code[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[6]_i_1 
       (.I0(\t_code[6]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [48]),
        .I2(\xgmii_txd_reg_reg[63] [49]),
        .I3(\xgmii_txd_reg_reg[63] [50]),
        .I4(\xgmii_txd_reg_reg[63] [51]),
        .O(p_8_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[6]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [53]),
        .I1(\xgmii_txd_reg_reg[63] [52]),
        .I2(\xgmii_txd_reg_reg[63] [55]),
        .I3(\xgmii_txd_reg_reg[63] [54]),
        .O(\t_code[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \t_code[7]_i_1 
       (.I0(\t_code[7]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [56]),
        .I2(\xgmii_txd_reg_reg[63] [57]),
        .I3(\xgmii_txd_reg_reg[63] [58]),
        .I4(\xgmii_txd_reg_reg[63] [59]),
        .O(p_8_out[7]));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_code[7]_i_2 
       (.I0(\xgmii_txd_reg_reg[63] [61]),
        .I1(\xgmii_txd_reg_reg[63] [60]),
        .I2(\xgmii_txd_reg_reg[63] [63]),
        .I3(\xgmii_txd_reg_reg[63] [62]),
        .O(\t_code[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[0]),
        .Q(\t_code_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[1]),
        .Q(\t_code_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[2]),
        .Q(\t_code_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[3]),
        .Q(\t_code_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[4]),
        .Q(\t_code_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[5]),
        .Q(\t_code_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[6]),
        .Q(\t_code_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \t_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(p_8_out[7]),
        .Q(\t_code_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \t_type_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[0] ),
        .Q(Q[0]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \t_type_reg[0]_i_1 
       (.I0(\t_type_reg[0]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_2_n_0 ),
        .I2(\t_type_reg[0]_i_3_n_0 ),
        .I3(\t_type_reg[1]_i_7_n_0 ),
        .I4(\t_type_reg[0]_i_4_n_0 ),
        .I5(\t_type_reg[0]_i_5_n_0 ),
        .O(\t_type_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000008F0080)) 
    \t_type_reg[0]_i_2 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I1(\t_code_reg_n_0_[2] ),
        .I2(tx_xgmii_ctrl_reg1[2]),
        .I3(\t_type_reg[1]_i_15_n_0 ),
        .I4(\t_code_reg_n_0_[3] ),
        .I5(\t_type_reg[1]_i_9_n_0 ),
        .O(\t_type_reg[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \t_type_reg[0]_i_3 
       (.I0(\t_type_reg[1]_i_8_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(\t_code_reg_n_0_[5] ),
        .I3(p_5_in),
        .I4(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .O(\t_type_reg[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[0]_i_4 
       (.I0(\block_field[5]_i_2_n_0 ),
        .I1(\block_field[4]_i_2_n_0 ),
        .O(\t_type_reg[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \t_type_reg[0]_i_5 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(\t_type_reg[0]_i_6_n_0 ),
        .O(\t_type_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \t_type_reg[0]_i_6 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(\t_type_reg[0]_i_7_n_0 ),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .I5(tx_xgmii_ctrl_reg1[4]),
        .O(\t_type_reg[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[0]_i_7 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .O(\t_type_reg[0]_i_7_n_0 ));
  FDSE \t_type_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[1] ),
        .Q(Q[1]),
        .S(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \t_type_reg[1]_i_1 
       (.I0(\t_type_reg[1]_i_2_n_0 ),
        .I1(\t_type_reg[1]_i_3_n_0 ),
        .I2(\t_type_reg[1]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_5_n_0 ),
        .I4(\t_type_reg[1]_i_6_n_0 ),
        .I5(\t_type_reg[1]_i_7_n_0 ),
        .O(\t_type_reg[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \t_type_reg[1]_i_10 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[0]),
        .O(\t_type_reg[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \t_type_reg[1]_i_11 
       (.I0(tx_xgmii_ctrl_reg1[7]),
        .I1(tx_xgmii_ctrl_reg1[6]),
        .I2(tx_xgmii_ctrl_reg1[5]),
        .I3(tx_xgmii_ctrl_reg1[4]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h7EFF)) 
    \t_type_reg[1]_i_12 
       (.I0(tx_xgmii_ctrl_reg1[2]),
        .I1(tx_xgmii_ctrl_reg1[1]),
        .I2(tx_xgmii_ctrl_reg1[3]),
        .I3(\block_field[6]_i_3_n_0 ),
        .O(\t_type_reg[1]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h10111111)) 
    \t_type_reg[1]_i_13 
       (.I0(tx_xgmii_ctrl_reg1[5]),
        .I1(tx_xgmii_ctrl_reg1[3]),
        .I2(s_code_c4_reg_n_0),
        .I3(o_code_c4),
        .I4(o_code_c0),
        .O(\t_type_reg[1]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAA2AA)) 
    \t_type_reg[1]_i_14 
       (.I0(tx_xgmii_ctrl_reg1[3]),
        .I1(o_code_c4),
        .I2(s_code_c4_reg_n_0),
        .I3(\t_type_reg[1]_i_16_n_0 ),
        .I4(tx_xgmii_ctrl_reg1[5]),
        .O(\t_type_reg[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBFFF)) 
    \t_type_reg[1]_i_15 
       (.I0(\block_field[5]_i_9_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .I4(tx_xgmii_ctrl_reg1[1]),
        .I5(tx_xgmii_ctrl_reg1[0]),
        .O(\t_type_reg[1]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \t_type_reg[1]_i_16 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .O(\t_type_reg[1]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \t_type_reg[1]_i_2 
       (.I0(\t_type_reg[1]_i_8_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[4]),
        .I2(\t_code_reg_n_0_[4] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I4(p_5_in),
        .I5(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .O(\t_type_reg[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFFD)) 
    \t_type_reg[1]_i_3 
       (.I0(\t_code_reg_n_0_[3] ),
        .I1(\t_type_reg[1]_i_9_n_0 ),
        .I2(\t_type_reg[1]_i_10_n_0 ),
        .I3(\t_type_reg[1]_i_11_n_0 ),
        .I4(\t_type_reg[0]_i_3_n_0 ),
        .O(\t_type_reg[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0001)) 
    \t_type_reg[1]_i_4 
       (.I0(\t_type_reg[1]_i_12_n_0 ),
        .I1(\t_type_reg[1]_i_13_n_0 ),
        .I2(\block_field[0]_i_4_n_0 ),
        .I3(\t_type_reg[1]_i_14_n_0 ),
        .I4(\t_type_reg[0]_i_4_n_0 ),
        .O(\t_type_reg[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \t_type_reg[1]_i_5 
       (.I0(\t_type_reg[1]_i_15_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[2]),
        .I2(\t_code_reg_n_0_[2] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I4(\t_type_reg[1]_i_9_n_0 ),
        .O(\t_type_reg[1]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \t_type_reg[1]_i_6 
       (.I0(\block_field[2]_i_5_n_0 ),
        .I1(\t_type_reg[1]_i_16_n_0 ),
        .I2(\t_code_reg_n_0_[0] ),
        .I3(\t_type_reg[1]_i_9_n_0 ),
        .O(\t_type_reg[1]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \t_type_reg[1]_i_7 
       (.I0(\t_type_reg[2]_i_5_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[0]),
        .I2(\t_type_reg[2]_i_2_n_0 ),
        .O(\t_type_reg[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \t_type_reg[1]_i_8 
       (.I0(\t_type_reg[1]_i_10_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[6]),
        .I3(tx_xgmii_ctrl_reg1[7]),
        .I4(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \t_type_reg[1]_i_9 
       (.I0(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .I1(p_5_in),
        .I2(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .O(\t_type_reg[1]_i_9_n_0 ));
  FDRE \t_type_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg_reg_n_0_[2] ),
        .Q(Q[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000B00)) 
    \t_type_reg[2]_i_1 
       (.I0(tx_xgmii_ctrl_reg1[0]),
        .I1(\t_type_reg[2]_i_2_n_0 ),
        .I2(\t_type_reg[1]_i_6_n_0 ),
        .I3(\t_type_reg[2]_i_3_n_0 ),
        .I4(\t_type_reg[2]_i_4_n_0 ),
        .I5(\t_type_reg[2]_i_5_n_0 ),
        .O(\t_type_reg[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \t_type_reg[2]_i_2 
       (.I0(\block_field[5]_i_6_n_0 ),
        .I1(\t_code_reg_n_0_[1] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I4(\t_type_reg[1]_i_9_n_0 ),
        .O(\t_type_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005554)) 
    \t_type_reg[2]_i_3 
       (.I0(\block_field[5]_i_2_n_0 ),
        .I1(\t_type_reg[2]_i_6_n_0 ),
        .I2(\t_type_reg[2]_i_7_n_0 ),
        .I3(\t_type_reg[1]_i_12_n_0 ),
        .I4(\block_field[5]_i_5_n_0 ),
        .I5(\t_type_reg[2]_i_8_n_0 ),
        .O(\t_type_reg[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[2]_i_4 
       (.I0(SR),
        .I1(\t_type_reg[0]_i_5_n_0 ),
        .O(\t_type_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \t_type_reg[2]_i_5 
       (.I0(\block_field[2]_i_5_n_0 ),
        .I1(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .I2(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .I3(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .I4(\t_code_reg_n_0_[0] ),
        .I5(\t_type_reg[1]_i_9_n_0 ),
        .O(\t_type_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFDFFFDF30003030)) 
    \t_type_reg[2]_i_6 
       (.I0(\t_type_reg[1]_i_16_n_0 ),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(tx_xgmii_ctrl_reg1[4]),
        .I3(\t_type_reg[2]_i_9_n_0 ),
        .I4(o_code_c0),
        .I5(tx_xgmii_ctrl_reg1[3]),
        .O(\t_type_reg[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h77CDFFFF)) 
    \t_type_reg[2]_i_7 
       (.I0(tx_xgmii_ctrl_reg1[4]),
        .I1(tx_xgmii_ctrl_reg1[5]),
        .I2(s_code_c0_reg_n_0),
        .I3(tx_xgmii_ctrl_reg1[6]),
        .I4(tx_xgmii_ctrl_reg1[0]),
        .O(\t_type_reg[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \t_type_reg[2]_i_8 
       (.I0(\t_type_reg[0]_i_3_n_0 ),
        .I1(\t_type_reg[1]_i_2_n_0 ),
        .O(\t_type_reg[2]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \t_type_reg[2]_i_9 
       (.I0(s_code_c4_reg_n_0),
        .I1(o_code_c4),
        .O(\t_type_reg[2]_i_9_n_0 ));
  FDRE \t_type_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[0]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[0] ),
        .R(SR));
  FDSE \t_type_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[1]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[1] ),
        .S(SR));
  FDRE \t_type_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\t_type_reg[2]_i_1_n_0 ),
        .Q(\t_type_reg_reg_n_0_[2] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h03FF033303FF00C4)) 
    \tx_66_enc_out[65]_i_3 
       (.I0(Q[1]),
        .I1(out[0]),
        .I2(out[1]),
        .I3(out[2]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(next_state));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \tx_encoded_data[0]_i_1 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .O(tx_encoded_data[0]));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[10]_i_1 
       (.I0(\tx_encoded_data[10]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[10]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[10]_i_3_n_0 ),
        .O(tx_encoded_data[10]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \tx_encoded_data[10]_i_2 
       (.I0(data8[10]),
        .I1(\tx_encoded_data[16]_i_4_n_0 ),
        .I2(\tx_encoded_data[16]_i_5_n_0 ),
        .I3(c0[0]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[10]),
        .O(\tx_encoded_data[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[10]_i_3 
       (.I0(data12[10]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[0]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[10]),
        .O(\tx_encoded_data[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCCFAAAA0000AAAA)) 
    \tx_encoded_data[11]_i_1 
       (.I0(\tx_encoded_data[11]_i_2_n_0 ),
        .I1(data8[11]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[65]_i_3_n_0 ),
        .I5(\tx_encoded_data[11]_i_3_n_0 ),
        .O(tx_encoded_data[11]));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[11]_i_2 
       (.I0(data12[11]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[11]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7F7733337F77)) 
    \tx_encoded_data[11]_i_3 
       (.I0(\tx_encoded_data[33]_i_4_n_0 ),
        .I1(\tx_encoded_data[17]_i_4_n_0 ),
        .I2(\t_type_reg_reg_n_0_[0] ),
        .I3(c0[1]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(data12[11]),
        .O(\tx_encoded_data[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[11]_i_4 
       (.I0(data12[11]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[1]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[11]),
        .O(\tx_encoded_data[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[12]_i_1 
       (.I0(\tx_encoded_data[12]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[12]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[12]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[12]));
  LUT6 #(
    .INIT(64'hABA8ABABABA8A8A8)) 
    \tx_encoded_data[12]_i_2 
       (.I0(data8[12]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data12[12]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[12]_i_4_n_0 ),
        .O(\tx_encoded_data[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[12]_i_3 
       (.I0(data12[12]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[2]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[12]),
        .O(\tx_encoded_data[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'hBBFB)) 
    \tx_encoded_data[12]_i_4 
       (.I0(\t_type_reg_reg_n_0_[2] ),
        .I1(\t_type_reg_reg_n_0_[1] ),
        .I2(c0[2]),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[13]_i_1 
       (.I0(\tx_encoded_data[13]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[13]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[13]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[13]));
  LUT6 #(
    .INIT(64'hABA8ABABABA8A8A8)) 
    \tx_encoded_data[13]_i_2 
       (.I0(data8[13]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data12[13]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[13]_i_4_n_0 ),
        .O(\tx_encoded_data[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[13]_i_3 
       (.I0(data12[13]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[3]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[13]),
        .O(\tx_encoded_data[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'hBBFB)) 
    \tx_encoded_data[13]_i_4 
       (.I0(\t_type_reg_reg_n_0_[2] ),
        .I1(\t_type_reg_reg_n_0_[1] ),
        .I2(c0[3]),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCCCFAAAA0000AAAA)) 
    \tx_encoded_data[14]_i_1 
       (.I0(\tx_encoded_data[14]_i_2_n_0 ),
        .I1(data8[14]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[65]_i_3_n_0 ),
        .I5(\tx_encoded_data[14]_i_3_n_0 ),
        .O(tx_encoded_data[14]));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[14]_i_2 
       (.I0(data12[14]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[14]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7F7733337F77)) 
    \tx_encoded_data[14]_i_3 
       (.I0(\tx_encoded_data[33]_i_4_n_0 ),
        .I1(\tx_encoded_data[17]_i_4_n_0 ),
        .I2(\t_type_reg_reg_n_0_[0] ),
        .I3(c0[4]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(data12[14]),
        .O(\tx_encoded_data[14]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[14]_i_4 
       (.I0(data12[14]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[4]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[14]),
        .O(\tx_encoded_data[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[15]_i_1 
       (.I0(\tx_encoded_data[15]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[15]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[15]_i_3_n_0 ),
        .O(tx_encoded_data[15]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \tx_encoded_data[15]_i_2 
       (.I0(data8[15]),
        .I1(\tx_encoded_data[16]_i_4_n_0 ),
        .I2(\tx_encoded_data[16]_i_5_n_0 ),
        .I3(c0[5]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[15]),
        .O(\tx_encoded_data[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[15]_i_3 
       (.I0(data12[15]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[5]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[15]),
        .O(\tx_encoded_data[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[16]_i_1 
       (.I0(\tx_encoded_data[16]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[16]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[16]_i_3_n_0 ),
        .O(tx_encoded_data[16]));
  LUT6 #(
    .INIT(64'h8B88BBBB8B888B88)) 
    \tx_encoded_data[16]_i_2 
       (.I0(data8[16]),
        .I1(\tx_encoded_data[16]_i_4_n_0 ),
        .I2(\tx_encoded_data[16]_i_5_n_0 ),
        .I3(c0[6]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[16]),
        .O(\tx_encoded_data[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[16]_i_3 
       (.I0(data12[16]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c0[6]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[16]),
        .O(\tx_encoded_data[16]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[16]_i_4 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[16]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \tx_encoded_data[16]_i_5 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(\t_type_reg_reg_n_0_[1] ),
        .I2(\t_type_reg_reg_n_0_[2] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[17]_i_1 
       (.I0(\tx_encoded_data[17]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[17]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[17]_i_3_n_0 ),
        .O(tx_encoded_data[17]));
  LUT6 #(
    .INIT(64'hE222E2E2E2222222)) 
    \tx_encoded_data[17]_i_2 
       (.I0(data8[17]),
        .I1(\tx_encoded_data[17]_i_4_n_0 ),
        .I2(\tx_encoded_data[17]_i_5_n_0 ),
        .I3(c1[0]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[17]),
        .O(\tx_encoded_data[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[17]_i_3 
       (.I0(data12[17]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[0]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data8[17]),
        .O(\tx_encoded_data[17]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[17]_i_4 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[17]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \tx_encoded_data[17]_i_5 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[18]_i_1 
       (.I0(\tx_encoded_data[18]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[18]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[18]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[18]));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[18]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[10]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[18]_i_4_n_0 ),
        .O(\tx_encoded_data[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[18]_i_3 
       (.I0(data12[18]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[1]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[10]),
        .O(\tx_encoded_data[18]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[18]_i_4 
       (.I0(data12[18]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[1]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[19]_i_1 
       (.I0(\tx_encoded_data[19]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[19]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[19]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[19]));
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[19]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[11]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[19]_i_4_n_0 ),
        .O(\tx_encoded_data[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[19]_i_3 
       (.I0(data12[19]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[2]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[11]),
        .O(\tx_encoded_data[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[19]_i_4 
       (.I0(data12[19]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[2]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[19]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \tx_encoded_data[1]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[1]_i_2_n_0 ),
        .I2(\tx_encoded_data[1]_i_3_n_0 ),
        .I3(\tx_encoded_data[35]_i_4_n_0 ),
        .O(tx_encoded_data[1]));
  LUT6 #(
    .INIT(64'hBFFFFFFFBFFFFFAA)) 
    \tx_encoded_data[1]_i_2 
       (.I0(\tx_encoded_data[35]_i_7_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFE6FFF6EFFFFFFFF)) 
    \tx_encoded_data[1]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I5(\tx_encoded_data[1]_i_4_n_0 ),
        .O(\tx_encoded_data[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hC0410101)) 
    \tx_encoded_data[1]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .O(\tx_encoded_data[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[20]_i_1 
       (.I0(\tx_encoded_data[20]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[20]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[20]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[20]));
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[20]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[12]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[20]_i_4_n_0 ),
        .O(\tx_encoded_data[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[20]_i_3 
       (.I0(data12[20]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[3]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[12]),
        .O(\tx_encoded_data[20]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[20]_i_4 
       (.I0(data12[20]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[3]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[21]_i_1 
       (.I0(\tx_encoded_data[21]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[21]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[21]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[21]));
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[21]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[13]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[21]_i_4_n_0 ),
        .O(\tx_encoded_data[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[21]_i_3 
       (.I0(data12[21]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[4]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[13]),
        .O(\tx_encoded_data[21]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[21]_i_4 
       (.I0(data12[21]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[4]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[22]_i_1 
       (.I0(\tx_encoded_data[22]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[22]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[22]_i_3_n_0 ),
        .O(tx_encoded_data[22]));
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[22]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[14]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[22]_i_4_n_0 ),
        .O(\tx_encoded_data[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[22]_i_3 
       (.I0(data12[22]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[5]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[14]),
        .O(\tx_encoded_data[22]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[22]_i_4 
       (.I0(data12[22]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[5]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[23]_i_1 
       (.I0(\tx_encoded_data[23]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[23]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[23]_i_3_n_0 ),
        .O(tx_encoded_data[23]));
  LUT5 #(
    .INIT(32'hE0F5E0A0)) 
    \tx_encoded_data[23]_i_2 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(data12[15]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[23]_i_4_n_0 ),
        .O(\tx_encoded_data[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[23]_i_3 
       (.I0(data12[23]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c1[6]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[15]),
        .O(\tx_encoded_data[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[23]_i_4 
       (.I0(data12[23]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c1[6]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \tx_encoded_data[24]_i_1 
       (.I0(data12[16]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(\tx_encoded_data[24]_i_2_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(\tx_encoded_data[24]_i_3_n_0 ),
        .O(tx_encoded_data[24]));
  LUT6 #(
    .INIT(64'hAFA0CF0FAFA0C000)) 
    \tx_encoded_data[24]_i_2 
       (.I0(data12[24]),
        .I1(\tx_encoded_data[33]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(c2[0]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(data12[16]),
        .O(\tx_encoded_data[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h3808)) 
    \tx_encoded_data[24]_i_3 
       (.I0(data12[24]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(\tx_encoded_data[24]_i_4_n_0 ),
        .O(\tx_encoded_data[24]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[24]_i_4 
       (.I0(data12[24]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[0]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[16]),
        .O(\tx_encoded_data[24]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \tx_encoded_data[25]_i_1 
       (.I0(data12[17]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(\tx_encoded_data[25]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(\tx_encoded_data[25]_i_4_n_0 ),
        .O(tx_encoded_data[25]));
  LUT6 #(
    .INIT(64'hAAAAEEFAFFFFFFFF)) 
    \tx_encoded_data[25]_i_2 
       (.I0(\tx_encoded_data[35]_i_9_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I5(\tx_encoded_data[35]_i_8_n_0 ),
        .O(\tx_encoded_data[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0FF3FAFA0F030)) 
    \tx_encoded_data[25]_i_3 
       (.I0(data12[25]),
        .I1(\tx_encoded_data[33]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(c2[1]),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(data12[17]),
        .O(\tx_encoded_data[25]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[25]_i_4 
       (.I0(data12[25]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[25]_i_5_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[25]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[25]_i_5 
       (.I0(data12[25]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[1]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[17]),
        .O(\tx_encoded_data[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[26]_i_1 
       (.I0(\tx_encoded_data[26]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[26]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[26]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[26]));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tx_encoded_data[26]_i_2 
       (.I0(data12[18]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(c2[2]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[26]_i_4_n_0 ),
        .O(\tx_encoded_data[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[26]_i_3 
       (.I0(data12[26]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[2]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[18]),
        .O(\tx_encoded_data[26]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[26]_i_4 
       (.I0(data12[26]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c2[2]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[27]_i_1 
       (.I0(\tx_encoded_data[27]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[27]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[27]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[27]));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tx_encoded_data[27]_i_2 
       (.I0(data12[19]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(c2[3]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[27]_i_4_n_0 ),
        .O(\tx_encoded_data[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[27]_i_3 
       (.I0(data12[27]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[3]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[19]),
        .O(\tx_encoded_data[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[27]_i_4 
       (.I0(data12[27]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c2[3]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[28]_i_1 
       (.I0(\tx_encoded_data[28]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[28]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[28]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[28]));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tx_encoded_data[28]_i_2 
       (.I0(data12[20]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(c2[4]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[28]_i_4_n_0 ),
        .O(\tx_encoded_data[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[28]_i_3 
       (.I0(data12[28]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[4]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[20]),
        .O(\tx_encoded_data[28]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[28]_i_4 
       (.I0(data12[28]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c2[4]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[29]_i_1 
       (.I0(\tx_encoded_data[29]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[29]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[29]_i_3_n_0 ),
        .O(tx_encoded_data[29]));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tx_encoded_data[29]_i_2 
       (.I0(data12[21]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(c2[5]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[29]_i_4_n_0 ),
        .O(\tx_encoded_data[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[29]_i_3 
       (.I0(data12[29]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[5]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[21]),
        .O(\tx_encoded_data[29]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[29]_i_4 
       (.I0(data12[29]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c2[5]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB0BFBFB0A0A0A0A0)) 
    \tx_encoded_data[2]_i_1 
       (.I0(\tx_encoded_data[2]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(data12[2]),
        .O(tx_encoded_data[2]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \tx_encoded_data[2]_i_2 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data8[10]),
        .O(\tx_encoded_data[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[30]_i_1 
       (.I0(\tx_encoded_data[30]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[30]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[30]_i_3_n_0 ),
        .O(tx_encoded_data[30]));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    \tx_encoded_data[30]_i_2 
       (.I0(data12[22]),
        .I1(\tx_encoded_data[25]_i_2_n_0 ),
        .I2(c2[6]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[30]_i_4_n_0 ),
        .O(\tx_encoded_data[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[30]_i_3 
       (.I0(data12[30]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c2[6]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[22]),
        .O(\tx_encoded_data[30]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[30]_i_4 
       (.I0(data12[30]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c2[6]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[31]_i_1 
       (.I0(\tx_encoded_data[31]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[31]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[31]_i_3_n_0 ),
        .O(tx_encoded_data[31]));
  LUT6 #(
    .INIT(64'hFFFFFFFF80008080)) 
    \tx_encoded_data[31]_i_2 
       (.I0(c3[0]),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_7_n_0 ),
        .I3(\tx_encoded_data[33]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(\tx_encoded_data[31]_i_4_n_0 ),
        .O(\tx_encoded_data[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[31]_i_3 
       (.I0(data12[31]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c3[0]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[23]),
        .O(\tx_encoded_data[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h44444444444F4444)) 
    \tx_encoded_data[31]_i_4 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(data12[23]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(data12[31]),
        .I5(\tx_encoded_data[1]_i_3_n_0 ),
        .O(\tx_encoded_data[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFBA)) 
    \tx_encoded_data[32]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[32]_i_2_n_0 ),
        .I3(\tx_encoded_data[32]_i_3_n_0 ),
        .I4(\tx_encoded_data[32]_i_4_n_0 ),
        .O(tx_encoded_data[32]));
  LUT6 #(
    .INIT(64'hFFE200E2FFFFFFFF)) 
    \tx_encoded_data[32]_i_2 
       (.I0(data12[24]),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(c3[1]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(data12[32]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[32]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    \tx_encoded_data[32]_i_3 
       (.I0(data12[32]),
        .I1(\tx_encoded_data[65]_i_5_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(\tx_encoded_data[35]_i_4_n_0 ),
        .O(\tx_encoded_data[32]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1F001F000000FF00)) 
    \tx_encoded_data[32]_i_4 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(c3[1]),
        .I2(\tx_encoded_data[32]_i_5_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(data12[24]),
        .I5(\tx_encoded_data[35]_i_4_n_0 ),
        .O(\tx_encoded_data[32]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFCFFFEFFFCFAAAA)) 
    \tx_encoded_data[32]_i_5 
       (.I0(data12[32]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(c3[1]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[32]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF4F)) 
    \tx_encoded_data[33]_i_1 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(data12[25]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[33]_i_2_n_0 ),
        .I4(\tx_encoded_data[33]_i_3_n_0 ),
        .O(tx_encoded_data[33]));
  LUT6 #(
    .INIT(64'h00000000FFFA0072)) 
    \tx_encoded_data[33]_i_2 
       (.I0(\tx_encoded_data[1]_i_3_n_0 ),
        .I1(\tx_encoded_data[33]_i_4_n_0 ),
        .I2(data12[33]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(c3[2]),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[33]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000110C)) 
    \tx_encoded_data[33]_i_3 
       (.I0(data12[33]),
        .I1(\tx_encoded_data[65]_i_5_n_0 ),
        .I2(\tx_encoded_data[33]_i_5_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_3_n_0 ),
        .O(\tx_encoded_data[33]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[33]_i_4 
       (.I0(\t_type_reg_reg_n_0_[1] ),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .O(\tx_encoded_data[33]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[33]_i_5 
       (.I0(data12[33]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(c3[2]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data12[25]),
        .O(\tx_encoded_data[33]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAAFE)) 
    \tx_encoded_data[34]_i_1 
       (.I0(\tx_encoded_data[34]_i_2_n_0 ),
        .I1(data12[34]),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_4_n_0 ),
        .I5(\tx_encoded_data[34]_i_3_n_0 ),
        .O(tx_encoded_data[34]));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'hBABB)) 
    \tx_encoded_data[34]_i_2 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[34]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8888888808080888)) 
    \tx_encoded_data[34]_i_3 
       (.I0(\tx_encoded_data[34]_i_5_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[26]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[35]_i_4_n_0 ),
        .O(\tx_encoded_data[34]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \tx_encoded_data[34]_i_4 
       (.I0(c3[3]),
        .I1(data12[26]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[34]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[34]),
        .O(\tx_encoded_data[34]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBAABAFFBA)) 
    \tx_encoded_data[34]_i_5 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(c3[3]),
        .I2(\tx_encoded_data[33]_i_4_n_0 ),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(data11[34]),
        .I5(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[34]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAAFE)) 
    \tx_encoded_data[35]_i_1 
       (.I0(\tx_encoded_data[35]_i_2_n_0 ),
        .I1(data12[35]),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_4_n_0 ),
        .I5(\tx_encoded_data[35]_i_5_n_0 ),
        .O(tx_encoded_data[35]));
  LUT6 #(
    .INIT(64'hBBBBBBBBAABAFFBA)) 
    \tx_encoded_data[35]_i_10 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(c3[4]),
        .I2(\tx_encoded_data[33]_i_4_n_0 ),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(data11[35]),
        .I5(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[35]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'hBABB)) 
    \tx_encoded_data[35]_i_2 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[35]_i_6_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000008000800F)) 
    \tx_encoded_data[35]_i_3 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I5(\tx_encoded_data[35]_i_7_n_0 ),
        .O(\tx_encoded_data[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2222222202020022)) 
    \tx_encoded_data[35]_i_4 
       (.I0(\tx_encoded_data[35]_i_8_n_0 ),
        .I1(\tx_encoded_data[35]_i_9_n_0 ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .O(\tx_encoded_data[35]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8888888808080888)) 
    \tx_encoded_data[35]_i_5 
       (.I0(\tx_encoded_data[35]_i_10_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[27]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[35]_i_4_n_0 ),
        .O(\tx_encoded_data[35]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \tx_encoded_data[35]_i_6 
       (.I0(c3[4]),
        .I1(data12[27]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[35]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[35]),
        .O(\tx_encoded_data[35]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCFFBFFFBCFFBCFFB)) 
    \tx_encoded_data[35]_i_7 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .O(\tx_encoded_data[35]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF00000000F0F0D0D)) 
    \tx_encoded_data[35]_i_8 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I5(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .O(\tx_encoded_data[35]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT5 #(
    .INIT(32'h2FFCFFFC)) 
    \tx_encoded_data[35]_i_9 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .O(\tx_encoded_data[35]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF05400040)) 
    \tx_encoded_data[36]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(data12[36]),
        .I2(\tx_encoded_data[65]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .I4(\tx_encoded_data[36]_i_2_n_0 ),
        .I5(\tx_encoded_data[36]_i_3_n_0 ),
        .O(tx_encoded_data[36]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \tx_encoded_data[36]_i_2 
       (.I0(c3[5]),
        .I1(data12[28]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[36]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[36]),
        .O(\tx_encoded_data[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8808880888080808)) 
    \tx_encoded_data[36]_i_3 
       (.I0(\tx_encoded_data[36]_i_4_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(data12[28]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[36]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF444444F4)) 
    \tx_encoded_data[36]_i_4 
       (.I0(\tx_encoded_data[45]_i_5_n_0 ),
        .I1(c3[5]),
        .I2(data11[36]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[36]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[37]_i_1 
       (.I0(\tx_encoded_data[37]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[37]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[37]_i_3_n_0 ),
        .O(tx_encoded_data[37]));
  LUT6 #(
    .INIT(64'hCFC08F8FCFC08080)) 
    \tx_encoded_data[37]_i_2 
       (.I0(\tx_encoded_data[1]_i_3_n_0 ),
        .I1(data12[29]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(c3[6]),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[37]_i_4_n_0 ),
        .O(\tx_encoded_data[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \tx_encoded_data[37]_i_3 
       (.I0(c3[6]),
        .I1(data12[29]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[37]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data12[37]),
        .O(\tx_encoded_data[37]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[37]_i_4 
       (.I0(data11[37]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(c3[6]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[37]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[38]_i_1 
       (.I0(\tx_encoded_data[38]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[38]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[38]_i_3_n_0 ),
        .O(tx_encoded_data[38]));
  LUT6 #(
    .INIT(64'hF3F3B8BBC0C0B888)) 
    \tx_encoded_data[38]_i_2 
       (.I0(\tx_encoded_data[38]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[38]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(data12[30]),
        .O(\tx_encoded_data[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BFBF8F808080)) 
    \tx_encoded_data[38]_i_3 
       (.I0(data12[30]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[38]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[38]_i_5_n_0 ),
        .O(\tx_encoded_data[38]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[38]_i_4 
       (.I0(data11[38]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[38]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[38]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \tx_encoded_data[38]_i_5 
       (.I0(o4[0]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[38]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[39]_i_1 
       (.I0(\tx_encoded_data[39]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[39]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[39]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[39]));
  LUT6 #(
    .INIT(64'hCFC0EF4FCFC0E040)) 
    \tx_encoded_data[39]_i_2 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(data12[31]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(data12[39]),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[39]_i_4_n_0 ),
        .O(\tx_encoded_data[39]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BFBF8F808080)) 
    \tx_encoded_data[39]_i_3 
       (.I0(data12[31]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[39]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[39]_i_5_n_0 ),
        .O(\tx_encoded_data[39]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[39]_i_4 
       (.I0(data11[39]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[39]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[39]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \tx_encoded_data[39]_i_5 
       (.I0(o4[1]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[39]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFAFA0BFBFA0AF)) 
    \tx_encoded_data[3]_i_1 
       (.I0(\tx_encoded_data[3]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(data12[3]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[3]));
  LUT6 #(
    .INIT(64'h0040004000404444)) 
    \tx_encoded_data[3]_i_2 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data8[11]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[33]_i_4_n_0 ),
        .O(\tx_encoded_data[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[40]_i_1 
       (.I0(\tx_encoded_data[40]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[40]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[40]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[40]));
  LUT6 #(
    .INIT(64'hCFC0EF4FCFC0E040)) 
    \tx_encoded_data[40]_i_2 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(data12[32]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(data12[40]),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[40]_i_4_n_0 ),
        .O(\tx_encoded_data[40]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BFBF8F808080)) 
    \tx_encoded_data[40]_i_3 
       (.I0(data12[32]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[40]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[40]_i_5_n_0 ),
        .O(\tx_encoded_data[40]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[40]_i_4 
       (.I0(data11[40]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[40]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[40]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \tx_encoded_data[40]_i_5 
       (.I0(o4[2]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[40]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[41]_i_1 
       (.I0(\tx_encoded_data[41]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[41]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[41]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[41]));
  LUT6 #(
    .INIT(64'hCFC0EF4FCFC0E040)) 
    \tx_encoded_data[41]_i_2 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(data12[33]),
        .I2(\tx_encoded_data[25]_i_2_n_0 ),
        .I3(data12[41]),
        .I4(\tx_encoded_data[35]_i_3_n_0 ),
        .I5(\tx_encoded_data[41]_i_4_n_0 ),
        .O(\tx_encoded_data[41]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0BFBF8F808080)) 
    \tx_encoded_data[41]_i_3 
       (.I0(data12[33]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[41]),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[41]_i_5_n_0 ),
        .O(\tx_encoded_data[41]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[41]_i_4 
       (.I0(data11[41]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[41]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[41]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \tx_encoded_data[41]_i_5 
       (.I0(o4[3]),
        .I1(\t_type_reg_reg_n_0_[2] ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[0] ),
        .O(\tx_encoded_data[41]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[42]_i_1 
       (.I0(\tx_encoded_data[42]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[42]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[42]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[42]));
  LUT6 #(
    .INIT(64'hFC883088FCBB3088)) 
    \tx_encoded_data[42]_i_2 
       (.I0(\tx_encoded_data[42]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data11[34]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(data12[42]),
        .I5(\tx_encoded_data[1]_i_3_n_0 ),
        .O(\tx_encoded_data[42]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hD0FFD0D0D0D0D0D0)) 
    \tx_encoded_data[42]_i_3 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(data11[42]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data11[34]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[42]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8BBBB)) 
    \tx_encoded_data[42]_i_4 
       (.I0(data11[42]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[42]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[42]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF05400040)) 
    \tx_encoded_data[43]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(data12[43]),
        .I2(\tx_encoded_data[65]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .I4(\tx_encoded_data[43]_i_2_n_0 ),
        .I5(\tx_encoded_data[43]_i_3_n_0 ),
        .O(tx_encoded_data[43]));
  LUT6 #(
    .INIT(64'hD0FFD0D0D0D0D0D0)) 
    \tx_encoded_data[43]_i_2 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(data11[43]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(data11[35]),
        .I5(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[43]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BABAFFBA)) 
    \tx_encoded_data[43]_i_3 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_7_n_0 ),
        .I2(data11[43]),
        .I3(data12[43]),
        .I4(\tx_encoded_data[45]_i_5_n_0 ),
        .I5(\tx_encoded_data[43]_i_4_n_0 ),
        .O(\tx_encoded_data[43]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h77470000FFFFFFFF)) 
    \tx_encoded_data[43]_i_4 
       (.I0(data11[35]),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(data12[43]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[25]_i_2_n_0 ),
        .I5(\tx_encoded_data[65]_i_3_n_0 ),
        .O(\tx_encoded_data[43]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3838380808083808)) 
    \tx_encoded_data[44]_i_2 
       (.I0(data12[44]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data11[36]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(data11[44]),
        .O(\tx_encoded_data[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFC883088FCBB3088)) 
    \tx_encoded_data[44]_i_3 
       (.I0(\tx_encoded_data[44]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data11[36]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(data12[44]),
        .I5(\tx_encoded_data[1]_i_3_n_0 ),
        .O(\tx_encoded_data[44]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h88B88888)) 
    \tx_encoded_data[44]_i_4 
       (.I0(data11[44]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(data12[44]),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[44]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h3A0A)) 
    \tx_encoded_data[45]_i_1 
       (.I0(\tx_encoded_data[45]_i_2_n_0 ),
        .I1(\tx_encoded_data[45]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[45]_i_4_n_0 ),
        .O(tx_encoded_data[45]));
  LUT6 #(
    .INIT(64'h3838380808083808)) 
    \tx_encoded_data[45]_i_2 
       (.I0(data12[45]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data11[37]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(data11[45]),
        .O(\tx_encoded_data[45]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h02A2)) 
    \tx_encoded_data[45]_i_3 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(data11[37]),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data12[45]),
        .O(\tx_encoded_data[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF444444F4)) 
    \tx_encoded_data[45]_i_4 
       (.I0(\tx_encoded_data[45]_i_5_n_0 ),
        .I1(data12[45]),
        .I2(data11[45]),
        .I3(\tx_encoded_data[35]_i_3_n_0 ),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[45]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT5 #(
    .INIT(32'hFF4F4444)) 
    \tx_encoded_data[45]_i_5 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\t_type_reg_reg_n_0_[1] ),
        .I3(\t_type_reg_reg_n_0_[2] ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[45]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCCCFCBBBBBBBB)) 
    \tx_encoded_data[46]_i_2 
       (.I0(data12[46]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(data11[38]),
        .I3(\tx_encoded_data[65]_i_7_n_0 ),
        .I4(data11[46]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[46]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[46]_i_3 
       (.I0(\tx_encoded_data[46]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[46]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(data11[38]),
        .O(\tx_encoded_data[46]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[46]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[46]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[46]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[46]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[47]_i_1 
       (.I0(\tx_encoded_data[47]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[47]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[47]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[47]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[47]_i_2 
       (.I0(\tx_encoded_data[47]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[47]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(data11[39]),
        .O(\tx_encoded_data[47]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[47]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[47]),
        .I2(data11[39]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[47]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[47]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[47]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[47]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[47]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[48]_i_1 
       (.I0(\tx_encoded_data[48]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[48]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[48]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[48]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[48]_i_2 
       (.I0(\tx_encoded_data[48]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[48]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(data11[40]),
        .O(\tx_encoded_data[48]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[48]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[48]),
        .I2(data11[40]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[48]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[48]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[48]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[48]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[48]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[49]_i_1 
       (.I0(\tx_encoded_data[49]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[49]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[49]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[49]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \tx_encoded_data[49]_i_2 
       (.I0(\tx_encoded_data[49]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[49]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(data11[41]),
        .O(\tx_encoded_data[49]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[49]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[49]),
        .I2(data11[41]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[49]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[49]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[49]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[49]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[49]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFAFA0BFBFA0AF)) 
    \tx_encoded_data[4]_i_1 
       (.I0(\tx_encoded_data[4]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(data12[4]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[4]));
  LUT6 #(
    .INIT(64'h0040004000404444)) 
    \tx_encoded_data[4]_i_2 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data8[12]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[33]_i_4_n_0 ),
        .O(\tx_encoded_data[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[50]_i_1 
       (.I0(\tx_encoded_data[50]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[50]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[50]_i_3_n_0 ),
        .O(tx_encoded_data[50]));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \tx_encoded_data[50]_i_2 
       (.I0(\tx_encoded_data[50]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[50]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data11[42]),
        .O(\tx_encoded_data[50]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[50]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[50]),
        .I2(data11[42]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[50]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEA40EF40EA40EA40)) 
    \tx_encoded_data[50]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[50]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[50]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[50]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3838380808083808)) 
    \tx_encoded_data[51]_i_2 
       (.I0(data12[51]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data11[43]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(data11[51]),
        .O(\tx_encoded_data[51]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \tx_encoded_data[51]_i_3 
       (.I0(\tx_encoded_data[51]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[51]),
        .I3(\tx_encoded_data[1]_i_2_n_0 ),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(data11[43]),
        .O(\tx_encoded_data[51]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEA40EF40EA40EA40)) 
    \tx_encoded_data[51]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[51]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[51]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[51]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3838380808083808)) 
    \tx_encoded_data[52]_i_2 
       (.I0(data12[52]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data11[44]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(data11[52]),
        .O(\tx_encoded_data[52]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
    \tx_encoded_data[52]_i_3 
       (.I0(\tx_encoded_data[52]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[52]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(data11[44]),
        .O(\tx_encoded_data[52]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEA40EF40EA40EA40)) 
    \tx_encoded_data[52]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[52]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[52]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[52]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCCCFCBBBBBBBB)) 
    \tx_encoded_data[53]_i_2 
       (.I0(data12[53]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(data11[45]),
        .I3(\tx_encoded_data[65]_i_7_n_0 ),
        .I4(data11[53]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[53]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
    \tx_encoded_data[53]_i_3 
       (.I0(\tx_encoded_data[53]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[53]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(data11[45]),
        .O(\tx_encoded_data[53]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[53]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[53]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[53]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[53]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[54]_i_1 
       (.I0(\tx_encoded_data[54]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[54]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[54]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[54]));
  LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
    \tx_encoded_data[54]_i_2 
       (.I0(\tx_encoded_data[54]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[54]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(data11[46]),
        .O(\tx_encoded_data[54]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[54]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[54]),
        .I2(data11[46]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[54]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[54]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[54]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[54]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[54]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[55]_i_1 
       (.I0(\tx_encoded_data[55]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[55]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[55]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[55]));
  LUT6 #(
    .INIT(64'hABA8FFFFABA80000)) 
    \tx_encoded_data[55]_i_2 
       (.I0(data12[55]),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[1]_i_2_n_0 ),
        .I3(data11[47]),
        .I4(\tx_encoded_data[25]_i_2_n_0 ),
        .I5(\tx_encoded_data[55]_i_4_n_0 ),
        .O(\tx_encoded_data[55]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[55]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[55]),
        .I2(data11[47]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[55]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[55]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[55]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[55]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[55]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBB88B8BBB8BB)) 
    \tx_encoded_data[56]_i_1 
       (.I0(\tx_encoded_data[56]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[56]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[56]_i_3_n_0 ),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[56]));
  LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
    \tx_encoded_data[56]_i_2 
       (.I0(\tx_encoded_data[56]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[56]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(data11[48]),
        .O(\tx_encoded_data[56]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[56]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[56]),
        .I2(data11[48]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[56]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEF45EF40EF45EF45)) 
    \tx_encoded_data[56]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[56]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[56]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[56]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88BBB8888888B888)) 
    \tx_encoded_data[57]_i_1 
       (.I0(\tx_encoded_data[57]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(data12[57]),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(\tx_encoded_data[57]_i_3_n_0 ),
        .O(tx_encoded_data[57]));
  LUT6 #(
    .INIT(64'hB8B8B8BBB8B8B888)) 
    \tx_encoded_data[57]_i_2 
       (.I0(\tx_encoded_data[57]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data12[57]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .I5(data11[49]),
        .O(\tx_encoded_data[57]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[57]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[57]),
        .I2(data11[49]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[57]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEA40EF40EA40EA40)) 
    \tx_encoded_data[57]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[57]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[57]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[57]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h3838380808083808)) 
    \tx_encoded_data[58]_i_2 
       (.I0(data12[58]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data11[50]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(data11[58]),
        .O(\tx_encoded_data[58]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8CFF8C00)) 
    \tx_encoded_data[58]_i_3 
       (.I0(\tx_encoded_data[1]_i_2_n_0 ),
        .I1(data12[58]),
        .I2(\tx_encoded_data[1]_i_3_n_0 ),
        .I3(\tx_encoded_data[25]_i_2_n_0 ),
        .I4(\tx_encoded_data[58]_i_4_n_0 ),
        .O(\tx_encoded_data[58]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEA40EF40EA40EA40)) 
    \tx_encoded_data[58]_i_4 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[58]),
        .I2(\tx_encoded_data[64]_i_4_n_0 ),
        .I3(data12[58]),
        .I4(\t_type_reg_reg_n_0_[2] ),
        .I5(\t_type_reg_reg_n_0_[1] ),
        .O(\tx_encoded_data[58]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8AA888A88A888888)) 
    \tx_encoded_data[59]_i_1 
       (.I0(\tx_encoded_data[59]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .I4(\tx_encoded_data[59]_i_3_n_0 ),
        .I5(data12[59]),
        .O(tx_encoded_data[59]));
  LUT6 #(
    .INIT(64'h4F4F4F4F4F4FFF4F)) 
    \tx_encoded_data[59]_i_2 
       (.I0(\tx_encoded_data[63]_i_4_n_0 ),
        .I1(data12[59]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(data11[59]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[59]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \tx_encoded_data[59]_i_3 
       (.I0(data11[59]),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data11[51]),
        .O(\tx_encoded_data[59]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFAFA0BFBFA0AF)) 
    \tx_encoded_data[5]_i_1 
       (.I0(\tx_encoded_data[5]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(data12[5]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[5]));
  LUT6 #(
    .INIT(64'h0040004000404444)) 
    \tx_encoded_data[5]_i_2 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data8[13]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[33]_i_4_n_0 ),
        .O(\tx_encoded_data[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAACFAACFAA00AA)) 
    \tx_encoded_data[60]_i_1 
       (.I0(\tx_encoded_data[60]_i_2_n_0 ),
        .I1(data11[60]),
        .I2(\tx_encoded_data[63]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(data12[60]),
        .I5(\tx_encoded_data[63]_i_4_n_0 ),
        .O(tx_encoded_data[60]));
  LUT6 #(
    .INIT(64'hFFFCCCFCBBBBBBBB)) 
    \tx_encoded_data[60]_i_2 
       (.I0(data12[60]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(data11[52]),
        .I3(\tx_encoded_data[65]_i_7_n_0 ),
        .I4(data11[60]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[60]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCFAACFAACFAA00AA)) 
    \tx_encoded_data[61]_i_1 
       (.I0(\tx_encoded_data[61]_i_2_n_0 ),
        .I1(data11[61]),
        .I2(\tx_encoded_data[63]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(data12[61]),
        .I5(\tx_encoded_data[63]_i_4_n_0 ),
        .O(tx_encoded_data[61]));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[61]_i_2 
       (.I0(data12[61]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[61]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[61]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[61]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[61]),
        .I2(data11[53]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[61]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAACFAACFAA00AA)) 
    \tx_encoded_data[62]_i_1 
       (.I0(\tx_encoded_data[62]_i_2_n_0 ),
        .I1(data11[62]),
        .I2(\tx_encoded_data[63]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(data12[62]),
        .I5(\tx_encoded_data[63]_i_4_n_0 ),
        .O(tx_encoded_data[62]));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[62]_i_2 
       (.I0(data12[62]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[62]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[62]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[62]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[62]),
        .I2(data11[54]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[62]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAACFAACFAA00AA)) 
    \tx_encoded_data[63]_i_1 
       (.I0(\tx_encoded_data[63]_i_2_n_0 ),
        .I1(data11[63]),
        .I2(\tx_encoded_data[63]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_3_n_0 ),
        .I4(data12[63]),
        .I5(\tx_encoded_data[63]_i_4_n_0 ),
        .O(tx_encoded_data[63]));
  LUT4 #(
    .INIT(16'hFCBB)) 
    \tx_encoded_data[63]_i_2 
       (.I0(data12[63]),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[63]_i_5_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .O(\tx_encoded_data[63]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \tx_encoded_data[63]_i_3 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(\tx_encoded_data[1]_i_3_n_0 ),
        .O(\tx_encoded_data[63]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h808880888088AAAA)) 
    \tx_encoded_data[63]_i_4 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[1]_i_2_n_0 ),
        .I2(\t_type_reg_reg_n_0_[2] ),
        .I3(\t_type_reg_reg_n_0_[1] ),
        .I4(\tx_encoded_data[1]_i_3_n_0 ),
        .I5(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[63]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[63]_i_5 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[63]),
        .I2(data11[55]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[63]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8AA888A88A888888)) 
    \tx_encoded_data[64]_i_1 
       (.I0(\tx_encoded_data[64]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .I4(\tx_encoded_data[64]_i_3_n_0 ),
        .I5(data12[64]),
        .O(tx_encoded_data[64]));
  LUT6 #(
    .INIT(64'h4F4F4F4F4F4FFF4F)) 
    \tx_encoded_data[64]_i_2 
       (.I0(\tx_encoded_data[63]_i_4_n_0 ),
        .I1(data12[64]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(data11[64]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[64]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF8CC88CC)) 
    \tx_encoded_data[64]_i_3 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(data11[64]),
        .I2(data11[56]),
        .I3(\tx_encoded_data[64]_i_4_n_0 ),
        .I4(\tx_encoded_data[1]_i_2_n_0 ),
        .O(\tx_encoded_data[64]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000008000A007)) 
    \tx_encoded_data[64]_i_4 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I5(\tx_encoded_data[64]_i_5_n_0 ),
        .O(\tx_encoded_data[64]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hCFFFFFC6)) 
    \tx_encoded_data[64]_i_5 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .O(\tx_encoded_data[64]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8AA888A88A888888)) 
    \tx_encoded_data[65]_i_1 
       (.I0(\tx_encoded_data[65]_i_2_n_0 ),
        .I1(\tx_encoded_data[65]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_4_n_0 ),
        .I3(\tx_encoded_data[65]_i_5_n_0 ),
        .I4(\tx_encoded_data[65]_i_6_n_0 ),
        .I5(data12[65]),
        .O(tx_encoded_data[65]));
  LUT6 #(
    .INIT(64'h4F4F4F4F4F4FFF4F)) 
    \tx_encoded_data[65]_i_2 
       (.I0(\tx_encoded_data[63]_i_4_n_0 ),
        .I1(data12[65]),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(data11[65]),
        .I4(\tx_encoded_data[65]_i_7_n_0 ),
        .I5(\tx_encoded_data[25]_i_2_n_0 ),
        .O(\tx_encoded_data[65]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80008802)) 
    \tx_encoded_data[65]_i_3 
       (.I0(\tx_encoded_data[65]_i_8_n_0 ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .O(\tx_encoded_data[65]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[65]_i_4 
       (.I0(\tx_encoded_data[25]_i_2_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[65]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \tx_encoded_data[65]_i_5 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .I2(\tx_encoded_data[1]_i_3_n_0 ),
        .O(\tx_encoded_data[65]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \tx_encoded_data[65]_i_6 
       (.I0(data11[65]),
        .I1(\tx_encoded_data[1]_i_3_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data11[57]),
        .O(\tx_encoded_data[65]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[65]_i_7 
       (.I0(\tx_encoded_data[1]_i_3_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[65]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT5 #(
    .INIT(32'hD1000101)) 
    \tx_encoded_data[65]_i_8 
       (.I0(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .I1(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .I2(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .I3(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .I4(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .O(\tx_encoded_data[65]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFAFA0BFBFA0AF)) 
    \tx_encoded_data[6]_i_1 
       (.I0(\tx_encoded_data[6]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_3_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(data12[6]),
        .I5(\tx_encoded_data[65]_i_5_n_0 ),
        .O(tx_encoded_data[6]));
  LUT6 #(
    .INIT(64'h0040004000404444)) 
    \tx_encoded_data[6]_i_2 
       (.I0(\tx_encoded_data[35]_i_3_n_0 ),
        .I1(\tx_encoded_data[35]_i_4_n_0 ),
        .I2(data8[14]),
        .I3(\tx_encoded_data[1]_i_3_n_0 ),
        .I4(\tx_encoded_data[64]_i_4_n_0 ),
        .I5(\tx_encoded_data[33]_i_4_n_0 ),
        .O(\tx_encoded_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB0BFBFB0A0A0A0A0)) 
    \tx_encoded_data[7]_i_1 
       (.I0(\tx_encoded_data[7]_i_2_n_0 ),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[65]_i_4_n_0 ),
        .I4(\tx_encoded_data[65]_i_5_n_0 ),
        .I5(data12[7]),
        .O(tx_encoded_data[7]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \tx_encoded_data[7]_i_2 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[64]_i_4_n_0 ),
        .I2(\tx_encoded_data[35]_i_3_n_0 ),
        .I3(data8[15]),
        .O(\tx_encoded_data[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BAAABFAA)) 
    \tx_encoded_data[8]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data12[8]),
        .I4(\tx_encoded_data[9]_i_2_n_0 ),
        .I5(\tx_encoded_data[8]_i_2_n_0 ),
        .O(tx_encoded_data[8]));
  LUT6 #(
    .INIT(64'h00D0D0D0D0D0D0D0)) 
    \tx_encoded_data[8]_i_2 
       (.I0(data12[8]),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[35]_i_4_n_0 ),
        .I4(\tx_encoded_data[9]_i_4_n_0 ),
        .I5(data8[16]),
        .O(\tx_encoded_data[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000BAAABFAA)) 
    \tx_encoded_data[9]_i_1 
       (.I0(\tx_encoded_data[65]_i_3_n_0 ),
        .I1(\tx_encoded_data[65]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_5_n_0 ),
        .I3(data12[9]),
        .I4(\tx_encoded_data[9]_i_2_n_0 ),
        .I5(\tx_encoded_data[9]_i_3_n_0 ),
        .O(tx_encoded_data[9]));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \tx_encoded_data[9]_i_2 
       (.I0(\tx_encoded_data[35]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00D0D0D0D0D0D0D0)) 
    \tx_encoded_data[9]_i_3 
       (.I0(data12[9]),
        .I1(\tx_encoded_data[63]_i_4_n_0 ),
        .I2(\tx_encoded_data[65]_i_3_n_0 ),
        .I3(\tx_encoded_data[35]_i_4_n_0 ),
        .I4(\tx_encoded_data[9]_i_4_n_0 ),
        .I5(data8[17]),
        .O(\tx_encoded_data[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \tx_encoded_data[9]_i_4 
       (.I0(\tx_encoded_data[64]_i_4_n_0 ),
        .I1(\tx_encoded_data[35]_i_3_n_0 ),
        .O(\tx_encoded_data[9]_i_4_n_0 ));
  FDSE \tx_encoded_data_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[0]),
        .Q(\tx_66_enc_out_reg[65] [0]),
        .S(SR));
  FDRE \tx_encoded_data_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[10]),
        .Q(\tx_66_enc_out_reg[65] [10]),
        .R(SR));
  FDRE \tx_encoded_data_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[11]),
        .Q(\tx_66_enc_out_reg[65] [11]),
        .R(SR));
  FDRE \tx_encoded_data_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[12]),
        .Q(\tx_66_enc_out_reg[65] [12]),
        .R(SR));
  FDRE \tx_encoded_data_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[13]),
        .Q(\tx_66_enc_out_reg[65] [13]),
        .R(SR));
  FDRE \tx_encoded_data_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[14]),
        .Q(\tx_66_enc_out_reg[65] [14]),
        .R(SR));
  FDRE \tx_encoded_data_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[15]),
        .Q(\tx_66_enc_out_reg[65] [15]),
        .R(SR));
  FDRE \tx_encoded_data_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[16]),
        .Q(\tx_66_enc_out_reg[65] [16]),
        .R(SR));
  FDRE \tx_encoded_data_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[17]),
        .Q(\tx_66_enc_out_reg[65] [17]),
        .R(SR));
  FDRE \tx_encoded_data_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[18]),
        .Q(\tx_66_enc_out_reg[65] [18]),
        .R(SR));
  FDRE \tx_encoded_data_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[19]),
        .Q(\tx_66_enc_out_reg[65] [19]),
        .R(SR));
  FDRE \tx_encoded_data_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[1]),
        .Q(\tx_66_enc_out_reg[65] [1]),
        .R(SR));
  FDRE \tx_encoded_data_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[20]),
        .Q(\tx_66_enc_out_reg[65] [20]),
        .R(SR));
  FDRE \tx_encoded_data_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[21]),
        .Q(\tx_66_enc_out_reg[65] [21]),
        .R(SR));
  FDRE \tx_encoded_data_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[22]),
        .Q(\tx_66_enc_out_reg[65] [22]),
        .R(SR));
  FDRE \tx_encoded_data_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[23]),
        .Q(\tx_66_enc_out_reg[65] [23]),
        .R(SR));
  FDRE \tx_encoded_data_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[24]),
        .Q(\tx_66_enc_out_reg[65] [24]),
        .R(SR));
  FDRE \tx_encoded_data_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[25]),
        .Q(\tx_66_enc_out_reg[65] [25]),
        .R(SR));
  FDSE \tx_encoded_data_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[26]),
        .Q(\tx_66_enc_out_reg[65] [26]),
        .S(SR));
  FDRE \tx_encoded_data_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[27]),
        .Q(\tx_66_enc_out_reg[65] [27]),
        .R(SR));
  FDRE \tx_encoded_data_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[28]),
        .Q(\tx_66_enc_out_reg[65] [28]),
        .R(SR));
  FDRE \tx_encoded_data_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[29]),
        .Q(\tx_66_enc_out_reg[65] [29]),
        .R(SR));
  FDSE \tx_encoded_data_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[2]),
        .Q(\tx_66_enc_out_reg[65] [2]),
        .S(SR));
  FDRE \tx_encoded_data_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[30]),
        .Q(\tx_66_enc_out_reg[65] [30]),
        .R(SR));
  FDRE \tx_encoded_data_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[31]),
        .Q(\tx_66_enc_out_reg[65] [31]),
        .R(SR));
  FDRE \tx_encoded_data_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[32]),
        .Q(\tx_66_enc_out_reg[65] [32]),
        .R(SR));
  FDRE \tx_encoded_data_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[33]),
        .Q(\tx_66_enc_out_reg[65] [33]),
        .R(SR));
  FDRE \tx_encoded_data_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[34]),
        .Q(\tx_66_enc_out_reg[65] [34]),
        .R(SR));
  FDRE \tx_encoded_data_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[35]),
        .Q(\tx_66_enc_out_reg[65] [35]),
        .R(SR));
  FDRE \tx_encoded_data_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[36]),
        .Q(\tx_66_enc_out_reg[65] [36]),
        .R(SR));
  FDRE \tx_encoded_data_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[37]),
        .Q(\tx_66_enc_out_reg[65] [37]),
        .R(SR));
  FDRE \tx_encoded_data_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[38]),
        .Q(\tx_66_enc_out_reg[65] [38]),
        .R(SR));
  FDRE \tx_encoded_data_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[39]),
        .Q(\tx_66_enc_out_reg[65] [39]),
        .R(SR));
  FDRE \tx_encoded_data_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[3]),
        .Q(\tx_66_enc_out_reg[65] [3]),
        .R(SR));
  FDRE \tx_encoded_data_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[40]),
        .Q(\tx_66_enc_out_reg[65] [40]),
        .R(SR));
  FDRE \tx_encoded_data_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[41]),
        .Q(\tx_66_enc_out_reg[65] [41]),
        .R(SR));
  FDRE \tx_encoded_data_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[42]),
        .Q(\tx_66_enc_out_reg[65] [42]),
        .R(SR));
  FDRE \tx_encoded_data_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[43]),
        .Q(\tx_66_enc_out_reg[65] [43]),
        .R(SR));
  FDRE \tx_encoded_data_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[44]),
        .Q(\tx_66_enc_out_reg[65] [44]),
        .R(SR));
  MUXF7 \tx_encoded_data_reg[44]_i_1 
       (.I0(\tx_encoded_data[44]_i_2_n_0 ),
        .I1(\tx_encoded_data[44]_i_3_n_0 ),
        .O(tx_encoded_data[44]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[45]),
        .Q(\tx_66_enc_out_reg[65] [45]),
        .R(SR));
  FDRE \tx_encoded_data_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[46]),
        .Q(\tx_66_enc_out_reg[65] [46]),
        .R(SR));
  MUXF7 \tx_encoded_data_reg[46]_i_1 
       (.I0(\tx_encoded_data[46]_i_2_n_0 ),
        .I1(\tx_encoded_data[46]_i_3_n_0 ),
        .O(tx_encoded_data[46]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[47]),
        .Q(\tx_66_enc_out_reg[65] [47]),
        .R(SR));
  FDRE \tx_encoded_data_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[48]),
        .Q(\tx_66_enc_out_reg[65] [48]),
        .R(SR));
  FDRE \tx_encoded_data_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[49]),
        .Q(\tx_66_enc_out_reg[65] [49]),
        .R(SR));
  FDSE \tx_encoded_data_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[4]),
        .Q(\tx_66_enc_out_reg[65] [4]),
        .S(SR));
  FDRE \tx_encoded_data_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[50]),
        .Q(\tx_66_enc_out_reg[65] [50]),
        .R(SR));
  FDRE \tx_encoded_data_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[51]),
        .Q(\tx_66_enc_out_reg[65] [51]),
        .R(SR));
  MUXF7 \tx_encoded_data_reg[51]_i_1 
       (.I0(\tx_encoded_data[51]_i_2_n_0 ),
        .I1(\tx_encoded_data[51]_i_3_n_0 ),
        .O(tx_encoded_data[51]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[52]),
        .Q(\tx_66_enc_out_reg[65] [52]),
        .R(SR));
  MUXF7 \tx_encoded_data_reg[52]_i_1 
       (.I0(\tx_encoded_data[52]_i_2_n_0 ),
        .I1(\tx_encoded_data[52]_i_3_n_0 ),
        .O(tx_encoded_data[52]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[53]),
        .Q(\tx_66_enc_out_reg[65] [53]),
        .R(SR));
  MUXF7 \tx_encoded_data_reg[53]_i_1 
       (.I0(\tx_encoded_data[53]_i_2_n_0 ),
        .I1(\tx_encoded_data[53]_i_3_n_0 ),
        .O(tx_encoded_data[53]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[54]),
        .Q(\tx_66_enc_out_reg[65] [54]),
        .R(SR));
  FDRE \tx_encoded_data_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[55]),
        .Q(\tx_66_enc_out_reg[65] [55]),
        .R(SR));
  FDRE \tx_encoded_data_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[56]),
        .Q(\tx_66_enc_out_reg[65] [56]),
        .R(SR));
  FDRE \tx_encoded_data_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[57]),
        .Q(\tx_66_enc_out_reg[65] [57]),
        .R(SR));
  FDSE \tx_encoded_data_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[58]),
        .Q(\tx_66_enc_out_reg[65] [58]),
        .S(SR));
  MUXF7 \tx_encoded_data_reg[58]_i_1 
       (.I0(\tx_encoded_data[58]_i_2_n_0 ),
        .I1(\tx_encoded_data[58]_i_3_n_0 ),
        .O(tx_encoded_data[58]),
        .S(\tx_encoded_data[65]_i_3_n_0 ));
  FDRE \tx_encoded_data_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[59]),
        .Q(\tx_66_enc_out_reg[65] [59]),
        .R(SR));
  FDRE \tx_encoded_data_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[5]),
        .Q(\tx_66_enc_out_reg[65] [5]),
        .R(SR));
  FDRE \tx_encoded_data_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[60]),
        .Q(\tx_66_enc_out_reg[65] [60]),
        .R(SR));
  FDRE \tx_encoded_data_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[61]),
        .Q(\tx_66_enc_out_reg[65] [61]),
        .R(SR));
  FDRE \tx_encoded_data_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[62]),
        .Q(\tx_66_enc_out_reg[65] [62]),
        .R(SR));
  FDRE \tx_encoded_data_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[63]),
        .Q(\tx_66_enc_out_reg[65] [63]),
        .R(SR));
  FDRE \tx_encoded_data_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[64]),
        .Q(\tx_66_enc_out_reg[65] [64]),
        .R(SR));
  FDRE \tx_encoded_data_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[65]),
        .Q(\tx_66_enc_out_reg[65] [65]),
        .R(SR));
  FDSE \tx_encoded_data_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[6]),
        .Q(\tx_66_enc_out_reg[65] [6]),
        .S(SR));
  FDRE \tx_encoded_data_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[7]),
        .Q(\tx_66_enc_out_reg[65] [7]),
        .R(SR));
  FDSE \tx_encoded_data_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[8]),
        .Q(\tx_66_enc_out_reg[65] [8]),
        .S(SR));
  FDRE \tx_encoded_data_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_encoded_data[9]),
        .Q(\tx_66_enc_out_reg[65] [9]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_xgmii_ctrl_reg1[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_xgmii_ctrl_reg1[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(tx_xgmii_ctrl_reg1[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(tx_xgmii_ctrl_reg1[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(tx_xgmii_ctrl_reg1[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(tx_xgmii_ctrl_reg1[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(tx_xgmii_ctrl_reg1[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg1_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(tx_xgmii_ctrl_reg1[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_xgmii_ctrl_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_xgmii_ctrl_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(tx_xgmii_ctrl_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(tx_xgmii_ctrl_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(tx_xgmii_ctrl_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(tx_xgmii_ctrl_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(tx_xgmii_ctrl_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_ctrl_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(tx_xgmii_ctrl_reg2[7]),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[0]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[1]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[2]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[3]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[4]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[5]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[6]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \tx_xgmii_ctrl_reg2_reg_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_xgmii_ctrl_reg2[7]),
        .Q(\tx_xgmii_ctrl_reg2_reg_reg_n_0_[7] ),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [0]),
        .Q(tx_xgmii_data_reg2[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [10]),
        .Q(tx_xgmii_data_reg2[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [11]),
        .Q(tx_xgmii_data_reg2[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [12]),
        .Q(tx_xgmii_data_reg2[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [13]),
        .Q(tx_xgmii_data_reg2[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [14]),
        .Q(tx_xgmii_data_reg2[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [15]),
        .Q(tx_xgmii_data_reg2[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [16]),
        .Q(tx_xgmii_data_reg2[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [17]),
        .Q(tx_xgmii_data_reg2[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [18]),
        .Q(tx_xgmii_data_reg2[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [19]),
        .Q(tx_xgmii_data_reg2[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [1]),
        .Q(tx_xgmii_data_reg2[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [20]),
        .Q(tx_xgmii_data_reg2[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [21]),
        .Q(tx_xgmii_data_reg2[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [22]),
        .Q(tx_xgmii_data_reg2[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [23]),
        .Q(tx_xgmii_data_reg2[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [24]),
        .Q(tx_xgmii_data_reg2[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [25]),
        .Q(tx_xgmii_data_reg2[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [26]),
        .Q(tx_xgmii_data_reg2[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [27]),
        .Q(tx_xgmii_data_reg2[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [28]),
        .Q(tx_xgmii_data_reg2[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [29]),
        .Q(tx_xgmii_data_reg2[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [2]),
        .Q(tx_xgmii_data_reg2[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [30]),
        .Q(tx_xgmii_data_reg2[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [31]),
        .Q(tx_xgmii_data_reg2[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [32]),
        .Q(tx_xgmii_data_reg2[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [33]),
        .Q(tx_xgmii_data_reg2[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [34]),
        .Q(tx_xgmii_data_reg2[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [35]),
        .Q(tx_xgmii_data_reg2[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [36]),
        .Q(tx_xgmii_data_reg2[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [37]),
        .Q(tx_xgmii_data_reg2[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [38]),
        .Q(tx_xgmii_data_reg2[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [39]),
        .Q(tx_xgmii_data_reg2[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [3]),
        .Q(tx_xgmii_data_reg2[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [40]),
        .Q(tx_xgmii_data_reg2[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [41]),
        .Q(tx_xgmii_data_reg2[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [42]),
        .Q(tx_xgmii_data_reg2[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [43]),
        .Q(tx_xgmii_data_reg2[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [44]),
        .Q(tx_xgmii_data_reg2[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [45]),
        .Q(tx_xgmii_data_reg2[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [46]),
        .Q(tx_xgmii_data_reg2[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [47]),
        .Q(tx_xgmii_data_reg2[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [48]),
        .Q(tx_xgmii_data_reg2[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [49]),
        .Q(tx_xgmii_data_reg2[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [4]),
        .Q(tx_xgmii_data_reg2[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [50]),
        .Q(tx_xgmii_data_reg2[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [51]),
        .Q(tx_xgmii_data_reg2[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [52]),
        .Q(tx_xgmii_data_reg2[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [53]),
        .Q(tx_xgmii_data_reg2[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [54]),
        .Q(tx_xgmii_data_reg2[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [55]),
        .Q(tx_xgmii_data_reg2[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [56]),
        .Q(tx_xgmii_data_reg2[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [57]),
        .Q(tx_xgmii_data_reg2[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [58]),
        .Q(tx_xgmii_data_reg2[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [59]),
        .Q(tx_xgmii_data_reg2[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [5]),
        .Q(tx_xgmii_data_reg2[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [60]),
        .Q(tx_xgmii_data_reg2[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [61]),
        .Q(tx_xgmii_data_reg2[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [62]),
        .Q(tx_xgmii_data_reg2[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [63]),
        .Q(tx_xgmii_data_reg2[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [6]),
        .Q(tx_xgmii_data_reg2[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [7]),
        .Q(tx_xgmii_data_reg2[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [8]),
        .Q(tx_xgmii_data_reg2[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE \tx_xgmii_data_reg2_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\xgmii_txd_reg_reg[63] [9]),
        .Q(tx_xgmii_data_reg2[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[0]_i_1 
       (.I0(p_15_out[0]),
        .I1(D[0]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[0]_i_2 
       (.I0(\tx_xgmii_valid_code[0]_i_3_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [3]),
        .I2(\xgmii_txd_reg_reg[63] [1]),
        .I3(\xgmii_txd_reg_reg[63] [0]),
        .I4(\xgmii_txd_reg_reg[63] [2]),
        .I5(tx_xgmii_valid_code76_in),
        .O(p_15_out[0]));
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[0]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [4]),
        .I1(\xgmii_txd_reg_reg[63] [5]),
        .I2(\xgmii_txd_reg_reg[63] [6]),
        .I3(\xgmii_txd_reg_reg[63] [7]),
        .I4(\xgmii_txd_reg_reg[63] [3]),
        .O(\tx_xgmii_valid_code[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[1]_i_1 
       (.I0(p_15_out[1]),
        .I1(D[1]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[1]_i_2 
       (.I0(\t_code[1]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[1]_i_3_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [9]),
        .I3(\xgmii_txd_reg_reg[63] [10]),
        .I4(\xgmii_txd_reg_reg[63] [11]),
        .I5(\xgmii_txd_reg_reg[63] [8]),
        .O(p_15_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[1]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [12]),
        .I1(\xgmii_txd_reg_reg[63] [13]),
        .I2(\xgmii_txd_reg_reg[63] [14]),
        .I3(\xgmii_txd_reg_reg[63] [15]),
        .I4(\xgmii_txd_reg_reg[63] [11]),
        .O(\tx_xgmii_valid_code[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[2]_i_1 
       (.I0(p_15_out[2]),
        .I1(D[2]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[2]_i_2 
       (.I0(\t_code[2]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[2]_i_3_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [17]),
        .I3(\xgmii_txd_reg_reg[63] [18]),
        .I4(\xgmii_txd_reg_reg[63] [19]),
        .I5(\xgmii_txd_reg_reg[63] [16]),
        .O(p_15_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[2]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [20]),
        .I1(\xgmii_txd_reg_reg[63] [21]),
        .I2(\xgmii_txd_reg_reg[63] [22]),
        .I3(\xgmii_txd_reg_reg[63] [23]),
        .I4(\xgmii_txd_reg_reg[63] [19]),
        .O(\tx_xgmii_valid_code[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[3]_i_1 
       (.I0(p_15_out[3]),
        .I1(D[3]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[3]_i_2 
       (.I0(\t_code[3]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[3]_i_3_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [25]),
        .I3(\xgmii_txd_reg_reg[63] [26]),
        .I4(\xgmii_txd_reg_reg[63] [27]),
        .I5(\xgmii_txd_reg_reg[63] [24]),
        .O(p_15_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[3]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [28]),
        .I1(\xgmii_txd_reg_reg[63] [29]),
        .I2(\xgmii_txd_reg_reg[63] [30]),
        .I3(\xgmii_txd_reg_reg[63] [31]),
        .I4(\xgmii_txd_reg_reg[63] [27]),
        .O(\tx_xgmii_valid_code[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[4]_i_1 
       (.I0(p_15_out[4]),
        .I1(D[4]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF20080000)) 
    \tx_xgmii_valid_code[4]_i_2 
       (.I0(\tx_xgmii_valid_code[4]_i_3_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [35]),
        .I2(\xgmii_txd_reg_reg[63] [33]),
        .I3(\xgmii_txd_reg_reg[63] [32]),
        .I4(\xgmii_txd_reg_reg[63] [34]),
        .I5(tx_xgmii_valid_code72_in),
        .O(p_15_out[4]));
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[4]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [36]),
        .I1(\xgmii_txd_reg_reg[63] [37]),
        .I2(\xgmii_txd_reg_reg[63] [38]),
        .I3(\xgmii_txd_reg_reg[63] [39]),
        .I4(\xgmii_txd_reg_reg[63] [35]),
        .O(\tx_xgmii_valid_code[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[5]_i_1 
       (.I0(p_15_out[5]),
        .I1(D[5]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[5]_i_2 
       (.I0(\t_code[5]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[5]_i_3_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [41]),
        .I3(\xgmii_txd_reg_reg[63] [42]),
        .I4(\xgmii_txd_reg_reg[63] [43]),
        .I5(\xgmii_txd_reg_reg[63] [40]),
        .O(p_15_out[5]));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[5]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [44]),
        .I1(\xgmii_txd_reg_reg[63] [45]),
        .I2(\xgmii_txd_reg_reg[63] [46]),
        .I3(\xgmii_txd_reg_reg[63] [47]),
        .I4(\xgmii_txd_reg_reg[63] [43]),
        .O(\tx_xgmii_valid_code[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[6]_i_1 
       (.I0(p_15_out[6]),
        .I1(D[6]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[6]_i_2 
       (.I0(\t_code[6]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[6]_i_3_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [49]),
        .I3(\xgmii_txd_reg_reg[63] [50]),
        .I4(\xgmii_txd_reg_reg[63] [51]),
        .I5(\xgmii_txd_reg_reg[63] [48]),
        .O(p_15_out[6]));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[6]_i_3 
       (.I0(\xgmii_txd_reg_reg[63] [52]),
        .I1(\xgmii_txd_reg_reg[63] [53]),
        .I2(\xgmii_txd_reg_reg[63] [54]),
        .I3(\xgmii_txd_reg_reg[63] [55]),
        .I4(\xgmii_txd_reg_reg[63] [51]),
        .O(\tx_xgmii_valid_code[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \tx_xgmii_valid_code[7]_i_1 
       (.I0(p_15_out[7]),
        .I1(D[7]),
        .I2(tx_xgmii_valid_code1),
        .O(\tx_xgmii_valid_code[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_10 
       (.I0(\xgmii_txd_reg_reg[63] [26]),
        .I1(\xgmii_txd_reg_reg[63] [27]),
        .I2(\xgmii_txd_reg_reg[63] [25]),
        .I3(\xgmii_txd_reg_reg[63] [24]),
        .I4(\t_code[3]_i_2_n_0 ),
        .O(tx_xgmii_valid_code71_in));
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_xgmii_valid_code[7]_i_11 
       (.I0(D[1]),
        .I1(D[0]),
        .I2(D[3]),
        .I3(D[2]),
        .O(\tx_xgmii_valid_code[7]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFFF)) 
    \tx_xgmii_valid_code[7]_i_12 
       (.I0(\t_code[0]_i_2_n_0 ),
        .I1(\xgmii_txd_reg_reg[63] [1]),
        .I2(\xgmii_txd_reg_reg[63] [0]),
        .I3(\xgmii_txd_reg_reg[63] [7]),
        .I4(\xgmii_txd_reg_reg[63] [6]),
        .I5(\xgmii_txd_reg_reg[63] [5]),
        .O(\tx_xgmii_valid_code[7]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_13 
       (.I0(\xgmii_txd_reg_reg[63] [50]),
        .I1(\xgmii_txd_reg_reg[63] [51]),
        .I2(\xgmii_txd_reg_reg[63] [49]),
        .I3(\xgmii_txd_reg_reg[63] [48]),
        .I4(\t_code[6]_i_2_n_0 ),
        .O(tx_xgmii_valid_code74_in));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_14 
       (.I0(\xgmii_txd_reg_reg[63] [42]),
        .I1(\xgmii_txd_reg_reg[63] [43]),
        .I2(\xgmii_txd_reg_reg[63] [41]),
        .I3(\xgmii_txd_reg_reg[63] [40]),
        .I4(\t_code[5]_i_2_n_0 ),
        .O(tx_xgmii_valid_code73_in));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_15 
       (.I0(\xgmii_txd_reg_reg[63] [10]),
        .I1(\xgmii_txd_reg_reg[63] [11]),
        .I2(\xgmii_txd_reg_reg[63] [9]),
        .I3(\xgmii_txd_reg_reg[63] [8]),
        .I4(\t_code[1]_i_2_n_0 ),
        .O(tx_xgmii_valid_code7));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_16 
       (.I0(\xgmii_txd_reg_reg[63] [18]),
        .I1(\xgmii_txd_reg_reg[63] [19]),
        .I2(\xgmii_txd_reg_reg[63] [17]),
        .I3(\xgmii_txd_reg_reg[63] [16]),
        .I4(\t_code[2]_i_2_n_0 ),
        .O(tx_xgmii_valid_code70_in));
  LUT6 #(
    .INIT(64'h0000C0005C000000)) 
    \tx_xgmii_valid_code[7]_i_2 
       (.I0(\t_code[7]_i_2_n_0 ),
        .I1(\tx_xgmii_valid_code[7]_i_4_n_0 ),
        .I2(\xgmii_txd_reg_reg[63] [57]),
        .I3(\xgmii_txd_reg_reg[63] [58]),
        .I4(\xgmii_txd_reg_reg[63] [59]),
        .I5(\xgmii_txd_reg_reg[63] [56]),
        .O(p_15_out[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \tx_xgmii_valid_code[7]_i_3 
       (.I0(\tx_xgmii_valid_code[7]_i_5_n_0 ),
        .I1(\tx_xgmii_valid_code[7]_i_6_n_0 ),
        .I2(tx_xgmii_valid_code76_in),
        .I3(tx_xgmii_valid_code75_in),
        .I4(tx_xgmii_valid_code72_in),
        .I5(tx_xgmii_valid_code71_in),
        .O(tx_xgmii_valid_code1));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT5 #(
    .INIT(32'h288A8001)) 
    \tx_xgmii_valid_code[7]_i_4 
       (.I0(\xgmii_txd_reg_reg[63] [60]),
        .I1(\xgmii_txd_reg_reg[63] [61]),
        .I2(\xgmii_txd_reg_reg[63] [62]),
        .I3(\xgmii_txd_reg_reg[63] [63]),
        .I4(\xgmii_txd_reg_reg[63] [59]),
        .O(\tx_xgmii_valid_code[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \tx_xgmii_valid_code[7]_i_5 
       (.I0(\tx_xgmii_valid_code[7]_i_11_n_0 ),
        .I1(D[7]),
        .I2(D[6]),
        .I3(D[5]),
        .I4(D[4]),
        .I5(\tx_xgmii_valid_code[7]_i_12_n_0 ),
        .O(\tx_xgmii_valid_code[7]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \tx_xgmii_valid_code[7]_i_6 
       (.I0(tx_xgmii_valid_code74_in),
        .I1(tx_xgmii_valid_code73_in),
        .I2(tx_xgmii_valid_code7),
        .I3(tx_xgmii_valid_code70_in),
        .O(\tx_xgmii_valid_code[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \tx_xgmii_valid_code[7]_i_7 
       (.I0(\xgmii_txd_reg_reg[63] [7]),
        .I1(\xgmii_txd_reg_reg[63] [6]),
        .I2(\xgmii_txd_reg_reg[63] [5]),
        .I3(\xgmii_txd_reg_reg[63] [1]),
        .I4(\xgmii_txd_reg_reg[63] [0]),
        .I5(\t_code[0]_i_2_n_0 ),
        .O(tx_xgmii_valid_code76_in));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \tx_xgmii_valid_code[7]_i_8 
       (.I0(\xgmii_txd_reg_reg[63] [58]),
        .I1(\xgmii_txd_reg_reg[63] [59]),
        .I2(\xgmii_txd_reg_reg[63] [57]),
        .I3(\xgmii_txd_reg_reg[63] [56]),
        .I4(\t_code[7]_i_2_n_0 ),
        .O(tx_xgmii_valid_code75_in));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \tx_xgmii_valid_code[7]_i_9 
       (.I0(\xgmii_txd_reg_reg[63] [39]),
        .I1(\xgmii_txd_reg_reg[63] [38]),
        .I2(\xgmii_txd_reg_reg[63] [37]),
        .I3(\xgmii_txd_reg_reg[63] [33]),
        .I4(\xgmii_txd_reg_reg[63] [32]),
        .I5(\t_code[4]_i_2_n_0 ),
        .O(tx_xgmii_valid_code72_in));
  FDRE \tx_xgmii_valid_code_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[0]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[1]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[2]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[3]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[4]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[5]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[6]_i_1_n_0 ),
        .Q(\tx_xgmii_valid_code_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \tx_xgmii_valid_code_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(\tx_xgmii_valid_code[7]_i_1_n_0 ),
        .Q(p_5_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_tx_pcs" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_pcs
   (new_tx_test_seed,
    Q,
    tx_66_fifo,
    \rd_data_reg[1] ,
    coreclk,
    SR,
    \q_reg[3] ,
    pseudo_rand_seeds_int,
    \q_reg[3]_0 ,
    \q_reg[1] ,
    D,
    \xgmii_txd_reg_reg[63] );
  output new_tx_test_seed;
  output [0:0]Q;
  output [64:0]tx_66_fifo;
  output [0:0]\rd_data_reg[1] ;
  input coreclk;
  input [0:0]SR;
  input [1:0]\q_reg[3] ;
  input [115:0]pseudo_rand_seeds_int;
  input \q_reg[3]_0 ;
  input \q_reg[1] ;
  input [7:0]D;
  input [63:0]\xgmii_txd_reg_reg[63] ;

  wire [7:0]D;
  wire [0:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire new_tx_test_seed;
  wire [2:2]next_state;
  wire [115:0]pseudo_rand_seeds_int;
  wire \q_reg[1] ;
  wire [1:0]\q_reg[3] ;
  wire \q_reg[3]_0 ;
  wire [0:0]\rd_data_reg[1] ;
  wire [2:0]t_type;
  wire [64:0]tx_66_fifo;
  wire [65:0]tx_encoded_data;
  wire tx_encoder_i_n_70;
  wire tx_encoder_i_n_71;
  wire tx_encoder_i_n_72;
  wire tx_pcs_fsm_i_n_0;
  wire tx_pcs_fsm_i_n_1;
  wire tx_pcs_fsm_i_n_10;
  wire tx_pcs_fsm_i_n_11;
  wire tx_pcs_fsm_i_n_12;
  wire tx_pcs_fsm_i_n_13;
  wire tx_pcs_fsm_i_n_14;
  wire tx_pcs_fsm_i_n_15;
  wire tx_pcs_fsm_i_n_16;
  wire tx_pcs_fsm_i_n_17;
  wire tx_pcs_fsm_i_n_18;
  wire tx_pcs_fsm_i_n_19;
  wire tx_pcs_fsm_i_n_2;
  wire tx_pcs_fsm_i_n_20;
  wire tx_pcs_fsm_i_n_21;
  wire tx_pcs_fsm_i_n_22;
  wire tx_pcs_fsm_i_n_23;
  wire tx_pcs_fsm_i_n_24;
  wire tx_pcs_fsm_i_n_25;
  wire tx_pcs_fsm_i_n_26;
  wire tx_pcs_fsm_i_n_27;
  wire tx_pcs_fsm_i_n_28;
  wire tx_pcs_fsm_i_n_29;
  wire tx_pcs_fsm_i_n_30;
  wire tx_pcs_fsm_i_n_31;
  wire tx_pcs_fsm_i_n_32;
  wire tx_pcs_fsm_i_n_33;
  wire tx_pcs_fsm_i_n_34;
  wire tx_pcs_fsm_i_n_35;
  wire tx_pcs_fsm_i_n_36;
  wire tx_pcs_fsm_i_n_37;
  wire tx_pcs_fsm_i_n_38;
  wire tx_pcs_fsm_i_n_39;
  wire tx_pcs_fsm_i_n_4;
  wire tx_pcs_fsm_i_n_40;
  wire tx_pcs_fsm_i_n_41;
  wire tx_pcs_fsm_i_n_42;
  wire tx_pcs_fsm_i_n_43;
  wire tx_pcs_fsm_i_n_44;
  wire tx_pcs_fsm_i_n_45;
  wire tx_pcs_fsm_i_n_46;
  wire tx_pcs_fsm_i_n_47;
  wire tx_pcs_fsm_i_n_48;
  wire tx_pcs_fsm_i_n_49;
  wire tx_pcs_fsm_i_n_5;
  wire tx_pcs_fsm_i_n_50;
  wire tx_pcs_fsm_i_n_51;
  wire tx_pcs_fsm_i_n_52;
  wire tx_pcs_fsm_i_n_53;
  wire tx_pcs_fsm_i_n_54;
  wire tx_pcs_fsm_i_n_55;
  wire tx_pcs_fsm_i_n_56;
  wire tx_pcs_fsm_i_n_57;
  wire tx_pcs_fsm_i_n_58;
  wire tx_pcs_fsm_i_n_59;
  wire tx_pcs_fsm_i_n_6;
  wire tx_pcs_fsm_i_n_60;
  wire tx_pcs_fsm_i_n_61;
  wire tx_pcs_fsm_i_n_62;
  wire tx_pcs_fsm_i_n_63;
  wire tx_pcs_fsm_i_n_64;
  wire tx_pcs_fsm_i_n_65;
  wire tx_pcs_fsm_i_n_66;
  wire tx_pcs_fsm_i_n_67;
  wire tx_pcs_fsm_i_n_7;
  wire tx_pcs_fsm_i_n_8;
  wire tx_pcs_fsm_i_n_9;
  wire [63:0]\xgmii_txd_reg_reg[63] ;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_pcs_scramble pcs_scramble_i
       (.Q(Q),
        .SR(SR),
        .coreclk(coreclk),
        .new_tx_test_seed(new_tx_test_seed),
        .pseudo_rand_seeds_int(pseudo_rand_seeds_int),
        .\q_reg[1] (\q_reg[1] ),
        .\q_reg[3] (\q_reg[3] ),
        .\q_reg[3]_0 (\q_reg[3]_0 ),
        .\tx_66_enc_out_reg[65] ({tx_pcs_fsm_i_n_4,tx_pcs_fsm_i_n_5,tx_pcs_fsm_i_n_6,tx_pcs_fsm_i_n_7,tx_pcs_fsm_i_n_8,tx_pcs_fsm_i_n_9,tx_pcs_fsm_i_n_10,tx_pcs_fsm_i_n_11,tx_pcs_fsm_i_n_12,tx_pcs_fsm_i_n_13,tx_pcs_fsm_i_n_14,tx_pcs_fsm_i_n_15,tx_pcs_fsm_i_n_16,tx_pcs_fsm_i_n_17,tx_pcs_fsm_i_n_18,tx_pcs_fsm_i_n_19,tx_pcs_fsm_i_n_20,tx_pcs_fsm_i_n_21,tx_pcs_fsm_i_n_22,tx_pcs_fsm_i_n_23,tx_pcs_fsm_i_n_24,tx_pcs_fsm_i_n_25,tx_pcs_fsm_i_n_26,tx_pcs_fsm_i_n_27,tx_pcs_fsm_i_n_28,tx_pcs_fsm_i_n_29,tx_pcs_fsm_i_n_30,tx_pcs_fsm_i_n_31,tx_pcs_fsm_i_n_32,tx_pcs_fsm_i_n_33,tx_pcs_fsm_i_n_34,tx_pcs_fsm_i_n_35,tx_pcs_fsm_i_n_36,tx_pcs_fsm_i_n_37,tx_pcs_fsm_i_n_38,tx_pcs_fsm_i_n_39,tx_pcs_fsm_i_n_40,tx_pcs_fsm_i_n_41,tx_pcs_fsm_i_n_42,tx_pcs_fsm_i_n_43,tx_pcs_fsm_i_n_44,tx_pcs_fsm_i_n_45,tx_pcs_fsm_i_n_46,tx_pcs_fsm_i_n_47,tx_pcs_fsm_i_n_48,tx_pcs_fsm_i_n_49,tx_pcs_fsm_i_n_50,tx_pcs_fsm_i_n_51,tx_pcs_fsm_i_n_52,tx_pcs_fsm_i_n_53,tx_pcs_fsm_i_n_54,tx_pcs_fsm_i_n_55,tx_pcs_fsm_i_n_56,tx_pcs_fsm_i_n_57,tx_pcs_fsm_i_n_58,tx_pcs_fsm_i_n_59,tx_pcs_fsm_i_n_60,tx_pcs_fsm_i_n_61,tx_pcs_fsm_i_n_62,tx_pcs_fsm_i_n_63,tx_pcs_fsm_i_n_64,tx_pcs_fsm_i_n_65,tx_pcs_fsm_i_n_66,tx_pcs_fsm_i_n_67}),
        .tx_66_fifo(tx_66_fifo[64:1]));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_encoder tx_encoder_i
       (.D(D),
        .\FSM_sequential_state_reg[2] ({tx_encoder_i_n_70,tx_encoder_i_n_71,tx_encoder_i_n_72}),
        .Q(t_type),
        .SR(SR),
        .coreclk(coreclk),
        .next_state(next_state),
        .out({tx_pcs_fsm_i_n_0,tx_pcs_fsm_i_n_1,tx_pcs_fsm_i_n_2}),
        .\tx_66_enc_out_reg[65] (tx_encoded_data),
        .\xgmii_txd_reg_reg[63] (\xgmii_txd_reg_reg[63] ));
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_pcs_fsm tx_pcs_fsm_i
       (.D({tx_encoder_i_n_70,tx_encoder_i_n_71,tx_encoder_i_n_72}),
        .Q(t_type),
        .SR(SR),
        .coreclk(coreclk),
        .next_state(next_state),
        .out({tx_pcs_fsm_i_n_0,tx_pcs_fsm_i_n_1,tx_pcs_fsm_i_n_2}),
        .\q_reg[3] (\q_reg[3] [1]),
        .\rd_data_reg[61] ({tx_pcs_fsm_i_n_4,tx_pcs_fsm_i_n_5,tx_pcs_fsm_i_n_6,tx_pcs_fsm_i_n_7,tx_pcs_fsm_i_n_8,tx_pcs_fsm_i_n_9,tx_pcs_fsm_i_n_10,tx_pcs_fsm_i_n_11,tx_pcs_fsm_i_n_12,tx_pcs_fsm_i_n_13,tx_pcs_fsm_i_n_14,tx_pcs_fsm_i_n_15,tx_pcs_fsm_i_n_16,tx_pcs_fsm_i_n_17,tx_pcs_fsm_i_n_18,tx_pcs_fsm_i_n_19,tx_pcs_fsm_i_n_20,tx_pcs_fsm_i_n_21,tx_pcs_fsm_i_n_22,tx_pcs_fsm_i_n_23,tx_pcs_fsm_i_n_24,tx_pcs_fsm_i_n_25,tx_pcs_fsm_i_n_26,tx_pcs_fsm_i_n_27,tx_pcs_fsm_i_n_28,tx_pcs_fsm_i_n_29,tx_pcs_fsm_i_n_30,tx_pcs_fsm_i_n_31,tx_pcs_fsm_i_n_32,tx_pcs_fsm_i_n_33,tx_pcs_fsm_i_n_34,tx_pcs_fsm_i_n_35,tx_pcs_fsm_i_n_36,tx_pcs_fsm_i_n_37,tx_pcs_fsm_i_n_38,tx_pcs_fsm_i_n_39,tx_pcs_fsm_i_n_40,tx_pcs_fsm_i_n_41,tx_pcs_fsm_i_n_42,tx_pcs_fsm_i_n_43,tx_pcs_fsm_i_n_44,tx_pcs_fsm_i_n_45,tx_pcs_fsm_i_n_46,tx_pcs_fsm_i_n_47,tx_pcs_fsm_i_n_48,tx_pcs_fsm_i_n_49,tx_pcs_fsm_i_n_50,tx_pcs_fsm_i_n_51,tx_pcs_fsm_i_n_52,tx_pcs_fsm_i_n_53,tx_pcs_fsm_i_n_54,tx_pcs_fsm_i_n_55,tx_pcs_fsm_i_n_56,tx_pcs_fsm_i_n_57,tx_pcs_fsm_i_n_58,tx_pcs_fsm_i_n_59,tx_pcs_fsm_i_n_60,tx_pcs_fsm_i_n_61,tx_pcs_fsm_i_n_62,tx_pcs_fsm_i_n_63,tx_pcs_fsm_i_n_64,tx_pcs_fsm_i_n_65,tx_pcs_fsm_i_n_66,tx_pcs_fsm_i_n_67,\rd_data_reg[1] }),
        .tx_66_fifo(tx_66_fifo[0]),
        .\tx_encoded_data_reg[65] (tx_encoded_data));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_tx_pcs_fsm" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_tx_pcs_fsm
   (out,
    tx_66_fifo,
    \rd_data_reg[61] ,
    \tx_encoded_data_reg[65] ,
    next_state,
    \q_reg[3] ,
    Q,
    SR,
    coreclk,
    D);
  output [2:0]out;
  output [0:0]tx_66_fifo;
  output [64:0]\rd_data_reg[61] ;
  input [65:0]\tx_encoded_data_reg[65] ;
  input [0:0]next_state;
  input [0:0]\q_reg[3] ;
  input [2:0]Q;
  input [0:0]SR;
  input coreclk;
  input [2:0]D;

  wire [2:0]D;
  wire [2:0]Q;
  wire [0:0]SR;
  wire coreclk;
  wire [0:0]next_state;
  (* RTL_KEEP = "yes" *) wire [2:0]out;
  wire [0:0]\q_reg[3] ;
  wire [64:0]\rd_data_reg[61] ;
  wire [1:1]tx_66_enc_fsm;
  wire \tx_66_enc_out[63]_i_2_n_0 ;
  wire \tx_66_enc_out[65]_i_2_n_0 ;
  wire [65:0]tx_66_enc_out_t;
  wire [0:0]tx_66_fifo;
  wire [65:0]\tx_encoded_data_reg[65] ;

  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(out[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(out[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(out[2]),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    asynch_fifo_i_i_65
       (.I0(tx_66_enc_fsm),
        .I1(\q_reg[3] ),
        .O(tx_66_fifo));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[0]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [0]),
        .I2(\tx_66_enc_out[63]_i_2_n_0 ),
        .O(tx_66_enc_out_t[0]));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[10]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [10]),
        .I2(next_state),
        .O(tx_66_enc_out_t[10]));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[11]_i_1 
       (.I0(\tx_encoded_data_reg[65] [11]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[11]));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[12]_i_1 
       (.I0(\tx_encoded_data_reg[65] [12]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[12]));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[13]_i_1 
       (.I0(\tx_encoded_data_reg[65] [13]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[13]));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[14]_i_1 
       (.I0(\tx_encoded_data_reg[65] [14]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[14]));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[15]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [15]),
        .I2(next_state),
        .O(tx_66_enc_out_t[15]));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[16]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [16]),
        .I2(next_state),
        .O(tx_66_enc_out_t[16]));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[17]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [17]),
        .I2(next_state),
        .O(tx_66_enc_out_t[17]));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[18]_i_1 
       (.I0(\tx_encoded_data_reg[65] [18]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[18]));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[19]_i_1 
       (.I0(\tx_encoded_data_reg[65] [19]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[19]));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[1]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [1]),
        .I2(next_state),
        .O(tx_66_enc_out_t[1]));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[20]_i_1 
       (.I0(\tx_encoded_data_reg[65] [20]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[20]));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[21]_i_1 
       (.I0(\tx_encoded_data_reg[65] [21]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[21]));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[22]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [22]),
        .I2(next_state),
        .O(tx_66_enc_out_t[22]));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[23]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [23]),
        .I2(next_state),
        .O(tx_66_enc_out_t[23]));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[24]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [24]),
        .I2(next_state),
        .O(tx_66_enc_out_t[24]));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[25]_i_1 
       (.I0(\tx_encoded_data_reg[65] [25]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[25]));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[26]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [26]),
        .I2(\tx_66_enc_out[63]_i_2_n_0 ),
        .O(tx_66_enc_out_t[26]));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[27]_i_1 
       (.I0(\tx_encoded_data_reg[65] [27]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[27]));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[28]_i_1 
       (.I0(\tx_encoded_data_reg[65] [28]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[28]));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[29]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [29]),
        .I2(next_state),
        .O(tx_66_enc_out_t[29]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[2]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[2]),
        .I3(\tx_encoded_data_reg[65] [2]),
        .I4(next_state),
        .O(tx_66_enc_out_t[2]));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[30]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [30]),
        .I2(next_state),
        .O(tx_66_enc_out_t[30]));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[31]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [31]),
        .I2(next_state),
        .O(tx_66_enc_out_t[31]));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[32]_i_1 
       (.I0(\tx_encoded_data_reg[65] [32]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[32]));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[33]_i_1 
       (.I0(\tx_encoded_data_reg[65] [33]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[33]));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[34]_i_1 
       (.I0(\tx_encoded_data_reg[65] [34]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[34]));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[35]_i_1 
       (.I0(\tx_encoded_data_reg[65] [35]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[35]));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[36]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [36]),
        .I2(next_state),
        .O(tx_66_enc_out_t[36]));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[37]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [37]),
        .I2(next_state),
        .O(tx_66_enc_out_t[37]));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[38]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [38]),
        .I2(next_state),
        .O(tx_66_enc_out_t[38]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[39]_i_1 
       (.I0(\tx_encoded_data_reg[65] [39]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[39]));
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[3]_i_1 
       (.I0(\tx_encoded_data_reg[65] [3]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[3]));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[40]_i_1 
       (.I0(\tx_encoded_data_reg[65] [40]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[40]));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[41]_i_1 
       (.I0(\tx_encoded_data_reg[65] [41]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[41]));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[42]_i_1 
       (.I0(\tx_encoded_data_reg[65] [42]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[42]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[43]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [43]),
        .I2(next_state),
        .O(tx_66_enc_out_t[43]));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[44]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [44]),
        .I2(next_state),
        .O(tx_66_enc_out_t[44]));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[45]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [45]),
        .I2(next_state),
        .O(tx_66_enc_out_t[45]));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[46]_i_1 
       (.I0(\tx_encoded_data_reg[65] [46]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[46]));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[47]_i_1 
       (.I0(\tx_encoded_data_reg[65] [47]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[47]));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[48]_i_1 
       (.I0(\tx_encoded_data_reg[65] [48]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[48]));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[49]_i_1 
       (.I0(\tx_encoded_data_reg[65] [49]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[49]));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[4]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [4]),
        .I2(\tx_66_enc_out[63]_i_2_n_0 ),
        .O(tx_66_enc_out_t[4]));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[50]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [50]),
        .I2(next_state),
        .O(tx_66_enc_out_t[50]));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[51]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [51]),
        .I2(next_state),
        .O(tx_66_enc_out_t[51]));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[52]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [52]),
        .I2(next_state),
        .O(tx_66_enc_out_t[52]));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[53]_i_1 
       (.I0(\tx_encoded_data_reg[65] [53]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[53]));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[54]_i_1 
       (.I0(\tx_encoded_data_reg[65] [54]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[54]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[55]_i_1 
       (.I0(\tx_encoded_data_reg[65] [55]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[55]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[56]_i_1 
       (.I0(\tx_encoded_data_reg[65] [56]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[56]));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[57]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [57]),
        .I2(next_state),
        .O(tx_66_enc_out_t[57]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[58]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[2]),
        .I3(\tx_encoded_data_reg[65] [58]),
        .I4(next_state),
        .O(tx_66_enc_out_t[58]));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[59]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [59]),
        .I2(next_state),
        .O(tx_66_enc_out_t[59]));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[5]_i_1 
       (.I0(\tx_encoded_data_reg[65] [5]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[5]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[60]_i_1 
       (.I0(\tx_encoded_data_reg[65] [60]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[60]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[61]_i_1 
       (.I0(\tx_encoded_data_reg[65] [61]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[61]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[62]_i_1 
       (.I0(\tx_encoded_data_reg[65] [62]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[62]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT3 #(
    .INIT(8'h38)) 
    \tx_66_enc_out[63]_i_1 
       (.I0(\tx_encoded_data_reg[65] [63]),
        .I1(\tx_66_enc_out[63]_i_2_n_0 ),
        .I2(next_state),
        .O(tx_66_enc_out_t[63]));
  LUT6 #(
    .INIT(64'h0022003200111111)) 
    \tx_66_enc_out[63]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\tx_66_enc_out[63]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[64]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [64]),
        .I2(next_state),
        .O(tx_66_enc_out_t[64]));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[65]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [65]),
        .I2(next_state),
        .O(tx_66_enc_out_t[65]));
  LUT6 #(
    .INIT(64'hFFDDFFCDFFEEEEEE)) 
    \tx_66_enc_out[65]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(out[0]),
        .O(\tx_66_enc_out[65]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \tx_66_enc_out[6]_i_1 
       (.I0(next_state),
        .I1(\tx_encoded_data_reg[65] [6]),
        .I2(\tx_66_enc_out[63]_i_2_n_0 ),
        .O(tx_66_enc_out_t[6]));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[7]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [7]),
        .I2(next_state),
        .O(tx_66_enc_out_t[7]));
  LUT5 #(
    .INIT(32'hE0E0FFE0)) 
    \tx_66_enc_out[8]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[2]),
        .I3(\tx_encoded_data_reg[65] [8]),
        .I4(next_state),
        .O(tx_66_enc_out_t[8]));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \tx_66_enc_out[9]_i_1 
       (.I0(\tx_66_enc_out[65]_i_2_n_0 ),
        .I1(\tx_encoded_data_reg[65] [9]),
        .I2(next_state),
        .O(tx_66_enc_out_t[9]));
  FDSE \tx_66_enc_out_reg[0] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[0]),
        .Q(\rd_data_reg[61] [0]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[10] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[10]),
        .Q(\rd_data_reg[61] [9]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[11] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[11]),
        .Q(\rd_data_reg[61] [10]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[12] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[12]),
        .Q(\rd_data_reg[61] [11]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[13] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[13]),
        .Q(\rd_data_reg[61] [12]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[14] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[14]),
        .Q(\rd_data_reg[61] [13]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[15] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[15]),
        .Q(\rd_data_reg[61] [14]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[16] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[16]),
        .Q(\rd_data_reg[61] [15]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[17] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[17]),
        .Q(\rd_data_reg[61] [16]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[18] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[18]),
        .Q(\rd_data_reg[61] [17]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[19] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[19]),
        .Q(\rd_data_reg[61] [18]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[1] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[1]),
        .Q(tx_66_enc_fsm),
        .R(SR));
  FDRE \tx_66_enc_out_reg[20] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[20]),
        .Q(\rd_data_reg[61] [19]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[21] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[21]),
        .Q(\rd_data_reg[61] [20]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[22] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[22]),
        .Q(\rd_data_reg[61] [21]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[23] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[23]),
        .Q(\rd_data_reg[61] [22]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[24] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[24]),
        .Q(\rd_data_reg[61] [23]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[25] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[25]),
        .Q(\rd_data_reg[61] [24]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[26] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[26]),
        .Q(\rd_data_reg[61] [25]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[27] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[27]),
        .Q(\rd_data_reg[61] [26]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[28] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[28]),
        .Q(\rd_data_reg[61] [27]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[29] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[29]),
        .Q(\rd_data_reg[61] [28]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[2] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[2]),
        .Q(\rd_data_reg[61] [1]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[30] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[30]),
        .Q(\rd_data_reg[61] [29]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[31] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[31]),
        .Q(\rd_data_reg[61] [30]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[32] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[32]),
        .Q(\rd_data_reg[61] [31]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[33] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[33]),
        .Q(\rd_data_reg[61] [32]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[34] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[34]),
        .Q(\rd_data_reg[61] [33]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[35] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[35]),
        .Q(\rd_data_reg[61] [34]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[36] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[36]),
        .Q(\rd_data_reg[61] [35]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[37] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[37]),
        .Q(\rd_data_reg[61] [36]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[38] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[38]),
        .Q(\rd_data_reg[61] [37]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[39] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[39]),
        .Q(\rd_data_reg[61] [38]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[3] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[3]),
        .Q(\rd_data_reg[61] [2]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[40] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[40]),
        .Q(\rd_data_reg[61] [39]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[41] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[41]),
        .Q(\rd_data_reg[61] [40]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[42] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[42]),
        .Q(\rd_data_reg[61] [41]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[43] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[43]),
        .Q(\rd_data_reg[61] [42]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[44] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[44]),
        .Q(\rd_data_reg[61] [43]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[45] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[45]),
        .Q(\rd_data_reg[61] [44]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[46] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[46]),
        .Q(\rd_data_reg[61] [45]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[47] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[47]),
        .Q(\rd_data_reg[61] [46]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[48] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[48]),
        .Q(\rd_data_reg[61] [47]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[49] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[49]),
        .Q(\rd_data_reg[61] [48]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[4] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[4]),
        .Q(\rd_data_reg[61] [3]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[50] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[50]),
        .Q(\rd_data_reg[61] [49]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[51] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[51]),
        .Q(\rd_data_reg[61] [50]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[52] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[52]),
        .Q(\rd_data_reg[61] [51]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[53] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[53]),
        .Q(\rd_data_reg[61] [52]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[54] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[54]),
        .Q(\rd_data_reg[61] [53]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[55] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[55]),
        .Q(\rd_data_reg[61] [54]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[56] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[56]),
        .Q(\rd_data_reg[61] [55]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[57] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[57]),
        .Q(\rd_data_reg[61] [56]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[58] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[58]),
        .Q(\rd_data_reg[61] [57]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[59] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[59]),
        .Q(\rd_data_reg[61] [58]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[5] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[5]),
        .Q(\rd_data_reg[61] [4]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[60] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[60]),
        .Q(\rd_data_reg[61] [59]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[61] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[61]),
        .Q(\rd_data_reg[61] [60]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[62] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[62]),
        .Q(\rd_data_reg[61] [61]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[63] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[63]),
        .Q(\rd_data_reg[61] [62]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[64] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[64]),
        .Q(\rd_data_reg[61] [63]),
        .R(SR));
  FDRE \tx_66_enc_out_reg[65] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[65]),
        .Q(\rd_data_reg[61] [64]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[6] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[6]),
        .Q(\rd_data_reg[61] [5]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[7] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[7]),
        .Q(\rd_data_reg[61] [6]),
        .R(SR));
  FDSE \tx_66_enc_out_reg[8] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[8]),
        .Q(\rd_data_reg[61] [7]),
        .S(SR));
  FDRE \tx_66_enc_out_reg[9] 
       (.C(coreclk),
        .CE(1'b1),
        .D(tx_66_enc_out_t[9]),
        .Q(\rd_data_reg[61] [8]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_txratefifo" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_txratefifo
   (Q,
    fifo_full,
    D,
    \gt_txc_reg[1] ,
    txreset_txusrclk2,
    coreclk,
    reset,
    tx_66_fifo,
    txusrclk2,
    sel0);
  output [5:0]Q;
  output fifo_full;
  output [31:0]D;
  output [1:0]\gt_txc_reg[1] ;
  input txreset_txusrclk2;
  input coreclk;
  input reset;
  input [65:0]tx_66_fifo;
  input txusrclk2;
  input [0:0]sel0;

  wire [31:0]D;
  wire [5:0]Q;
  wire coreclk;
  wire fifo_full;
  wire [1:0]\gt_txc_reg[1] ;
  wire \gt_txd[22]_i_2_n_0 ;
  wire \gt_txd[23]_i_2_n_0 ;
  wire \gt_txd[27]_i_2_n_0 ;
  wire \gt_txd[29]_i_2_n_0 ;
  wire \gt_txd[30]_i_2_n_0 ;
  wire \gt_txd[31]_i_2_n_0 ;
  wire [65:2]rd_data;
  wire read_enable;
  wire read_enable_i_1_n_0;
  wire read_enable_i_2_n_0;
  wire reset;
  wire [0:0]sel0;
  wire [65:0]tx_66_fifo;
  wire [1:0]tx_gt;
  wire txreset_txusrclk2;
  wire [6:0]txsequence_int;
  wire txsequence_int0;
  wire \txsequence_int[0]_i_2_n_0 ;
  wire \txsequence_int[6]_i_3_n_0 ;
  wire \txsequence_int[6]_i_4_n_0 ;
  wire \txsequence_int[6]_i_5_n_0 ;
  wire \txsequence_int[6]_i_6_n_0 ;
  wire \txsequence_int_reg_n_0_[0] ;
  wire txusrclk2;
  wire NLW_asynch_fifo_i_empty_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_fifo_rd_addr_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_fifo_wr_addr_UNCONNECTED;
  wire [4:0]NLW_asynch_fifo_i_status_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* WIDTH = "66" *) 
  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_asynch_fifo asynch_fifo_i
       (.empty(NLW_asynch_fifo_i_empty_UNCONNECTED),
        .fifo_rd_addr(NLW_asynch_fifo_i_fifo_rd_addr_UNCONNECTED[4:0]),
        .fifo_wr_addr(NLW_asynch_fifo_i_fifo_wr_addr_UNCONNECTED[4:0]),
        .full(fifo_full),
        .rd_clk(txusrclk2),
        .rd_clk_en(1'b1),
        .rd_data({rd_data,tx_gt}),
        .rd_en(read_enable),
        .rd_reset(txreset_txusrclk2),
        .status(NLW_asynch_fifo_i_status_UNCONNECTED[4:0]),
        .wr_clk(coreclk),
        .wr_clk_en(1'b1),
        .wr_data(tx_66_fifo),
        .wr_en(1'b1),
        .wr_reset(reset));
  LUT6 #(
    .INIT(64'h0000CCC3AAAAAAAA)) 
    \gt_txc[0]_i_1 
       (.I0(tx_gt[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[5]),
        .I5(sel0),
        .O(\gt_txc_reg[1] [0]));
  LUT6 #(
    .INIT(64'hFFFCCCCFAAAAAAAA)) 
    \gt_txc[1]_i_1 
       (.I0(tx_gt[1]),
        .I1(Q[5]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(sel0),
        .O(\gt_txc_reg[1] [1]));
  LUT6 #(
    .INIT(64'hFFFFFF00B8B8B8B8)) 
    \gt_txd[0]_i_1 
       (.I0(rd_data[34]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[2]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(sel0),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFF00FFFFE2E2E2E2)) 
    \gt_txd[10]_i_1 
       (.I0(rd_data[12]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[44]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[10]));
  LUT6 #(
    .INIT(64'h000000FFB8B8B8B8)) 
    \gt_txd[11]_i_1 
       (.I0(rd_data[45]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[13]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFF00FFB8B8B8B8)) 
    \gt_txd[12]_i_1 
       (.I0(rd_data[46]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[14]),
        .I3(\gt_txd[29]_i_2_n_0 ),
        .I4(Q[5]),
        .I5(sel0),
        .O(D[12]));
  LUT6 #(
    .INIT(64'h0000FC0C5555FC0C)) 
    \gt_txd[13]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(rd_data[15]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[47]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \gt_txd[14]_i_1 
       (.I0(rd_data[16]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[48]),
        .I3(sel0),
        .I4(Q[5]),
        .I5(\gt_txd[30]_i_2_n_0 ),
        .O(D[14]));
  LUT5 #(
    .INIT(32'hFFFF4540)) 
    \gt_txd[15]_i_1 
       (.I0(sel0),
        .I1(rd_data[49]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[17]),
        .I4(\gt_txd[31]_i_2_n_0 ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFFFF00B8B8B8B8)) 
    \gt_txd[16]_i_1 
       (.I0(rd_data[50]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[18]),
        .I3(Q[5]),
        .I4(Q[2]),
        .I5(sel0),
        .O(D[16]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[17]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(sel0),
        .I3(rd_data[51]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[19]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hFFFFFF00E2E2E2E2)) 
    \gt_txd[18]_i_1 
       (.I0(rd_data[20]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[52]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[18]));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \gt_txd[19]_i_1 
       (.I0(rd_data[53]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[21]),
        .I3(\gt_txd[27]_i_2_n_0 ),
        .I4(Q[5]),
        .I5(sel0),
        .O(D[19]));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    \gt_txd[1]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(sel0),
        .I3(rd_data[35]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFF00B8B8B8B8)) 
    \gt_txd[20]_i_1 
       (.I0(rd_data[54]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[22]),
        .I3(Q[5]),
        .I4(\gt_txd[29]_i_2_n_0 ),
        .I5(sel0),
        .O(D[20]));
  LUT6 #(
    .INIT(64'h0000FC0CAAAAFC0C)) 
    \gt_txd[21]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(rd_data[23]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[55]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \gt_txd[22]_i_1 
       (.I0(rd_data[24]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[56]),
        .I3(sel0),
        .I4(Q[5]),
        .I5(\gt_txd[22]_i_2_n_0 ),
        .O(D[22]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h2228)) 
    \gt_txd[22]_i_2 
       (.I0(sel0),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gt_txd[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4540)) 
    \gt_txd[23]_i_1 
       (.I0(sel0),
        .I1(rd_data[57]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[25]),
        .I4(\gt_txd[23]_i_2_n_0 ),
        .O(D[23]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h00000A28)) 
    \gt_txd[23]_i_2 
       (.I0(sel0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[5]),
        .O(\gt_txd[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFB8B800FFB8B8)) 
    \gt_txd[24]_i_1 
       (.I0(rd_data[58]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[26]),
        .I3(Q[2]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[24]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[25]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(sel0),
        .I3(rd_data[59]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[27]),
        .O(D[25]));
  LUT6 #(
    .INIT(64'hFF00FFFFE2E2E2E2)) 
    \gt_txd[26]_i_1 
       (.I0(rd_data[28]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[60]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[26]));
  LUT6 #(
    .INIT(64'h000000FFB8B8B8B8)) 
    \gt_txd[27]_i_1 
       (.I0(rd_data[61]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[29]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[27]));
  LUT3 #(
    .INIT(8'h78)) 
    \gt_txd[27]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\gt_txd[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00FFB8B8B8B8)) 
    \gt_txd[28]_i_1 
       (.I0(rd_data[62]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[30]),
        .I3(\gt_txd[29]_i_2_n_0 ),
        .I4(Q[5]),
        .I5(sel0),
        .O(D[28]));
  LUT6 #(
    .INIT(64'h0000FC0C5555FC0C)) 
    \gt_txd[29]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(rd_data[31]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[63]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[29]));
  LUT2 #(
    .INIT(4'h6)) 
    \gt_txd[29]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\gt_txd[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF00E2E2E2E2)) 
    \gt_txd[2]_i_1 
       (.I0(rd_data[4]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[36]),
        .I3(Q[5]),
        .I4(\gt_txd[27]_i_2_n_0 ),
        .I5(sel0),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \gt_txd[30]_i_1 
       (.I0(rd_data[32]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[64]),
        .I3(sel0),
        .I4(Q[5]),
        .I5(\gt_txd[30]_i_2_n_0 ),
        .O(D[30]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hA082)) 
    \gt_txd[30]_i_2 
       (.I0(sel0),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .O(\gt_txd[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF4540)) 
    \gt_txd[31]_i_1 
       (.I0(sel0),
        .I1(rd_data[65]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[33]),
        .I4(\gt_txd[31]_i_2_n_0 ),
        .O(D[31]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h0000A802)) 
    \gt_txd[31]_i_2 
       (.I0(sel0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\gt_txd[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \gt_txd[3]_i_1 
       (.I0(rd_data[37]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[5]),
        .I3(\gt_txd[27]_i_2_n_0 ),
        .I4(Q[5]),
        .I5(sel0),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFF00B8B8B8B8)) 
    \gt_txd[4]_i_1 
       (.I0(rd_data[38]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[6]),
        .I3(Q[5]),
        .I4(\gt_txd[29]_i_2_n_0 ),
        .I5(sel0),
        .O(D[4]));
  LUT6 #(
    .INIT(64'h0000FC0CAAAAFC0C)) 
    \gt_txd[5]_i_1 
       (.I0(\gt_txd[29]_i_2_n_0 ),
        .I1(rd_data[7]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[39]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \gt_txd[6]_i_1 
       (.I0(rd_data[8]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[40]),
        .I3(sel0),
        .I4(Q[5]),
        .I5(\gt_txd[22]_i_2_n_0 ),
        .O(D[6]));
  LUT5 #(
    .INIT(32'hFFFF4540)) 
    \gt_txd[7]_i_1 
       (.I0(sel0),
        .I1(rd_data[41]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(rd_data[9]),
        .I4(\gt_txd[23]_i_2_n_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFFB8B800FFB8B8)) 
    \gt_txd[8]_i_1 
       (.I0(rd_data[42]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(rd_data[10]),
        .I3(Q[2]),
        .I4(sel0),
        .I5(Q[5]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h1F101F1F1F101010)) 
    \gt_txd[9]_i_1 
       (.I0(Q[2]),
        .I1(Q[5]),
        .I2(sel0),
        .I3(rd_data[43]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(rd_data[11]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h000000000000FFF7)) 
    read_enable_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[5]),
        .I3(read_enable_i_2_n_0),
        .I4(txreset_txusrclk2),
        .I5(read_enable),
        .O(read_enable_i_1_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    read_enable_i_2
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[4]),
        .O(read_enable_i_2_n_0));
  FDRE read_enable_reg
       (.C(txusrclk2),
        .CE(1'b1),
        .D(read_enable_i_1_n_0),
        .Q(read_enable),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h0B)) 
    \txsequence_int[0]_i_1 
       (.I0(\txsequence_int[0]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .O(txsequence_int[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \txsequence_int[0]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[2]),
        .O(\txsequence_int[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0730)) 
    \txsequence_int[1]_i_1 
       (.I0(Q[1]),
        .I1(\txsequence_int[6]_i_3_n_0 ),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[0]),
        .O(txsequence_int[1]));
  LUT3 #(
    .INIT(8'h78)) 
    \txsequence_int[2]_i_1 
       (.I0(\txsequence_int_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(txsequence_int[2]));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txsequence_int[3]_i_1 
       (.I0(Q[2]),
        .I1(\txsequence_int_reg_n_0_[0] ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(txsequence_int[3]));
  LUT6 #(
    .INIT(64'h1C444C4C4C444C4C)) 
    \txsequence_int[4]_i_1 
       (.I0(\txsequence_int[6]_i_3_n_0 ),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\txsequence_int_reg_n_0_[0] ),
        .I5(Q[2]),
        .O(txsequence_int[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \txsequence_int[5]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(txsequence_int[5]));
  LUT4 #(
    .INIT(16'hBAAA)) 
    \txsequence_int[6]_i_1 
       (.I0(txreset_txusrclk2),
        .I1(read_enable),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .I3(\txsequence_int[6]_i_3_n_0 ),
        .O(txsequence_int0));
  LUT5 #(
    .INIT(32'h33CC31CC)) 
    \txsequence_int[6]_i_2 
       (.I0(\txsequence_int[6]_i_4_n_0 ),
        .I1(\txsequence_int[6]_i_5_n_0 ),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(\txsequence_int[6]_i_6_n_0 ),
        .O(txsequence_int[6]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \txsequence_int[6]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[2]),
        .O(\txsequence_int[6]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \txsequence_int[6]_i_4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\txsequence_int_reg_n_0_[0] ),
        .O(\txsequence_int[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \txsequence_int[6]_i_5 
       (.I0(\txsequence_int_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\txsequence_int[6]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \txsequence_int[6]_i_6 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\txsequence_int[6]_i_6_n_0 ));
  FDSE \txsequence_int_reg[0] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[0]),
        .Q(\txsequence_int_reg_n_0_[0] ),
        .S(txsequence_int0));
  FDRE \txsequence_int_reg[1] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[1]),
        .Q(Q[0]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[2] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[2]),
        .Q(Q[1]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[3] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[3]),
        .Q(Q[2]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[4] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[4]),
        .Q(Q[3]),
        .R(txsequence_int0));
  FDRE \txsequence_int_reg[5] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[5]),
        .Q(Q[4]),
        .R(txsequence_int0));
  FDSE \txsequence_int_reg[6] 
       (.C(txusrclk2),
        .CE(1'b1),
        .D(txsequence_int[6]),
        .Q(Q[5]),
        .S(txsequence_int0));
endmodule

(* ORIG_REF_NAME = "ten_gig_eth_pcs_pma_v6_0_3_wrapper" *) 
module ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_wrapper
   (drp_den,
    drp_daddr,
    drp_di,
    \q_reg[2] ,
    core_status,
    \q_reg[0] ,
    mdio_out,
    mdio_tri,
    loopback_ctrl,
    drp_req,
    drp_dwe,
    rx_prbs31_en,
    tx_disable,
    tx_prbs31_en,
    gt_txd,
    gt_txc,
    gt_slip,
    core_in_testmode,
    clear_rx_prbs_err_count,
    xgmii_rxd,
    xgmii_rxc,
    txreset_txusrclk2,
    pma_pmd_type,
    areset_coreclk,
    coreclk,
    reset,
    txusrclk2,
    rxusrclk2,
    rxreset_rxusrclk2,
    signal_detect,
    drp_drpdo,
    dclk,
    mdc,
    mdio_in,
    drp_drdy,
    drp_gnt,
    dclk_reset,
    prtad,
    resetdone,
    xgmii_txd,
    xgmii_txc,
    gt_rxc,
    gt_rxd);
  output drp_den;
  output [15:0]drp_daddr;
  output [15:0]drp_di;
  output \q_reg[2] ;
  output [0:0]core_status;
  output \q_reg[0] ;
  output mdio_out;
  output mdio_tri;
  output [0:0]loopback_ctrl;
  output drp_req;
  output drp_dwe;
  output rx_prbs31_en;
  output tx_disable;
  output tx_prbs31_en;
  output [31:0]gt_txd;
  output [7:0]gt_txc;
  output gt_slip;
  output core_in_testmode;
  output clear_rx_prbs_err_count;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input txreset_txusrclk2;
  input [2:0]pma_pmd_type;
  input areset_coreclk;
  input coreclk;
  input reset;
  input txusrclk2;
  input rxusrclk2;
  input rxreset_rxusrclk2;
  input signal_detect;
  input [15:0]drp_drpdo;
  input dclk;
  input mdc;
  input mdio_in;
  input drp_drdy;
  input drp_gnt;
  input dclk_reset;
  input [4:0]prtad;
  input resetdone;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  input [3:0]gt_rxc;
  input [31:0]gt_rxd;

  wire areset_coreclk;
  wire clear_rx_prbs_err_count;
  wire core_in_testmode;
  wire [0:0]core_status;
  wire coreclk;
  wire dclk;
  wire dclk_reset;
  wire [15:0]drp_daddr;
  wire drp_den;
  wire [15:0]drp_di;
  wire drp_drdy;
  wire [15:0]drp_drpdo;
  wire drp_dwe;
  wire drp_gnt;
  wire drp_req;
  wire [3:0]gt_rxc;
  wire [31:0]gt_rxd;
  wire gt_slip;
  wire [7:0]gt_txc;
  wire [31:0]gt_txd;
  wire [0:0]loopback_ctrl;
  wire mdc;
  wire mdio_in;
  wire mdio_out;
  wire mdio_tri;
  wire [2:0]pma_pmd_type;
  wire [4:0]prtad;
  wire \q_reg[0] ;
  wire \q_reg[2] ;
  wire reset;
  wire resetdone;
  wire rx_prbs31_en;
  wire rxreset_rxusrclk2;
  wire rxusrclk2;
  wire signal_detect;
  wire tx_disable;
  wire tx_prbs31_en;
  wire txreset_txusrclk2;
  wire txusrclk2;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  ten_gig_eth_pcs_pma_ip_ten_gig_eth_pcs_pma_v6_0_3_baser_gen \G_IS_BASER.ten_gig_eth_pcs_pma_inst 
       (.SR(\q_reg[2] ),
        .areset_coreclk(areset_coreclk),
        .clear_rx_prbs_err_count(clear_rx_prbs_err_count),
        .core_in_testmode(core_in_testmode),
        .core_status(core_status),
        .coreclk(coreclk),
        .dclk(dclk),
        .dclk_reset(dclk_reset),
        .drp_daddr(drp_daddr),
        .drp_den(drp_den),
        .drp_di(drp_di),
        .drp_drdy(drp_drdy),
        .drp_drpdo(drp_drpdo),
        .drp_dwe(drp_dwe),
        .drp_gnt(drp_gnt),
        .drp_req(drp_req),
        .gt_rxc(gt_rxc),
        .gt_rxd(gt_rxd),
        .gt_slip(gt_slip),
        .gt_txc(gt_txc),
        .gt_txd(gt_txd),
        .loopback_ctrl(loopback_ctrl),
        .mdc(mdc),
        .mdio_in(mdio_in),
        .mdio_out(mdio_out),
        .mdio_tri(mdio_tri),
        .pma_pmd_type(pma_pmd_type),
        .prtad(prtad),
        .\q_reg[0] (\q_reg[0] ),
        .reset(reset),
        .resetdone(resetdone),
        .rx_prbs31_en(rx_prbs31_en),
        .rxreset_rxusrclk2(rxreset_rxusrclk2),
        .rxusrclk2(rxusrclk2),
        .signal_detect(signal_detect),
        .tx_disable(tx_disable),
        .tx_prbs31_en(tx_prbs31_en),
        .txreset_txusrclk2(txreset_txusrclk2),
        .txusrclk2(txusrclk2),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
